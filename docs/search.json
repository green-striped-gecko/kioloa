[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Kioloa PopGen",
    "section": "",
    "text": "Welcome!\nWelcome, Fellow Magical Beings, to our 5-day spellbinding journey in the mystical realm of Population Genetics using the ancient art of R! We’re over the moon (and not just because we’ve mastered levitation spells) to have you join us at the enchanted Kioloa ANU Coastal Campus. Nestled among the spellbound forests of Murramarang Nation Park and the crystal-clear waters of southern New South Wales, our meeting lair couldn’t be more perfect. When you’re not weaving R spells, you’ll find yourself spoiled for choice with magical brews (a.k.a. coffee) and breathtaking sceneries.\nOur coven is as varied as the potions in a wizard’s pantry, bringing together sorcerers from all corners of the realm. Here, every sorcerer and sorceress will don both the student’s cloak and the teacher’s hat, expanding their arcane knowledge in genetics for the noble causes of biodiversity conservation and ecosystem restoration. Expect a cauldron bubbling with interaction, where being right is as celebrated as making mistakes, where sensitivity meets resilience, and where every voice conjures new spells of knowledge, perspective, and innovation.\nOur quest is to master key incantations in population genetics, with our wands pointed firmly at the R statistical grimoire. We’re ditching the dusty tomes for hands-on magic, aiming to empower you to conjure your own population genetics enchantments by the end of our gathering. And fear not, there will be ample time to apply these spells on your own datasets.\nOur magic words? Cooperation, flexibility, and dedication. We embark on this journey with a spirit of camaraderie, ready to share potions, carry scrolls, and lend a helping wand in times of need. The path may twist and turn, with unexpected dragons (breakdowns), storms (rain), and spells gone awry (tech hiccups), but our collective humour and knack for improvisation will see us through.\nWe are united by a deep-seated dedication to unravelling the mysteries of genetics, a passion that burns as bright within you as it does within us. We believe this adventure will be rewarding not just intellectually, but also aesthetically, socially, and culturally. We can’t wait to embark on this enchanting journey with you. May our time together be as fulfilling as finding the philosopher’s stone!"
  },
  {
    "objectID": "index.html#here-are-some-things-you-might-see-along-your-journey",
    "href": "index.html#here-are-some-things-you-might-see-along-your-journey",
    "title": "Kioloa PopGen",
    "section": "Here are some things you might see along your journey:",
    "text": "Here are some things you might see along your journey:\nBelow is an exercise box, this is encouraging you to give it a go yourself!\n\n\n\n\n\n\nExercise\n\n\n\n Give the code a go!\n\n\nBelow is a tip box, with added insights for your journey.\n\n\n\n\n\n\nTip\n\n\n\ntake a look…\nA variety of things to learn!\n\n\nBelow is a caution box, take note, this will keep you on your path.\n\n\n\n\n\n\nCaution\n\n\n\nTake CARE! It is easy to go astray, I am here to help.\n\n\nBelow is a warning box! Be careful and take head of what it says.\n\n\n\n\n\n\nWarning\n\n\n\nNOTICE! Thank you for noticing this warning!"
  },
  {
    "objectID": "index.html#a-big-thank-you-to-the-developers",
    "href": "index.html#a-big-thank-you-to-the-developers",
    "title": "Kioloa PopGen",
    "section": "A big thank you to the developers!",
    "text": "A big thank you to the developers!\nDartR published first by Gruber et al. (2018), and DartR V2 published by Mijangos et al. (2022)\n\n\n\n\nGruber, Bernd, Peter J. Unmack, Oliver F. Berry, and Arthur Georges. 2018. “DARTR : An R Package to Facilitate Analysis of SNP Data Generated from Reduced Representation Genome Sequencing.” Molecular Ecology Resources 18 (3): 691–99. https://doi.org/10.1111/1755-0998.12745.\n\n\nMijangos, Jose Luis, Bernd Gruber, Oliver Berry, Carlo Pacioni, and Arthur Georges. 2022. “dartR V2: An Accessible Genetic Analysis Platform for Conservation, Ecology and Agriculture.” Methods in Ecology and Evolution 13 (10): 2150–58. https://doi.org/10.1111/2041-210X.13918."
  },
  {
    "objectID": "schedule.html",
    "href": "schedule.html",
    "title": "Program",
    "section": "",
    "text": "for a more detailed program see the More Info section\n\n\n\n\n\n\n\n\n\n\n\n#\nDay\nTime\nTopic\nPresenters\n\n\n\n\n1\nMon\n2 pm - 4 pm\nWelcome, Intro dartR\nOliver Berry, Andrzej Killian, Arthur Georges, Bernd Gruber, Renee Catullo\n\n\n2\n\n5 pm – 7 pm\nPop Gen In Conservation & Restoration\nBill Sherwin, Carlo Pacioni, Renee Catullo\n\n\n3\nTue\n9 am – 11 am\nSequencing Technologies\nJason Carling, Andrew Kowalczyk, Renee Catullo\n\n\n4\n\n12 pm – 2 pm\nData Management, Reproducibility & Integrity\nJiajia Li\n\n\n5\n\n3 pm – 5 pm\nEffective Population Size\nBernd Gruber, Carlo Pacioni, Bill Sherwin\n\n\n6\nWed\n9 am – 11 am\nManagement Of Small Populations\nCatherine Grueber, Kate Farquharson\n\n\n7\n\n12 pm – 2 pm\nNatural Selection\nLuciano Beheregaray, Chris Brauer, Jonathan Sandoval\n\n\n8\n\n3 pm – 5 pm\nLandscape Genetics\nBernd Gruber, Robyn Shaw\n\n\n9\nThu\n9 am – 11 am\nLineage Divergence\nArthur Georges, Sally Potter, Craig Moritz\n\n\n10\n\n12 pm – 2 pm\nSex Linked Markers\nDiana Robledo, Floriaan Devloo-Delva\n\n\n11\n\n7 pm – 9 pm\nFrom Genes to Kin: Dissecting Relatedness & Kinship\nJinliang Wang, Luis Mijangos, Natasha Marosi\n\n\n12\nFri\n9 am – 11 am\nGenetic Structure\nArthur Georges, Bernd Gruber, Bill Sherwin\n\n\n13\n\n12 pm – 2 pm\nCombining Genomic Resources\nLuis Mijangos, Sally Potter"
  },
  {
    "objectID": "install.html#rationale",
    "href": "install.html#rationale",
    "title": "Install dartRverse",
    "section": "Rationale",
    "text": "Rationale\nWe have developed a new suit of packages called “dartRverse” packages, that will replace the previous dartR package, which soon will be no longer supported. The new suit of packages are meant to be a 1:1 replacement and only in some instance very minor changes will be needed to update previous code. For example we reworked on the “output” of all functions, now being able to save figures in specified folders, which can be easier recovered and manipulated for further tweaking. The main reasons for splitting dartR into several packages and developing the dartRverse suit of packages was difficulty to maintain dartR, because of limits imposed by CRAN, but also limits due the the long time to test new function, when compiling the package. Therefore we were forced to split the package into several smaller packages. This has several advantages and in the best of all cases no disadvantages.\n\neasier maintenance\nfaster development\nless dependencies on other packages\neasier to become a contributor\nhave your own package developed that can be branded as part of the dartRverse\n\nThe main paradigm was also that for our users nothing (or at as little as possible) needed to change and all existing code and scripts should still work. Also the installation process was meant to be straightforward and finally the coexistance between dartR and dartRverse packages should be possible (for the interim until dartR will be no longer supported)."
  },
  {
    "objectID": "install.html#installation",
    "href": "install.html#installation",
    "title": "Install dartRverse",
    "section": "Installation",
    "text": "Installation\n\ninstall dartRverse\n\n#installs the necessary bioconductor packages\ninstall.packages(\"devtools\")\ninstall.packages(\"BiocManager\")\nBiocManager::install(\"SNPRelate\")\n\n#install dartRverse (dartRverse) & core (dartR.base, dartR.data)\ninstall.packages(\"dartRverse\")\n\nThe dartRverse package is the first package to install and its only purpose is to support the installation of the other dartRverse packages. It will also be the first port of call to provide links to tutorials and other documentation.\nIf everything works well this should install two more packages with form the core version of dartRverse, nameley dartR.base and dartR.data. Those core packages have all the main function of old dartR package that deals with input, conversion, reporting and filtering of data. Also some base function to analysse data (e.g. PCoA, Fst) are included.\nOnce the dartRverse package has been installed we can load the package to check which part of the dartRverse has been installed.\n\nlibrary(dartRverse)\n\n\n\n\n\n\n\n\ninstall additional packages\nNow we can install the additional packages that are part of the dartRverse. Depending on your needs you can install all of them or only the one you are interested.\nFor example if you are interested in additional functions to analyse population structure (e.g. run STRUCTURE or faststructure) you can install the dartR.popgen package. If you are interested in functions that support the simulation of data you can install the dartR.sim package.\nYou can check which packages are avaialbel and which of them you have installed by typing:\n\ndartRverse::dartRverse_install()\n\n\n\n\n\n\nThe currently available packages are:\n\ndartR.sim (simulate SNP data)\ndartR.popgen (run population genetic analysis)\ndartR.spatial (run landscape genetic analysis)\ndartR.captive (estimate relatedness, support captive breeding)\ndartR.sexlinked (identify sexlinked markers, not ready yet)\n\nSo to install the dartR.sim simply type:\n\ninstall.packages(\"dartR.sim\")\ninstall.packages(\"dartR.popgen\")\ninstall.packages(\"dartR.spatial\")\ninstall.packages(\"dartR.captive\")\n# currently dartR.sexlinked requires a different installation process (see below)\n\n\n\nGithub repositories\nWe make all of our packages available via CRAN. The reason for this is that CRAN packages follow a stringent testing before they are allowed to be uploaded to CRAN and therefore are more likely to contain less errors then packages that are available on other repositories. Nevertheless we also make our packages available during development via github.\nYou can find the repositories under: https://github.com/green-striped-gecko/dartR.base [for the dartR.base package] and equivalent for the other packages.\nThe reason why you might want to install a package from github is that you want to use the latest version of the package. However, you should be aware that the packages on github are not tested and therefore might contain errors. Also the packages on github might be updated on a daily basis and therefore might change without notice.\nWe use different branches and they are reflecting different stages of development and majurity.\n\nmain (the main branch, which is equivalent to the current CRAN version)\ndev (development branch, which has the latest functions that might be in the next CRAN version, but have not been tested yet)\ndev_name (these are branches of our main developers and are used for testing and development of new functions. Installing functions from here might cause problems and should only be done if you know what you are doing)\n\ndartRverse supports the installation of github version of the packages using the following syntax:\ndartRverse_install(package = \"dartR.base\", repo = \"github\", branch = \"dev\")\nThis install the dev branch of dartR.base from CRAN. All main and dev branches are tested if they can be installed (and some additional error checks via): https://github.com/green-striped-gecko/dartRverse\nPlease note that you should provide the package repository (github/cran), the branch (main, dev,dev_name) and version number in case you want to report a bug. You can use the github methods to report issues or use our google group: https://groups.google.com/d/forum/dartr.\n\n\nInstalling dartR.sexlinked\ndartRverse_install(package = \"dartR.sexlinked\", repo = \"github\", branch = \"dev\")"
  },
  {
    "objectID": "install.html#using-dartrverse",
    "href": "install.html#using-dartrverse",
    "title": "Install dartRverse",
    "section": "Using dartRverse",
    "text": "Using dartRverse\nTo use dartRverse you can simply load the package and use it as before.\n\nlibrary(dartRverse)"
  },
  {
    "objectID": "install.html#using-legacy-dartr",
    "href": "install.html#using-legacy-dartr",
    "title": "Install dartRverse",
    "section": "Using legacy dartR",
    "text": "Using legacy dartR\nFor whatever reason you might want to use legacy dartR, instead of the dartRverse packages [e.g. for initial testing]. For a detailed explanation on how to do this see the dartR Tutorials section that has an in depth walk through of how to do this in the Installing R tutorial PDF."
  },
  {
    "objectID": "session01.html#required-packages",
    "href": "session01.html#required-packages",
    "title": "1  Intro to dartR",
    "section": "Required packages",
    "text": "Required packages\n\nlibrary(dartR.base)\nlibrary(dartR.data)\n\nmake sure you have the packages installed, see Install dartRverse"
  },
  {
    "objectID": "session01.html#dartrs-reach",
    "href": "session01.html#dartrs-reach",
    "title": "1  Intro to dartR",
    "section": "dartR’s Reach",
    "text": "dartR’s Reach"
  },
  {
    "objectID": "session01.html#diversity-arrays-technology-pty-ltd-dart",
    "href": "session01.html#diversity-arrays-technology-pty-ltd-dart",
    "title": "1  Intro to dartR",
    "section": "Diversity Arrays Technology Pty Ltd (DArT)",
    "text": "Diversity Arrays Technology Pty Ltd (DArT)\n\nDiversity Arrays Technology Pty Ltd (DArT) is a private company that specializes in genotyping by sequencing. Their approach is one of genome complexity reduction. Basically, DArTSeq is a method that extracts reproducible genomic variation across the genomes of many individuals at an affordable cost. The data are representational in the sense that they are generated for a random but reproducible selection of small fragments of sequence only, fragments that exhibit variation at the level of single base pairs (SNPs).\nFor more details check out the DArT website: https://www.diversityarrays.com/\nYou can also learn more about the methods by checking out the tutorial on Data Structure and Input found in the dartR Tutorials section.\n\nTheir mission:"
  },
  {
    "objectID": "session01.html#the-dartrverse",
    "href": "session01.html#the-dartrverse",
    "title": "1  Intro to dartR",
    "section": "The dartRverse",
    "text": "The dartRverse\n\nFrom 1 package to 7\n See the section Install dartRverse to learn about the reasoning behind how the dartRverse came to be…"
  },
  {
    "objectID": "session01.html#the-magical-world-of-rstudio-cloud",
    "href": "session01.html#the-magical-world-of-rstudio-cloud",
    "title": "1  Intro to dartR",
    "section": "The magical world of RStudio Cloud",
    "text": "The magical world of RStudio Cloud\n\nStep 1: Summoning the RStudio Cloud Portal\n\nEmbark on the Journey: Open your trusty steed (a.k.a. your web browser) and gallop over to Rstudio Cloud.\nForge Your Credentials: Spot the “Sign Up” beacon in the realm’s upper right corner and click it with courage. Click on the “Learn more” below the “Cloud Free” plan and then in the “Sign Up” button. A scroll will appear, asking for your name, your secret code (password), and your e-mail. Please use the same e-mail you provided when you registered to the workshop.\n\n\n\nProve Your Worth: After submitting your details, a pigeon (or was it an email?) will fly into your inbox carrying a secret message. Click the link within to prove you’re not a goblin in disguise.\n\n\n\nStep 2: Entering the Secret Workshop Chamber\n\nReturn to the Portal: With your email now verified, make your way back to the RStudio Cloud realm and use your newly forged credentials to enter.\nFinding the Secret Door: One day before the workshop, a link leading to the workshop’s chamber will be sent to your e-mail.\n\n\n\nStep 3: Joining the Fellowship of the Project\n\nLocate the Treasure Chest: Within the grand chamber (workshop space), seek the project “PopGenR” and click on it to reveal its secrets. As you open it for the first time, ancient RStudio Cloud spirits will work their magic to prepare your environment."
  },
  {
    "objectID": "session01.html#dartr-fundamentals",
    "href": "session01.html#dartr-fundamentals",
    "title": "1  Intro to dartR",
    "section": "dartR fundamentals",
    "text": "dartR fundamentals\n\nThe structure of a genlight object\n\n\n\n\n\nFor a detailed rundown of the genetic data used by the dartRverse, check out the tutorial on Data Structure and Input found in the dartR Tutorials section.\n\n\nthe Basics\nHere is a glimpse at the functions we will be using. Please follow along, or try running the code on your own.\n\ncodegenlight\n\n\n\ntestset.gl\n\ngl &lt;- testset.gl\nnInd(gl)\nnLoc(gl)\nnPop(gl)\npopNames(gl)\nindNames(gl)\nlocNames(gl)\ntable(pop(gl))\nas.matrix(gl)[1:7,1:5]\n\n\n\n\ntestset.gl\n\n /// GENLIGHT OBJECT /////////\n\n // 250 genotypes,  255 binary SNPs, size: 752 Kb\n 7868 (12.34 %) missing data\n\n // Basic content\n   @gen: list of 250 SNPbin\n   @ploidy: ploidy of each individual  (range: 2-2)\n\n // Optional content\n   @ind.names:  250 individual labels\n   @loc.names:  255 locus labels\n   @loc.all:  255 alleles\n   @position: integer storing positions of the SNPs\n   @pop: population of each individual (group size range: 1-11)\n   @other: a list containing: loc.metrics  latlong  ind.metrics  history  loc.metrics.flags \n\n\n\n\n\n\n\n\n\n\n\nQuiz!\n\n\n\nThis quiz is referring to the testset.gl data set you have interrogated above.\nType the correct number into the blank boxes below:\n\nnumber of SNPs \nnumber of individuals \nnumber of populations \n\nboxes will go green if you have the answer correct\n\n\n\nReporting and Filtering\n\ncodeloci callrateindividual callratereproducibilityfilter callrate\n\n\n\ngl.set.verbosity(3)\n\ngl.report.callrate(gl)               # loci callrate             \ngl.report.callrate(gl,method=\"ind\")  # individual callrate\ngl.report.reproducibility(gl)        # reproducibility\n\n# filter\ngl.filter.callrate(gl,method =\"ind\", threshold=0.8)\n\n\n\n\ngl.report.callrate(gl)\n\nStarting gl.report.callrate \n  Processing genlight object with SNP data\n  Reporting Call Rate by Locus\n  No. of loci = 255 \n  No. of individuals = 250 \n    Minimum      :  0.056 \n    1st quartile :  0.912 \n    Median       :  0.984 \n    Mean         :  0.8765804 \n    3r quartile  :  1 \n    Maximum      :  1 \n    Missing Rate Overall:  0.1234 \n\n\n\n\n\nCompleted: gl.report.callrate \n\n\n\n\n\ngl.report.callrate(gl,method=\"ind\")\n\nStarting gl.report.callrate \n  Processing genlight object with SNP data\n\n  Reporting Call Rate by Individual\n  No. of loci = 255 \n  No. of individuals = 250 \n    Minimum      :  0.7490196 \n    1st quartile :  0.8666667 \n    Median       :  0.8823529 \n    Mean         :  0.8765804 \n    3r quartile  :  0.8941176 \n    Maximum      :  0.9333333 \n    Missing Rate Overall:  0.1234 \n\nListing 30 populations and their average CallRates\n  Monitor again after filtering\n         Population CallRate  N\n1     EmmacBrisWive   0.8839 10\n2     EmmacBurdMist   0.8808 10\n3     EmmacBurnBara   0.8859 11\n4     EmmacClarJack   0.8596  5\n5     EmmacClarYate   0.8769  5\n6     EmmacCoopAvin   0.7682 10\n7    EmmacCoopCully   0.9122 10\n8     EmmacCoopEulb   0.8702 10\n9    EmmacFitzAllig   0.8973 10\n10    EmmacJohnWari   0.8929 10\n11    EmmacMaclGeor   0.8806 11\n12    EmmacMaryBoru   0.8843  6\n13    EmmacMaryPetr   0.8892  4\n14     EmmacMDBBowm   0.8824 10\n15     EmmacMDBCond   0.8855 10\n16     EmmacMDBCudg   0.8878 10\n17     EmmacMDBForb   0.8766 11\n18     EmmacMDBGwyd   0.9050  9\n19     EmmacMDBMaci   0.8773 10\n20 EmmacMDBMurrMung   0.8890 10\n21     EmmacMDBSanf   0.8914 10\n22    EmmacNormJack   0.8725  6\n23    EmmacNormLeic   0.8863  1\n24    EmmacNormSalt   0.8706  1\n25    EmmacRichCasi   0.8757 10\n26        EmmacRoss   0.8706 10\n27    EmmacRussEube   0.8612 10\n28     EmmacTweeUki   0.8773 10\n29    EmsubRopeMata   0.8345  5\n30    EmvicVictJasp   0.8361  5\n\nListing 20 individuals with the lowest CallRates\n  Use this list to see which individuals will be lost on filtering by individual\n  Set ind.to.list parameter to see more individuals\n   Individual  CallRate\n1    AA063722 0.7490196\n2    AA063726 0.7490196\n3    AA063732 0.7647059\n4    AA063720 0.7686275\n5    AA063712 0.7686275\n6    AA063708 0.7725490\n7    AA063718 0.7764706\n8    AA063710 0.7764706\n9    AA063714 0.7764706\n10   AA063716 0.7803922\n11   AA032760 0.7960784\n12   UC_00210 0.8196078\n13   UC_00259 0.8196078\n14   AA018494 0.8235294\n15   UC_00206 0.8235294\n16   AA019164 0.8274510\n17   UC_00209 0.8313725\n18   UC_00254 0.8313725\n19   AA019159 0.8352941\n20  UC_00126c 0.8352941\n\n)\n\n\n\n\n\nCompleted: gl.report.callrate \n\n\n\n\n\ngl.report.reproducibility(gl)\n\nStarting gl.report.reproducibility \n  Processing genlight object with SNP data\n  Reporting Repeatability by Locus\n  No. of loci = 255 \n  No. of individuals = 250 \n    Minimum      :  0.959459 \n    1st quartile :  1 \n    Median       :  1 \n    Mean         :  0.9981525 \n    3r quartile  :  1 \n    Maximum      :  1 \n    Missing Rate Overall:  0.12 \n\n\n\n\n\n   Quantile Threshold Retained Percent Filtered Percent\n1      100%  1.000000      214    83.9       41    16.1\n2       95%  1.000000      214    83.9       41    16.1\n3       90%  1.000000      214    83.9       41    16.1\n4       85%  1.000000      214    83.9       41    16.1\n5       80%  1.000000      214    83.9       41    16.1\n6       75%  1.000000      214    83.9       41    16.1\n7       70%  1.000000      214    83.9       41    16.1\n8       65%  1.000000      214    83.9       41    16.1\n9       60%  1.000000      214    83.9       41    16.1\n10      55%  1.000000      214    83.9       41    16.1\n11      50%  1.000000      214    83.9       41    16.1\n12      45%  1.000000      214    83.9       41    16.1\n13      40%  1.000000      214    83.9       41    16.1\n14      35%  1.000000      214    83.9       41    16.1\n15      30%  1.000000      214    83.9       41    16.1\n16      25%  1.000000      214    83.9       41    16.1\n17      20%  1.000000      214    83.9       41    16.1\n18      15%  0.997674      217    85.1       38    14.9\n19      10%  0.994536      230    90.2       25     9.8\n20       5%  0.984694      243    95.3       12     4.7\n21       0%  0.959459      255   100.0        0     0.0\nCompleted: gl.report.reproducibility \n\n\n\n\n\ngl.filter.callrate(gl,method =\"ind\", threshold=0.8)\n\nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Warning: Data may include monomorphic loci in call rate \n                    calculations for filtering\n  Recalculating Call Rate\n  Removing individuals based on Call Rate, threshold = 0.8 \n  Individuals deleted (CallRate &lt;=  0.8 ):\nAA032760[EmmacMDBMaci], AA063718[EmmacCoopAvin], AA063720[EmmacCoopAvin], AA063722[EmmacCoopAvin], AA063726[EmmacCoopAvin], AA063732[EmmacCoopAvin], AA063708[EmmacCoopAvin], AA063710[EmmacCoopAvin], AA063712[EmmacCoopAvin], AA063714[EmmacCoopAvin], AA063716[EmmacCoopAvin],\n  Summary of filtered dataset\n    Call Rate for individuals &gt; 0.8 \n    Original No. of loci : 255 \n    Original No. of individuals: 250 \n    No. of loci retained: 255 \n    No. of individuals retained: 239 \n    No. of populations:  29 \n\n\n\n\n\n  Note: Locus metrics not recalculated\n  Note: Resultant monomorphic loci not deleted\nCompleted: gl.filter.callrate \n\n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nRemember, you can always look up the help file for dartRverse functions by putting a question mark (?) before a function. For example: ?gl.filter.callrate\nMake sure you have the associated library loaded (eg. libary(dartR.base))\n\n\nNow, lets take a look at our genetic data before and after filtering using the gl.smearplot() function.\n\ncodeBeforeAfter\n\n\n\ngl &lt;- testset.gl\ngl.smearplot(gl) # Before Filtering\n\ngl &lt;- gl.filter.callrate(gl,verbose=0)\ngl &lt;- gl.filter.callrate(gl, method= \"ind\", \n                         threshold=0.80, verbose=0)\ngl.smearplot(gl) # After Filtering\n\n\n\n\n\n  Processing genlight object with SNP data\nStarting gl.smearplot \n\n\n\n\n\nCompleted: gl.smearplot \n\n\n\n\n\n\n  Processing genlight object with SNP data\nStarting gl.smearplot \n\n\n\n\n\nCompleted: gl.smearplot"
  },
  {
    "objectID": "session01.html#filtering-strategies",
    "href": "session01.html#filtering-strategies",
    "title": "1  Intro to dartR",
    "section": "Filtering strategies",
    "text": "Filtering strategies\nThere is no right filtering order. Your data set will need its own interrogation, so be iterative - test different options. In some cases you may even need to reuse a filter that you used earlier on in the filtering process.\nInstead of providing a recipe to follow, I recommend strategies to filtering.\nFirst, lets have a closer look at what some of these filters do (click across the tabs for more insight into each filter):\n\nFilterscallrate: loccallrate: indreproducibilityrdepthmafsecondaries\n\n\n\ngl.filter.callrate(method = loc) # Call rate by loci (SNPs)\ngl.filter.callrate(method = ind) # Call rate by individuals\ngl.filter.reproducibility()      # reproducibility \ngl.filter.rdepth()               # read depth \ngl.filter.maf()                  # minor allele frequency \ngl.filter.secondaries()          # secondaries \n\n\n\ngl.filter.callrate(gl, method = \"loc\", threshold = 0.95)\nWhat is it? Removes SNPs with too much missing data based on a specified threshold.\nWhy is it important? Missing loci can add “noise” and computation time to an analysis\nKey Considerations:\n\nTrade-off between strength of filter and number of loci\nCall rate filters matter for different metrics\n\n\n\n\ngl.filter.callrate(gl, method = \"ind\", threshold = 0.95)\nWhat is it? Removes individuals with too much missing data based on a specified threshold.\nWhy is it important? Deletes the key thing you need to do a study, and removes individuals that may be misleading as they are sequencing outliers\nKey Considerations:\n\nThe filtering step that costs you the very most amount of money\nGenerally not a first step – recommend filtering lightly here in the first go and seeing if other filters improve the individuals completeness\n\n\n\n\ngl.filter.reproducibility()\nWhat is it? Diversity Arrays duplicates individuals during library prep, to assess whether the same answer is found for every locus ~ a control.\nWhy is it important? Provides confidence in your base calls which is pretty fundamental\nKey Considerations:\n\nIf reproducibility is low, you need your SNPs re-assessed\nIf doing sequencing through AGRF or other facilities, make sure to include duplicated individuals (this is an additional cost but do it anyway)\n\n\n\ngl.filter.rdepth()\nWhat is it? The mean number of sequencing reads for a particular locus, across all individuals.\nWhy is it important? The number of reads in a stack tells you how confident you can be in your base calls and a low read depth means that your heterozygous sites have pretty low coverage.\nKey Considerations:\n\nIf your read depth is not high enough, there are questions you can’t confidently answer (e.g., heterozygosity)\nVery high read depth suggests paralogs (genes with multiple copies) being assembled in to one fragment\n\n\n\n\ngl.filter.maf()\nWhat is it? Minor allele frequency (maf) is the frequency of the second most common allele in a given population, so this filter removes SNPs based on their relative proportion.\nImportantly, in the literature, it is often set to 0.05 BUT…\nKey Considerations:\n\n0.05 can be high if you have lot of individuals\n\nIf you have 300 diploid individuals, then you delete SNPs with less than 30 copies of the minor allele\n\nOr singleton if you have a small number of individuals\nShould depend on your question\n\nRare alleles can be very important to certain questions\nMost SNPs are rare alleles, as are most heterozygous sites\nRare alleles are important in expansion processes\nNOT important in structure or phylogenetic analyses\n\n\n\n\n\ngl.filter.secondaries()\nWhat is it? When there are two SNPs on a single fragment, choosing to keep only one.\nWhy is it important? Loci that are very close together in the genome are not independently inherited as they are too close together for recombination to split, so they tend to be inherited together.\nKey Considerations:\n\nCan mislead structure and phylogenetic analyses\nCan improve representations of heterozygosity\n\n\n\n\n\n\nStrategies\nNow for some strategies,\nas a starting point I would get rid of loci I don’t believe in and then individuals that didn’t work properly at all:\n\ngl &lt;- platypus.gl # example data from dartR.data\n\ngl &lt;- gl.filter.callrate(gl, method = \"loc\", threshold = 0.7)\n# Get rid of really poorly sequenced loci, but don’t cut hard\n\ngl &lt;- gl.filter.callrate(gl, method = \"ind\", threshold = 0.25)\n# Very low filter – this is only to get rid of your really bad \n# individuals\n\ngl &lt;- gl.filter.monomorphs(gl)\n# Always run this after removing individuals – removes loci that are no\n# longer variable\n\ngl &lt;- gl.filter.reproducibility(gl)\n# Get rid of unreliable loci\n\ngl &lt;- gl.filter.rdepth(gl, lower = 5, upper = 500)\n# Get rid of low and super high read depth loci\n\nThen I would filter more strongly as appropriate for my question. For a population structure analysis I would,\n\ngl &lt;- gl.filter.callrate(gl, method = \"loc\", threshold = 0.95)\n# Structure dislikes missing data\n\ngl &lt;- gl.filter.maf(gl,  threshold = 1/(2*nInd(gl)))\n# I usually set up the threshold so it is just removing singletons to\n# improve computation time\n\ngl &lt;- gl.filter.secondaries(gl)\n# Always do this as the last loci filter so that you’ve cut for quality\n# before you cut because there are two SNPs\n\ngl &lt;- gl.filter.callrate(gl, method = \"ind\", threshold = .9)\n# Filter on individuals. You can usually be a bit flexible at this \n# point.\n\ngl &lt;- gl.filter.monomorphs(gl)\n# Always run this after removing individuals\n\n\n\n\n\n\n\nMore tips\n\n\n\nKeep these tips in mind when you go to filter your own data:\n\nBe flexible\nKnow what each filter is doing to your data\nThink carefully about whether the filter is appropriate to the test you want to run\nAnalyse your data many different ways\nDon’t over-interpret your PCoA"
  },
  {
    "objectID": "session01.html#exploring-functions",
    "href": "session01.html#exploring-functions",
    "title": "1  Intro to dartR",
    "section": "Exploring functions",
    "text": "Exploring functions\n\n\n\n\n\n\nExercise\n\n\n\n Try some of these report, subset, and filtering functions on your own.\n\nReporting\n\ngl.report.callrate()\ngl.report.reproducibility()\ngl.report.secondaries()\ngl.report.rdepth()\ngl.report.monomorphs()\ngl.report.overhang()\ngl.report.hamming()\ngl.report.overshoot()\n\n\n\nSubsetting\n\ngl.keep.ind()\ngl.drop.ind()\ngl.keep.loc()\ngl.drop.loc()\ngl.keep.pop()\ngl.drop.pop()\ngl.merge.pop()\ngl.subsample.ind()\ngl.subsample.loc()\n\n\n\nfiltering\n\ngl.filter.callrate()\ngl.filter.reproducibility()\ngl.filter.secondaries()\ngl.filter.rdepth()\ngl.filter.monomorphs()\ngl.filter.overhang()\ngl.filter.hamming()\ngl.filter.overshoot()"
  },
  {
    "objectID": "session01.html#further-study",
    "href": "session01.html#further-study",
    "title": "1  Intro to dartR",
    "section": "Further Study",
    "text": "Further Study\nFor more tuturials see the dartR Tutorials section.\n\nReadings\nGruber et al. (2018)\nMijangos et al. (2022)\nJaya et al. (2022)\nSopniewski and Catullo (2024)\n\n\n\n\nGruber, Bernd, Peter J. Unmack, Oliver F. Berry, and Arthur Georges. 2018. “DARTR : An R Package to Facilitate Analysis of SNP Data Generated from Reduced Representation Genome Sequencing.” Molecular Ecology Resources 18 (3): 691–99. https://doi.org/10.1111/1755-0998.12745.\n\n\nJaya, Frederick R., Jessie C. Tanner, Michael R. Whitehead, Paul Doughty, J. Scott Keogh, Craig C. Moritz, and Renee A. Catullo. 2022. “Population Genomics and Sexual Signals Support Reproductive Character Displacement in Uperoleia (Anura: Myobatrachidae) in a Contact Zone.” Molecular Ecology 31 (17): 4527–43. https://doi.org/10.1111/mec.16597.\n\n\nMijangos, Jose Luis, Bernd Gruber, Oliver Berry, Carlo Pacioni, and Arthur Georges. 2022. “dartR V2: An Accessible Genetic Analysis Platform for Conservation, Ecology and Agriculture.” Methods in Ecology and Evolution 13 (10): 2150–58. https://doi.org/10.1111/2041-210X.13918.\n\n\nSopniewski, Jarrod, and Renee A. Catullo. 2024. “Estimates of Heterozygosity from Single Nucleotide Polymorphism Markers Are Context-Dependent and Often Wrong.” Molecular Ecology Resources, March, e13947. https://doi.org/10.1111/1755-0998.13947."
  },
  {
    "objectID": "session02.html#required-packages",
    "href": "session02.html#required-packages",
    "title": "2  Pop Gen In Conservation",
    "section": "Required packages",
    "text": "Required packages\n\n#BiocManager::install(\"LEA\")\n#devtools::install_github(\"tdhock/directlabels\")\n\nlibrary(dartRverse)\n\nlibrary(ggplot2)\nlibrary(data.table)\n\nlibrary(leaflet.minicharts)\nlibrary(LEA)\n\nmake sure you have the packages installed, see Install dartRverse"
  },
  {
    "objectID": "session02.html#session-content",
    "href": "session02.html#session-content",
    "title": "2  Pop Gen In Conservation",
    "section": "Session Content",
    "text": "Session Content"
  },
  {
    "objectID": "session02.html#exercise",
    "href": "session02.html#exercise",
    "title": "2  Pop Gen In Conservation",
    "section": "Exercise",
    "text": "Exercise\n\n\n\n\n\n\nTask\n\n\n\n You have been asked to evaluate the ‘genetic health’ of a population at a restoration site, which has been established two years earlier as a results of the drying of a wet land due to urban development. The corporate responsible for the restoration project claims that the area can now sustain a high density population of the species A, which previously only occurred in the forested areas west and east of the previously existing wet land. Species A is a long lived terrestrial animals.\nCompute genetic diversity metrics (e.g. \\(He\\), \\(Ho\\), \\(Fis\\)) with the data generated by the 100 samples collected and provide a recommendation on whether the restoration project was successful and whether the studied population is likely to required continued active management in the short term.\n\n\n\nLoad data\n\n# Load the data\nglsim &lt;- gl.load(\"./data/sess2_glsim.rds\")\n\n\n#check the population size and number of populations\ntable(pop(glsim))\n\n\npopA \n 100 \n\n#number of loci\nnLoc(glsim)\n\n[1] 2500"
  },
  {
    "objectID": "session02.html#further-study",
    "href": "session02.html#further-study",
    "title": "2  Pop Gen In Conservation",
    "section": "Further Study",
    "text": "Further Study\nAnother teaching app in R, covering only Shannon for genes and its change over time, produced by Computer Science and Engineering third-year students: https://evolutionaryecology.shinyapps.io/learningEE\n\nReadings\nO’Reilly et al. (2020)\nSherwin (2022)\nSherwin et al. (2017)\nSherwin et al. (2021)\nJaya et al. (2022)\n\n\n\n\nJaya, Frederick R., Jessie C. Tanner, Michael R. Whitehead, Paul Doughty, J. Scott Keogh, Craig C. Moritz, and Renee A. Catullo. 2022. “Population Genomics and Sexual Signals Support Reproductive Character Displacement in Uperoleia (Anura: Myobatrachidae) in a Contact Zone.” Molecular Ecology 31 (17): 4527–43. https://doi.org/10.1111/mec.16597.\n\n\nO’Reilly, G. D., F. Jabot, M. R. Gunn, and W. B. Sherwin. 2020. “Predicting Shannon’s Information for Genes in Finite Populations: New Uses for Old Equations.” Conservation Genetics Resources 12 (2): 245–55. https://doi.org/10.1007/s12686-018-1079-z.\n\n\nSherwin, W. B. 2022. “Bray-Curtis (AFD) Differentiation in Molecular Ecology: Forecasting, an Adjustment (AA), and Comparative Performance in Selection Detection.” Ecology and Evolution 12 (9): e9176. https://doi.org/10.1002/ece3.9176.\n\n\nSherwin, W. B., A. Chao, L. Jost, and P. E. Smouse. 2017. “Information Theory Broadens the Spectrum of Molecular Ecology and Evolution.” Trends in Ecology & Evolution 32 (12): 948–63. https://doi.org/10.1016/j.tree.2017.09.012.\n\n\n———. 2021. “Information Theory Broadens the Spectrum of Molecular Ecology and Evolution: (Trends in Ecology and Evolution 32:12, p:948–963, 2017).” Trends in Ecology & Evolution 36 (10): 955–56. https://doi.org/10.1016/j.tree.2021.07.005."
  },
  {
    "objectID": "session03.html#required-packages",
    "href": "session03.html#required-packages",
    "title": "3  Sequencing Technologies",
    "section": "Required packages",
    "text": "Required packages\n\nlibrary(dartRverse)\nlibrary(ggplot2)\n\nmake sure you have the packages installed, see Install dartRverse"
  },
  {
    "objectID": "session03.html#session-content",
    "href": "session03.html#session-content",
    "title": "3  Sequencing Technologies",
    "section": "Session Content",
    "text": "Session Content"
  },
  {
    "objectID": "session03.html#exercise",
    "href": "session03.html#exercise",
    "title": "3  Sequencing Technologies",
    "section": "EXERCISE",
    "text": "EXERCISE\n\n\n\n\n\n\nExercise\n\n\n\n Still to come…"
  },
  {
    "objectID": "session03.html#further-study",
    "href": "session03.html#further-study",
    "title": "3  Sequencing Technologies",
    "section": "Further Study",
    "text": "Further Study\nJason Dobry will be giving a detailed tutorial on combining DArTseq data with whole genome sequencing in session 13. The associated papers are Dobry, Zhu, et al. (2023) and Dobry, Wapstra, et al. (2023)\n\n\n\n\nDobry, Jason, Erik Wapstra, Emily J. Stringer, Bernd Gruber, Janine E. Deakin, and Tariq Ezaz. 2023. “Widespread Chromosomal Rearrangements Preceded Genetic Divergence in a Monitor Lizard, Varanus Acanthurus (Varanidae).” Chromosome Research 31 (1): 9. https://doi.org/10.1007/s10577-023-09715-x.\n\n\nDobry, Jason, Zexian Zhu, Qi Zhou, Erik Wapstra, Janine E Deakin, and Tariq Ezaz. 2023. “Fixed Allele Differences Associated With the Centromere Reveal Chromosome Morphology and Rearrangements in a Reptile (Varanus Acanthurus BOULENGER).” Molecular Biology and Evolution 40 (6): msad124. https://doi.org/10.1093/molbev/msad124."
  },
  {
    "objectID": "session04.html#required-packages",
    "href": "session04.html#required-packages",
    "title": "4  Data Management, Reproducibility & Integrity",
    "section": "Required packages",
    "text": "Required packages\n\nlibrary(tidyverse)\nlibrary(palmerpenguins)"
  },
  {
    "objectID": "session04.html#session-content",
    "href": "session04.html#session-content",
    "title": "4  Data Management, Reproducibility & Integrity",
    "section": "Session Content",
    "text": "Session Content\nOur goal is to make reproducible research, and data management/integrity are the necessary steps to do to make sure we achieve this goal\n\nCheck out the information life cycle https://data.uq.edu.au/data-essentials/information-lifecycle\nAnd what about the idea of open research at scale, that is research that is reproducible and accessible. Check out https://www.repro4everyone.org/\n\n\nQuarto files\n\n\n\n\n\n\nExercise\n\n\n\n Download an example quarto file and try running it on your own.\n\n\n\n\n\n Download hello.qmd"
  },
  {
    "objectID": "session04.html#exercise",
    "href": "session04.html#exercise",
    "title": "4  Data Management, Reproducibility & Integrity",
    "section": "Exercise",
    "text": "Exercise\n Download an example quarto file and try running it on your own.\n\n\n\n\n\n Download hello.qmd"
  },
  {
    "objectID": "session04.html#further-study",
    "href": "session04.html#further-study",
    "title": "4  Data Management, Reproducibility & Integrity",
    "section": "Further Study",
    "text": "Further Study\nCheck out the information life cycle https://data.uq.edu.au/data-essentials/information-lifecycle\nCheck out the push for open research, research that is reproducible and accessible https://www.repro4everyone.org/"
  },
  {
    "objectID": "session05.html#required-packages",
    "href": "session05.html#required-packages",
    "title": "5  Effective Population Size",
    "section": "Required packages",
    "text": "Required packages\n\nlibrary(dartRverse)\nlibrary(dartR.popgen)\nlibrary(ggplot2)\n# devtools::install_github('green-striped-gecko/geohippos')\nlibrary(geohippos)"
  },
  {
    "objectID": "session05.html#introduction",
    "href": "session05.html#introduction",
    "title": "5  Effective Population Size",
    "section": "Introduction",
    "text": "Introduction\nNe is important for conservation and management of populations. It is an indicator of the genetic diversity of a population and is used to estimate the probability of extinction.\nEffective population size (Ne) is a concept in population genetics that refers to the number of breeding individuals in an idealized population that would show the same amount of genetic drift or inbreeding or linkage disequilbrium or coalescent as the population under study. Unlike the actual census size (Nc), which counts all individuals within a population, Ne focuses on those contributing genes to the next generation, offering a more precise understanding of a population’s genetic health and potential for evolutionary change.\nThe 50/500 rule is a guideline in conservation biology that relates to the effective population size (Ne) and its implications for the conservation of species. This rule was first proposed by Franklin in 1980 and later expanded by Soule in 1986. It serves as a rule of thumb for determining the minimum viable population sizes needed to prevent inbreeding depression in the short term and maintain evolutionary potential over the long term.\nBe aware the 50/500 rule is a rule of thumb and should be used with caution. It is not a one-size-fits-all rule and should be used in conjunction with other information about the species and its habitat. It has been criticized for being too simplistic and not taking into account the specific needs of individual species."
  },
  {
    "objectID": "session05.html#current-effective-population-size",
    "href": "session05.html#current-effective-population-size",
    "title": "5  Effective Population Size",
    "section": "1. Current effective population size",
    "text": "1. Current effective population size\nThere are various methods to estimate current effective population size. In this section, we are going to focus on linkage disequilbrium and we will use the methods implemented in NeEstimator. dartR.popgen has a wrapper to run NeEstimator, which has been recently updated to include the new adjustments from Waples et al 2016. Also, we will look at possible causes of \\(Inf\\) estimates."
  },
  {
    "objectID": "session05.html#historic-effective-population-size",
    "href": "session05.html#historic-effective-population-size",
    "title": "5  Effective Population Size",
    "section": "2. Historic effective population size",
    "text": "2. Historic effective population size\n\nBased on SFS\nThe Site Frequency Spectrum (SFS), sometimes referred to as the allele frequency spectrum, is a fundamental concept in population genetics that describes the distribution of allele frequencies at polymorphic sites within a sample of DNA sequences from a population. It provides a powerful summary of the genetic variation present in the population, capturing information about the history of mutations, demographic events (such as population expansions or bottlenecks). There are several methods to estimate historic, but we explore only two here: Epos Lynch et al. (2019) and Stairways2 Liu and Fu (2020)\n\n\nThe SFS\nIt is straight forward to create the sfs from a genlight/dartR object. But first you want to make sure you do not have missing data in your dataset, because the allele frequency spectrum is sensitive to missing data.\n\n# Load the data\ngl100 &lt;- readRDS(\"./data/slim_100.rds\")\n# check the population size and number of populations\ntable(pop(gl100))\n\n\n A \n50 \n\n# number of individuals\nnInd(gl100)\n\n[1] 50\n\n# number of loci\nnLoc(gl100)\n\n[1] 10645\n\n# create\nsfscon &lt;- gl.sfs(gl100, folded = TRUE)\n\nStarting gl.sfs \n  Processing genlight object with SNP data\n\n\n\n\n\nCompleted: gl.sfs \n\nsfscon\n\n  d0   d1   d2   d3   d4   d5   d6   d7   d8   d9  d10  d11  d12  d13  d14  d15 \n  10 1924 1188  676  557  408  400  260  249  254  238  200  179  186  195  170 \n d16  d17  d18  d19  d20  d21  d22  d23  d24  d25  d26  d27  d28  d29  d30  d31 \n 180  115  170  122  138  127  142   99  105  109  110   95  106  112   88   85 \n d32  d33  d34  d35  d36  d37  d38  d39  d40  d41  d42  d43  d44  d45  d46  d47 \n  89   80  100   91   60   96   97   88  111   81   72   86   85   57   91  110 \n d48  d49  d50 \n  90  114   50 \n\n\nAs you can see the is simply a table of the number of alleles at each frequency. Be aware the the sfs is folded by default, but you can change this with the argument folded = FALSE. In most of the cases we will use the folded=TRUE option as you need phased data to use the unfolded sfs (and also have an idea which state is the ancestral one. Often the genomic of an ancestral outgroup is used for this information).\n\n\n\n\n\n\nExercise 1: Parameter in gl.sfs\n\n\n\n Try different settings for the sfs and see what happens. There are three important parameters:\n\nminbinsize (default is 1)\nfolded (default is TRUE)\nsinglepop (default is TRUE) [if you have more than one population in your genlight object]\n\n\n\n\n# unfolded sfs\nun.sfs &lt;- gl.sfs(gl100, folded = FALSE)\n\nStarting gl.sfs \n  Processing genlight object with SNP data\n\n\n\n\n\nCompleted: gl.sfs \n\nun.sfs\n\n  d0   d1   d2   d3   d4   d5   d6   d7   d8   d9  d10  d11  d12  d13  d14  d15 \n   0 1913 1144  649  540  392  368  250  231  229  216  182  163  163  149  152 \n d16  d17  d18  d19  d20  d21  d22  d23  d24  d25  d26  d27  d28  d29  d30  d31 \n 141  103  138  106  108  102  110   81   83   82   88   74   83   86   60   63 \n d32  d33  d34  d35  d36  d37  d38  d39  d40  d41  d42  d43  d44  d45  d46  d47 \n  48   59   62   61   38   58   68   55   66   51   42   54   49   26   54   49 \n d48  d49  d50  d51  d52  d53  d54  d55  d56  d57  d58  d59  d60  d61  d62  d63 \n  54   65   50   49   36   61   37   31   36   32   30   30   45   33   29   38 \n d64  d65  d66  d67  d68  d69  d70  d71  d72  d73  d74  d75  d76  d77  d78  d79 \n  22   30   38   21   41   22   28   26   23   21   22   27   22   18   32   25 \n d80  d81  d82  d83  d84  d85  d86  d87  d88  d89  d90  d91  d92  d93  d94  d95 \n  30   16   32   12   39   18   46   23   16   18   22   25   18   10   32   16 \n d96  d97  d98  d99 d100 \n  17   27   44   11   10 \n\n\nIn addition it is possible to create multidimensional sfs, which is useful for example when you have multiple populations (in case you want to have that use: singlepop=FALSE). Be aware if you want to create and multidimensional sfs from more than say 3 populations a 30 individuals you create a huge array of dimensions (61 x 61 x 61), with mainly zeros. So often multidemensional sfs are not very useful.\nSo lets have a closer look at the folder sfs from the example. The simulated population had a constant (effective) population size Ne of 100 individuals. Hence we know from theory that we have to expect a sfs that follows an exponential distribution.\nWe now load two more data sets:\n\ngldec &lt;- readRDS(\"./data/slim_100_50_50yago.rds\")\nglinc &lt;- readRDS(\"./data/slim_100_200_50yago.rds\")\nglbottle &lt;- readRDS(\"./data/slim_100_10_50_50yago_10year.rds\")\n\ngldec is a population that experienced a decline from Ne=100 to Ne=50 50 years ago, while glinc is a population that experienced an increase from Ne=100 to Ne=200 50 years ago. And glbottle is a data set that experienced a bottleneck from Ne=100 to Ne=10 50 years ago and then an increase to Ne=50 after years.\n\n\n\n\n\n\nExercise 2: Compare SFS\n\n\n\n Create a SFS for the three new datasets and compare them to the SFS of the constant population. What do you expect?\n\n\nBelow is a plot that shows all four SFS.\n\nsfsdec &lt;- gl.sfs(gldec, folded = TRUE)\n\nStarting gl.sfs \n  Processing genlight object with SNP data\n\n\n\n\n\nCompleted: gl.sfs \n\nsfsinc &lt;- gl.sfs(glinc, folded = TRUE)\n\nStarting gl.sfs \n  Processing genlight object with SNP data\n\n\n\n\n\nCompleted: gl.sfs \n\nsfsbottle &lt;- gl.sfs(glbottle, folded = TRUE)\n\nStarting gl.sfs \n  Processing genlight object with SNP data\n\n\n\n\n\nCompleted: gl.sfs \n\n\n\n\nExamples for different sfs (simulated)\n\ndf &lt;- data.frame(x = 0:50, sfscon, sfsdec, sfsinc, sfsbottle)\n\ng1 &lt;- ggplot(df, aes(x = x, y = sfscon)) + geom_bar(stat = \"identity\")\ng2 &lt;- ggplot(df, aes(x = x, y = sfsdec)) + geom_bar(stat = \"identity\")\ng3 &lt;- ggplot(df, aes(x = x, y = sfsinc)) + geom_bar(stat = \"identity\")\ng4 &lt;- ggplot(df, aes(x = x, y = sfsbottle)) + geom_bar(stat = \"identity\")\n\ng1 + g2 + g3 + g4\n\n\n\n\nAs you can see it is not really possible to see the differences between the sfs, so lets check how good our methods are to recreate the historic population sizes.\n\n\nEpos\nLets start with the simple one and lets use Epos (as this is the fastest method). A typical epos run requires the genlight/dartR object, then the path to the epos binary.\nThere are two more important parameters l and mu. l is the total lenght of the “sampled” chromosome and we will have a discussion on that. mu is the mutation rate per site per generation. The important concept to keep in mind is that:\n\\[\\LARGE x = mu \\times L \\times 2 \\times Ne \\] , where x is the number of mutations in a generation.\nSo to be able to estimate the trajectory in an absolute sense we need to know L and mu. In a simulation that is easy because we know how long the chromosome(s) were we did our simulation on. Here L=5e8 and mu was set to a value of 1e-8.\nWe could provide the sfs, but the gl.epos function does take care of that in case none is provided (it call gl.sfs). Additional parameters in EPOS are the number of bootstraps that should be run for confidence intervalas (the more the more runs and the longer it takes) and the minimum bins size. Here we use minbinsize=1 (the default), because we have simulated data and also trust our low frequency bins. In a real data set you might want to change that to higer values, though if too high you might delete too much information from your data (the first bins have the highest number of entries and therefore should be the most informative ones).\n\nL &lt;- 5e+08\nmu = 1e-08\n\n# forgive me but you need to name 'L' as little l in the function call.\n# will be corrected in the ne\nNe_epos &lt;- gl.epos(gl100, epos.path = \"./binaries/\", l = L, u = mu, boot = 10,\n    minbinsize = 1)\n\n  Processing genlight object with SNP data\n\ncolnames(Ne_epos) &lt;- c(\"generation\", \"low\", \"Ne_median\", \"high\")\nggplot(Ne_epos, aes(x = generation, y = Ne_median)) + geom_line() + geom_ribbon(aes(ymin = low,\n    ymax = high), alpha = 0.2)\n\n\n\n\nAs you might remember the population size was constant at 100 individuals. So we expect the Ne to be 100 for all generations. And indeed the median is 100 for allmost all generations. The confidence intervals are very narrow, which is expected as we have simulated this data set. There is little bit disturbing ‘dip’ at really low population sizes. This hints to the known limitation that in very recent times there had not been enough mutations to estimate the population size correctly.\nBefore we go on with the other data sets (fairly easy to run, just replace the gl100 with the other data sets) we should discuss the parameter l and mu. The l parameter is the length of the chromosome that was sampled. In a real data set you might not know that, because this depends on your methods, the amount of filters etc. Hence the question is what happens if you set l wrong. Lets test set and set L to an often used value: number of loci times 69 (because in a dart analysis we get 69 bases of sequence hence that sounds like a reasonable idea).\n\nL &lt;- 69 * nLoc(gl100)  #734505\nmu = 1e-08\n\nNe_epos &lt;- gl.epos(gl100, epos.path = \"./binaries/\", l = L, u = mu, boot = 10,\n    minbinsize = 1)\n\n  Processing genlight object with SNP data\n\ncolnames(Ne_epos) &lt;- c(\"generation\", \"low\", \"Ne_median\", \"high\")\nggplot(Ne_epos, aes(x = generation, y = Ne_median)) + geom_line() + geom_ribbon(aes(ymin = low,\n    ymax = high), alpha = 0.2)\n\n\n\n\nAs you can see this is not a good idea the axis values are completely off. The reason is that the number of mutations is calculated as L * mu * Ne. So if you set L too low, you will get a too high Ne (and also the number of generations are off). If you set L too high, you will get a too low Ne. So you need to know the length of the chromosome that you are working with. The good news is that the trajectory is still correct, so we can rely on the shape of the curve, but the absolute values are wrong if L (or mu) are set incorrectly.\n\n\n\n\n\n\nExercise 3: Run Epos for different combinations of L and mu\n\n\n\n You can now run epos for different combinations of L and mu. What do you expect if you set L and mu in such a way that L * mu compensate each other?\n\n\n\n\n\n\n\n\nExercise 4: Run Epos for all data sets\n\n\n\n And now to the next exercise which is the more intersting one: run Epos for all four data sets data sets(glcon, glinc, gldec, glbottle) and compare the results to the simulated trajectories. Once finished you can have a look at the code below.\n\n\n\nL &lt;- 5e+08\nmu = 1e-08\n\n# constant\nNe_epos &lt;- gl.epos(gl100, epos.path = \"./binaries\", l = L, u = mu, boot = 10,\n    minbinsize = 1)\n\n  Processing genlight object with SNP data\n\ncolnames(Ne_epos) &lt;- c(\"generation\", \"low\", \"Ne_median\", \"high\")\npcon &lt;- ggplot(Ne_epos, aes(x = generation, y = Ne_median)) + geom_line() +\n    geom_ribbon(aes(ymin = low, ymax = high), alpha = 0.2)\n\n# constant\nNe_epos &lt;- gl.epos(glinc, epos.path = \"./binaries\", l = L, u = mu, boot = 10,\n    minbinsize = 1)\n\n  Processing genlight object with SNP data\n\ncolnames(Ne_epos) &lt;- c(\"generation\", \"low\", \"Ne_median\", \"high\")\npinc &lt;- ggplot(Ne_epos, aes(x = generation, y = Ne_median)) + geom_line() +\n    geom_ribbon(aes(ymin = low, ymax = high), alpha = 0.2)\n\n# constant\nNe_epos &lt;- gl.epos(gldec, epos.path = \"./binaries\", l = L, u = mu, boot = 10,\n    minbinsize = 1)\n\n  Processing genlight object with SNP data\n\ncolnames(Ne_epos) &lt;- c(\"generation\", \"low\", \"Ne_median\", \"high\")\npdec &lt;- ggplot(Ne_epos, aes(x = generation, y = Ne_median)) + geom_line() +\n    geom_ribbon(aes(ymin = low, ymax = high), alpha = 0.2) + ylim(c(0, 200))\n\n# constant\nNe_epos &lt;- gl.epos(glbottle, epos.path = \"./binaries\", l = L, u = mu, boot = 10,\n    minbinsize = 1)\n\n  Processing genlight object with SNP data\n\ncolnames(Ne_epos) &lt;- c(\"generation\", \"low\", \"Ne_median\", \"high\")\npbottle &lt;- ggplot(Ne_epos, aes(x = generation, y = Ne_median)) + geom_line() +\n    geom_ribbon(aes(ymin = low, ymax = high), alpha = 0.2)\n\nAnd now we can plot them next all in one go:\n\npcon + pinc + pdec + pbottle\n\nWarning: Removed 4 rows containing missing values or values outside the scale range\n(`geom_line()`).\n\n\n\n\n\nPretty good, or what do you think?\n\n\nStairways2\nStairways is the actually more popular mehtod to estimate the historic population sizes from SNPs. The reason is most likely that EPOS was implemented in a way that makes it really hard to run for a not initiated person (you need to compile c++ and run some commands in GO). The upshot in Epos is that is it much much faster and the results are not too different to stairways. Nevertheless, we will have a go with stairways below.\nThe good new is that stairways uses the identical input parameters: L, mu, minbinsize. Hence nothing new here an it “suffers” therefore from the same problem if we do not know mu of L the trajectory is okay, but the absolute values on the axis are off.\nThe main difference (and here I admit I have to resort to a general explanation as it is beyond my paygrade to understand). Epos uses a simple semi-analytical optimization method to find the best fitting trajectory, whereas stairways uses a machine learning approach that takes longer (but potentially explores the parameter space better). My current approach is to use both methods and see if the results are similar.\n\n\nExample run of Stairways2\n\nL &lt;- 5e+08\nmu = 1e-08\n# takes about 5 minutes so not run here Ne_sw &lt;- gl.stairway2(gl100,\n# stairway.path='./binaries', mu = mu, gentime = 1, run=TRUE, nreps =\n# 30, parallel=10, L=L, minbinsize =1)\n\nNe_sw &lt;- readRDS(\"./data/Ne_sw_gl100.rds\")\n\nggplot(Ne_sw, aes(x = year, y = Ne_median)) + geom_line() + geom_ribbon(aes(ymin = Ne_2.5.,\n    ymax = Ne_97.5.), alpha = 0.2)\n\n\n\n\n\n\n\n\n\n\nExercise\n\n\n\n Now that you have learned to run Epos and Stairways, perhaps try to run your own data sets or use the ones provided.\nFoxes in Australia (foxes.rds) Crocodiles in Australia (crocs.rds)\nYou can also try to run the simulator to explore how good the methods are for more complicated demographic histories. [slim simulator]"
  },
  {
    "objectID": "session05.html#gone",
    "href": "session05.html#gone",
    "title": "5  Effective Population Size",
    "section": "Gone",
    "text": "Gone\n[Needs more implementation and testing, but I will give a brief overview here.] [Be aware Gone is very data hungry and seems not to work too well with the number of SNPs we have at our disposal, but in simulations with Ne~1000 and lots of individuals it seems to work well].\nGone is a very different method to estimate the population size. It was developed by Santiago et al. (2020). The authors utilize LD patterns to infer the demographic history of populations. LD can be affected by various factors including recombination, mutation, genetic drift, and population structure. The method is based on the idea that the LD decay is a function of the population size and the recombination rate. So we need next to our SNP data also a so called linkage map. This can be achieved if you have a reference genome available and you can map the SNPs to the reference genome. Gone itself has not been tested to much for recent population sizes and is still very much under research about its usefullness for recent population sizes.\nBelow is an implementation to run Gone using the dartRverse, but be aware it has not been much tested. We certainly can run Gone using our simulated data (because we simulted 5 chromosomes and we have a full map of them on those chromosomes).\nTo see that we can check how many snps we have on the chromosomes in our data sets.\n\ntable(gl100@chromosome)\n\n\n   1    2    3    4    5 \n2252 2130 2132 2229 1902 \n\n\nSo lets run Gone (be aware it is not very userfriendly implemented yet in terms of the settings. Gone currently a script file that is hidden within the script_GONE.sh file and you need to edit it there to change it from the defaults.\nExplain the settings (important MAF)\n\n# take a bit long Ne_gone &lt;- gl.gone(gl100,gone.path = './binaries')\n# #runs parallel via InputParamters load it instead\nNe_gone &lt;- readRDS(\"./data/Ne_gone_100.rds\")\n\ncolnames(Ne_gone) &lt;- c(\"generation\", \"Ne_mean\")\n\nggplot(Ne_gone, aes(x = generation, y = Ne_mean)) + geom_line()\n\n\n\n\nPretty terrible I guess. My first findings indicate the Gone is much more data hungry and works better with much more SNPs, more chromosomes and more individuals. There is a data set I available using 5 chromosomes (but twice in length) and 100 indivduals (being stable all the time)\nThe plot is below:\n\nglgone100 &lt;- readRDS(\"./data/slimgone_100.rds\")\n\n# Ne_gone &lt;- gl.gone(gl100,gone.path =\n# 'd:/bernd/r/geohippos/binaries/gone/windows/') #runs parallel via\n# InputParamters takes too long\n\nNe_gone &lt;- readRDS(\"./data/Ne_gone_100.rds\")\n\ncolnames(Ne_gone) &lt;- c(\"generation\", \"Ne_mean\")\n\nggplot(Ne_gone, aes(x = generation, y = Ne_mean)) + geom_line()\n\n\n\n\nIt is certainly possible that gone is “saveable” but it is obvious that Gone is not very “good” in recent years. There seems to be a sweet spot where Gone works well &gt;100 Generations and &lt;300 generations, but that needs more testing.\n\n\n\n\n\n\nExercise\n\n\n\n Now that you have learned to run Gone perhaps try to run your own data sets or use the ones provided.\nYou can also try to run the simulator to explore how good the methods are for more complicated demographic histories. [slim simulator]\n\n\nWe hope you have fun runnig the code and please do not hesitate to ask questions or provide feedback.\nCheers, Carlo & Bernd\n\n\n\n\nLiu, Xiaoming, and Yun-Xin Fu. 2020. “Stairway Plot 2: Demographic History Inference with Folded SNP Frequency Spectra.” Genome Biology 21 (November). https://doi.org/10.1186/s13059-020-02196-9.\n\n\nLynch, Michael, Bernhard Haubold, Peter Pfaffelhuber, and Takahiro Maruki. 2019. “Inference of Historical Population-Size Changes with Allele-Frequency Data.” G3: GenesGenomesGenetics 10 (1): 211–23. https://doi.org/10.1534/g3.119.400854.\n\n\nSantiago, E., I. Novo, A. F. Pardiñas, M. Saura, J. Wang, and A. Caballero. 2020. “Recent Demographic History Inferred by High-Resolution Analysis of Linkage Disequilibrium.” Molecular Biology and Evolution 37 (12): 3642–53. https://doi.org/10.1093/molbev/msaa174."
  },
  {
    "objectID": "session06.html#required-packages",
    "href": "session06.html#required-packages",
    "title": "6  Management of Small Populations",
    "section": "Required packages",
    "text": "Required packages\n\nlibrary(dartRverse)\nlibrary(hierfstat)\n\nmake sure you have the packages installed, see Install dartRverse"
  },
  {
    "objectID": "session06.html#session-content",
    "href": "session06.html#session-content",
    "title": "6  Management of Small Populations",
    "section": "Session Content",
    "text": "Session Content\nStill to come…"
  },
  {
    "objectID": "session06.html#exercise",
    "href": "session06.html#exercise",
    "title": "6  Management of Small Populations",
    "section": "EXERCISE",
    "text": "EXERCISE\n\n\n\n\n\n\nExercise\n\n\n\n Still to come…"
  },
  {
    "objectID": "session06.html#further-study",
    "href": "session06.html#further-study",
    "title": "6  Management of Small Populations",
    "section": "Further Study",
    "text": "Further Study\nFarquharson et al. (2022)\n\n\n\n\nFarquharson, Katherine A., Elspeth A. McLennan, Yuanyuan Cheng, Lauren Alexander, Samantha Fox, Andrew V. Lee, Katherine Belov, and Carolyn J. Hogg. 2022. “Restoring Faith in Conservation Action: Maintaining Wild Genetic Diversity Through the Tasmanian Devil Insurance Program.” iScience 25 (7): 104474. https://doi.org/10.1016/j.isci.2022.104474."
  },
  {
    "objectID": "session07.html#required-packages",
    "href": "session07.html#required-packages",
    "title": "7  Natural Selection",
    "section": "Required packages",
    "text": "Required packages\n\n#devtools::install_github(\"pygmyperch/melfuR\")\n#BiocManager::install('qvalue')\nlibrary(adegenet)\nlibrary(LEA)\nlibrary(vegan)\nlibrary(fmsb)\nlibrary(psych)\nlibrary(dartRverse)\nlibrary(melfuR)\nlibrary(sdmpredictors)\nlibrary(sf)\nlibrary(raster)\nlibrary(robust)\nlibrary(qvalue)\n\nmake sure you have the packages installed, see Install dartRverse"
  },
  {
    "objectID": "session07.html#session-content",
    "href": "session07.html#session-content",
    "title": "7  Natural Selection",
    "section": "Session Content",
    "text": "Session Content\nStill to come…"
  },
  {
    "objectID": "session07.html#exercise",
    "href": "session07.html#exercise",
    "title": "7  Natural Selection",
    "section": "EXERCISE",
    "text": "EXERCISE\n\n\n\n\n\n\nExercise\n\n\n\n Still to come…"
  },
  {
    "objectID": "session07.html#further-study",
    "href": "session07.html#further-study",
    "title": "7  Natural Selection",
    "section": "Further Study",
    "text": "Further Study\nstill to come…"
  },
  {
    "objectID": "session08.html#introduction",
    "href": "session08.html#introduction",
    "title": "8  Landscape Genetics",
    "section": "Introduction",
    "text": "Introduction\nLandscape genetics combines landscape ecology with population genetics to understand how the structure, composition and configuration of the landscape affect gene flow, genetic drift, and selection.\nIn this tutorial, we will dive into the first question - how does the landscape influence gene flow? There are many ways to tackle this question, for example, we can explore gene flow among individuals across tens of metres up to entire landscapes, or among populations within a meta-population.\nHere we’ll start with the basics, by looking at the spatial distribution of individuals, and build on this until we incorporate landscape features, to understand:\n\nDifferent dispersal strategies\nLimitations to gene flow, including:\na) Geographic distance (isolation-by-distance)\nb) Geographic barriers (isolation-by-barrier)\nc) Landscape attributes (isolation-by-resistance)"
  },
  {
    "objectID": "session08.html#dispersal-strategies",
    "href": "session08.html#dispersal-strategies",
    "title": "8  Landscape Genetics",
    "section": "1. Dispersal strategies",
    "text": "1. Dispersal strategies\nMany biological and demographic processes can shape patterns of genetic structure. Dispersal and social behaviours often occur over a fine scale. This means that exploring patters within populations over 10s-100s of metres can often be very informative, especially in small and inconspicuous species.\nBefore diving into more complex and correlative analyses, it can be very useful to understand some of the baseline life-history and demographic traits in your species. One common question is: how far do individuals disperse and is this the same/different for males and females? When one sex disperses further than the other, this is known as sex-biased dispersal. This can be detected via genetic spatial autocorrelation analysis, as increased philopatry by one sex (i.e. individuals remain close to where they are born) results in greater genetic similarity among neighbouring individuals, while genetic similarity is reduced in the dispersing sex.\nTo explore the genetic patterns that result from sex-biased dispersal, we’re going to simulate this process in a population. First, we need to set up the dispersal kernels, using the custom function below.\n\n# Create a function, where: \n# x = minimum to maximum distance, \n# d0 = mean distance, \n# p= proportion  that go to mean\np2p &lt;- function(x, d0, p)\n{\n  return (exp(((x/d0)*log(p))))\n}\n\n# Dispersal kernels:\n# Females\ndispfemale &lt;- (p2p(x = 1:50, # range of distances\n                   d0 = 1, # mean dispersal distance\n                   p = 0.5)) # proportion that go to mean\npdispfemale &lt;- c(0, cumsum(dispfemale)/sum(dispfemale))\n\n# Males\ndispmale &lt;- (p2p(x = 1:50, # range of distances\n                 d0 = 20, # mean dispersal distance\n                 p = 0.5)) # proportion that go to mean\npdispmale &lt;- c(0, cumsum(dispmale)/sum(dispmale))\n\nLet’s look at the dispersal curves. In this case, males disperse further than females (i.e. there is male-biased dispersal):\n\n# Plot\nplot(dispfemale, type = \"l\", col = \"#E69F00\", lwd = 2, main = \"Female dispersal curve\",\n    xlab = \"Distance (m)\", ylab = \"\")\n\n\n\nplot(dispmale, type = \"l\", lwd = 2, col = \"#5D3FD3\", main = \"Male dispersal curve\",\n    xlab = \"Distance (m)\", ylab = \"\")\n\n\n\n\nNext we’ll create a function that runs a simulation, based on the dispersal probabilities created above. We’ll generate a population using the function glSim, which simulates simple SNP data, returning a genlight object.\n\n# Create a function, where: Nind = number of individuals, Nsnp = number\n# of SNPs, pdispF = female dispersal probability (generated above)\n# pdispM = male dispersal probability (generated above) seed = set the\n# seed so simulation is repeatable\nSimDisp &lt;- function(Nind, Nsnp, pdispF, pdispM, seed) {\n\n    set.seed(seed)\n\n    # Simulate a genlight object\n    gg &lt;- glSim(n.ind = Nind, n.snp.nonstruc = Nsnp, grp.size = c(0.999,\n        0.001), ploidy = 2, k = 1, LD = FALSE, ind.names = paste(sprintf(\"ind%03d\",\n        1:Nind), sep = \"\"), snp.names = paste(sprintf(\"snp%03d\", 1:Nsnp),\n        sep = \"\"))\n\n    # Define pop\n    pop(gg) &lt;- rep(\"A\", Nind)\n\n    # Create all the other parameters\n    gg &lt;- gl.compliance.check(gg)\n\n    # Define sex using a sex ratio of 0.5\n    ds &lt;- c(rep(\"F\", 0.5 * Nind), rep(\"M\", (1 - 0.5) * Nind))\n    ds &lt;- ds[order(runif(length(ds)))]\n    gg@other$ind.metrics$sex &lt;- factor(ds)\n\n    # Set coordinates\n    xy &lt;- expand.grid(x = 1:100, y = 1:100)\n    xys &lt;- xy[sample(1:nrow(xy), Nind, replace = FALSE), ]  # sample from the grid\n    gg@other$ind.metrics$x &lt;- xys$x\n    gg@other$ind.metrics$y &lt;- xys$y\n\n    for (ii in 1:20) {\n        # Run for 20 generations\n\n        # Find mating pairs & reproduce\n        females &lt;- which(gg@other$ind.metrics$sex == \"F\")\n        males &lt;- which(gg@other$ind.metrics$sex == \"M\")\n\n        off &lt;- list()\n\n        for (i in 1:length(females)) {\n            mfemale &lt;- gg[females[i], ]\n            fxy &lt;- c(gg@other$ind.metrics$x[females[i]], gg@other$ind.metrics$y[females[i]])\n            mxy &lt;- cbind(gg@other$ind.metrics$x[males], gg@other$ind.metrics$y[males])\n            xxyy &lt;- rbind(fxy, mxy)\n\n            # Find closest mating male\n            chosenm &lt;- which.min(as.matrix(dist(xxyy))[1, -1])\n            mmale &lt;- gg[males[chosenm], ]\n\n            doff &lt;- gl.sim.offspring(mmale, mfemale, sexratio = 0.5, noffpermother = 2)  # 2 offspring\n            doff@other$ind.metrics &lt;- data.frame(sex = factor(c(\"F\", \"M\")),\n                x = mfemale@other$ind.metrics$x, y = mfemale@other$ind.metrics$y)\n\n            off[[i]] &lt;- doff\n\n        }\n\n        gg &lt;- do.call(rbind, off)\n\n        # Make all offspring adults\n        xx &lt;- (lapply(off, function(x) x@other$ind.metrics))\n        xx &lt;- do.call(rbind, xx)\n        gg@other$ind.metrics &lt;- xx\n\n        # Emigrate depending on dispersial distance\n\n        for (i in 1:nInd(gg)) {\n\n            # Use dispersal curves generated above to determine\n            # distance\n            if (gg@other$ind.metrics$sex[i] == \"M\")\n                dis &lt;- max(which(runif(1) &gt; pdispM)) else dis = max(which(runif(1) &gt; pdispF))\n\n            # Dispersal direction\n            dir &lt;- runif(1, 0, 2 * pi)\n\n            # Assign new coordinates\n            gg@other$ind.metrics$x[i] &lt;- gg@other$ind.metrics$x[i] + dis *\n                cos(dir)\n            gg@other$ind.metrics$y[i] &lt;- gg@other$ind.metrics$y[i] + dis *\n                sin(dir)\n        }\n\n        # Use torus to determine what to do with individuals that\n        # disperse outside of extent\n        gg@other$ind.metrics$x &lt;- gg@other$ind.metrics$x%%100\n        gg@other$ind.metrics$y &lt;- gg@other$ind.metrics$y%%100\n\n        # Plot\n        plot(gg@other$ind.metrics$x, gg@other$ind.metrics$y, pch = 16, cex = 1,\n            col = c(\"#E69F00\", \"#5D3FD3\")[as.numeric(gg@other$ind.metrics$sex)],\n            asp = 1, main = paste(\"Generation\", ii), xlab = \"x\", ylab = \"y\")\n        legend(\"bottomleft\", legend = c(\"Female\", \"Male\"), col = c(\"#E69F00\",\n            \"#5D3FD3\"), pch = 16, cex = 1)\n\n    }\n\n    # Output genlight object containing simulated data\n    return(gg)\n}\n\nNow run the function to simulate a population with 100 individuals, 1000 SNPs, and male-biased dispersal.\n\n\n\n\n\n\nNote\n\n\n\nThe simulation goes for 20 generations - you can see an animation below\n\n\n\nsimdat &lt;- SimDisp(Nind = 100, Nsnp = 1000, pdispF = pdispfemale, pdispM = pdispmale,\n    seed = 123)\n\n\n\n\nWhat does this mean for fine-scale genetic structure? Can we identify different dispersal patterns for males and females? Let’s run genetic spatial autocorrelation to find out. We’ll use the function gl.spatial.autoCorr, which is a multivariate approach combining all loci into a single analysis. The autocorrelation coefficient “r” is calculated for each pair of individuals in each specified distance class (called “bins” in this function). We’ll use evenly distributed bins and compare individuals at 10 m intervals up to 50 m.\n\n# Make 'sex' the population name\npop(simdat) &lt;- simdat@other$ind.metrics$sex\n\n# Add xy coordinates to the 'other' slot in genlight\nsimdat@other$latlon &lt;- data.frame(lon = simdat@other$ind.metrics$x, lat = simdat@other$ind.metrics$y)\nsimdat@other$latlon &lt;- Mercator(simdat@other$latlon, inverse = T)\n\n# Run genetic spatial autocorrelation\ngl.spatial.autoCorr(simdat, bins = seq(0, 50, 10), plot.pops.together = T,\n    plot.colors.pop = c(\"#E69F00\", \"#5D3FD3\"))\n\n\n\n\nWe can see that:\n\nBoth females and males show significant positive spatial autocorrelation up to 30 m (where confidence intervals overlap zero). In other words, once you start comparing individuals 30 m apart, they are unlikely to be related/genetically similar (regardless of sex).\nFemales have significantly stronger fine-scale genetic structure than males up to 10 m (i.e. a greater “r” value and female and male bootstrap CIs are non-overlapping).\n\nThese results are not surprising, since we set our distance classes based on the known (simulated) dispersal capacity of males and females, and we had large sample sizes (both individuals and loci). In reality, this analysis is a careful balance between power (maximising the sample size in each bin), and ensuring you are looking at the right scale (i.e. the size of the distance class).\n\n\n\n\n\n\nWhat do you think would happen if you used a single 50 m distance class?\n\n\n\nWhile the sample size would be great, we might lose the signal of female philopatry. Give it a try above and see what happens.\n\n\n\nExercise\nWhat happens when you vary the dispersal distances? Can you pick up small differences between the sexes?\nWhat happens if you change the number of individuals or SNPs? Does this influence the sensitivity of the analysis? IWhich is more important - more individuals or more loci?\nWhat happens when you vary the size and number of distance classes (i.e. bins)? How does this interact with sample size?\n\n\n\n\n\n\n\nTip\n\n\n\nVary the dispersal parameters “d0” and “p” below\n\n\n\n# Dispersal kernels: \n# Females \ndispfemale &lt;- (p2p(x = 1:50,\n                   d0 = 1, # Try varying this parameter: mean disp. distance\n                   p = 0.5)) # Try varying this parameter: prop. that go to mean \npdispfemale &lt;- c(0, cumsum(dispfemale)/sum(dispfemale))  \n\n# Males \ndispmale &lt;- (p2p(x = 1:50,\n                 d0 = 20, # Try varying this parameter: mean disp. distance\n                 p = 0.8)) # Try varying this parameter: prop. that go to mean  \npdispmale &lt;- c(0, cumsum(dispmale)/sum(dispmale))\n\n# Plot \nplot(dispfemale,      \n     type = \"l\",      \n     col = '#E69F00',      \n     lwd = 2,      \n     main = \"Female dispersal curve\",       \n     xlab = \"Distance (m)\",      \n     ylab = \"\") \nplot(dispmale,      \n     type = \"l\",      \n     lwd = 2,      \n     col =  '#5D3FD3',      \n     main = \"Male dispersal curve\",       \n     xlab = \"Distance (m)\",       \n     ylab = \"\")\n\n\n\n\n\n\n\nTip\n\n\n\nVary the number of individuals or the number of SNPs\n\n\n\nsimdat2 &lt;- \n    SimDisp(Nind = 100, # Try varying this parameter\n            Nsnp = 1000, # Try varying this parameter\n            pdispF = pdispfemale, \n            pdispM = pdispmale, \n            seed = 123)\n\n# Make 'sex' the population name\npop(simdat)&lt;- simdat@other$ind.metrics$sex\n\n# Add xy coordinates to the 'other' slot in genlight\nsimdat@other$latlon &lt;- data.frame(lon = simdat@other$ind.metrics$x, \n                                  lat = simdat@other$ind.metrics$y)\nsimdat@other$latlon &lt;- Mercator(simdat@other$latlon, inverse = T)\n\n\n\n\n\n\n\nTip\n\n\n\nTry changing the size of the bins\n\n\n\ngl.spatial.autoCorr(simdat, bins = seq(0, 50, 5), # Try varying this parameter\n                    plot.pops.together = T, \n                    plot.colors.pop = c('#E69F00', '#5D3FD3'))"
  },
  {
    "objectID": "session08.html#a.-isolation-by-distance",
    "href": "session08.html#a.-isolation-by-distance",
    "title": "8  Landscape Genetics",
    "section": "2a. Isolation-by-distance",
    "text": "2a. Isolation-by-distance\nIsolation-by-distance (IBD) is a key concept in population genetics. It describes a simple idea: that geographic distance can influence gene flow because individuals or populations that are geographically distant from each other are less likely to share genetic material than those that are close (based on the “stepping-stone” model; Kimura & Weiss 1964).\nWe can test for IBD with Mantel tests of matrix correspondence (Mantel 1967), implemented using the function gl.ibd. This test compares pairwise geographic and genetic distance matrices, using permutations to test for significance. For the latter, you can use pairwise estimates of population differentiation or individual-by-individual genetic distances.\nIt’s easy enough to plot the relationship between geographic and genetic distance. However, we can’t use a standard regression to test this relationship because pairwise data are not independent. Mantel tests solve this problem by using permutation to test for significance (e.g., the data are randomly shuffled. The result will be similar to the shuffled outcome if there is no relationship present).\n\n\n\n\n\n\nPopulations vs. individuals\n\n\n\nIBD tests often use pairwise population metrics like FST. This is useful when there are lots of samples and populations are well defined. However, there are often situations where we don’t have multiple samples per location, populations are difficult to define and/or individuals are more continuously distributed. In this case, we can use the individual as the unit of analysis.\nWhere FST estimates represent evolutionary averages, pairwise individual genetic distances may represent more contemporary patterns of dispersal. Therefore, the approach you take depends on the species, your sampling, and the question you want to ask.\n\n\nLet’s test for IBD in our simulated data set:\n\ntotal.ibd &lt;- gl.ibd(simdat, distance = \"euclidean\", coordinates = \"latlon\")\n\n\n\n\n\n# Show Mantel statistics\ntotal.ibd$mantel\n\n\nMantel statistic based on Pearson's product-moment correlation \n\nCall:\nvegan::mantel(xdis = Dgen, ydis = Dgeo, permutations = permutations,      na.rm = TRUE) \n\nMantel statistic r: 0.08552 \n      Significance: 0.013 \n\nUpper quantiles of permutations (null model):\n   90%    95%  97.5%    99% \n0.0512 0.0634 0.0767 0.0866 \nPermutation: free\nNumber of permutations: 999\n\n\nThere is significant IBD across all individuals, but it’s not very pronounced. Can we still see the signal of male-biased dispersal? Let’s create separate IBD plots for females and males:\n\nf.ibd &lt;- gl.ibd(simdat[simdat@pop == \"F\"], distance = \"euclidean\", coordinates = \"latlon\")\n\n\n\nm.ibd &lt;- gl.ibd(simdat[simdat@pop == \"M\"], distance = \"euclidean\", coordinates = \"latlon\")\n\n\n\n\n\n# Show Mantel statistics for females\nf.ibd$mantel\n\n\nMantel statistic based on Pearson's product-moment correlation \n\nCall:\nvegan::mantel(xdis = Dgen, ydis = Dgeo, permutations = permutations,      na.rm = TRUE) \n\nMantel statistic r: 0.1438 \n      Significance: 0.014 \n\nUpper quantiles of permutations (null model):\n   90%    95%  97.5%    99% \n0.0828 0.1053 0.1302 0.1476 \nPermutation: free\nNumber of permutations: 999\n\n# Show Mantel statistics for males\nm.ibd$mantel\n\n\nMantel statistic based on Pearson's product-moment correlation \n\nCall:\nvegan::mantel(xdis = Dgen, ydis = Dgeo, permutations = permutations,      na.rm = TRUE) \n\nMantel statistic r: 0.02018 \n      Significance: 0.375 \n\nUpper quantiles of permutations (null model):\n   90%    95%  97.5%    99% \n0.0825 0.1027 0.1199 0.1514 \nPermutation: free\nNumber of permutations: 999\n\n\n\n\n\n\n\n\nMantel test statistics\n\n\n\nAlthough a regression line is useful for visualising the relationship between geographic and genetic distance, we don’t report the results of the regression (for reasons outlined above). Instead, we report the Mantel test statistic (and the p-value), which is the correlation between the two distance matrices. Values that approach -1 indicate a strong negative relationship, values close to 0 suggest there is no relationship, and values approaching +1 indicate a strong positive relationship (i.e., IBD).\n\n\nAbove we can see that there is significant IBD in females, since dispersal is more restricted. Males show no pattern of IBD, since many individuals can disperse right up to the spatial extent of our sampling. However, we lose some of the nuance from the previous analysis.\n\n\n\n\n\n\nWhat can we learn from each analysis?\n\n\n\nMantel tests show us the broad trend across our study. IBD often acts as our null hypothesis (along with panmixia - i.e., random mating and dispersal) against which to test further landscape genetic analyses. However, unless the signal of sex-biased dispersal is very strong across the whole dataset, a Mantel test is unlikely to detect it. Spatial autocorrelation analysis is usually more powerful in detecting fine-scale genetic patterns than Mantel tests, because samples are “binned” and genetic structure is explored across multiple distance classes.\n\n\n\n\n\n\n\n\nExercise\n\n\n\n\nWhat happens if you use the proportion of shared alleles instead of euclidean distance?\n\n\n\n\nWe expect a linear relationship between geographic distance (sometimes log-transformed) and genetic distance. A discontinuous relationship can be an indication that something else is going on. We will explore this idea below using a real example.\n\nLesser hairy-footed dunnarts in the Pilbara\n\n\n\nSminthopsis youngsonii\n\n\n\n\nLoad the data\n\nload(\"Data/Sy.gl.RData\")  # genetic data\n\nSminthopsis youngsonii (or the lesser hairy footed dunnart), is a small carnivorous dasyurid found across the Australian arid region. As the name suggests, their hind foot is covered in short, bristly hairs, which are thought to help them move on sandy soils. They are usually found on sand dunes, inter dune swale and red sand plains.\nThese samples were taken in the Pilbara region at the very western edge of their range. Let’s take a look at a map:\n\nleaflet(Sy.gl@other$latlong) %&gt;%\n    addTiles() %&gt;%\n    addCircleMarkers(lng = ~lon, lat = ~lat, popup = ~htmlEscape(lon))\n\n\n\n\n\nGiven this is the edge of their range, and the Pilbara is quite rocky and doesn’t harbour much of the ideal habitat for this species, we want to know a little more about dispersal and connectivity in this area. A good first step is to test for isolation by distance.\n\nSy.ibd &lt;- gl.ibd(Sy.gl, distance = \"euclidean\")\n\n\n\n\n\n# Show Mantel statistics\nSy.ibd$mantel\n\n\nMantel statistic based on Pearson's product-moment correlation \n\nCall:\nvegan::mantel(xdis = Dgen, ydis = Dgeo, permutations = permutations,      na.rm = TRUE) \n\nMantel statistic r: 0.6513 \n      Significance: 0.001 \n\nUpper quantiles of permutations (null model):\n   90%    95%  97.5%    99% \n0.0613 0.0897 0.1204 0.1594 \nPermutation: free\nNumber of permutations: 999\n\n\nYes - there is significant IBD! The pattern is very strong. But… some of the points don’t seem to follow the same slope? Why might this be?\nThere seems to be a big gap in sampling. This could be due to a sampling bias (e.g., the missing area is difficult to get to). Alternatively, the species may not occur here, suggesting there might be something going on with the habitat.\n\n\n\n\n\n\nGiven what we know about the species, what would be a reasonable hypothesis?\n\n\n\nCould substrate be driving this sampling gap and the strange IBD pattern?\n\n\nLet’s separate the individuals into two populations using longitude. You can click on the points in the map above to choose a location.\n\n# Choose a point that separates the samples into two populations\nlon.break &lt;- 114.87\n# Assign eastern and western populations based on this point\nSy.gl@pop &lt;- as.factor(ifelse(Sy.gl@other$latlong$lon &lt; lon.break, \"1.West\",\n    \"2.East\"))\n\nNow let’s take another look at IBD, but this time we’ll include the population information.\n\ngl.ibd(Sy.gl, distance = \"euclidean\", paircols = \"pop\")\n\n\n\n\nIt looks like the magnitude of genetic distance is different and there are two different slopes describing IBD within each ‘population’. The points with large geographic and genetic distances represent among population comparisons. Discontinuities like this can sometimes suggest a barrier to gene flow. Let’s take a look at the substrate.\n\n# Load a soil shapefile\nsoil &lt;- st_read(\"Data/Soil.shp\")  # spatial data\n\n# Create a colour palette for the two populations\npop.pal &lt;- colorFactor(palette = c(\"#F8766D\", \"#00BFC4\"), domain = Sy.gl@pop)\n\n# Create a palette\nsoil.pal &lt;- colorFactor(palette = c(\"#9C640C\", \"#5c3001\", \"#C0392B\", \"#EDC001\",\n    \"#FDEFB2\"), domain = soil$Type)\n\n\n# Generate another map\nleaflet(cbind(pop = Sy.gl@pop, Sy.gl@other$latlong)) %&gt;%\n    addTiles() %&gt;%\n    addPolygons(data = soil, weight = 0, fillOpacity = 0.7, color = ~soil.pal(Type)) %&gt;%\n    addCircleMarkers(lng = ~lon, lat = ~lat, color = ~pop.pal(pop)) %&gt;%\n    addLegendFactor(pal = soil.pal, shape = \"rect\", fillOpacity = 0.7, opacity = 0,\n        values = ~soil$Type, title = \"Soil type\", position = \"topright\",\n        data = gadmCHE, group = \"Polygons\")\n\n\n\n\n\nIt looks like clay could be acting as a barrier. This is a good theory, but it would be useful to be able to visualise these patterns of isolation by distance spatially to get an indication of where gene flow is being restricted. We’ll explore this idea in the next section."
  },
  {
    "objectID": "session08.html#b.-isolation-by-barrier",
    "href": "session08.html#b.-isolation-by-barrier",
    "title": "8  Landscape Genetics",
    "section": "2b. Isolation-by-barrier",
    "text": "2b. Isolation-by-barrier\nUp to this point, we’ve tested for IBD - but could be helpful to visually inspect patterns of IBD across the landscape. We can do this with EEMS…"
  },
  {
    "objectID": "session08.html#c.-isolation-by-resistance",
    "href": "session08.html#c.-isolation-by-resistance",
    "title": "8  Landscape Genetics",
    "section": "2c. Isolation-by-resistance",
    "text": "2c. Isolation-by-resistance\nUp to this point, we’ve only visually inspected the landscape, could be useful to explicitly test the correlation between gene flow and landscape features."
  },
  {
    "objectID": "session09.html#required-packages",
    "href": "session09.html#required-packages",
    "title": "9  Lineage Divergence",
    "section": "Required packages",
    "text": "Required packages\n\nlibrary(dartR.base)\n\nmake sure you have the packages installed, see Install dartRverse"
  },
  {
    "objectID": "session09.html#session-content",
    "href": "session09.html#session-content",
    "title": "9  Lineage Divergence",
    "section": "Session Content",
    "text": "Session Content\nStill to come…"
  },
  {
    "objectID": "session09.html#exercise",
    "href": "session09.html#exercise",
    "title": "9  Lineage Divergence",
    "section": "EXERCISE",
    "text": "EXERCISE\n\n\n\n\n\n\nExercise\n\n\n\n Still to come…"
  },
  {
    "objectID": "session09.html#further-study",
    "href": "session09.html#further-study",
    "title": "9  Lineage Divergence",
    "section": "Further Study",
    "text": "Further Study\nstill to come…"
  },
  {
    "objectID": "session10.html",
    "href": "session10.html",
    "title": "10  Sex Linked Markers",
    "section": "",
    "text": "11 Further study\nDevloo-Delva, F., Burridge, C. P., Kyne, P. M., Brunnschweiler, J. M., Chapman, D. D., Charvet, P., … & Feutry, P. (2023). From rivers to ocean basins: The role of ocean barriers and philopatry in the genetic structuring of a cosmopolitan coastal predator. Ecology and Evolution, 13(2), e9837. https://doi.org/10.1002/ece3.9837\nNikolic, N., Devloo-Delva, F., Bailleul, D., Noskova, E., Rougeux, C., Delord, C., … & Arnaud‐Haond, S. (2023). Stepping up to genome scan allows stock differentiation in the worldwide distributed blue shark Prionace glauca. Molecular Ecology, 32(5), 1000-1019. https://doi.org/10.1111/mec.16822\nRobledo-Ruiz, D. A., Austin, L., Amos, J. N., Castrejón-Figueroa, J., Harley, D. K. P., Magrath, M. J. L., Sunnucks, P., & Pavlova, A. (2023). Easy-to-use R functions to separate reduced-representation genomic datasets into sex-linked and autosomal loci, and conduct sex assignment. Molecular Ecology Resources, 00, 1–21. https://doi.org/10.1111/1755-0998.13844"
  },
  {
    "objectID": "session10.html#required-packages",
    "href": "session10.html#required-packages",
    "title": "10  Sex Linked Markers",
    "section": "Required packages",
    "text": "Required packages\n\nlibrary(dartR.base)\nlibrary(dartR.sexlinked)"
  },
  {
    "objectID": "session10.html#dataset-1---zwzz---the-yellow-tufted-honeyeater",
    "href": "session10.html#dataset-1---zwzz---the-yellow-tufted-honeyeater",
    "title": "10  Sex Linked Markers",
    "section": "Dataset 1 - ZW//ZZ - The Yellow Tufted Honeyeater",
    "text": "Dataset 1 - ZW//ZZ - The Yellow Tufted Honeyeater\n\n\n\nThe Yellow Tufted Honeyeater\n\n\n\nLoad data\n\n#data(\"YTH\")\nload('./data/YTH.rda')\nYTH                   # Explore the dataset\n\n ********************\n *** DARTR OBJECT ***\n ********************\n\n ** 609 genotypes,  994 SNPs , size: 49.9 Mb\n\n    missing data: 139174 (=22.99 %) scored as NA\n\n ** Genetic data\n   @gen: list of 609 SNPbin\n   @ploidy: ploidy of each individual  (range: 2-2)\n\n ** Additional data\n   @ind.names:  609 individual labels\n   @loc.names:  994 locus labels\n   @loc.all:  994 allele labels\n   @position: integer storing positions of the SNPs [within 69 base sequence]\n   @pop: population of each individual (group size range: 12-516)\n   @other: a list containing: loc.metrics, ind.metrics, loc.metrics.flags, verbose, history \n    @other$ind.metrics: id, pop, sex, sex_original, service, plate_location \n    @other$loc.metrics: AlleleID, CloneID, AlleleSequence, TrimmedSequence, Chrom_Lichenostomus_HeHo_v1, ChromPos_Lichenostomus_HeHo_v1, AlnCnt_Lichenostomus_HeHo_v1, AlnEvalue_Lichenostomus_HeHo_v1, SNP, SnpPosition, CallRate, OneRatioRef, OneRatioSnp, FreqHomRef, FreqHomSnp, FreqHets, PICRef, PICSnp, AvgPIC, AvgCountRef, AvgCountSnp, RepAvg, clone, uid, rdepth, maf \n   @other$latlon[g]: no coordinates attached\n\nYTH@n.loc             # Number of SNPs\n\n[1] 994\n\nlength(YTH@ind.names) # Number of individuals\n\n[1] 609\n\n\n\n\nRun gl.filter.sexlinked\nThis function identifies sex-linked and autosomal loci present in a SNP dataset (i.e., genlight object) using individuals with known sex. It identifies five types of loci: w-linked or y-linked, sex-biased, z-linked or x-linked, gametologous and autosomal.\nThe genlight object must contain in gl@other$ind.metrics a column named “id”, and a column named “sex” in which individuals with known-sex are assigned ‘M’ for male, or ‘F’ for female. The function ignores individuals that are assigned anything else or nothing at all (unknown-sex).\n\n\n\nZW/ZZ sex chromosomes\n\n\n\n\n\n\n\n\nCaution\n\n\n\nNOTE\nSet ncores to more than 1 (default) if you have more than 50,000 SNPs, since it could actually slow down the analysis with smaller datasets.\n\n\n\nknitr::kable(head(YTH@other$ind.metrics)) # Check that ind.metrics has the necessary columns\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nid\npop\nsex\nsex_original\nservice\nplate_location\n\n\n\n\nANWC46839\nANWC46839\nMelanops\nF\nF\nDLich17-2918\n1-A1\n\n\nW49\nW49\nCassidix\nF\nF\nDLich17-2918\n1-A10\n\n\nW90\nW90\nCassidix\nF\nF\nDLich17-2918\n1-A12\n\n\nC25\nC25\nCassidix\nM\nM\nDLich17-2918\n1-A2\n\n\nC8\nC8\nCassidix\nM\nM\nDLich17-2918\n1-A3\n\n\nW70\nW70\nCassidix\nF\nF\nDLich17-2918\n1-A4\n\n\n\n\nres &lt;- dartR.sexlinked::gl.filter.sexlinked(gl = YTH, system = \"zw\")\n\nDetected 276 females and 333 males.\n\n\nStarting phase 1. May take a while...\n\n\nBuilding call rate plots.\n\n\n\n\n\nDone. Starting phase 2.\n\n\nBuilding heterozygosity plots.\n\n\n\n\n\n\n\n\nDone building heterozygosity plots.\n\n\n**FINISHED** Total of analyzed loci: 994.\nFound 506 sex-linked loci:\n   52 W-linked loci\n   273 sex-biased loci\n   165 Z-linked loci\n   16 ZW gametologs.\nAnd 488 autosomal loci.\n\n\n\n\n\n\n\n\n\n\n\nExercise\n\n\n\n\nHow many males and females does the dataset contain?\nHow many sex-linked loci were found?\n\n\nNow check the output:\n\nres$w.linked       # Notice that it says \"w-linked\"\n\n ********************\n *** DARTR OBJECT ***\n ********************\n\n ** 609 genotypes,  52 SNPs , size: 48.9 Mb\n\n    missing data: 17304 (=54.64 %) scored as NA\n\n ** Genetic data\n   @gen: list of 609 SNPbin\n   @ploidy: ploidy of each individual  (range: 2-2)\n\n ** Additional data\n   @ind.names:  609 individual labels\n   @loc.names:  52 locus labels\n   @loc.all:  52 allele labels\n   @position: integer storing positions of the SNPs [within 69 base sequence]\n   @pop: population of each individual (group size range: 12-516)\n   @other: a list containing: loc.metrics, ind.metrics, loc.metrics.flags, verbose, history \n    @other$ind.metrics: id, pop, sex, sex_original, service, plate_location \n    @other$loc.metrics: AlleleID, CloneID, AlleleSequence, TrimmedSequence, Chrom_Lichenostomus_HeHo_v1, ChromPos_Lichenostomus_HeHo_v1, AlnCnt_Lichenostomus_HeHo_v1, AlnEvalue_Lichenostomus_HeHo_v1, SNP, SnpPosition, CallRate, OneRatioRef, OneRatioSnp, FreqHomRef, FreqHomSnp, FreqHets, PICRef, PICSnp, AvgPIC, AvgCountRef, AvgCountSnp, RepAvg, clone, uid, rdepth, maf \n   @other$latlon[g]: no coordinates attached\n\nres$z.linked       # Notice that it says \"z-linked\"\n\n ********************\n *** DARTR OBJECT ***\n ********************\n\n ** 609 genotypes,  165 SNPs , size: 48.9 Mb\n\n    missing data: 2990 (=2.98 %) scored as NA\n\n ** Genetic data\n   @gen: list of 609 SNPbin\n   @ploidy: ploidy of each individual  (range: 2-2)\n\n ** Additional data\n   @ind.names:  609 individual labels\n   @loc.names:  165 locus labels\n   @loc.all:  165 allele labels\n   @position: integer storing positions of the SNPs [within 69 base sequence]\n   @pop: population of each individual (group size range: 12-516)\n   @other: a list containing: loc.metrics, ind.metrics, loc.metrics.flags, verbose, history \n    @other$ind.metrics: id, pop, sex, sex_original, service, plate_location \n    @other$loc.metrics: AlleleID, CloneID, AlleleSequence, TrimmedSequence, Chrom_Lichenostomus_HeHo_v1, ChromPos_Lichenostomus_HeHo_v1, AlnCnt_Lichenostomus_HeHo_v1, AlnEvalue_Lichenostomus_HeHo_v1, SNP, SnpPosition, CallRate, OneRatioRef, OneRatioSnp, FreqHomRef, FreqHomSnp, FreqHets, PICRef, PICSnp, AvgPIC, AvgCountRef, AvgCountSnp, RepAvg, clone, uid, rdepth, maf \n   @other$latlon[g]: no coordinates attached\n\nres$gametolog\n\n ********************\n *** DARTR OBJECT ***\n ********************\n\n ** 609 genotypes,  16 SNPs , size: 48.8 Mb\n\n    missing data: 580 (=5.95 %) scored as NA\n\n ** Genetic data\n   @gen: list of 609 SNPbin\n   @ploidy: ploidy of each individual  (range: 2-2)\n\n ** Additional data\n   @ind.names:  609 individual labels\n   @loc.names:  16 locus labels\n   @loc.all:  16 allele labels\n   @position: integer storing positions of the SNPs [within 69 base sequence]\n   @pop: population of each individual (group size range: 12-516)\n   @other: a list containing: loc.metrics, ind.metrics, loc.metrics.flags, verbose, history \n    @other$ind.metrics: id, pop, sex, sex_original, service, plate_location \n    @other$loc.metrics: AlleleID, CloneID, AlleleSequence, TrimmedSequence, Chrom_Lichenostomus_HeHo_v1, ChromPos_Lichenostomus_HeHo_v1, AlnCnt_Lichenostomus_HeHo_v1, AlnEvalue_Lichenostomus_HeHo_v1, SNP, SnpPosition, CallRate, OneRatioRef, OneRatioSnp, FreqHomRef, FreqHomSnp, FreqHets, PICRef, PICSnp, AvgPIC, AvgCountRef, AvgCountSnp, RepAvg, clone, uid, rdepth, maf \n   @other$latlon[g]: no coordinates attached\n\nres$sex.biased\n\n ********************\n *** DARTR OBJECT ***\n ********************\n\n ** 609 genotypes,  273 SNPs , size: 49.2 Mb\n\n    missing data: 46048 (=27.7 %) scored as NA\n\n ** Genetic data\n   @gen: list of 609 SNPbin\n   @ploidy: ploidy of each individual  (range: 2-2)\n\n ** Additional data\n   @ind.names:  609 individual labels\n   @loc.names:  273 locus labels\n   @loc.all:  273 allele labels\n   @position: integer storing positions of the SNPs [within 69 base sequence]\n   @pop: population of each individual (group size range: 12-516)\n   @other: a list containing: loc.metrics, ind.metrics, loc.metrics.flags, verbose, history \n    @other$ind.metrics: id, pop, sex, sex_original, service, plate_location \n    @other$loc.metrics: AlleleID, CloneID, AlleleSequence, TrimmedSequence, Chrom_Lichenostomus_HeHo_v1, ChromPos_Lichenostomus_HeHo_v1, AlnCnt_Lichenostomus_HeHo_v1, AlnEvalue_Lichenostomus_HeHo_v1, SNP, SnpPosition, CallRate, OneRatioRef, OneRatioSnp, FreqHomRef, FreqHomSnp, FreqHets, PICRef, PICSnp, AvgPIC, AvgCountRef, AvgCountSnp, RepAvg, clone, uid, rdepth, maf \n   @other$latlon[g]: no coordinates attached\n\nres$autosomal\n\n ********************\n *** DARTR OBJECT ***\n ********************\n\n ** 609 genotypes,  488 SNPs , size: 49.4 Mb\n\n    missing data: 72252 (=24.31 %) scored as NA\n\n ** Genetic data\n   @gen: list of 609 SNPbin\n   @ploidy: ploidy of each individual  (range: 2-2)\n\n ** Additional data\n   @ind.names:  609 individual labels\n   @loc.names:  488 locus labels\n   @loc.all:  488 allele labels\n   @position: integer storing positions of the SNPs [within 69 base sequence]\n   @pop: population of each individual (group size range: 12-516)\n   @other: a list containing: loc.metrics, ind.metrics, loc.metrics.flags, verbose, history \n    @other$ind.metrics: id, pop, sex, sex_original, service, plate_location \n    @other$loc.metrics: AlleleID, CloneID, AlleleSequence, TrimmedSequence, Chrom_Lichenostomus_HeHo_v1, ChromPos_Lichenostomus_HeHo_v1, AlnCnt_Lichenostomus_HeHo_v1, AlnEvalue_Lichenostomus_HeHo_v1, SNP, SnpPosition, CallRate, OneRatioRef, OneRatioSnp, FreqHomRef, FreqHomSnp, FreqHets, PICRef, PICSnp, AvgPIC, AvgCountRef, AvgCountSnp, RepAvg, clone, uid, rdepth, maf \n   @other$latlon[g]: no coordinates attached\n\nknitr::kable(head(res$results.table))  # The output table\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nindex\ncount.F.miss\ncount.M.miss\ncount.F.scored\ncount.M.scored\nratio\np.value\np.adjusted\nscoringRate.F\nscoringRate.M\nw.linked\nsex.biased\ncount.F.het\ncount.M.het\ncount.F.hom\ncount.M.hom\nstat\nstat.p.value\nstat.p.adjusted\nheterozygosity.F\nheterozygosity.M\nz.linked\nzw.gametolog\n\n\n\n\n27382025-26-T/C\n1\n61\n25\n215\n308\n3.4882302\n0.0000003\n0.0000016\n0.7789855\n0.9249249\nFALSE\nTRUE\n0\n73\n215\n235\nNA\nNA\nNA\n0.0000000\n0.2370130\nFALSE\nFALSE\n\n\n27338005-34-A/G\n2\n12\n13\n264\n320\n1.1186728\n0.8390268\n1.0000000\n0.9565217\n0.9609610\nFALSE\nFALSE\n0\n144\n264\n176\n0.0046581\n0.0000000\n0.0000000\n0.0000000\n0.4500000\nTRUE\nFALSE\n\n\n27331627-16-T/G\n3\n108\n159\n168\n174\n0.7039235\n0.0334301\n0.0860868\n0.6086957\n0.5225225\nFALSE\nFALSE\n0\n2\n168\n172\n0.5128690\n1.0000000\n1.0000000\n0.0000000\n0.0114943\nFALSE\nFALSE\n\n\n53948461-35-G/A\n4\n46\n64\n230\n269\n0.8408645\n0.4593502\n0.7791707\n0.8333333\n0.8078078\nFALSE\nFALSE\n29\n27\n201\n242\n1.2924846\n0.3950852\n0.9051780\n0.1260870\n0.1003717\nFALSE\nFALSE\n\n\n27360874-8-A/G\n5\n41\n63\n235\n270\n0.7480768\n0.1956613\n0.4120495\n0.8514493\n0.8108108\nFALSE\nFALSE\n25\n38\n210\n232\n0.7272744\n0.2807852\n0.7009152\n0.1063830\n0.1407407\nFALSE\nFALSE\n\n\n27377678-32-C/A\n6\n30\n33\n246\n300\n1.1084581\n0.7894511\n1.0000000\n0.8913043\n0.9009009\nFALSE\nFALSE\n3\n6\n243\n294\n0.6054740\n0.5234966\n1.0000000\n0.0121951\n0.0200000\nFALSE\nFALSE\n\n\n\n\n\nThe output consists of a genlight object for each type of loci, plus a results table.\n\n\nRun gl.infer.sex\nThis function uses the complete output of function gl.filter.sexlinked (list of 6 objects) to infer the sex of all individuals in the dataset. Specifically, the function uses 3 types of sex-linked loci (W-/Y-linked, Z-/X-linked, and gametologs), assigns a preliminary genetic sex for each type of sex-linked loci available, and outputs an agreed sex.\n\nsexID &lt;- dartR.sexlinked::gl.infer.sex(gl_sex_filtered = res, system = \"zw\", seed = 124)\n\n***FINISHED***\n\nknitr::kable(head(sexID))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nid\nw.linked.sex\n#missing\n#called\nz.linked.sex\n#Hom.z\n#Het.z\ngametolog.sex\n#Hom.g\n#Het.g\nagreed.sex\n\n\n\n\nANWC46839\nANWC46839\nF\n51\n1\nF\n1\n141\nF\n5\n0\nF\n\n\nW49\nW49\nF\n52\n0\nF\n2\n156\nF\n5\n0\nF\n\n\nW90\nW90\nF\n48\n4\nF\n0\n162\nF\n5\n0\nF\n\n\nC25\nC25\nM\n0\n52\nM\n52\n113\nM\n0\n5\nM\n\n\nC8\nC8\nM\n0\n52\nM\n48\n116\nM\n0\n5\nM\n\n\nW70\nW70\nF\n49\n3\nF\n0\n152\nF\n5\n0\nF\n\n\n\n\n\n\n\n\n\n\n\nWarning\n\n\n\nIMPORTANT We created this function with the explicit intent that a human checks the evidence for the agreed sex that do NOT agree for all types of sex-linked loci (denoted as ‘*M’ or ‘*F’). This human can then use their criterion to validate these assignments.\n\n\n\n\n\n\n\n\nExercise\n\n\n\n\nCan you find individuals for which the agreed sex is uncertain (i.e., has an asterisk “*”)?"
  },
  {
    "objectID": "session10.html#dataset-2---xxxy---the-leadbeaters-possum",
    "href": "session10.html#dataset-2---xxxy---the-leadbeaters-possum",
    "title": "10  Sex Linked Markers",
    "section": "Dataset 2 - XX/XY - The Leadbeater’s possum",
    "text": "Dataset 2 - XX/XY - The Leadbeater’s possum\n\n\n\nThe Leadbeater’s possum\n\n\n\nLoad data\n\n#data(\"LBP\")\nload('./data/LBP.rda')\nLBP                   # Explore the dataset\n\n ********************\n *** DARTR OBJECT ***\n ********************\n\n ** 376 genotypes,  1,000 SNPs , size: 5.2 Mb\n\n    missing data: 20670 (=5.5 %) scored as NA\n\n ** Genetic data\n   @gen: list of 376 SNPbin\n   @ploidy: ploidy of each individual  (range: 2-2)\n\n ** Additional data\n   @ind.names:  376 individual labels\n   @loc.names:  1000 locus labels\n   @loc.all:  1000 allele labels\n   @position: integer storing positions of the SNPs [within 69 base sequence]\n   @pop: population of each individual (group size range: 95-281)\n   @other: a list containing: loc.metrics, ind.metrics, loc.metrics.flags, verbose, history \n    @other$ind.metrics: id, sex, pop, Year.collected, service, plate_location \n    @other$loc.metrics: AlleleID, CloneID, AlleleSequence, TrimmedSequence, Chrom_Possum_v2, ChromPos_Possum_v2, AlnCnt_Possum_v2, AlnEvalue_Possum_v2, SNP, SnpPosition, CallRate, OneRatioRef, OneRatioSnp, FreqHomRef, FreqHomSnp, FreqHets, PICRef, PICSnp, AvgPIC, AvgCountRef, AvgCountSnp, RepAvg, clone, uid, rdepth, monomorphs, maf, OneRatio, PIC \n   @other$latlon[g]: no coordinates attached\n\nLBP@n.loc             # Number of SNPs\n\n[1] 1000\n\nlength(LBP@ind.names) # Number of individuals\n\n[1] 376\n\n\n\n\nRun gl.filter.sexlinked\nThis function identifies sex-linked and autosomal loci present in a SNP dataset (genlight object) using individuals with known sex. It identifies five types of loci: w-linked or y-linked, sex-biased, z-linked or x-linked, gametologous and autosomal.\nThe genlight object must contain in gl@other$ind.metrics a column named “id”, and a column named “sex” in which individuals with known-sex are assigned ‘M’ for male, or ‘F’ for female. The function ignores individuals that are assigned anything else or nothing at all (unknown-sex).\n\n\n\nXX/XY sex chromosomes\n\n\n\nknitr::kable(head(LBP@other$ind.metrics)) # Check that ind.metrics has the necessary columns\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nid\nsex\npop\nYear.collected\nservice\nplate_location\n\n\n\n\nY2\nY2\nF\nYellingbo\n1997\nDLpos17-2786\n1-A1\n\n\nY16\nY16\nM\nYellingbo\n2001\nDLpos17-2786\n1-A10\n\n\nY17\nY17\nF\nYellingbo\n1997\nDLpos17-2786\n1-A11\n\n\nY18\nY18\nF\nYellingbo\n1999\nDLpos17-2786\n1-A12\n\n\nY3\nY3\nF\nYellingbo\n1997\nDLpos17-2786\n1-A2\n\n\nY4\nY4\nM\nYellingbo\n1997\nDLpos17-2786\n1-A3\n\n\n\n\nres &lt;- dartR.sexlinked::gl.filter.sexlinked(gl = LBP, system = \"xy\")\n\nDetected 162 females and 211 males.\n\n\nStarting phase 1. May take a while...\n\n\nBuilding call rate plots.\n\n\n\n\n\nDone. Starting phase 2.\n\n\nBuilding heterozygosity plots.\n\n\n\n\n\n\n\n\nDone building heterozygosity plots.\n\n\n**FINISHED** Total of analyzed loci: 1000.\nFound 77 sex-linked loci:\n   1 Y-linked loci\n   9 sex-biased loci\n   66 X-linked loci\n   1 XY gametologs.\nAnd 923 autosomal loci.\n\n\n\n\n\n\n\n\n\n\n\nExercise\n\n\n\n\nHow many males and females does the dataset contain?\nHow many sex-linked loci were found?\n\n\nNow check the output:\n\nres$y.linked      # Notice that it says \"y-linked\"\n\n ********************\n *** DARTR OBJECT ***\n ********************\n\n ** 376 genotypes,  1 SNPs , size: 4.7 Mb\n\n    missing data: 164 (=43.62 %) scored as NA\n\n ** Genetic data\n   @gen: list of 376 SNPbin\n   @ploidy: ploidy of each individual  (range: 2-2)\n\n ** Additional data\n   @ind.names:  376 individual labels\n   @loc.names:  1 locus labels\n   @loc.all:  1 allele labels\n   @position: integer storing positions of the SNPs [within 69 base sequence]\n   @pop: population of each individual (group size range: 95-281)\n   @other: a list containing: loc.metrics, ind.metrics, loc.metrics.flags, verbose, history \n    @other$ind.metrics: id, sex, pop, Year.collected, service, plate_location \n    @other$loc.metrics: AlleleID, CloneID, AlleleSequence, TrimmedSequence, Chrom_Possum_v2, ChromPos_Possum_v2, AlnCnt_Possum_v2, AlnEvalue_Possum_v2, SNP, SnpPosition, CallRate, OneRatioRef, OneRatioSnp, FreqHomRef, FreqHomSnp, FreqHets, PICRef, PICSnp, AvgPIC, AvgCountRef, AvgCountSnp, RepAvg, clone, uid, rdepth, monomorphs, maf, OneRatio, PIC \n   @other$latlon[g]: no coordinates attached\n\nres$x.linked      # Notice that it says \"x-linked\"\n\n ********************\n *** DARTR OBJECT ***\n ********************\n\n ** 376 genotypes,  66 SNPs , size: 4.7 Mb\n\n    missing data: 827 (=3.33 %) scored as NA\n\n ** Genetic data\n   @gen: list of 376 SNPbin\n   @ploidy: ploidy of each individual  (range: 2-2)\n\n ** Additional data\n   @ind.names:  376 individual labels\n   @loc.names:  66 locus labels\n   @loc.all:  66 allele labels\n   @position: integer storing positions of the SNPs [within 69 base sequence]\n   @pop: population of each individual (group size range: 95-281)\n   @other: a list containing: loc.metrics, ind.metrics, loc.metrics.flags, verbose, history \n    @other$ind.metrics: id, sex, pop, Year.collected, service, plate_location \n    @other$loc.metrics: AlleleID, CloneID, AlleleSequence, TrimmedSequence, Chrom_Possum_v2, ChromPos_Possum_v2, AlnCnt_Possum_v2, AlnEvalue_Possum_v2, SNP, SnpPosition, CallRate, OneRatioRef, OneRatioSnp, FreqHomRef, FreqHomSnp, FreqHets, PICRef, PICSnp, AvgPIC, AvgCountRef, AvgCountSnp, RepAvg, clone, uid, rdepth, monomorphs, maf, OneRatio, PIC \n   @other$latlon[g]: no coordinates attached\n\nres$gametolog\n\n ********************\n *** DARTR OBJECT ***\n ********************\n\n ** 376 genotypes,  1 SNPs , size: 4.7 Mb\n\n    missing data: 0 (=0 %) scored as NA\n\n ** Genetic data\n   @gen: list of 376 SNPbin\n   @ploidy: ploidy of each individual  (range: 2-2)\n\n ** Additional data\n   @ind.names:  376 individual labels\n   @loc.names:  1 locus labels\n   @loc.all:  1 allele labels\n   @position: integer storing positions of the SNPs [within 69 base sequence]\n   @pop: population of each individual (group size range: 95-281)\n   @other: a list containing: loc.metrics, ind.metrics, loc.metrics.flags, verbose, history \n    @other$ind.metrics: id, sex, pop, Year.collected, service, plate_location \n    @other$loc.metrics: AlleleID, CloneID, AlleleSequence, TrimmedSequence, Chrom_Possum_v2, ChromPos_Possum_v2, AlnCnt_Possum_v2, AlnEvalue_Possum_v2, SNP, SnpPosition, CallRate, OneRatioRef, OneRatioSnp, FreqHomRef, FreqHomSnp, FreqHets, PICRef, PICSnp, AvgPIC, AvgCountRef, AvgCountSnp, RepAvg, clone, uid, rdepth, monomorphs, maf, OneRatio, PIC \n   @other$latlon[g]: no coordinates attached\n\nres$sex.biased\n\n ********************\n *** DARTR OBJECT ***\n ********************\n\n ** 376 genotypes,  9 SNPs , size: 4.7 Mb\n\n    missing data: 853 (=25.21 %) scored as NA\n\n ** Genetic data\n   @gen: list of 376 SNPbin\n   @ploidy: ploidy of each individual  (range: 2-2)\n\n ** Additional data\n   @ind.names:  376 individual labels\n   @loc.names:  9 locus labels\n   @loc.all:  9 allele labels\n   @position: integer storing positions of the SNPs [within 69 base sequence]\n   @pop: population of each individual (group size range: 95-281)\n   @other: a list containing: loc.metrics, ind.metrics, loc.metrics.flags, verbose, history \n    @other$ind.metrics: id, sex, pop, Year.collected, service, plate_location \n    @other$loc.metrics: AlleleID, CloneID, AlleleSequence, TrimmedSequence, Chrom_Possum_v2, ChromPos_Possum_v2, AlnCnt_Possum_v2, AlnEvalue_Possum_v2, SNP, SnpPosition, CallRate, OneRatioRef, OneRatioSnp, FreqHomRef, FreqHomSnp, FreqHets, PICRef, PICSnp, AvgPIC, AvgCountRef, AvgCountSnp, RepAvg, clone, uid, rdepth, monomorphs, maf, OneRatio, PIC \n   @other$latlon[g]: no coordinates attached\n\nres$autosomal\n\n ********************\n *** DARTR OBJECT ***\n ********************\n\n ** 376 genotypes,  923 SNPs , size: 5.2 Mb\n\n    missing data: 18826 (=5.42 %) scored as NA\n\n ** Genetic data\n   @gen: list of 376 SNPbin\n   @ploidy: ploidy of each individual  (range: 2-2)\n\n ** Additional data\n   @ind.names:  376 individual labels\n   @loc.names:  923 locus labels\n   @loc.all:  923 allele labels\n   @position: integer storing positions of the SNPs [within 69 base sequence]\n   @pop: population of each individual (group size range: 95-281)\n   @other: a list containing: loc.metrics, ind.metrics, loc.metrics.flags, verbose, history \n    @other$ind.metrics: id, sex, pop, Year.collected, service, plate_location \n    @other$loc.metrics: AlleleID, CloneID, AlleleSequence, TrimmedSequence, Chrom_Possum_v2, ChromPos_Possum_v2, AlnCnt_Possum_v2, AlnEvalue_Possum_v2, SNP, SnpPosition, CallRate, OneRatioRef, OneRatioSnp, FreqHomRef, FreqHomSnp, FreqHets, PICRef, PICSnp, AvgPIC, AvgCountRef, AvgCountSnp, RepAvg, clone, uid, rdepth, monomorphs, maf, OneRatio, PIC \n   @other$latlon[g]: no coordinates attached\n\nknitr::kable(head(res$results.table))  # The output table\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nindex\ncount.F.miss\ncount.M.miss\ncount.F.scored\ncount.M.scored\nratio\np.value\np.adjusted\nscoringRate.F\nscoringRate.M\ny.linked\nsex.biased\ncount.F.het\ncount.M.het\ncount.F.hom\ncount.M.hom\nstat\nstat.p.value\nstat.p.adjusted\nheterozygosity.F\nheterozygosity.M\nx.linked\nxy.gametolog\n\n\n\n\n28681424-34-G/T\n1\n0\n1\n162\n210\n1.2953770\n1.0000000\n1\n1.0000000\n0.9952607\nFALSE\nFALSE\n1\n0\n161\n210\n1.303397\n1.0000000\n1.0000000\n0.0061728\n0.0000000\nFALSE\nFALSE\n\n\n28678947-56-C/T\n2\n12\n8\n150\n203\n2.0261283\n0.1638428\n1\n0.9259259\n0.9620853\nFALSE\nFALSE\n9\n7\n141\n196\n1.784196\n0.3044519\n0.9598961\n0.0600000\n0.0344828\nFALSE\nFALSE\n\n\n28680567-32-T/G\n3\n12\n12\n150\n199\n1.3256351\n0.5289429\n1\n0.9259259\n0.9431280\nFALSE\nFALSE\n9\n11\n141\n188\n1.090635\n1.0000000\n1.0000000\n0.0600000\n0.0552764\nFALSE\nFALSE\n\n\n28688313-7-C/G\n4\n0\n0\n162\n211\n1.3015303\n1.0000000\n1\n1.0000000\n1.0000000\nFALSE\nFALSE\n6\n0\n156\n211\n8.076192\n0.0459068\n0.3917911\n0.0370370\n0.0000000\nFALSE\nFALSE\n\n\n28681679-51-C/T\n5\n22\n30\n140\n181\n0.9482168\n0.8814171\n1\n0.8641975\n0.8578199\nFALSE\nFALSE\n1\n1\n139\n180\n1.293900\n1.0000000\n1.0000000\n0.0071429\n0.0055249\nFALSE\nFALSE\n\n\n28681994-14-G/A\n6\n0\n1\n162\n210\n1.2953770\n1.0000000\n1\n1.0000000\n0.9952607\nFALSE\nFALSE\n18\n19\n144\n191\n1.255791\n0.6007790\n1.0000000\n0.1111111\n0.0904762\nFALSE\nFALSE\n\n\n\n\n\nThe output consists of a genlight object for each type of loci, plus a results table.\n\n\nRun gl.infer.sex\nThis function uses the output of function gl.filter.sexlinked (list of 6 objects) to infer the sex of all individuals in the dataset. It uses 3 types of sex-linked loci (W-/Y-linked, Z-/X-linked, and gametologs), assigns a preliminary genetic sex for each type of sex-linked loci available, and outputs an agreed sex.\n\nsexID &lt;- dartR.sexlinked::gl.infer.sex(gl_sex_filtered = res, system = \"xy\", seed = 124)\n\nNot enough gametologs (need at least 5). Assigning NA...\n\n\n***FINISHED***\n\nknitr::kable(head(sexID))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nid\ny.linked.sex\n#called\n#missing\nx.linked.sex\n#Het.x\n#Hom.x\ngametolog.sex\n#Het.g\n#Hom.g\nagreed.sex\n\n\n\n\nY2\nY2\nF\n0\n1\nF\n19\n47\nNA\nNA\nNA\nF\n\n\nY16\nY16\nM\n1\n0\nM\n2\n56\nNA\nNA\nNA\nM\n\n\nY17\nY17\nF\n0\n1\nF\n27\n37\nNA\nNA\nNA\nF\n\n\nY18\nY18\nF\n0\n1\nM\n4\n62\nNA\nNA\nNA\n*F\n\n\nY3\nY3\nM\n1\n0\nM\n3\n63\nNA\nNA\nNA\nM\n\n\nY4\nY4\nM\n1\n0\nM\n1\n63\nNA\nNA\nNA\nM\n\n\n\n\n\nWhat did the function mention about gametologs? How did that impact the results table? How many types of sex-linked loci were used to infer an agreed sex?\n\n\n\n\n\n\nExercise\n\n\n\n\nCan you find individuals for which the agreed sex is uncertain (i.e., has an asterisk “*”)?"
  },
  {
    "objectID": "session10.html#exercises",
    "href": "session10.html#exercises",
    "title": "10  Sex Linked Markers",
    "section": "EXERCISES",
    "text": "EXERCISES\n\n\n\n\n\n\nExercise\n\n\n\n\nImagine you are analyzing the genetic data of a population and you want to look at its genetic structure and genetic diversity. You get to work by filtering your beautiful set of SNPs. Because you are a rigorous, you want to test whether using function filter.sex.linked to properly filter out sex-linked loci changes the results of the populations analyses. So you: (1) process your SNP dataset by applying standard filters and run analyses, and (2) process the dataset by filtering out sex-linked loci first, applying standard filters second, and then run analyses.\nChoose one of the following datasets (or your own data) and report:\n\nHow many sex-linked markers are present?\nHow many individuals had a wrong sexID?\nDo you see any changes in your PCA/structure analyses when you filtered out sex-linked markers versus when you did not?\nDo you see any differences in genetic diversity and fixation indices when you filtered out sex-linked markers versus when you did not?"
  },
  {
    "objectID": "session10.html#exercise-data-1---your-own-data",
    "href": "session10.html#exercise-data-1---your-own-data",
    "title": "10  Sex Linked Markers",
    "section": "Exercise data 1 - Your own data",
    "text": "Exercise data 1 - Your own data\n\nHINT\nYou can have a look at the exercise data below for inspiration.\n\n\n\n\n\n\n\nExercise - Your own data\n\n\n\n\nNumber of sex-linked markers?\nIndividuals with wrong sexID?\nChanges in PCA before and after removing the SLM?\nDifferences in genetic diversity and fixation indices between autosomal and SLM?"
  },
  {
    "objectID": "session10.html#exercise-data-2---the-eastern-yellow-robin",
    "href": "session10.html#exercise-data-2---the-eastern-yellow-robin",
    "title": "10  Sex Linked Markers",
    "section": "Exercise data 2 - The Eastern Yellow Robin",
    "text": "Exercise data 2 - The Eastern Yellow Robin\nData from Robledo-Ruiz et al. 2023.\n\n\n\nThe Eastern Yellow Robin\n\n\n\nLoad data\n\ndata(\"EYR\")\n\nEYR@n.loc\ntable(EYR@pop)\ntable(EYR@other$ind.metrics$pop)\ntable(EYR@other$ind.metrics$sex, useNA = \"ifany\")\n\n[1] 1000\n\n    Crusoe Muckleford      Timor     Wombat \n       238        421         52         71 \n\n    Crusoe Muckleford      Timor     Wombat \n       238        421         52         71 \n\n      F   M \n  1 352 429 \n\n\n\n\n1. Number of sex-linked markers?\n\nres &lt;- dartR.sexlinked::filter.sex.linked(gl = EYR, system = \"zw\")\n\nDetected 352 females and 429 males.\n\n\nStarting phase 1. May take a while...\n\n\nBuilding call rate plots.\n\n\n\n\n\nDone. Starting phase 2.\n\n\nBuilding heterozygosity plots.\n\n\n\n\n\n\n\n\nDone building heterozygosity plots.\n\n\n**FINISHED** Total of analyzed loci: 1000.\nFound 150 sex-linked loci:\n   16 W-linked loci\n   82 sex-biased loci\n   32 Z-linked loci\n   20 ZW gametologs.\nAnd 850 autosomal loci.\n\n\n\n\n\n\n\n2. Individuals with wrong sexID?\n\nsexID &lt;- dartR.sexlinked::infer.sex(gl_sex_filtered = res, system = \"zw\",\n    seed = 124)\n\n***FINISHED***\n\nknitr::kable(head(sexID))\n\nsum(EYR$other$ind.metrics$sex != sexID$agreed.sex, na.rm = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nid\nw.linked.sex\n#missing\n#called\nz.linked.sex\n#Hom.z\n#Het.z\ngametolog.sex\n#Hom.g\n#Het.g\nagreed.sex\n\n\n\n\n024-96401\n024-96401\nM\n0\n16\nM\n7\n25\nM\n0\n5\nM\n\n\n024-96401b\n024-96401b\nM\n0\n16\nM\n9\n21\nM\n0\n5\nM\n\n\n024-96402\n024-96402\nF\n15\n1\nF\n0\n32\nF\n5\n0\nF\n\n\n024-96403\n024-96403\nM\n1\n15\nM\n11\n21\nM\n0\n5\nM\n\n\n024-96404\n024-96404\nM\n0\n16\nM\n12\n20\nM\n0\n5\nM\n\n\n024-96405\n024-96405\nM\n0\n16\nM\n11\n21\nM\n0\n5\nM\n\n\n\n\n\n[1] 55\n\n\n\n\n\n\n\n\nExercise\n\n\n\n\nCan you tell which misidentified sexes are due to uncertain genetic sex (indicated with *)?\nHINT Try using grep(pattern = \"\\\\*\", x = sexID$agreed.sex)\n\n\n\nProcessing SNPs with two filtering regimes\n\nFiltering SNPs only with standard filters (sloppy)\n\n# Filter for read depth\ndartR.base::gl.report.rdepth(EYR)  # This is the initial dataset\n\nStarting :: \n Starting dartR.base \n Starting gl.report.rdepth \n  Processing genlight object with SNP data\n  Reporting Read Depth by Locus\n  No. of loci = 1000 \n  No. of individuals = 782 \n    Minimum      :  2.6 \n    1st quartile :  4.3 \n    Median       :  5.6 \n    Mean         :  5.9649 \n    3r quartile  :  7.325 \n    Maximum      :  13.2 \n    Missing Rate Overall:  0.19 \n\n\n\n\n\n   Quantile Threshold Retained Percent Filtered Percent\n1      100%      13.2        1     0.1      999    99.9\n2       95%       9.9       51     5.1      949    94.9\n3       90%       9.0      105    10.5      895    89.5\n4       85%       8.3      151    15.1      849    84.9\n5       80%       7.8      208    20.8      792    79.2\n6       75%       7.3      258    25.8      742    74.2\n7       70%       6.9      304    30.4      696    69.6\n8       65%       6.5      354    35.4      646    64.6\n9       60%       6.2      404    40.4      596    59.6\n10      55%       5.9      451    45.1      549    54.9\n11      50%       5.6      504    50.4      496    49.6\n12      45%       5.3      563    56.3      437    43.7\n13      40%       5.1      602    60.2      398    39.8\n14      35%       4.8      659    65.9      341    34.1\n15      30%       4.6      702    70.2      298    29.8\n16      25%       4.3      752    75.2      248    24.8\n17      20%       4.0      823    82.3      177    17.7\n18      15%       3.9      852    85.2      148    14.8\n19      10%       3.6      906    90.6       94     9.4\n20       5%       3.3      956    95.6       44     4.4\n21       0%       2.6     1000   100.0        0     0.0\nCompleted: :: \n Completed: dartR.base \n Completed: gl.report.rdepth \n\nEYR.sloppy &lt;- dartR.base::gl.filter.rdepth(EYR, lower = 3, upper = 11, verbose = 0)\n\n\n\n# Filter for loci call rate\ndartR.base::gl.report.callrate(EYR.sloppy, method = \"loc\")\n\nStarting :: \n Starting dartR.base \n Starting gl.report.callrate \n  Processing genlight object with SNP data\n  Reporting Call Rate by Locus\n  No. of loci = 958 \n  No. of individuals = 782 \n    Minimum      :  0.20844 \n    1st quartile :  0.7202688 \n    Median       :  0.895141 \n    Mean         :  0.8131871 \n    3r quartile  :  0.950128 \n    Maximum      :  0.988491 \n    Missing Rate Overall:  0.1868 \n\n\n\n\n\nCompleted: :: \n Completed: dartR.base \n Completed: gl.report.callrate \n\nEYR.sloppy &lt;- dartR.base::gl.filter.callrate(EYR.sloppy, method = \"loc\",\n    threshold = 0.75, verbose = 0, recalc = TRUE)\n\n# Filter for individual call rate\ndartR.base::gl.report.callrate(EYR.sloppy, method = \"ind\")\n\nStarting :: \n Starting dartR.base \n Starting gl.report.callrate \n  Processing genlight object with SNP data\n\n  Reporting Call Rate by Individual\n  No. of loci = 703 \n  No. of individuals = 782 \n    Minimum      :  0.03556188 \n    1st quartile :  0.9174964 \n    Median       :  0.9416785 \n    Mean         :  0.9108097 \n    3r quartile  :  0.9573257 \n    Maximum      :  0.9829303 \n    Missing Rate Overall:  0.0892 \n\nListing 4 populations and their average CallRates\n  Monitor again after filtering\n  Population CallRate   N\n1     Crusoe   0.9027 238\n2 Muckleford   0.9073 421\n3      Timor   0.9402  52\n4     Wombat   0.9371  71\n\nListing 20 individuals with the lowest CallRates\n  Use this list to see which individuals will be lost on filtering by individual\n  Set ind.to.list parameter to see more individuals\n   Individual   CallRate\n1    M18.29.1 0.03556188\n2    M18.18.1 0.03982930\n3    M18.47.2 0.06970128\n4    C18.16.1 0.07112376\n5   027-34168 0.07681366\n6    C18.15.2 0.08534851\n7    C18.21.2 0.08677098\n8    M18.47.3 0.14224751\n9    M18.35.2 0.17211949\n10   M18.20.3 0.24039829\n11   M20.70.2 0.39687055\n12   C18.28.1 0.39971550\n13   C18.17.2 0.46088193\n14  027-34065 0.50640114\n15   C18.14.1 0.50640114\n16   M20.70.3 0.50782361\n17  M20.110.1 0.52347084\n18   M19.12.1 0.53342817\n19    M19.8.1 0.54907539\n20   M20.64.3 0.56045519\n\n)\n\n\n\n\n\nCompleted: :: \n Completed: dartR.base \n Completed: gl.report.callrate \n\nEYR.sloppy &lt;- dartR.base::gl.filter.callrate(EYR.sloppy, method = \"ind\",\n    threshold = 0.65, verbose = 0, recalc = TRUE)\n# Filter for MAC (= 3)\ndartR.base::gl.report.maf(EYR.sloppy)\n\nStarting :: \n Starting dartR.base \n Starting gl.report.maf \n  Processing genlight object with SNP data\nStarting :: \n\n Starting dartR.base \n\n Starting gl.report.maf \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population Crusoe \n  No. of loci = 670 \n  No. of individuals = 231 \n    Minimum      :  0.0022 \n    1st quantile :  0.064825 \n    Median       :  0.1582 \n    Mean         :  0.1793525 \n    3r quantile  :  0.267475 \n    Maximum      :  0.4975 \n    Missing Rate Overall:  0.08 \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population Muckleford \n  No. of loci = 683 \n  No. of individuals = 401 \n    Minimum      :  0.0013 \n    1st quantile :  0.05875 \n    Median       :  0.1404 \n    Mean         :  0.172949 \n    3r quantile  :  0.2617 \n    Maximum      :  0.4985 \n    Missing Rate Overall:  0.07 \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population Timor \n  No. of loci = 589 \n  No. of individuals = 52 \n    Minimum      :  0.0096 \n    1st quantile :  0.0673 \n    Median       :  0.1667 \n    Mean         :  0.1914129 \n    3r quantile  :  0.2872 \n    Maximum      :  0.5 \n    Missing Rate Overall:  0.06 \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population Wombat \n  No. of loci = 627 \n  No. of individuals = 71 \n    Minimum      :  0.007 \n    1st quantile :  0.06385 \n    Median       :  0.1449 \n    Mean         :  0.1746703 \n    3r quantile  :  0.2542 \n    Maximum      :  0.5 \n    Missing Rate Overall:  0.06 \n\n  Reporting Minor Allele Frequency (MAF) by Locus OVERALL\n  No. of loci = 703 \n  No. of individuals = 755 \n    Minimum      :  3e-04 \n    1st quantile :  0.0627 \n    Median       :  0.13435 \n    Mean         :  0.1696497 \n    3r quantile  :  0.246025 \n    Maximum      :  0.4991 \n    Missing Rate Overall:  0.07 \n\n\n\n\n\n   Quantile Threshold Retained Percent Filtered Percent\n1      100%    0.4991        1     0.1      699    99.9\n2       95%    0.4343       36     5.1      664    94.9\n3       90%    0.3807       71    10.1      629    89.9\n4       85%    0.3331      105    15.0      595    85.0\n5       80%    0.2858      141    20.1      559    79.9\n6       75%    0.2460      176    25.1      524    74.9\n7       70%    0.2233      210    30.0      490    70.0\n8       65%    0.2003      246    35.1      454    64.9\n9       60%    0.1797      280    40.0      420    60.0\n10      55%    0.1562      315    45.0      385    55.0\n11      50%    0.1341      352    50.3      348    49.7\n12      45%    0.1214      386    55.1      314    44.9\n13      40%    0.1032      421    60.1      279    39.9\n14      35%    0.0904      455    65.0      245    35.0\n15      30%    0.0742      490    70.0      210    30.0\n16      25%    0.0627      526    75.1      174    24.9\n17      20%    0.0476      561    80.1      139    19.9\n18      15%    0.0359      595    85.0      105    15.0\n19      10%    0.0224      631    90.1       69     9.9\n20       5%    0.0059      666    95.1       34     4.9\n21       0%    0.0003      700   100.0        0     0.0\nCompleted: :: \n Completed: dartR.base \n Completed: gl.report.maf \n\nEYR.sloppy &lt;- dartR.base::gl.filter.maf(EYR.sloppy, threshold = 3, verbose = 0,\n    recalc = TRUE)\n\nStarting gl.select.colors \n  Warning: Number of required colors not specified, set to 9\n  Library: RColorBrewer\n  Palette: brewer.pal\n  Showing and returning 2 of 9 colors for library RColorBrewer : palette Blues \n\n\n\n\n\nCompleted: gl.select.colors \n\n\n\n\nFiltering SNPs with filter.sex.linked and standard filters (correct)\n\n# Filter for sex-linked loci\ncorrect &lt;- dartR.sexlinked::filter.sex.linked(EYR, system = \"zw\")  # This is the initial dataset\n\n\n\n\n\n\n\n\n\n\n\n\n# We will use correct$autosomal for the next filters\n\n# Filter for read depth\ndartR.base::gl.report.rdepth(correct$autosomal)  # This is the filtered dataset\n\nStarting :: \n Starting dartR.base \n Starting gl.report.rdepth \n  Processing genlight object with SNP data\n  Reporting Read Depth by Locus\n  No. of loci = 850 \n  No. of individuals = 782 \n    Minimum      :  2.6 \n    1st quartile :  4.3 \n    Median       :  5.6 \n    Mean         :  6.008941 \n    3r quartile  :  7.4 \n    Maximum      :  13.2 \n    Missing Rate Overall:  0.18 \n\n\n\n\n\n   Quantile Threshold Retained Percent Filtered Percent\n1      100%      13.2        1     0.1      849    99.9\n2       95%       9.9       45     5.3      805    94.7\n3       90%       9.1       88    10.4      762    89.6\n4       85%       8.4      129    15.2      721    84.8\n5       80%       7.9      173    20.4      677    79.6\n6       75%       7.4      220    25.9      630    74.1\n7       70%       6.9      264    31.1      586    68.9\n8       65%       6.5      305    35.9      545    64.1\n9       60%       6.2      350    41.2      500    58.8\n10      55%       5.9      391    46.0      459    54.0\n11      50%       5.6      435    51.2      415    48.8\n12      45%       5.4      472    55.5      378    44.5\n13      40%       5.1      519    61.1      331    38.9\n14      35%       4.9      555    65.3      295    34.7\n15      30%       4.6      603    70.9      247    29.1\n16      25%       4.3      645    75.9      205    24.1\n17      20%       4.0      705    82.9      145    17.1\n18      15%       3.9      730    85.9      120    14.1\n19      10%       3.6      774    91.1       76     8.9\n20       5%       3.3      812    95.5       38     4.5\n21       0%       2.6      850   100.0        0     0.0\nCompleted: :: \n Completed: dartR.base \n Completed: gl.report.rdepth \n\nEYR.correct &lt;- dartR.base::gl.filter.rdepth(correct$autosomal, lower = 3,\n    upper = 11, verbose = 0)\n\n\n\n# Filter for loci call rate\ndartR.base::gl.report.callrate(EYR.correct, method = \"loc\")\n\nStarting :: \n Starting dartR.base \n Starting gl.report.callrate \n  Processing genlight object with SNP data\n  Reporting Call Rate by Locus\n  No. of loci = 811 \n  No. of individuals = 782 \n    Minimum      :  0.20844 \n    1st quartile :  0.7436065 \n    Median       :  0.900256 \n    Mean         :  0.8192658 \n    3r quartile  :  0.951407 \n    Maximum      :  0.988491 \n    Missing Rate Overall:  0.1807 \n\n\n\n\n\nCompleted: :: \n Completed: dartR.base \n Completed: gl.report.callrate \n\nEYR.correct &lt;- dartR.base::gl.filter.callrate(EYR.correct, method = \"loc\",\n    threshold = 0.75, verbose = 0, recalc = TRUE)\n\n# Filter for individual call rate\ndartR.base::gl.report.callrate(EYR.correct, method = \"ind\")\n\nStarting :: \n Starting dartR.base \n Starting gl.report.callrate \n  Processing genlight object with SNP data\n\n  Reporting Call Rate by Individual\n  No. of loci = 605 \n  No. of individuals = 782 \n    Minimum      :  0.03801653 \n    1st quartile :  0.9173554 \n    Median       :  0.9438017 \n    Mean         :  0.9120479 \n    3r quartile  :  0.9586777 \n    Maximum      :  0.9818182 \n    Missing Rate Overall:  0.088 \n\nListing 4 populations and their average CallRates\n  Monitor again after filtering\n  Population CallRate   N\n1     Crusoe   0.9037 238\n2 Muckleford   0.9090 421\n3      Timor   0.9418  52\n4     Wombat   0.9365  71\n\nListing 20 individuals with the lowest CallRates\n  Use this list to see which individuals will be lost on filtering by individual\n  Set ind.to.list parameter to see more individuals\n   Individual   CallRate\n1    M18.29.1 0.03801653\n2    M18.18.1 0.04462810\n3    M18.47.2 0.06776860\n4    C18.16.1 0.07438017\n5   027-34168 0.08760331\n6    C18.15.2 0.08760331\n7    C18.21.2 0.08760331\n8    M18.47.3 0.13719008\n9    M18.35.2 0.18016529\n10   M18.20.3 0.24132231\n11   C18.28.1 0.41487603\n12   M20.70.2 0.42644628\n13   C18.17.2 0.44628099\n14  027-34065 0.49586777\n15   C18.14.1 0.49752066\n16  M20.110.1 0.53057851\n17   M20.70.3 0.53553719\n18   M19.12.1 0.54380165\n19    M19.8.1 0.56694215\n20   M19.33.2 0.57851240\n\n)\n\n\n\n\n\nCompleted: :: \n Completed: dartR.base \n Completed: gl.report.callrate \n\nEYR.correct &lt;- dartR.base::gl.filter.callrate(EYR.correct, method = \"ind\",\n    threshold = 0.65, verbose = 0, recalc = TRUE)\n# Filter for MAC (= 3)\ndartR.base::gl.report.maf(EYR.correct)\n\nStarting :: \n Starting dartR.base \n Starting gl.report.maf \n  Processing genlight object with SNP data\nStarting :: \n\n Starting dartR.base \n\n Starting gl.report.maf \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population Crusoe \n  No. of loci = 573 \n  No. of individuals = 231 \n    Minimum      :  0.0022 \n    1st quantile :  0.06 \n    Median       :  0.1488 \n    Mean         :  0.1741178 \n    3r quantile  :  0.2646 \n    Maximum      :  0.4975 \n    Missing Rate Overall:  0.08 \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population Muckleford \n  No. of loci = 585 \n  No. of individuals = 401 \n    Minimum      :  0.0013 \n    1st quantile :  0.055 \n    Median       :  0.129 \n    Mean         :  0.163993 \n    3r quantile  :  0.2474 \n    Maximum      :  0.4985 \n    Missing Rate Overall:  0.07 \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population Timor \n  No. of loci = 504 \n  No. of individuals = 52 \n    Minimum      :  0.0096 \n    1st quantile :  0.068275 \n    Median       :  0.1635 \n    Mean         :  0.1898613 \n    3r quantile  :  0.286075 \n    Maximum      :  0.5 \n    Missing Rate Overall:  0.06 \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population Wombat \n  No. of loci = 536 \n  No. of individuals = 71 \n    Minimum      :  0.007 \n    1st quantile :  0.062475 \n    Median       :  0.13805 \n    Mean         :  0.1706063 \n    3r quantile  :  0.2509 \n    Maximum      :  0.5 \n    Missing Rate Overall:  0.06 \n\n  Reporting Minor Allele Frequency (MAF) by Locus OVERALL\n  No. of loci = 605 \n  No. of individuals = 755 \n    Minimum      :  3e-04 \n    1st quantile :  0.058025 \n    Median       :  0.1306 \n    Mean         :  0.1628656 \n    3r quantile  :  0.23785 \n    Maximum      :  0.4991 \n    Missing Rate Overall:  0.07 \n\n\n\n\n\n   Quantile Threshold Retained Percent Filtered Percent\n1      100%    0.4991        1     0.2      601    99.8\n2       95%    0.4367       31     5.1      571    94.9\n3       90%    0.3771       61    10.1      541    89.9\n4       85%    0.3250       91    15.1      511    84.9\n5       80%    0.2747      121    20.1      481    79.9\n6       75%    0.2387      151    25.1      451    74.9\n7       70%    0.2132      181    30.1      421    69.9\n8       65%    0.1916      211    35.0      391    65.0\n9       60%    0.1720      241    40.0      361    60.0\n10      55%    0.1486      271    45.0      331    55.0\n11      50%    0.1306      302    50.2      300    49.8\n12      45%    0.1118      332    55.1      270    44.9\n13      40%    0.0975      362    60.1      240    39.9\n14      35%    0.0808      392    65.1      210    34.9\n15      30%    0.0700      422    70.1      180    29.9\n16      25%    0.0578      452    75.1      150    24.9\n17      20%    0.0445      482    80.1      120    19.9\n18      15%    0.0300      512    85.0       90    15.0\n19      10%    0.0174      542    90.0       60    10.0\n20       5%    0.0046      572    95.0       30     5.0\n21       0%    0.0003      602   100.0        0     0.0\nCompleted: :: \n Completed: dartR.base \n Completed: gl.report.maf \n\nEYR.correct &lt;- dartR.base::gl.filter.maf(EYR.correct, threshold = 3, verbose = 0,\n    recalc = TRUE)\n\nStarting gl.select.colors \n  Warning: Number of required colors not specified, set to 9\n  Library: RColorBrewer\n  Palette: brewer.pal\n  Showing and returning 2 of 9 colors for library RColorBrewer : palette Blues \n\n\n\n\n\nCompleted: gl.select.colors \n\n\n\n\n\n\n3. Changes in PCA before and after removing the SLM?\n\nPCA on sloppy dataset (only standard filters)\n\nPCA.sloppy &lt;- dartR.base::gl.pcoa(EYR.sloppy, verbose = 0)\ndartR.base::gl.pcoa.plot(PCA.sloppy, EYR.sloppy, xaxis = 1, yaxis = 2)\ndartR.base::gl.pcoa.plot(PCA.sloppy, EYR.sloppy, xaxis = 2, yaxis = 3)\n\nStarting gl.colors \nSelected color type 2 \nCompleted: gl.colors \nStarting :: \n Starting dartR.base \n Starting gl.pcoa.plot \n  Processing an ordination file (glPca)\n  Processing genlight object with SNP data\nPackage directlabels  needed for this function to work. Please install it.\n[1] -1\nStarting :: \n Starting dartR.base \n Starting gl.pcoa.plot \n  Processing an ordination file (glPca)\n  Processing genlight object with SNP data\nPackage directlabels  needed for this function to work. Please install it.\n[1] -1\n\n\n\n\nPCA on correct dataset (filter.sex.linked and standard filters)\n\nPCA.correct &lt;- dartR.base::gl.pcoa(EYR.correct, verbose = 0)\ndartR.base::gl.pcoa.plot(PCA.correct, EYR.correct, xaxis = 1, yaxis = 2)\ndartR.base::gl.pcoa.plot(PCA.correct, EYR.correct, xaxis = 2, yaxis = 3)\n\nStarting gl.colors \nSelected color type 2 \nCompleted: gl.colors \nStarting :: \n Starting dartR.base \n Starting gl.pcoa.plot \n  Processing an ordination file (glPca)\n  Processing genlight object with SNP data\nPackage directlabels  needed for this function to work. Please install it.\n[1] -1\nStarting :: \n Starting dartR.base \n Starting gl.pcoa.plot \n  Processing an ordination file (glPca)\n  Processing genlight object with SNP data\nPackage directlabels  needed for this function to work. Please install it.\n[1] -1\n\n\n\n\n\n4. Differences in genetic diversity and fixation indices between autosomal and SLM?\n\n# Basic stats\nbasic.sloppy &lt;- dartR.base::utils.basic.stats(EYR.sloppy)\nbasic.correct &lt;- dartR.base::utils.basic.stats(EYR.correct)\nbasic.sloppy$overall\n\n     Ho      Hs      Ht     Dst     Htp    Dstp     Fst    Fstp     Fis    Dest \n 0.1603  0.2376  0.2464  0.0087  0.2487  0.0148  0.0355  0.0596  0.3256  0.0259 \nGst_max   Gst_H \n 0.7141  0.0834 \n\nbasic.correct$overall\n\n     Ho      Hs      Ht     Dst     Htp    Dstp     Fst    Fstp     Fis    Dest \n 0.1579  0.2302  0.2375  0.0073  0.2398  0.0128  0.0307  0.0532  0.3139  0.0221 \nGst_max   Gst_H \n 0.7229  0.0737 \n\n# Genetic diversity per pop\ndivers.sloppy &lt;- dartR.base::gl.report.diversity(EYR.sloppy, pbar = FALSE,\n    table = FALSE, verbose = 0)\n\n  Processing genlight object with SNP data\n\n\n\n\ndivers.correct &lt;- dartR.base::gl.report.diversity(EYR.correct, pbar = FALSE,\n    table = FALSE, verbose = 0)\n\n  Processing genlight object with SNP data\n\n\n\n\ndivers.sloppy$one_H_alpha\n\n    Crusoe Muckleford      Timor     Wombat \n 0.3884366  0.3844244  0.3519361  0.3591638 \n\ndivers.correct$one_H_alpha\n\n    Crusoe Muckleford      Timor     Wombat \n 0.3766483  0.3689045  0.3468530  0.3503540 \n\ndivers.sloppy$one_H_beta\n\n                Crusoe Muckleford      Timor     Wombat\nCrusoe              NA 0.02660219 0.09367676 0.06237102\nMuckleford 0.006274769         NA 0.07326488 0.06577359\nTimor      0.022518949 0.02452504         NA 0.08763552\nWombat     0.018905085 0.02091118 0.03715536         NA\n\ndivers.correct$one_H_beta\n\n                Crusoe Muckleford      Timor     Wombat\nCrusoe              NA 0.02545762 0.08568969 0.05988791\nMuckleford 0.005778848         NA 0.06967786 0.06243346\nTimor      0.016804630 0.02067653         NA 0.08306746\nWombat     0.015054123 0.01892602 0.02995180         NA\n\n# Fixation indices\ndartR.base::gl.fst.pop(EYR.sloppy, verbose = 0)\n\n               Crusoe Muckleford      Timor Wombat\nCrusoe             NA         NA         NA     NA\nMuckleford 0.03160198         NA         NA     NA\nTimor      0.04023766 0.05408752         NA     NA\nWombat     0.05466955 0.02407235 0.08452847     NA\n\ndartR.base::gl.fst.pop(EYR.correct, verbose = 0)\n\n               Crusoe Muckleford      Timor Wombat\nCrusoe             NA         NA         NA     NA\nMuckleford 0.02777612         NA         NA     NA\nTimor      0.04008148 0.04786375         NA     NA\nWombat     0.04413257 0.02208816 0.07111737     NA\n\ndartR.base::gl.report.fstat(EYR.sloppy, verbose = 0)\n\n   Your plot was not shown in full because your 'Plots' pane\n    is too small. Increase the size of the 'Plots' pane and run the\n    function again. Alternatively, use the parameter 'plot.file' to\n    save the plot to a file.\n\n\n$Stat_matrices\n$Stat_matrices$Fst\n           Crusoe Muckleford  Timor Wombat\nCrusoe         NA     0.0148 0.0171 0.0255\nMuckleford 0.0148         NA 0.0249 0.0096\nTimor      0.0171     0.0249     NA 0.0387\nWombat     0.0255     0.0096 0.0387     NA\n\n$Stat_matrices$Fstp\n           Crusoe Muckleford  Timor Wombat\nCrusoe         NA     0.0356 0.0545 0.0669\nMuckleford 0.0356         NA 0.0681 0.0337\nTimor      0.0545     0.0681     NA 0.1046\nWombat     0.0669     0.0337 0.1046     NA\n\n$Stat_matrices$Dest\n           Crusoe Muckleford  Timor Wombat\nCrusoe         NA     0.0236 0.0351 0.0434\nMuckleford 0.0236         NA 0.0437 0.0213\nTimor      0.0351     0.0437     NA 0.0657\nWombat     0.0434     0.0213 0.0657     NA\n\n$Stat_matrices$Gst_H\n           Crusoe Muckleford  Timor Wombat\nCrusoe         NA     0.0566 0.0850 0.1047\nMuckleford 0.0566         NA 0.1059 0.0525\nTimor      0.0850     0.1059     NA 0.1603\nWombat     0.1047     0.0525 0.1603     NA\n\n\n[[2]]\n      Stat_tables.Crusoe_vs_Muckleford Stat_tables.Crusoe_vs_Timor\nFst                             0.0148                      0.0171\nFstp                            0.0356                      0.0545\nDest                            0.0236                      0.0351\nGst_H                           0.0566                      0.0850\n      Stat_tables.Crusoe_vs_Wombat Stat_tables.Muckleford_vs_Timor\nFst                         0.0255                          0.0249\nFstp                        0.0669                          0.0681\nDest                        0.0434                          0.0437\nGst_H                       0.1047                          0.1059\n      Stat_tables.Muckleford_vs_Wombat Stat_tables.Timor_vs_Wombat\nFst                             0.0096                      0.0387\nFstp                            0.0337                      0.1046\nDest                            0.0213                      0.0657\nGst_H                           0.0525                      0.1603\n\ndartR.base::gl.report.fstat(EYR.correct, verbose = 0)\n\n   Your plot was not shown in full because your 'Plots' pane\n    is too small. Increase the size of the 'Plots' pane and run the\n    function again. Alternatively, use the parameter 'plot.file' to\n    save the plot to a file.\n\n\n$Stat_matrices\n$Stat_matrices$Fst\n           Crusoe Muckleford  Timor Wombat\nCrusoe         NA     0.0128 0.0168 0.0199\nMuckleford 0.0128         NA 0.0212 0.0085\nTimor      0.0168     0.0212     NA 0.0313\nWombat     0.0199     0.0085 0.0313     NA\n\n$Stat_matrices$Fstp\n           Crusoe Muckleford  Timor Wombat\nCrusoe         NA     0.0317 0.0540 0.0556\nMuckleford 0.0317         NA 0.0608 0.0315\nTimor      0.0540     0.0608     NA 0.0903\nWombat     0.0556     0.0315 0.0903     NA\n\n$Stat_matrices$Dest\n           Crusoe Muckleford  Timor Wombat\nCrusoe         NA     0.0199 0.0337 0.0344\nMuckleford 0.0199         NA 0.0373 0.0189\nTimor      0.0337     0.0373     NA 0.0547\nWombat     0.0344     0.0189 0.0547     NA\n\n$Stat_matrices$Gst_H\n           Crusoe Muckleford  Timor Wombat\nCrusoe         NA     0.0492 0.0832 0.0856\nMuckleford 0.0492         NA 0.0930 0.0480\nTimor      0.0832     0.0930     NA 0.1368\nWombat     0.0856     0.0480 0.1368     NA\n\n\n[[2]]\n      Stat_tables.Crusoe_vs_Muckleford Stat_tables.Crusoe_vs_Timor\nFst                             0.0128                      0.0168\nFstp                            0.0317                      0.0540\nDest                            0.0199                      0.0337\nGst_H                           0.0492                      0.0832\n      Stat_tables.Crusoe_vs_Wombat Stat_tables.Muckleford_vs_Timor\nFst                         0.0199                          0.0212\nFstp                        0.0556                          0.0608\nDest                        0.0344                          0.0373\nGst_H                       0.0856                          0.0930\n      Stat_tables.Muckleford_vs_Wombat Stat_tables.Timor_vs_Wombat\nFst                             0.0085                      0.0313\nFstp                            0.0315                      0.0903\nDest                            0.0189                      0.0547\nGst_H                           0.0480                      0.1368"
  },
  {
    "objectID": "session10.html#exercise-data-3---bull-shark",
    "href": "session10.html#exercise-data-3---bull-shark",
    "title": "10  Sex Linked Markers",
    "section": "Exercise data 3 - Bull shark",
    "text": "Exercise data 3 - Bull shark\nData from Devloo-Delva et al. 2023.\n\n\n\nThe Bull Shark\n\n\n\nLoad data\n\nprint(load(\"data/Bull_shark_DArTseq_genlight_for_sex-linked_markers.Rdata\"))\n\n[1] \"data.gl\"\n\ndata.gl@n.loc\n\n[1] 93202\n\ntable(data.gl@pop)\n\n\nE-ATL  E-IO  Fiji Japan  N-IO W-ATL  W-IO W-PAC \n    2    36     8    14    20    36    40    26 \n\ntable(data.gl@other$ind.metrics$pop)\n\n\nE-ATL  E-IO  Fiji Japan  N-IO W-ATL  W-IO W-PAC \n    2    36     8    14    20    36    40    26 \n\ntable(data.gl@other$ind.metrics$sex, useNA = \"ifany\")\n\n\n   F    M &lt;NA&gt; \n  85   64   33 \n\n\n\n\n1. Number of sex-linked markers?\n\nres &lt;- dartR.sexlinked::filter.sex.linked(gl = data.gl, system = \"xy\", plots = TRUE,\n    ncores = 1)\n\nDetected 85 females and 64 males.\n\n\nStarting phase 1. May take a while...\n\n\nBuilding call rate plots.\n\n\n\n\n\nDone. Starting phase 2.\n\n\nBuilding heterozygosity plots.\n\n\n\n\n\n\n\n\nDone building heterozygosity plots.\n\n\n**FINISHED** Total of analyzed loci: 93202.\nFound 9 sex-linked loci:\n   2 Y-linked loci\n   2 sex-biased loci\n   4 X-linked loci\n   1 XY gametologs.\nAnd 93193 autosomal loci.\n\n\n\n\n\n\n\n2. Individuals with wrong sexID?\n\nsexID &lt;- dartR.sexlinked::infer.sex(gl_sex_filtered = res, system = \"xy\",\n    seed = 124)\n\nNot enough gametologs (need at least 5). Assigning NA...\n\n\n***FINISHED***\n\nknitr::kable(head(sexID))\n\nagreed.sex &lt;- sub(pattern = \"\\\\*\", replacement = \"\", x = sexID$agreed.sex)  # remove asterisk\nsum(data.gl$other$ind.metrics$sex != agreed.sex, na.rm = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nid\ny.linked.sex\n#called\n#missing\nx.linked.sex\n#Het.x\n#Hom.x\ngametolog.sex\n#Het.g\n#Hom.g\nagreed.sex\n\n\n\n\nCL-FIJ002-F\nCL-FIJ002-F\nF\n0\n2\nF\n4\n0\nNA\nNA\nNA\nF\n\n\nCL-FIJ003-M\nCL-FIJ003-M\nM\n2\n0\nM\n0\n4\nNA\nNA\nNA\nM\n\n\nCL-FIJ008-F\nCL-FIJ008-F\nF\n0\n2\nF\n2\n2\nNA\nNA\nNA\nF\n\n\nCL-FIJ010-F\nCL-FIJ010-F\nF\n0\n2\nF\n3\n1\nNA\nNA\nNA\nF\n\n\nCL-FIJ015-F\nCL-FIJ015-F\nF\n0\n2\nF\n4\n0\nNA\nNA\nNA\nF\n\n\nCL-FIJ018-F\nCL-FIJ018-F\nF\n0\n2\nF\n3\n1\nNA\nNA\nNA\nF\n\n\n\n\n\n[1] 8"
  },
  {
    "objectID": "session10.html#exercise-data-4---blue-shark",
    "href": "session10.html#exercise-data-4---blue-shark",
    "title": "10  Sex Linked Markers",
    "section": "Exercise data 4 - Blue shark",
    "text": "Exercise data 4 - Blue shark\nData from Nikolic et al. 2023.\n\n\n\nThe Blue Shark\n\n\n\nLoad data\n\nprint(load(\"data/Blue_shark_DArTseq_genlight_for_sex-linked_markers.Rdata\"))\n\n[1] \"data.gl\"\n\ndata.gl@n.loc\n\n[1] 172384\n\ntable(data.gl@pop)\n\n\n   EIO   MED1   MED2   NATL  NEATL    NIO   NPAC   SAF1   SAF2 SWPAC1 SWPAC2 \n     8     34     20     49     26     27      4     21     89     30     16 \nSWPAC3    WIO \n    11     29 \n\ntable(data.gl@other$ind.metrics$pop)\n\n\n   EIO   MED1   MED2   NATL  NEATL    NIO   NPAC   SAF1   SAF2 SWPAC1 SWPAC2 \n     8     34     20     49     26     27      4     21     89     30     16 \nSWPAC3    WIO \n    11     29 \n\ntable(data.gl@other$ind.metrics$sex, useNA = \"ifany\")\n\n\n   F    M &lt;NA&gt; \n 104  111  149 \n\n\n\n\n1. Number of sex-linked markers?\n\nres &lt;- dartR.sexlinked::filter.sex.linked(gl = data.gl, system = \"xy\", plots = TRUE,\n    ncores = 1)\n\nDetected 104 females and 111 males.\n\n\nStarting phase 1. May take a while...\n\n\nBuilding call rate plots.\n\n\n\n\n\nDone. Starting phase 2.\n\n\nBuilding heterozygosity plots.\n\n\n\n\n\n\n\n\nDone building heterozygosity plots.\n\n\n**FINISHED** Total of analyzed loci: 172384.\nFound 26 sex-linked loci:\n   2 Y-linked loci\n   2 sex-biased loci\n   22 X-linked loci\n   0 XY gametologs.\nAnd 172358 autosomal loci.\n\n\n\n\n\n\n\n2. Individuals with wrong sexID?\n\nsexID &lt;- dartR.sexlinked::infer.sex(gl_sex_filtered = res, system = \"xy\",\n    seed = 124)\n\nNot enough gametologs (need at least 5). Assigning NA...\n\n\n***FINISHED***\n\nknitr::kable(head(sexID))\n\nagreed.sex &lt;- sub(pattern = \"\\\\*\", replacement = \"\", x = sexID$agreed.sex)  # remove asterisk\nsum(data.gl$other$ind.metrics$sex != agreed.sex, na.rm = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nid\ny.linked.sex\n#called\n#missing\nx.linked.sex\n#Het.x\n#Hom.x\ngametolog.sex\n#Het.g\n#Hom.g\nagreed.sex\n\n\n\n\n60088\n60088\nM\n2\n0\nM\n0\n22\nNA\nNA\nNA\nM\n\n\n60160\n60160\nM\n2\n0\nM\n0\n21\nNA\nNA\nNA\nM\n\n\n60168\n60168\nM\n2\n0\nM\n0\n22\nNA\nNA\nNA\nM\n\n\n60176\n60176\nM\n2\n0\nM\n0\n21\nNA\nNA\nNA\nM\n\n\n60096\n60096\nM\n2\n0\nM\n0\n22\nNA\nNA\nNA\nM\n\n\n60104\n60104\nM\n2\n0\nM\n1\n19\nNA\nNA\nNA\nM\n\n\n\n\n\n[1] 22"
  },
  {
    "objectID": "session11.html#required-packages",
    "href": "session11.html#required-packages",
    "title": "11  From Genes to Kin: Dissecting Relatedness & Kinship",
    "section": "Required packages",
    "text": "Required packages\n\nlibrary(dartR.base)\n\nmake sure you have the packages installed, see Install dartRverse"
  },
  {
    "objectID": "session11.html#session-content",
    "href": "session11.html#session-content",
    "title": "11  From Genes to Kin: Dissecting Relatedness & Kinship",
    "section": "Session Content",
    "text": "Session Content\nStill to come…"
  },
  {
    "objectID": "session11.html#exercise",
    "href": "session11.html#exercise",
    "title": "11  From Genes to Kin: Dissecting Relatedness & Kinship",
    "section": "EXERCISE",
    "text": "EXERCISE\n\n\n\n\n\n\nExercise\n\n\n\n Still to come…"
  },
  {
    "objectID": "session11.html#further-study",
    "href": "session11.html#further-study",
    "title": "11  From Genes to Kin: Dissecting Relatedness & Kinship",
    "section": "Further Study",
    "text": "Further Study\nstill to come…"
  },
  {
    "objectID": "session12.html#required-packages",
    "href": "session12.html#required-packages",
    "title": "12  Genetic Structure",
    "section": "Required packages",
    "text": "Required packages\nAs always we need to have dartRverse installed and loaded. In addition you need to have dartR.popgen installend.\n\n#install.packages('gplots')\n#install.packages('iterpc')\n#install.packages('expm')\nlibrary(dartRverse)\nlibrary(dartR.popgen)\n\nmake sure you have the packages installed, see Install dartRverse"
  },
  {
    "objectID": "session12.html#session-content",
    "href": "session12.html#session-content",
    "title": "12  Genetic Structure",
    "section": "Session Content",
    "text": "Session Content"
  },
  {
    "objectID": "session12.html#exercise",
    "href": "session12.html#exercise",
    "title": "12  Genetic Structure",
    "section": "EXERCISE",
    "text": "EXERCISE\n\n\n\n\n\n\nExercise\n\n\n\n Still to come…"
  },
  {
    "objectID": "session12.html#further-study",
    "href": "session12.html#further-study",
    "title": "12  Genetic Structure",
    "section": "Further Study",
    "text": "Further Study\nstill to come…\n\n\n\n\nF. Archer, B. Schneiders, P. Adams. 2016. “strataG: An r Package for Manipulating, Summarizing and Analysing Population Genetic Data.” Molecular Ecology Resources. https://doi.org/10.1111/1755-0998.12559."
  },
  {
    "objectID": "session13.html#required-packages",
    "href": "session13.html#required-packages",
    "title": "13  Combining Genomic Resources",
    "section": "Required packages",
    "text": "Required packages\n\nlibrary(dartRverse) \nlibrary(tidyverse) \nlibrary(RColorBrewer) \nlibrary(patchwork) \nlibrary(scales) \nlibrary(gridExtra) \nlibrary(grid) \nlibrary(raster) \nlibrary(otuSummary) \n\nmake sure you have the packages installed, see Install dartRverse"
  },
  {
    "objectID": "session13.html#session-content",
    "href": "session13.html#session-content",
    "title": "13  Combining Genomic Resources",
    "section": "Session Content",
    "text": "Session Content"
  },
  {
    "objectID": "session13.html#exercise",
    "href": "session13.html#exercise",
    "title": "13  Combining Genomic Resources",
    "section": "EXERCISE",
    "text": "EXERCISE\n\n\n\n\n\n\nExercise\n\n\n\n Still to come…"
  },
  {
    "objectID": "session13.html#further-study",
    "href": "session13.html#further-study",
    "title": "13  Combining Genomic Resources",
    "section": "Further Study",
    "text": "Further Study\nLink to github repository of GENESPACE: https://github.com/jtlovell/GENESPACE/tree/master\nDobry, Zhu, et al. (2023)\nDobry, Wapstra, et al. (2023)\n\n\n\n\nDobry, Jason, Erik Wapstra, Emily J. Stringer, Bernd Gruber, Janine E. Deakin, and Tariq Ezaz. 2023. “Widespread Chromosomal Rearrangements Preceded Genetic Divergence in a Monitor Lizard, Varanus Acanthurus (Varanidae).” Chromosome Research 31 (1): 9. https://doi.org/10.1007/s10577-023-09715-x.\n\n\nDobry, Jason, Zexian Zhu, Qi Zhou, Erik Wapstra, Janine E Deakin, and Tariq Ezaz. 2023. “Fixed Allele Differences Associated With the Centromere Reveal Chromosome Morphology and Rearrangements in a Reptile (Varanus Acanthurus BOULENGER).” Molecular Biology and Evolution 40 (6): msad124. https://doi.org/10.1093/molbev/msad124."
  },
  {
    "objectID": "break.html",
    "href": "break.html",
    "title": "__________",
    "section": "",
    "text": "Everything beyond this point is for added learning, we hope you have fun exploring all the amazing things the dartRverse has to offer."
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Devloo‐Delva, Floriaan, Christopher P. Burridge, Peter M. Kyne, Juerg M.\nBrunnschweiler, Demian D. Chapman, Patricia Charvet, Xiao Chen, et al.\n2023. “From Rivers to Ocean Basins: The Role of Ocean\nBarriers and Philopatry in the Genetic Structuring of a Cosmopolitan\nCoastal Predator.” Ecology and Evolution 13 (2): e9837.\nhttps://doi.org/10.1002/ece3.9837.\n\n\nF. Archer, B. Schneiders, P. Adams. 2016. “strataG: An r Package\nfor Manipulating, Summarizing and Analysing Population Genetic\nData.” Molecular Ecology Resources. https://doi.org/10.1111/1755-0998.12559.\n\n\nGruber, Bernd, Peter J. Unmack, Oliver F. Berry, and Arthur Georges.\n2018. “DARTR : An R Package\nto Facilitate Analysis of SNP Data Generated from Reduced\nRepresentation Genome Sequencing.” Molecular Ecology\nResources 18 (3): 691–99. https://doi.org/10.1111/1755-0998.12745.\n\n\nJaya, Frederick R., Jessie C. Tanner, Michael R. Whitehead, Paul\nDoughty, J. Scott Keogh, Craig C. Moritz, and Renee A. Catullo. 2022.\n“Population Genomics and Sexual Signals Support Reproductive\nCharacter Displacement in Uperoleia (Anura:\nMyobatrachidae) in a Contact Zone.” Molecular\nEcology 31 (17): 4527–43. https://doi.org/10.1111/mec.16597.\n\n\nLiu, Xiaoming, and Yun-Xin Fu. 2020. “Stairway Plot\n2: Demographic History Inference with Folded SNP Frequency\nSpectra.” Genome Biology 21 (November). https://doi.org/10.1186/s13059-020-02196-9.\n\n\nLynch, Michael, Bernhard Haubold, Peter Pfaffelhuber, and Takahiro\nMaruki. 2019. “Inference of Historical\nPopulation-Size Changes with\nAllele-Frequency Data.”\nG3: GenesGenomesGenetics 10 (1):\n211–23. https://doi.org/10.1534/g3.119.400854.\n\n\nMijangos, Jose Luis, Bernd Gruber, Oliver Berry, Carlo Pacioni, and\nArthur Georges. 2022. “dartR V2:\nAn Accessible Genetic Analysis Platform for Conservation,\nEcology and Agriculture.” Methods in Ecology and\nEvolution 13 (10): 2150–58. https://doi.org/10.1111/2041-210X.13918.\n\n\nNikolic, Natacha, Floriaan Devloo-Delva, Diane Bailleul, Ekaterina\nNoskova, Clément Rougeux, Chrystelle Delord, Philippe Borsa, et al.\n2023. “Stepping up to Genome Scan Allows Stock Differentiation in\nthe Worldwide Distributed Blue Shark Prionace\nGlauca.” Molecular Ecology 32 (5): 1000–1019. https://doi.org/10.1111/mec.16822.\n\n\nO’Reilly, G. D., F. Jabot, M. R. Gunn, and W. B. Sherwin. 2020.\n“Predicting Shannon’s Information for Genes in Finite\nPopulations: New Uses for Old Equations.” Conservation\nGenetics Resources 12 (2): 245–55. https://doi.org/10.1007/s12686-018-1079-z.\n\n\nRobledo-Ruiz, Diana A., Lana Austin, J. Nevil Amos, Jesús\nCastrejón-Figueroa, Daniel K. P. Harley, Michael J. L. Magrath, Paul\nSunnucks, and Alexandra Pavlova. 2023. “Easy-to-Use R\nFunctions to Separate Reduced-Representation Genomic Datasets into\nSex-Linked and Autosomal Loci, and Conduct Sex Assignment.”\nMolecular Ecology Resources 0 (n/a). https://doi.org/10.1111/1755-0998.13844.\n\n\nSantiago, E., I. Novo, A. F. Pardiñas, M. Saura, J. Wang, and A.\nCaballero. 2020. “Recent Demographic History Inferred by\nHigh-Resolution Analysis of Linkage Disequilibrium.”\nMolecular Biology and Evolution 37 (12): 3642–53. https://doi.org/10.1093/molbev/msaa174.\n\n\nSherwin, W. B. 2022. “Bray-Curtis (AFD)\nDifferentiation in Molecular Ecology: Forecasting, an\nAdjustment (AA), and Comparative Performance in Selection\nDetection.” Ecology and Evolution 12 (9): e9176. https://doi.org/10.1002/ece3.9176.\n\n\nSherwin, W. B., A. Chao, L. Jost, and P. E. Smouse. 2017.\n“Information Theory Broadens the\nSpectrum of Molecular Ecology and\nEvolution.” Trends in Ecology &\nEvolution 32 (12): 948–63. https://doi.org/10.1016/j.tree.2017.09.012.\n\n\n———. 2021. “Information Theory Broadens the Spectrum of Molecular\nEcology and Evolution: (Trends in Ecology and\nEvolution 32:12, p:948–963, 2017).” Trends in\nEcology & Evolution 36 (10): 955–56. https://doi.org/10.1016/j.tree.2021.07.005.\n\n\nSopniewski, Jarrod, and Renee A. Catullo. 2024. “Estimates of\nHeterozygosity from Single Nucleotide Polymorphism Markers Are\nContext-Dependent and Often Wrong.” Molecular Ecology\nResources, March, e13947. https://doi.org/10.1111/1755-0998.13947."
  },
  {
    "objectID": "useful.html#detailed-program",
    "href": "useful.html#detailed-program",
    "title": "More info",
    "section": "Detailed program",
    "text": "Detailed program\nUnable to display PDF file. Download instead."
  },
  {
    "objectID": "tutorials.html#dartr-rstudio-refresher",
    "href": "tutorials.html#dartr-rstudio-refresher",
    "title": "dartR Tutorials",
    "section": "dartR RStudio Refresher",
    "text": "dartR RStudio Refresher\nUnable to display PDF file. Download instead."
  },
  {
    "objectID": "tutorials.html#dartr-installation",
    "href": "tutorials.html#dartr-installation",
    "title": "dartR Tutorials",
    "section": "dartR Installation",
    "text": "dartR Installation\nUnable to display PDF file. Download instead."
  },
  {
    "objectID": "tutorials.html#data-structure-and-input",
    "href": "tutorials.html#data-structure-and-input",
    "title": "dartR Tutorials",
    "section": "Data Structure and Input",
    "text": "Data Structure and Input\nUnable to display PDF file. Download instead."
  },
  {
    "objectID": "tutorials.html#data-manipulation",
    "href": "tutorials.html#data-manipulation",
    "title": "dartR Tutorials",
    "section": "Data Manipulation",
    "text": "Data Manipulation\nUnable to display PDF file. Download instead."
  },
  {
    "objectID": "tutorials.html#dartr-basic-filtering",
    "href": "tutorials.html#dartr-basic-filtering",
    "title": "dartR Tutorials",
    "section": "dartR Basic Filtering",
    "text": "dartR Basic Filtering\nUnable to display PDF file. Download instead."
  },
  {
    "objectID": "session06.html#load-data-and-explore",
    "href": "session06.html#load-data-and-explore",
    "title": "6  Management of Small Populations",
    "section": "Load data and explore",
    "text": "Load data and explore\nThe data is a subset of the genome-wide SNPs that are publicly available from the following study, Farquharson et al. (2022).\nThe study aims were to investigate:\n\nThe current genetic diversity of Tasmanian devils across their entire range\nWhether the genetic diversity of the insurance population is representative of the species\n\n\n\n\n\n\n\nQuestions\n\n\n\n\nHow many SNPs are there?\nHow many individuals are in the dataset?\nWhat is the distribution of individuals in populations?\n\n\n\n\nload(\"./data/session6_gl.Rdata\")\ngl\n\n /// GENLIGHT OBJECT /////////\n\n // 300 genotypes,  1,663 binary SNPs, size: 1 Mb\n 35182 (7.05 %) missing data\n\n // Basic content\n   @gen: list of 300 SNPbin\n   @ploidy: ploidy of each individual  (range: 2-2)\n\n // Optional content\n   @ind.names:  300 individual labels\n   @loc.names:  1663 locus labels\n   @loc.all:  1663 alleles\n   @pop: population of each individual (group size range: 20-20)\n   @other: a list containing: loc.metrics  loc.metrics.flags  verbose  history  ind.metrics \n\nsummary(gl@pop)\n\n           Bronte          Buckland        Fentonbury ForestierMurdunna \n               20                20                20                20 \n GranvilleHarbour                IP           Kempton       MariaIsland \n               20                20                20                20 \n       Narawntapu     RobbinsIsland      SilverPlains         StonyHead \n               20                20                20                20 \n  TasmanPeninsula         Woolnorth          wukalina \n               20                20                20 \n\n\n\nAllocate colours to populations\nAllocate colours based on site location: East / Central / West Tasmania and captive breeding program.\n\nlevels(gl@pop)\n\n [1] \"Bronte\"            \"Buckland\"          \"Fentonbury\"       \n [4] \"ForestierMurdunna\" \"GranvilleHarbour\"  \"IP\"               \n [7] \"Kempton\"           \"MariaIsland\"       \"Narawntapu\"       \n[10] \"RobbinsIsland\"     \"SilverPlains\"      \"StonyHead\"        \n[13] \"TasmanPeninsula\"   \"Woolnorth\"         \"wukalina\"         \n\n#west = yellow; central = blue; east = green; insurance population/Maria Island = orange\ntascols &lt;- c(\"skyblue\", \"#74c476\", \"skyblue\", \"#74c476\", \"#FDD835\", \"orange\", \"skyblue\",\n             \"orange\", \"skyblue\", \"#FDD835\", \"skyblue\", \"#74c476\", \"#74c476\", \"#FDD835\",\n             \"#74c476\")\n\n\n\nReport minor allele frequency (MAF)\n\n\n\n\n\n\nQuestions\n\n\n\n\nDo you notice any patterns in minor allele frequency?\nAre there differences between the overall MAF distribution and that of individual populations?\n\n\n\n\ngl.report.maf(gl)\n\nStarting gl.report.maf \n  Processing genlight object with SNP data\nStarting gl.report.maf \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population Bronte \n  No. of loci = 1178 \n  No. of individuals = 20 \n    Minimum      :  0.025 \n    1st quantile :  0.0556 \n    Median       :  0.1579 \n    Mean         :  0.1932487 \n    3r quantile  :  0.3125 \n    Maximum      :  0.5 \n    Missing Rate Overall:  0.09 \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population Buckland \n  No. of loci = 1192 \n  No. of individuals = 20 \n    Minimum      :  0.025 \n    1st quantile :  0.075 \n    Median       :  0.175 \n    Mean         :  0.1968565 \n    3r quantile  :  0.3 \n    Maximum      :  0.5 \n    Missing Rate Overall:  0.06 \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population Fentonbury \n  No. of loci = 1131 \n  No. of individuals = 20 \n    Minimum      :  0.025 \n    1st quantile :  0.06905 \n    Median       :  0.1667 \n    Mean         :  0.1972745 \n    3r quantile  :  0.3 \n    Maximum      :  0.5 \n    Missing Rate Overall:  0.14 \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population ForestierMurdunna \n  No. of loci = 1050 \n  No. of individuals = 20 \n    Minimum      :  0.025 \n    1st quantile :  0.0714 \n    Median       :  0.1579 \n    Mean         :  0.1935089 \n    3r quantile  :  0.3 \n    Maximum      :  0.5 \n    Missing Rate Overall:  0.08 \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population GranvilleHarbour \n  No. of loci = 1058 \n  No. of individuals = 20 \n    Minimum      :  0.025 \n    1st quantile :  0.0714 \n    Median       :  0.1667 \n    Mean         :  0.1992999 \n    3r quantile  :  0.3158 \n    Maximum      :  0.5 \n    Missing Rate Overall:  0.07 \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population IP \n  No. of loci = 1239 \n  No. of individuals = 20 \n    Minimum      :  0.025 \n    1st quantile :  0.06875 \n    Median       :  0.15 \n    Mean         :  0.1921601 \n    3r quantile  :  0.3158 \n    Maximum      :  0.5 \n    Missing Rate Overall:  0.04 \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population Kempton \n  No. of loci = 1215 \n  No. of individuals = 20 \n    Minimum      :  0.025 \n    1st quantile :  0.0646 \n    Median       :  0.15 \n    Mean         :  0.1941027 \n    3r quantile  :  0.3 \n    Maximum      :  0.5 \n    Missing Rate Overall:  0.03 \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population MariaIsland \n  No. of loci = 1151 \n  No. of individuals = 20 \n    Minimum      :  0.025 \n    1st quantile :  0.0556 \n    Median       :  0.1389 \n    Mean         :  0.1843479 \n    3r quantile  :  0.2895 \n    Maximum      :  0.5 \n    Missing Rate Overall:  0.08 \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population Narawntapu \n  No. of loci = 1108 \n  No. of individuals = 20 \n    Minimum      :  0.025 \n    1st quantile :  0.070225 \n    Median       :  0.175 \n    Mean         :  0.2010385 \n    3r quantile  :  0.3158 \n    Maximum      :  0.5 \n    Missing Rate Overall:  0.12 \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population RobbinsIsland \n  No. of loci = 858 \n  No. of individuals = 20 \n    Minimum      :  0.025 \n    1st quantile :  0.0526 \n    Median       :  0.1579 \n    Mean         :  0.196336 \n    3r quantile  :  0.325 \n    Maximum      :  0.5 \n    Missing Rate Overall:  0.04 \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population SilverPlains \n  No. of loci = 1160 \n  No. of individuals = 20 \n    Minimum      :  0.025 \n    1st quantile :  0.070225 \n    Median       :  0.1579 \n    Mean         :  0.1978576 \n    3r quantile  :  0.3158 \n    Maximum      :  0.5 \n    Missing Rate Overall:  0.07 \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population StonyHead \n  No. of loci = 1042 \n  No. of individuals = 20 \n    Minimum      :  0.025 \n    1st quantile :  0.075 \n    Median       :  0.175 \n    Mean         :  0.2036118 \n    3r quantile  :  0.325 \n    Maximum      :  0.5 \n    Missing Rate Overall:  0.07 \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population TasmanPeninsula \n  No. of loci = 962 \n  No. of individuals = 20 \n    Minimum      :  0.025 \n    1st quantile :  0.075 \n    Median       :  0.1875 \n    Mean         :  0.208041 \n    3r quantile  :  0.325 \n    Maximum      :  0.5 \n    Missing Rate Overall:  0.05 \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population Woolnorth \n  No. of loci = 935 \n  No. of individuals = 20 \n    Minimum      :  0.025 \n    1st quantile :  0.0667 \n    Median       :  0.1579 \n    Mean         :  0.1929913 \n    3r quantile  :  0.3 \n    Maximum      :  0.5 \n    Missing Rate Overall:  0.03 \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population wukalina \n  No. of loci = 1160 \n  No. of individuals = 20 \n    Minimum      :  0.025 \n    1st quantile :  0.0588 \n    Median       :  0.1579 \n    Mean         :  0.1925116 \n    3r quantile  :  0.3 \n    Maximum      :  0.5 \n    Missing Rate Overall:  0.08 \n\n  Reporting Minor Allele Frequency (MAF) by Locus OVERALL\n  No. of loci = 1663 \n  No. of individuals = 300 \n    Minimum      :  0.0017 \n    1st quantile :  0.0231 \n    Median       :  0.085 \n    Mean         :  0.1436225 \n    3r quantile  :  0.2416 \n    Maximum      :  0.5 \n    Missing Rate Overall:  0.07 \n\n\n\n\n\n   Quantile Threshold Retained Percent Filtered Percent\n1      100%    0.5000        2     0.1     1661    99.9\n2       95%    0.4429       84     5.1     1579    94.9\n3       90%    0.3877      167    10.0     1496    90.0\n4       85%    0.3392      250    15.0     1413    85.0\n5       80%    0.2876      333    20.0     1330    80.0\n6       75%    0.2416      417    25.1     1246    74.9\n7       70%    0.1958      499    30.0     1164    70.0\n8       65%    0.1593      583    35.1     1080    64.9\n9       60%    0.1288      667    40.1      996    59.9\n10      55%    0.1058      749    45.0      914    55.0\n11      50%    0.0850      832    50.0      831    50.0\n12      45%    0.0701      915    55.0      748    45.0\n13      40%    0.0558      998    60.0      665    40.0\n14      35%    0.0439     1082    65.1      581    34.9\n15      30%    0.0337     1165    70.1      498    29.9\n16      25%    0.0231     1248    75.0      415    25.0\n17      20%    0.0148     1331    80.0      332    20.0\n18      15%    0.0084     1416    85.1      247    14.9\n19      10%    0.0050     1499    90.1      164     9.9\n20       5%    0.0020     1581    95.1       82     4.9\n21       0%    0.0017     1663   100.0        0     0.0\nCompleted: gl.report.maf \n\n\n\n\nVisualise population structure by PCoA\nRun the PCoA, with points shaded by locations.\n\n\n\n\n\n\nQuestions\n\n\n\n\nHow would you describe any patterns in population structure?\nHow does the population structure of the insurance population (orange) compare to that of the wild?\n\n\n\n\npcoa &lt;- gl.pcoa(gl)\n\nStarting gl.pcoa \n  Processing genlight object with SNP data\n  Performing a PCA, individuals as entities, loci as attributes, SNP genotype as state\nStarting gl.colors \nSelected color type 2 \nCompleted: gl.colors \n\n\n\n\n\nCompleted: gl.pcoa \n\ngl.pcoa.plot(pcoa, gl)\n\nStarting gl.pcoa.plot \n  Processing an ordination file (glPca)\n  Processing genlight object with SNP data\n  Plotting populations in a space defined by the SNPs\n  Preparing plot .... please wait\n\n\n\n\n\nCompleted: gl.pcoa.plot \n\n\n\n\n#visualise PCoA using the colour groupings of east/central/west/insurance population\ngl.pcoa.plot(pcoa, gl, pt.colors=tascols)\n\nStarting gl.pcoa.plot \n  Processing an ordination file (glPca)\n  Processing genlight object with SNP data\n  Plotting populations in a space defined by the SNPs\n  Preparing plot .... please wait\n\n\n\n\n\nCompleted: gl.pcoa.plot"
  },
  {
    "objectID": "session06.html#calculate-allelic-richness-for-each-population",
    "href": "session06.html#calculate-allelic-richness-for-each-population",
    "title": "6  Management of Small Populations",
    "section": "Calculate allelic richness for each population",
    "text": "Calculate allelic richness for each population\nThis calculation requires the hierfstat package, so make sure the hierfstat is loaded using the library function.\n\n#convert the genlight object to genind format\ngi &lt;- gl2gi(gl)\n\nStarting gl2gi \n  Processing genlight object with SNP data\nMatrix converted.. Prepare genind object...\nCompleted: gl2gi \n\n#convert genind object to hierfstat format\nhfstat &lt;- genind2hierfstat(gi)\n\n#calculate allelic richness\nar &lt;- allelic.richness(hfstat)\nnames(ar)\n\n[1] \"min.all\" \"Ar\"     \n\nar$min.all # rarefied to 12, the smallest sample size for a genotyped locus\n\n[1] 12\n\nsummary(ar$Ar) #gives mean AR for each population\n\n     Bronte         Buckland       Fentonbury    ForestierMurdunna\n Min.   :1.000   Min.   :1.000   Min.   :1.000   Min.   :1.000    \n 1st Qu.:1.000   1st Qu.:1.000   1st Qu.:1.000   1st Qu.:1.000    \n Median :1.692   Median :1.717   Median :1.692   Median :1.538    \n Mean   :1.558   Mean   :1.578   Mean   :1.549   Mean   :1.506    \n 3rd Qu.:1.982   3rd Qu.:1.985   3rd Qu.:1.983   3rd Qu.:1.975    \n Max.   :2.000   Max.   :2.000   Max.   :2.000   Max.   :2.000    \n GranvilleHarbour       IP           Kempton       MariaIsland   \n Min.   :1.000    Min.   :1.000   Min.   :1.000   Min.   :1.000  \n 1st Qu.:1.000    1st Qu.:1.000   1st Qu.:1.000   1st Qu.:1.000  \n Median :1.538    Median :1.717   Median :1.692   Median :1.588  \n Mean   :1.508    Mean   :1.588   Mean   :1.575   Mean   :1.537  \n 3rd Qu.:1.977    3rd Qu.:1.981   3rd Qu.:1.985   3rd Qu.:1.975  \n Max.   :2.000    Max.   :2.000   Max.   :2.000   Max.   :2.000  \n   Narawntapu    RobbinsIsland    SilverPlains     StonyHead    \n Min.   :1.000   Min.   :1.000   Min.   :1.000   Min.   :1.000  \n 1st Qu.:1.000   1st Qu.:1.000   1st Qu.:1.000   1st Qu.:1.000  \n Median :1.648   Median :1.300   Median :1.668   Median :1.562  \n Mean   :1.535   Mean   :1.402   Mean   :1.555   Mean   :1.505  \n 3rd Qu.:1.986   3rd Qu.:1.936   3rd Qu.:1.984   3rd Qu.:1.977  \n Max.   :2.000   Max.   :2.000   Max.   :2.000   Max.   :2.000  \n TasmanPeninsula   Woolnorth        wukalina    \n Min.   :1.000   Min.   :1.000   Min.   :1.000  \n 1st Qu.:1.000   1st Qu.:1.000   1st Qu.:1.000  \n Median :1.316   Median :1.300   Median :1.668  \n Mean   :1.466   Mean   :1.443   Mean   :1.550  \n 3rd Qu.:1.981   3rd Qu.:1.948   3rd Qu.:1.976  \n Max.   :2.000   Max.   :2.000   Max.   :2.000  \n\nar &lt;- as.data.frame(ar$Ar)\nmean.ar &lt;- colMeans(ar)\n\nCalculate a measure of variance for allelic richness, e.g. standard error. Standard error = standard deviation / sqrt(n), where n is the number of genotyped loci\n\nsd(ar$Bronte, na.rm=TRUE)/sqrt(nrow(ar) - length(which(is.na(ar$Bronte))))\n\n[1] 0.01017173\n\n\nBoxplot of allelic richness per population:\n\n\n\n\n\n\nQuestions\n\n\n\n\nWhich populations have the highest and the lowest allelic richness?\nCan you think of any explanation?\n\n\n\n\n#first, extend the margins of the graphing window to fit long axis labels\npar(mar=c(8,3,3,3))\nboxplot(ar, ylab=\"Allelic richness\", las=2, col=tascols)\n\n\n\n#order boxplot to group locations by west, central, east, insurance population\nar.ordered &lt;- ar[,c(10, 14, 5, 1, 3, 11, 9, 7, 13, 4, 12, 15, 2, 6, 8)]\ntascols.ordered &lt;- tascols[c(10,14,5,1,3,11,9,7,13,4,12,15,2,6,8)]\nboxplot(ar.ordered, ylab=\"Allelic richness\", las=2, col=tascols.ordered)"
  },
  {
    "objectID": "session06.html#calculate-heterozygosity-statistics-for-each-population",
    "href": "session06.html#calculate-heterozygosity-statistics-for-each-population",
    "title": "6  Management of Small Populations",
    "section": "Calculate heterozygosity statistics for each population",
    "text": "Calculate heterozygosity statistics for each population\nThe function gl.report.heterozygosity reports the observed, expected, and unbiased heterozygosities and Fis (inbreeding coefficient) by population or the observed heterozygosity for each individual in a genlight object.\nCalculate heterozygosity and inbreeding statistics for each population. Note that the plot is ordered by default from lowest to highest heterozygosity.\n\n\n\n\n\n\nQuestions\n\n\n\n\nWhich populations have the highest and lowest heterozygosity?\nWithin a population, do you notice any patterns of observed compared to expected heterozygosity from the graph?\nWhat about Fis?\n\n\n\n\n#use the ? to search the help for a function and see what options can be specified\n#?gl.report.heterozygosity\nhets &lt;- gl.report.heterozygosity(gl, method=\"pop\",plot.colors.pop = tascols)\n\nStarting gl.report.heterozygosity \n  Processing genlight object with SNP data\n  Calculating Observed Heterozygosities, averaged across\n                    loci, for each population\n  Calculating Expected Heterozygosities\n\n\n\n\n\n                                pop    n.Ind n.Loc n.Loc.adj polyLoc monoLoc\nBronte                       Bronte 18.02285  1663         1    1178     485\nBuckland                   Buckland 18.71257  1663         1    1192     471\nFentonbury               Fentonbury 17.15394  1663         1    1131     532\nForestierMurdunna ForestierMurdunna 18.42694  1663         1    1050     613\nGranvilleHarbour   GranvilleHarbour 18.59952  1663         1    1058     605\nIP                               IP 19.15695  1663         1    1239     424\nKempton                     Kempton 19.31209  1663         1    1215     448\nMariaIsland             MariaIsland 18.28322  1663         1    1151     512\nNarawntapu               Narawntapu 17.49008  1663         1    1108     555\nRobbinsIsland         RobbinsIsland 19.25376  1663         1     858     805\nSilverPlains           SilverPlains 18.55081  1663         1    1160     503\nStonyHead                 StonyHead 18.78593  1663         1    1042     621\nTasmanPeninsula     TasmanPeninsula 19.17739  1663         1     962     701\nWoolnorth                 Woolnorth 19.57547  1663         1     935     728\nwukalina                   wukalina 18.34275  1663         1    1160     503\n                  all_NALoc       Ho     HoSD     HoSE       He     HeSD\nBronte                    0 0.179996 0.183418 0.004498 0.191019 0.181399\nBuckland                  0 0.197586 0.190966 0.004683 0.198461 0.180158\nFentonbury                0 0.182757 0.191409 0.004694 0.187777 0.181461\nForestierMurdunna         0 0.176872 0.199446 0.004891 0.172591 0.180186\nGranvilleHarbour          0 0.168749 0.187710 0.004603 0.176181 0.183623\nIP                        0 0.195225 0.183868 0.004509 0.200251 0.179103\nKempton                   0 0.191338 0.186795 0.004581 0.197628 0.181002\nMariaIsland               0 0.172589 0.181246 0.004444 0.179993 0.177912\nNarawntapu                0 0.190309 0.201556 0.004943 0.185845 0.184629\nRobbinsIsland             0 0.138154 0.186892 0.004583 0.139935 0.179352\nSilverPlains              0 0.184496 0.189312 0.004642 0.191562 0.182624\nStonyHead                 0 0.178307 0.199528 0.004893 0.176730 0.184918\nTasmanPeninsula           0 0.171776 0.203659 0.004994 0.166905 0.187410\nWoolnorth                 0 0.151634 0.187370 0.004595 0.151784 0.178359\nwukalina                  0 0.178577 0.183757 0.004506 0.187558 0.180554\n                      HeSE      uHe    uHeSD    uHeSE      FIS    FISSD FISSE\nBronte            0.004448 0.196470 0.186575 0.004575 0.065498 0.248832    NA\nBuckland          0.004418 0.203909 0.185104 0.004539 0.027938 0.223972    NA\nFentonbury        0.004450 0.193414 0.186909 0.004583 0.048542 0.241005    NA\nForestierMurdunna 0.004418 0.177405 0.185211 0.004542 0.015203 0.252059    NA\nGranvilleHarbour  0.004503 0.181048 0.188696 0.004627 0.058696 0.248559    NA\nIP                0.004392 0.205617 0.183903 0.004510 0.036454 0.215288    NA\nKempton           0.004439 0.202880 0.185813 0.004556 0.041341 0.228187    NA\nMariaIsland       0.004363 0.185054 0.182914 0.004485 0.049162 0.235558    NA\nNarawntapu        0.004527 0.191314 0.190062 0.004661 0.005557 0.227638    NA\nRobbinsIsland     0.004398 0.143666 0.184133 0.004515 0.034448 0.232899    NA\nSilverPlains      0.004478 0.196868 0.187683 0.004602 0.055302 0.239884    NA\nStonyHead         0.004535 0.181563 0.189975 0.004659 0.018753 0.236655    NA\nTasmanPeninsula   0.004596 0.171373 0.192427 0.004719 0.007672 0.237243    NA\nWoolnorth         0.004374 0.155763 0.183034 0.004488 0.023129 0.227312    NA\nwukalina          0.004428 0.192814 0.185614 0.004552 0.059040 0.251719    NA\nCompleted: gl.report.heterozygosity \n\n\nWe can use the same function, but switch the method from “pop” to “ind” to calculate individual-level observed heterozygosity. This can be useful if you are investigating invidiual-level diversity, and may also be useful in assessing the impact of sample quality and missing data on your results.\n\n\n\n\n\n\nQuestion\n\n\n\n\nWhat are some possible explanations for outliers with low individual observed heterozygosity?\n\n\n\n\nind.hets &lt;- gl.report.heterozygosity(gl, method=\"ind\")\n\nStarting gl.report.heterozygosity \n  Processing genlight object with SNP data\n  Calculating observed heterozygosity for individuals\n  Note: No adjustment for invariant loci (n.invariant set to 0)\nStarting gl.colors \nSelected color type 2 \nCompleted: gl.colors \n\n\n\n\n\n               ind.name         Ho  f.hom.ref f.hom.alt n.Loc\n  F_ForestierMurdunna_4 0.17416830 0.00000000 0.8258317  1533\n  M_ForestierMurdunna_5 0.19986720 0.03984064 0.7602922  1506\n  M_ForestierMurdunna_2 0.12183436 0.07323751 0.8049281  1461\n  F_ForestierMurdunna_8 0.15145228 0.06431535 0.7842324  1446\n  M_ForestierMurdunna_4 0.20176630 0.04211957 0.7561141  1472\n  F_ForestierMurdunna_1 0.21088435 0.03945578 0.7496599  1470\n  F_ForestierMurdunna_6 0.13034623 0.06992532 0.7997284  1473\n  M_ForestierMurdunna_7 0.18199737 0.04664915 0.7713535  1522\n  F_ForestierMurdunna_7 0.15210140 0.06470981 0.7831888  1499\n       M_MariaIsland_10 0.13666667 0.06466667 0.7986667  1500\n  F_ForestierMurdunna_5 0.17647059 0.04464918 0.7788802  1411\n  M_ForestierMurdunna_3 0.15633423 0.05997305 0.7836927  1484\n      F_MariaIsland_101 0.20630019 0.04570723 0.7479926  1619\n        M_MariaIsland_1 0.21591610 0.05120296 0.7328809  1621\n      M_MariaIsland_102 0.19385194 0.04893350 0.7572146  1594\n      M_MariaIsland_101 0.18607595 0.06139241 0.7525316  1580\n      M_MariaIsland_103 0.17841270 0.06476190 0.7568254  1575\n          U_Buckland_10 0.22365196 0.05392157 0.7224265  1632\n          U_Buckland_12 0.21782178 0.05693069 0.7252475  1616\n          U_Buckland_14 0.21113831 0.05936353 0.7294982  1634\n          U_Buckland_15 0.20519159 0.06427689 0.7305315  1618\n          U_Buckland_16 0.14285714 0.10518053 0.7519623  1274\n          U_Buckland_18 0.21723077 0.05107692 0.7316923  1625\n          U_Buckland_19 0.21568627 0.04289216 0.7414216  1632\n  F_ForestierMurdunna_3 0.18404118 0.04633205 0.7696268  1554\n                F_IP_10 0.16167665 0.06719894 0.7711244  1503\n  M_ForestierMurdunna_1 0.18642993 0.04375396 0.7698161  1577\n  M_ForestierMurdunna_6 0.17256637 0.06005057 0.7673831  1582\n  M_ForestierMurdunna_8 0.15786040 0.05936073 0.7827789  1533\n                 M_IP_1 0.19079755 0.06196319 0.7472393  1630\n      M_MariaIsland_100 0.15374593 0.06905537 0.7771987  1535\n      M_MariaIsland_104 0.17524510 0.06372549 0.7610294  1632\n          U_Woolnorth_1 0.15837937 0.07612032 0.7655003  1629\n          U_Woolnorth_2 0.17460317 0.05433455 0.7710623  1638\n          U_Woolnorth_3 0.13292308 0.07876923 0.7883077  1625\n          U_Woolnorth_4 0.14769231 0.08492308 0.7673846  1625\n          U_Woolnorth_5 0.14628150 0.06945298 0.7842655  1627\n         U_Woolnorth_10 0.14972274 0.06962415 0.7806531  1623\n         U_Woolnorth_11 0.16002491 0.06911582 0.7708593  1606\n         U_Woolnorth_12 0.16469857 0.07147296 0.7638285  1609\n         U_Woolnorth_13 0.15136476 0.06513648 0.7834988  1612\n         U_Woolnorth_14 0.16594695 0.07896360 0.7550895  1621\n         U_Woolnorth_15 0.16717886 0.07621389 0.7566073  1627\n         U_Woolnorth_16 0.15040398 0.08390305 0.7656930  1609\n         U_Woolnorth_17 0.16717886 0.06637984 0.7664413  1627\n  U_ForestierMurdunna_1 0.19389027 0.06795511 0.7381546  1604\n    U_TasmanPeninsula_1 0.17458359 0.06539173 0.7600247  1621\n    U_TasmanPeninsula_2 0.20858896 0.04846626 0.7429448  1630\n    U_TasmanPeninsula_3 0.16369231 0.05292308 0.7833846  1625\n    U_TasmanPeninsula_4 0.14108142 0.07520199 0.7837166  1609\n    U_TasmanPeninsula_5 0.20000000 0.04135802 0.7586420  1620\n    U_TasmanPeninsula_6 0.18164910 0.05021699 0.7681339  1613\n    U_TasmanPeninsula_7 0.17650677 0.05473555 0.7687577  1626\n   U_TasmanPeninsula_10 0.09591584 0.09467822 0.8094059  1616\n   U_TasmanPeninsula_11 0.18734491 0.05210918 0.7605459  1612\n               M_IP_101 0.19631902 0.06012270 0.7435583  1630\n               M_IP_100 0.19159456 0.06613103 0.7422744  1618\n               F_IP_104 0.21136225 0.04276115 0.7458766  1637\n               F_IP_106 0.23870574 0.05067155 0.7106227  1638\n               M_IP_107 0.22167183 0.05077399 0.7275542  1615\n               F_IP_100 0.20158343 0.05846529 0.7399513  1642\n               M_IP_105 0.21340713 0.05535055 0.7312423  1626\n               F_IP_102 0.20599022 0.06662592 0.7273839  1636\n               F_IP_103 0.20689655 0.06958128 0.7235222  1624\n               M_IP_102 0.23967961 0.05237215 0.7079482  1623\n               M_IP_103 0.16656461 0.06674832 0.7666871  1633\n               F_IP_101 0.18571429 0.05652174 0.7577640  1610\n               F_IP_105 0.19975490 0.06004902 0.7401961  1632\n               F_IP_107 0.19378428 0.05362584 0.7525899  1641\n               M_IP_106 0.19531731 0.06592730 0.7387554  1623\n               M_IP_104 0.19583843 0.06854345 0.7356181  1634\n        F_Narawntapu_11 0.18839676 0.06550218 0.7461011  1603\n        F_Narawntapu_12 0.21589487 0.05193992 0.7321652  1598\n        F_Narawntapu_13 0.20415879 0.05040958 0.7454316  1587\n        F_Narawntapu_15 0.20000000 0.07586207 0.7241379  1595\n        F_Narawntapu_16 0.20312500 0.05750000 0.7393750  1600\n        F_Narawntapu_17 0.19328264 0.05830165 0.7484157  1578\n        F_Narawntapu_18 0.18730554 0.04729309 0.7654014  1607\n      F_RobbinsIsland_3 0.12991128 0.07287706 0.7972117  1578\n      F_RobbinsIsland_6 0.13215859 0.08999371 0.7778477  1589\n        M_Narawntapu_12 0.21695130 0.04996837 0.7330803  1581\n        M_Narawntapu_13 0.19397363 0.04770873 0.7583176  1593\n        M_Narawntapu_14 0.17553957 0.05611511 0.7683453  1390\n      M_RobbinsIsland_1 0.14038343 0.08225108 0.7773655  1617\n      M_RobbinsIsland_2 0.14860681 0.07244582 0.7789474  1615\n      M_RobbinsIsland_4 0.13000000 0.08125000 0.7887500  1600\n      M_RobbinsIsland_7 0.12083333 0.07777778 0.8013889  1440\n      M_RobbinsIsland_8 0.14285714 0.08208020 0.7750627  1596\n      M_RobbinsIsland_9 0.15166461 0.08508015 0.7632552  1622\n     M_RobbinsIsland_10 0.09255242 0.11424440 0.7932032  1383\n     M_RobbinsIsland_11 0.11124845 0.09332509 0.7954265  1618\n     M_RobbinsIsland_12 0.14996849 0.08002520 0.7700063  1587\n      F_MariaIsland_102 0.19093851 0.05048544 0.7585761  1545\n      F_MariaIsland_103 0.18941868 0.05094709 0.7596342  1531\n      F_MariaIsland_105 0.05405405 0.11261261 0.8333333   444\n           M_wukalina_1 0.15709091 0.06545455 0.7774545  1375\n         F_StonyHead_18 0.16919026 0.05266623 0.7781435  1519\n          F_wukalina_17 0.18232429 0.04592902 0.7717467  1437\n           F_Buckland_1 0.18911375 0.05512910 0.7557572  1433\n           F_Buckland_2 0.18321119 0.05729514 0.7594937  1501\n           F_Buckland_4 0.19346405 0.05228758 0.7542484  1530\n           F_Buckland_5 0.21354167 0.04036458 0.7460938  1536\n           M_Buckland_1 0.19486504 0.04871626 0.7564187  1519\n         M_StonyHead_10 0.15522985 0.07195203 0.7728181  1501\n         M_StonyHead_17 0.16979866 0.05906040 0.7711409  1490\n         M_StonyHead_18 0.19462228 0.05121639 0.7541613  1562\n          M_wukalina_14 0.17203608 0.07216495 0.7557990  1552\n           M_Buckland_2 0.19281915 0.04055851 0.7666223  1504\n           M_Buckland_3 0.17529331 0.05452036 0.7701863  1449\n         F_Fentonbury_3 0.21660182 0.05317769 0.7302205  1542\n         F_Fentonbury_4 0.17603250 0.06364252 0.7603250  1477\n         F_Fentonbury_6 0.22122762 0.05179028 0.7269821  1564\n        F_Fentonbury_10 0.18110236 0.07152231 0.7473753  1524\n        F_Fentonbury_14 0.19901547 0.04641350 0.7545710  1422\n        F_Fentonbury_15 0.18444730 0.06876607 0.7467866  1556\n        F_Fentonbury_16 0.15643713 0.07934132 0.7642216  1336\n        F_Fentonbury_18 0.22006472 0.04854369 0.7313916  1545\n        F_Fentonbury_19 0.16122715 0.07702350 0.7617493  1532\n        F_Fentonbury_21 0.18402556 0.06964856 0.7463259  1565\n         M_Fentonbury_1 0.05645161 0.14314516 0.8004032   496\n         M_Fentonbury_2 0.16357388 0.06185567 0.7745704  1455\n         M_Fentonbury_5 0.14184953 0.08542320 0.7727273  1276\n         M_Fentonbury_8 0.18750000 0.06119792 0.7513021  1536\n         M_Fentonbury_9 0.19763092 0.05673317 0.7456359  1604\n        M_Fentonbury_10 0.20195440 0.05602606 0.7420195  1535\n        M_Fentonbury_11 0.20616570 0.05716121 0.7366731  1557\n        M_Fentonbury_12 0.18990890 0.06377015 0.7463210  1427\n        M_Fentonbury_13 0.19751472 0.06213211 0.7403532  1529\n        M_Fentonbury_14 0.10676835 0.10867493 0.7845567  1049\n        M_Narawntapu_16 0.14798206 0.04708520 0.8049327   446\n        M_Narawntapu_17 0.16179775 0.05842697 0.7797753  1335\n        M_Narawntapu_18 0.17898194 0.05911330 0.7619048  1218\n   U_TasmanPeninsula_13 0.21032505 0.05863607 0.7310389  1569\n      F_MariaIsland_106 0.13262999 0.08590806 0.7814619  1327\n                M_IP_10 0.10912191 0.12190963 0.7689685  1173\n    M_TasmanPeninsula_1 0.17071651 0.06417445 0.7651090  1605\n    M_TasmanPeninsula_2 0.15580385 0.05772812 0.7864680  1611\n    M_TasmanPeninsula_3 0.20261845 0.04114713 0.7562344  1604\n    F_TasmanPeninsula_1 0.16666667 0.05555556 0.7777778  1602\n    F_TasmanPeninsula_2 0.17814277 0.04927353 0.7725837  1583\n    F_TasmanPeninsula_3 0.16781465 0.07388854 0.7582968  1597\n    M_TasmanPeninsula_5 0.19569231 0.05292308 0.7513846  1625\n           F_wukalina_1 0.19888129 0.05717837 0.7439403  1609\n          F_wukalina_10 0.17635659 0.05167959 0.7719638  1548\n          F_wukalina_11 0.22107969 0.03856041 0.7403599  1556\n          F_wukalina_12 0.17354839 0.06322581 0.7632258  1550\n          F_wukalina_13 0.20093771 0.03482920 0.7642331  1493\n          F_wukalina_14 0.13440111 0.09401114 0.7715877  1436\n          F_wukalina_15 0.18163934 0.05377049 0.7645902  1525\n          F_wukalina_16 0.20420624 0.05698779 0.7388060  1474\n    M_TasmanPeninsula_4 0.14019851 0.07133995 0.7884615  1612\n    M_TasmanPeninsula_6 0.15613148 0.06826802 0.7756005  1582\n          M_wukalina_10 0.19530755 0.05136335 0.7533291  1577\n          M_wukalina_11 0.16431925 0.07712944 0.7585513  1491\n          M_wukalina_12 0.19670051 0.05647208 0.7468274  1576\n          M_wukalina_13 0.17337662 0.07337662 0.7532468  1540\n          M_wukalina_15 0.18699690 0.06439628 0.7486068  1615\n          M_wukalina_16 0.16923077 0.06666667 0.7641026  1560\n          M_wukalina_18 0.15352408 0.07676204 0.7697139  1433\n          F_StonyHead_1 0.17728707 0.06750789 0.7552050  1585\n             F_Bronte_1 0.18263091 0.06577267 0.7515964  1566\n             F_Bronte_2 0.17739899 0.05429293 0.7683081  1584\n             F_Bronte_3 0.19204043 0.05748579 0.7504738  1583\n             F_Bronte_4 0.16467463 0.06308101 0.7722444  1506\n             F_Bronte_5 0.18637771 0.07368421 0.7399381  1615\n             F_Bronte_6 0.18204489 0.06172070 0.7562344  1604\n             F_Bronte_7 0.04873294 0.11890838 0.8323587   513\n             F_Bronte_8 0.20313480 0.06645768 0.7304075  1595\n             F_Bronte_9 0.19195046 0.05510836 0.7529412  1615\n         F_StonyHead_12 0.17323327 0.06253909 0.7642276  1599\n            F_Bronte_10 0.08850458 0.12512716 0.7863683   983\n            F_Bronte_11 0.17531646 0.06898734 0.7556962  1580\n            F_Kempton_1 0.19667944 0.04725415 0.7560664  1566\n            F_Kempton_3 0.17910448 0.04228856 0.7786070  1608\n          F_wukalina_18 0.17916925 0.05703658 0.7637942  1613\n            F_Kempton_6 0.18659987 0.05322480 0.7601753  1597\n            F_Kempton_7 0.17816813 0.05959849 0.7622334  1594\n            M_Kempton_1 0.19900806 0.05269684 0.7482951  1613\n            M_Kempton_2 0.21725636 0.05586592 0.7268777  1611\n             M_Bronte_1 0.19739292 0.06579764 0.7368094  1611\n             M_Bronte_2 0.20625000 0.06625000 0.7275000  1600\n             M_Bronte_3 0.19228376 0.07093964 0.7367766  1607\n             M_Bronte_4 0.21777222 0.05944931 0.7227785  1598\n             M_Bronte_5 0.19901112 0.05871446 0.7422744  1618\n             M_Bronte_6 0.20917085 0.06155779 0.7292714  1592\n             M_Bronte_7 0.21036205 0.05617978 0.7334582  1602\n             M_Bronte_8 0.08240223 0.11033520 0.8072626  1432\n             M_Bronte_9 0.17920918 0.06058673 0.7602041  1568\n         M_StonyHead_13 0.16434893 0.06131479 0.7743363  1582\n         M_StonyHead_14 0.19003115 0.05358255 0.7563863  1605\n         M_StonyHead_15 0.15590346 0.07762557 0.7664710  1533\n            M_Kempton_3 0.17402769 0.06526038 0.7607119  1517\n            M_Kempton_5 0.20838548 0.05819775 0.7334168  1598\n           M_Kempton_12 0.22919255 0.06956522 0.7012422  1610\n           M_Kempton_13 0.19394330 0.06185567 0.7442010  1552\n          M_wukalina_17 0.18134715 0.06217617 0.7564767  1544\n       F_SilverPlains_1 0.16456536 0.06967485 0.7657598  1507\n       F_SilverPlains_2 0.19383260 0.05475142 0.7514160  1589\n      F_MariaIsland_107 0.19335142 0.05630936 0.7503392  1474\n       F_SilverPlains_3 0.21055980 0.05597964 0.7334606  1572\n       F_SilverPlains_4 0.18227848 0.06012658 0.7575949  1580\n       F_SilverPlains_5 0.19872204 0.05942492 0.7418530  1565\n       F_SilverPlains_6 0.18431635 0.05630027 0.7593834  1492\n       F_SilverPlains_7 0.14950635 0.07968970 0.7708039  1418\n       F_SilverPlains_8 0.18705958 0.05957719 0.7533632  1561\n       F_SilverPlains_9 0.19177215 0.06455696 0.7436709  1580\n      F_SilverPlains_10 0.16237482 0.06938484 0.7682403  1398\n      F_SilverPlains_11 0.23975155 0.04285714 0.7173913  1610\n      F_SilverPlains_12 0.20200753 0.06273526 0.7352572  1594\n       M_SilverPlains_1 0.18847840 0.06261741 0.7489042  1597\n       M_SilverPlains_2 0.16106443 0.07983193 0.7591036  1428\n       M_SilverPlains_3 0.20353982 0.06131479 0.7351454  1582\n       M_SilverPlains_4 0.17245817 0.08108108 0.7464607  1554\n       M_SilverPlains_5 0.14236824 0.09445585 0.7631759  1461\n       M_SilverPlains_6 0.18292683 0.05969191 0.7573813  1558\n       M_SilverPlains_7 0.19748428 0.06729560 0.7352201  1590\n       M_SilverPlains_8 0.19764560 0.07001239 0.7323420  1614\n          M_Woolnorth_3 0.15009265 0.06547251 0.7844348  1619\n  F_GranvilleHarbour_10 0.20335700 0.05616527 0.7404777  1549\n  F_GranvilleHarbour_11 0.16181449 0.07109005 0.7670955  1477\n  F_GranvilleHarbour_12 0.18520860 0.05941846 0.7553729  1582\n  F_GranvilleHarbour_13 0.15682415 0.06824147 0.7749344  1524\n  F_GranvilleHarbour_14 0.14406230 0.07852044 0.7774173  1541\n  F_GranvilleHarbour_15 0.20038660 0.07087629 0.7287371  1552\n  F_GranvilleHarbour_16 0.09542484 0.09215686 0.8124183  1530\n  F_GranvilleHarbour_17 0.19530755 0.05960685 0.7450856  1577\n  F_GranvilleHarbour_18 0.17394095 0.06482670 0.7612323  1558\n         F_Narawntapu_1 0.19973280 0.03540414 0.7648631  1497\n         F_StonyHead_10 0.16871364 0.06528765 0.7659987  1547\n         F_StonyHead_11 0.17965229 0.05280103 0.7675467  1553\n         F_StonyHead_13 0.19610390 0.06168831 0.7422078  1540\n         F_StonyHead_14 0.18045603 0.04039088 0.7791531  1535\n        F_Narawntapu_10 0.20251489 0.06353408 0.7339510  1511\n  M_GranvilleHarbour_10 0.17857143 0.06265664 0.7587719  1596\n  M_GranvilleHarbour_11 0.16869788 0.07119949 0.7601026  1559\n  M_GranvilleHarbour_12 0.19038462 0.06410256 0.7455128  1560\n  M_GranvilleHarbour_13 0.17773561 0.06325111 0.7590133  1581\n  M_GranvilleHarbour_14 0.17289424 0.07093097 0.7561748  1579\n  M_GranvilleHarbour_15 0.16987179 0.06602564 0.7641026  1560\n  M_GranvilleHarbour_16 0.16519973 0.07582938 0.7589709  1477\n  M_GranvilleHarbour_17 0.17517241 0.06620690 0.7586207  1450\n  M_GranvilleHarbour_18 0.16502947 0.06417813 0.7707924  1527\n         M_StonyHead_12 0.18063678 0.06692658 0.7524366  1539\n         M_StonyHead_16 0.18981772 0.05468259 0.7554997  1591\n        M_Narawntapu_11 0.13982180 0.07128170 0.7888965  1459\n        F_MariaIsland_1 0.18115942 0.06280193 0.7560386  1656\n       F_MariaIsland_10 0.15974026 0.06038961 0.7798701  1540\n  F_ForestierMurdunna_9 0.18822101 0.05585914 0.7559199  1647\n   F_GranvilleHarbour_1 0.19661222 0.06896552 0.7344223  1653\n      F_MariaIsland_104 0.16053922 0.07352941 0.7659314  1632\n          F_Woolnorth_1 0.14207981 0.07557437 0.7823458  1654\n         F_StonyHead_16 0.18359853 0.04957160 0.7668299  1634\n         F_StonyHead_17 0.17675378 0.04470426 0.7785420  1454\n            F_Kempton_2 0.19413919 0.06593407 0.7399267  1638\n            F_Kempton_4 0.18328173 0.07058824 0.7461300  1615\n          F_Woolnorth_3 0.14459295 0.07594168 0.7794654  1646\n          F_Woolnorth_4 0.12719564 0.09085403 0.7819503  1651\n           F_Buckland_3 0.18329177 0.06172070 0.7549875  1604\n      F_RobbinsIsland_1 0.15333333 0.07272727 0.7739394  1650\n      F_RobbinsIsland_2 0.13534743 0.07794562 0.7867069  1655\n      F_RobbinsIsland_4 0.13677812 0.07963526 0.7835866  1645\n      F_RobbinsIsland_5 0.14905315 0.07452657 0.7764203  1637\n      F_RobbinsIsland_7 0.12484700 0.08935129 0.7858017  1634\n      F_RobbinsIsland_8 0.14070048 0.08454106 0.7747585  1656\n  M_ForestierMurdunna_9 0.18574109 0.05565979 0.7585991  1599\n      M_MariaIsland_105 0.15175333 0.07496977 0.7732769  1654\n      M_MariaIsland_106 0.16080097 0.06250000 0.7766990  1648\n      M_MariaIsland_107 0.15932408 0.06578153 0.7748944  1657\n          M_Woolnorth_1 0.16266174 0.06284658 0.7744917  1623\n   M_GranvilleHarbour_1 0.12008005 0.09939960 0.7805203  1499\n          M_StonyHead_1 0.16180049 0.06021898 0.7779805  1644\n         M_StonyHead_11 0.18661756 0.05524862 0.7581338  1629\n            M_Kempton_4 0.16919345 0.06791995 0.7628866  1649\n            M_Kempton_6 0.15271266 0.08037508 0.7669123  1493\n            M_Kempton_7 0.18624467 0.06634206 0.7474133  1643\n            M_Kempton_8 0.19657073 0.07103491 0.7323944  1633\n           M_Kempton_10 0.19660194 0.07099515 0.7324029  1648\n           M_Kempton_11 0.20255474 0.06690998 0.7305353  1644\n           M_Kempton_14 0.19547954 0.07697007 0.7275504  1637\n          M_Woolnorth_2 0.12515115 0.09854897 0.7762999  1654\n        M_Narawntapu_15 0.19236527 0.05988024 0.7477545  1336\n        M_Narawntapu_19 0.16601101 0.07002360 0.7639654  1271\n      M_RobbinsIsland_3 0.14062500 0.07625000 0.7831250  1600\n      M_RobbinsIsland_5 0.13834951 0.09223301 0.7694175  1648\n      M_RobbinsIsland_6 0.16494845 0.06428138 0.7707702  1649\n           U_Buckland_1 0.21246973 0.05811138 0.7294189  1652\n           U_Buckland_2 0.21372192 0.04918033 0.7370978  1647\n          U_Buckland_11 0.13101983 0.09419263 0.7747875  1412\n          U_Buckland_13 0.21783981 0.04975728 0.7324029  1648\n          U_Buckland_17 0.21173624 0.05686630 0.7313975  1653\n   U_TasmanPeninsula_12 0.13308271 0.06390977 0.8030075  1330\n  F_ForestierMurdunna_2 0.18864469 0.04761905 0.7637363  1638\n F_ForestierMurdunna_10 0.17819963 0.05756277 0.7642376  1633\n         F_StonyHead_15 0.19199500 0.06003752 0.7479675  1599\n                 F_IP_1 0.17046980 0.04832215 0.7812081  1490\n      F_MariaIsland_100 0.20231566 0.04509445 0.7525899  1641\n        F_Narawntapu_14 0.20945946 0.05466830 0.7358722  1628\n            F_Kempton_5 0.19515152 0.06727273 0.7375758  1650\n          F_Woolnorth_2 0.13934929 0.08901166 0.7716390  1629\n        M_Narawntapu_10 0.18390805 0.05747126 0.7586207  1653\nCompleted: gl.report.heterozygosity"
  },
  {
    "objectID": "session06.html#genetic-differentiation-by-fst",
    "href": "session06.html#genetic-differentiation-by-fst",
    "title": "6  Management of Small Populations",
    "section": "Genetic differentiation by Fst",
    "text": "Genetic differentiation by Fst\nCalculate pairwise Fsts between populations.\n\n\n\n\n\n\nQuestions\n\n\n\n\nWhich populations have the largest pairwise Fst value? Where are these populations located?\nCompare the largest Fst value with the PCoA you made earlier. What do you notice?\n\n\n\n\nfsts &lt;- gl.fst.pop(gl, nboots=1000, percent=95)\n\nStarting gl.fst.pop \n  Processing genlight object with SNP data\nCompleted: gl.fst.pop \n\nknitr::kable((fsts$Fsts))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nForestierMurdunna\nMariaIsland\nBuckland\nIP\nWoolnorth\nTasmanPeninsula\nNarawntapu\nRobbinsIsland\nwukalina\nStonyHead\nFentonbury\nBronte\nKempton\nSilverPlains\nGranvilleHarbour\n\n\n\n\nForestierMurdunna\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nMariaIsland\n0.1346500\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nBuckland\n0.0568221\n0.0788518\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nIP\n0.1041750\n0.0231554\n0.0567298\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nWoolnorth\n0.2373155\n0.0548044\n0.1739492\n0.0768758\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nTasmanPeninsula\n0.0524833\n0.1634699\n0.0829025\n0.1339067\n0.2635033\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nNarawntapu\n0.0855470\n0.0858841\n0.0392806\n0.0615039\n0.1814649\n0.1174716\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nRobbinsIsland\n0.2658930\n0.0867077\n0.2044683\n0.1058499\n0.0280268\n0.2907933\n0.2120205\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nwukalina\n0.0507242\n0.0855357\n0.0323424\n0.0693547\n0.1801609\n0.0815693\n0.0650390\n0.2151210\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nStonyHead\n0.0668713\n0.1189039\n0.0509139\n0.0960205\n0.2152713\n0.1122056\n0.0817068\n0.2478265\n0.0378314\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nFentonbury\n0.0939038\n0.0843563\n0.0432185\n0.0635508\n0.1822320\n0.1356670\n0.0574654\n0.2079110\n0.0737230\n0.0829380\nNA\nNA\nNA\nNA\nNA\n\n\nBronte\n0.0986718\n0.0763497\n0.0357917\n0.0562609\n0.1713195\n0.1300950\n0.0516530\n0.2017686\n0.0696216\n0.0806497\n0.0352924\nNA\nNA\nNA\nNA\n\n\nKempton\n0.0710744\n0.0788403\n0.0214033\n0.0548573\n0.1766772\n0.1035863\n0.0440770\n0.2061925\n0.0589966\n0.0706943\n0.0239896\n0.0253648\nNA\nNA\nNA\n\n\nSilverPlains\n0.0818363\n0.0808022\n0.0248552\n0.0631806\n0.1793981\n0.1164515\n0.0492987\n0.2060891\n0.0599891\n0.0738297\n0.0363218\n0.0272491\n0.0190234\nNA\nNA\n\n\nGranvilleHarbour\n0.1694356\n0.0293449\n0.1064916\n0.0431234\n0.0792053\n0.1949472\n0.1074621\n0.1096676\n0.1240690\n0.1529316\n0.1034213\n0.0977384\n0.0980752\n0.1004295\nNA\n\n\n\n\n#summary(fsts$Fsts)"
  },
  {
    "objectID": "useful.html#download-bash-script",
    "href": "useful.html#download-bash-script",
    "title": "More info",
    "section": "download bash script",
    "text": "download bash script\n\n\n\n\n\n\n Download Binaries (Windows)"
  },
  {
    "objectID": "useful.html#download-binaries-software",
    "href": "useful.html#download-binaries-software",
    "title": "More info",
    "section": "Download Binaries (software)",
    "text": "Download Binaries (software)\n\n\n\n\n\n\n Download Binaries (Windows)"
  },
  {
    "objectID": "session10.html#more-exercises",
    "href": "session10.html#more-exercises",
    "title": "10  Sex Linked Markers",
    "section": "More EXERCISES",
    "text": "More EXERCISES\n\n\n\n\n\n\nExercise\n\n\n\n\nImagine you are analyzing the genetic data of a population and you want to look at its genetic structure and genetic diversity. You get to work by filtering your beautiful set of SNPs. Because you are a rigorous, you want to test whether using function filter.sex.linked to properly filter out sex-linked loci changes the results of the populations analyses. So you: (1) process your SNP dataset by applying standard filters and run analyses, and (2) process the dataset by filtering out sex-linked loci first, applying standard filters second, and then run analyses.\nChoose one of the following datasets (or your own data) and report:\n\nHow many sex-linked markers are present?\nHow many individuals had a wrong sexID?\nDo you see any changes in your PCA/structure analyses when you filtered out sex-linked markers versus when you did not?\nDo you see any differences in genetic diversity and fixation indices when you filtered out sex-linked markers versus when you did not?\n\n\n\n \n \n\nExercise data 1 - Your own data\n\nHINT\nYou can have a look at the exercise data below for inspiration.\n\n\n\n\n\n\n\nExercise - Your own data\n\n\n\n\nNumber of sex-linked markers?\nIndividuals with wrong sexID?\nChanges in PCA before and after removing the SLM?\nDifferences in genetic diversity and fixation indices between autosomal and SLM?\n\n\n\n\n\nExercise data 2 - The Eastern Yellow Robin\nData from Robledo-Ruiz et al. (2023)\n\n\n\nThe Eastern Yellow Robin\n\n\n\nLoad data\n\ndata(\"EYR\")\n\nEYR@n.loc\ntable(EYR@pop)\ntable(EYR@other$ind.metrics$pop)\ntable(EYR@other$ind.metrics$sex, useNA = \"ifany\")\n\n[1] 1000\n\n    Crusoe Muckleford      Timor     Wombat \n       238        421         52         71 \n\n    Crusoe Muckleford      Timor     Wombat \n       238        421         52         71 \n\n      F   M \n  1 352 429 \n\n\n\n\n1. Number of sex-linked markers?\n\nres &lt;- dartR.sexlinked::filter.sex.linked(gl = EYR, system = \"zw\")\n\nDetected 352 females and 429 males.\n\n\nStarting phase 1. May take a while...\n\n\nBuilding call rate plots.\n\n\n\n\n\nDone. Starting phase 2.\n\n\nBuilding heterozygosity plots.\n\n\n\n\n\n\n\n\nDone building heterozygosity plots.\n\n\n**FINISHED** Total of analyzed loci: 1000.\nFound 150 sex-linked loci:\n   16 W-linked loci\n   82 sex-biased loci\n   32 Z-linked loci\n   20 ZW gametologs.\nAnd 850 autosomal loci.\n\n\n\n\n\n\n\n2. Individuals with wrong sexID?\n\nsexID &lt;- dartR.sexlinked::infer.sex(gl_sex_filtered = res, system = \"zw\",\n    seed = 124)\n\n***FINISHED***\n\nknitr::kable(head(sexID))\n\nsum(EYR$other$ind.metrics$sex != sexID$agreed.sex, na.rm = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nid\nw.linked.sex\n#missing\n#called\nz.linked.sex\n#Hom.z\n#Het.z\ngametolog.sex\n#Hom.g\n#Het.g\nagreed.sex\n\n\n\n\n024-96401\n024-96401\nM\n0\n16\nM\n7\n25\nM\n0\n5\nM\n\n\n024-96401b\n024-96401b\nM\n0\n16\nM\n9\n21\nM\n0\n5\nM\n\n\n024-96402\n024-96402\nF\n15\n1\nF\n0\n32\nF\n5\n0\nF\n\n\n024-96403\n024-96403\nM\n1\n15\nM\n11\n21\nM\n0\n5\nM\n\n\n024-96404\n024-96404\nM\n0\n16\nM\n12\n20\nM\n0\n5\nM\n\n\n024-96405\n024-96405\nM\n0\n16\nM\n11\n21\nM\n0\n5\nM\n\n\n\n\n\n[1] 55\n\n\n\n\n\n\n\n\nExercise\n\n\n\n\nCan you tell which misidentified sexes are due to uncertain genetic sex (indicated with *)?\nHINT Try using grep(pattern = \"\\\\*\", x = sexID$agreed.sex)\n\n\n\n\nProcessing SNPs with two filtering regimes\n\nFiltering SNPs only with standard filters (sloppy)\n\n# Filter for read depth\ndartR.base::gl.report.rdepth(EYR)  # This is the initial dataset\n\nStarting :: \n Starting dartR.base \n Starting gl.report.rdepth \n  Processing genlight object with SNP data\n  Reporting Read Depth by Locus\n  No. of loci = 1000 \n  No. of individuals = 782 \n    Minimum      :  2.6 \n    1st quartile :  4.3 \n    Median       :  5.6 \n    Mean         :  5.9649 \n    3r quartile  :  7.325 \n    Maximum      :  13.2 \n    Missing Rate Overall:  0.19 \n\n\n\n\n\n   Quantile Threshold Retained Percent Filtered Percent\n1      100%      13.2        1     0.1      999    99.9\n2       95%       9.9       51     5.1      949    94.9\n3       90%       9.0      105    10.5      895    89.5\n4       85%       8.3      151    15.1      849    84.9\n5       80%       7.8      208    20.8      792    79.2\n6       75%       7.3      258    25.8      742    74.2\n7       70%       6.9      304    30.4      696    69.6\n8       65%       6.5      354    35.4      646    64.6\n9       60%       6.2      404    40.4      596    59.6\n10      55%       5.9      451    45.1      549    54.9\n11      50%       5.6      504    50.4      496    49.6\n12      45%       5.3      563    56.3      437    43.7\n13      40%       5.1      602    60.2      398    39.8\n14      35%       4.8      659    65.9      341    34.1\n15      30%       4.6      702    70.2      298    29.8\n16      25%       4.3      752    75.2      248    24.8\n17      20%       4.0      823    82.3      177    17.7\n18      15%       3.9      852    85.2      148    14.8\n19      10%       3.6      906    90.6       94     9.4\n20       5%       3.3      956    95.6       44     4.4\n21       0%       2.6     1000   100.0        0     0.0\nCompleted: :: \n Completed: dartR.base \n Completed: gl.report.rdepth \n\nEYR.sloppy &lt;- dartR.base::gl.filter.rdepth(EYR, lower = 3, upper = 11, verbose = 0)\n\n\n\n# Filter for loci call rate\ndartR.base::gl.report.callrate(EYR.sloppy, method = \"loc\")\n\nStarting :: \n Starting dartR.base \n Starting gl.report.callrate \n  Processing genlight object with SNP data\n  Reporting Call Rate by Locus\n  No. of loci = 958 \n  No. of individuals = 782 \n    Minimum      :  0.20844 \n    1st quartile :  0.7202688 \n    Median       :  0.895141 \n    Mean         :  0.8131871 \n    3r quartile  :  0.950128 \n    Maximum      :  0.988491 \n    Missing Rate Overall:  0.1868 \n\n\n\n\n\nCompleted: :: \n Completed: dartR.base \n Completed: gl.report.callrate \n\nEYR.sloppy &lt;- dartR.base::gl.filter.callrate(EYR.sloppy, method = \"loc\",\n    threshold = 0.75, verbose = 0, recalc = TRUE)\n\n# Filter for individual call rate\ndartR.base::gl.report.callrate(EYR.sloppy, method = \"ind\")\n\nStarting :: \n Starting dartR.base \n Starting gl.report.callrate \n  Processing genlight object with SNP data\n\n  Reporting Call Rate by Individual\n  No. of loci = 703 \n  No. of individuals = 782 \n    Minimum      :  0.03556188 \n    1st quartile :  0.9174964 \n    Median       :  0.9416785 \n    Mean         :  0.9108097 \n    3r quartile  :  0.9573257 \n    Maximum      :  0.9829303 \n    Missing Rate Overall:  0.0892 \n\nListing 4 populations and their average CallRates\n  Monitor again after filtering\n  Population CallRate   N\n1     Crusoe   0.9027 238\n2 Muckleford   0.9073 421\n3      Timor   0.9402  52\n4     Wombat   0.9371  71\n\nListing 20 individuals with the lowest CallRates\n  Use this list to see which individuals will be lost on filtering by individual\n  Set ind.to.list parameter to see more individuals\n   Individual   CallRate\n1    M18.29.1 0.03556188\n2    M18.18.1 0.03982930\n3    M18.47.2 0.06970128\n4    C18.16.1 0.07112376\n5   027-34168 0.07681366\n6    C18.15.2 0.08534851\n7    C18.21.2 0.08677098\n8    M18.47.3 0.14224751\n9    M18.35.2 0.17211949\n10   M18.20.3 0.24039829\n11   M20.70.2 0.39687055\n12   C18.28.1 0.39971550\n13   C18.17.2 0.46088193\n14  027-34065 0.50640114\n15   C18.14.1 0.50640114\n16   M20.70.3 0.50782361\n17  M20.110.1 0.52347084\n18   M19.12.1 0.53342817\n19    M19.8.1 0.54907539\n20   M20.64.3 0.56045519\n\n)\n\n\n\n\n\nCompleted: :: \n Completed: dartR.base \n Completed: gl.report.callrate \n\nEYR.sloppy &lt;- dartR.base::gl.filter.callrate(EYR.sloppy, method = \"ind\",\n    threshold = 0.65, verbose = 0, recalc = TRUE)\n# Filter for MAC (= 3)\ndartR.base::gl.report.maf(EYR.sloppy)\n\nStarting :: \n Starting dartR.base \n Starting gl.report.maf \n  Processing genlight object with SNP data\nStarting :: \n\n Starting dartR.base \n\n Starting gl.report.maf \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population Crusoe \n  No. of loci = 670 \n  No. of individuals = 231 \n    Minimum      :  0.0022 \n    1st quantile :  0.064825 \n    Median       :  0.1582 \n    Mean         :  0.1793525 \n    3r quantile  :  0.267475 \n    Maximum      :  0.4975 \n    Missing Rate Overall:  0.08 \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population Muckleford \n  No. of loci = 683 \n  No. of individuals = 401 \n    Minimum      :  0.0013 \n    1st quantile :  0.05875 \n    Median       :  0.1404 \n    Mean         :  0.172949 \n    3r quantile  :  0.2617 \n    Maximum      :  0.4985 \n    Missing Rate Overall:  0.07 \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population Timor \n  No. of loci = 589 \n  No. of individuals = 52 \n    Minimum      :  0.0096 \n    1st quantile :  0.0673 \n    Median       :  0.1667 \n    Mean         :  0.1914129 \n    3r quantile  :  0.2872 \n    Maximum      :  0.5 \n    Missing Rate Overall:  0.06 \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population Wombat \n  No. of loci = 627 \n  No. of individuals = 71 \n    Minimum      :  0.007 \n    1st quantile :  0.06385 \n    Median       :  0.1449 \n    Mean         :  0.1746703 \n    3r quantile  :  0.2542 \n    Maximum      :  0.5 \n    Missing Rate Overall:  0.06 \n\n  Reporting Minor Allele Frequency (MAF) by Locus OVERALL\n  No. of loci = 703 \n  No. of individuals = 755 \n    Minimum      :  3e-04 \n    1st quantile :  0.0627 \n    Median       :  0.13435 \n    Mean         :  0.1696497 \n    3r quantile  :  0.246025 \n    Maximum      :  0.4991 \n    Missing Rate Overall:  0.07 \n\n\n\n\n\n   Quantile Threshold Retained Percent Filtered Percent\n1      100%    0.4991        1     0.1      699    99.9\n2       95%    0.4343       36     5.1      664    94.9\n3       90%    0.3807       71    10.1      629    89.9\n4       85%    0.3331      105    15.0      595    85.0\n5       80%    0.2858      141    20.1      559    79.9\n6       75%    0.2460      176    25.1      524    74.9\n7       70%    0.2233      210    30.0      490    70.0\n8       65%    0.2003      246    35.1      454    64.9\n9       60%    0.1797      280    40.0      420    60.0\n10      55%    0.1562      315    45.0      385    55.0\n11      50%    0.1341      352    50.3      348    49.7\n12      45%    0.1214      386    55.1      314    44.9\n13      40%    0.1032      421    60.1      279    39.9\n14      35%    0.0904      455    65.0      245    35.0\n15      30%    0.0742      490    70.0      210    30.0\n16      25%    0.0627      526    75.1      174    24.9\n17      20%    0.0476      561    80.1      139    19.9\n18      15%    0.0359      595    85.0      105    15.0\n19      10%    0.0224      631    90.1       69     9.9\n20       5%    0.0059      666    95.1       34     4.9\n21       0%    0.0003      700   100.0        0     0.0\nCompleted: :: \n Completed: dartR.base \n Completed: gl.report.maf \n\nEYR.sloppy &lt;- dartR.base::gl.filter.maf(EYR.sloppy, threshold = 3, verbose = 0,\n    recalc = TRUE)\n\nStarting gl.select.colors \n  Warning: Number of required colors not specified, set to 9\n  Library: RColorBrewer\n  Palette: brewer.pal\n  Showing and returning 2 of 9 colors for library RColorBrewer : palette Blues \n\n\n\n\n\nCompleted: gl.select.colors \n\n\n\n\nFiltering SNPs with filter.sex.linked and standard filters (correct)\n\n# Filter for sex-linked loci\ncorrect &lt;- dartR.sexlinked::filter.sex.linked(EYR, system = \"zw\")  # This is the initial dataset\n\n\n\n\n\n\n\n\n\n\n\n\n# We will use correct$autosomal for the next filters\n\n# Filter for read depth\ndartR.base::gl.report.rdepth(correct$autosomal)  # This is the filtered dataset\n\nStarting :: \n Starting dartR.base \n Starting gl.report.rdepth \n  Processing genlight object with SNP data\n  Reporting Read Depth by Locus\n  No. of loci = 850 \n  No. of individuals = 782 \n    Minimum      :  2.6 \n    1st quartile :  4.3 \n    Median       :  5.6 \n    Mean         :  6.008941 \n    3r quartile  :  7.4 \n    Maximum      :  13.2 \n    Missing Rate Overall:  0.18 \n\n\n\n\n\n   Quantile Threshold Retained Percent Filtered Percent\n1      100%      13.2        1     0.1      849    99.9\n2       95%       9.9       45     5.3      805    94.7\n3       90%       9.1       88    10.4      762    89.6\n4       85%       8.4      129    15.2      721    84.8\n5       80%       7.9      173    20.4      677    79.6\n6       75%       7.4      220    25.9      630    74.1\n7       70%       6.9      264    31.1      586    68.9\n8       65%       6.5      305    35.9      545    64.1\n9       60%       6.2      350    41.2      500    58.8\n10      55%       5.9      391    46.0      459    54.0\n11      50%       5.6      435    51.2      415    48.8\n12      45%       5.4      472    55.5      378    44.5\n13      40%       5.1      519    61.1      331    38.9\n14      35%       4.9      555    65.3      295    34.7\n15      30%       4.6      603    70.9      247    29.1\n16      25%       4.3      645    75.9      205    24.1\n17      20%       4.0      705    82.9      145    17.1\n18      15%       3.9      730    85.9      120    14.1\n19      10%       3.6      774    91.1       76     8.9\n20       5%       3.3      812    95.5       38     4.5\n21       0%       2.6      850   100.0        0     0.0\nCompleted: :: \n Completed: dartR.base \n Completed: gl.report.rdepth \n\nEYR.correct &lt;- dartR.base::gl.filter.rdepth(correct$autosomal, lower = 3,\n    upper = 11, verbose = 0)\n\n\n\n# Filter for loci call rate\ndartR.base::gl.report.callrate(EYR.correct, method = \"loc\")\n\nStarting :: \n Starting dartR.base \n Starting gl.report.callrate \n  Processing genlight object with SNP data\n  Reporting Call Rate by Locus\n  No. of loci = 811 \n  No. of individuals = 782 \n    Minimum      :  0.20844 \n    1st quartile :  0.7436065 \n    Median       :  0.900256 \n    Mean         :  0.8192658 \n    3r quartile  :  0.951407 \n    Maximum      :  0.988491 \n    Missing Rate Overall:  0.1807 \n\n\n\n\n\nCompleted: :: \n Completed: dartR.base \n Completed: gl.report.callrate \n\nEYR.correct &lt;- dartR.base::gl.filter.callrate(EYR.correct, method = \"loc\",\n    threshold = 0.75, verbose = 0, recalc = TRUE)\n\n# Filter for individual call rate\ndartR.base::gl.report.callrate(EYR.correct, method = \"ind\")\n\nStarting :: \n Starting dartR.base \n Starting gl.report.callrate \n  Processing genlight object with SNP data\n\n  Reporting Call Rate by Individual\n  No. of loci = 605 \n  No. of individuals = 782 \n    Minimum      :  0.03801653 \n    1st quartile :  0.9173554 \n    Median       :  0.9438017 \n    Mean         :  0.9120479 \n    3r quartile  :  0.9586777 \n    Maximum      :  0.9818182 \n    Missing Rate Overall:  0.088 \n\nListing 4 populations and their average CallRates\n  Monitor again after filtering\n  Population CallRate   N\n1     Crusoe   0.9037 238\n2 Muckleford   0.9090 421\n3      Timor   0.9418  52\n4     Wombat   0.9365  71\n\nListing 20 individuals with the lowest CallRates\n  Use this list to see which individuals will be lost on filtering by individual\n  Set ind.to.list parameter to see more individuals\n   Individual   CallRate\n1    M18.29.1 0.03801653\n2    M18.18.1 0.04462810\n3    M18.47.2 0.06776860\n4    C18.16.1 0.07438017\n5   027-34168 0.08760331\n6    C18.15.2 0.08760331\n7    C18.21.2 0.08760331\n8    M18.47.3 0.13719008\n9    M18.35.2 0.18016529\n10   M18.20.3 0.24132231\n11   C18.28.1 0.41487603\n12   M20.70.2 0.42644628\n13   C18.17.2 0.44628099\n14  027-34065 0.49586777\n15   C18.14.1 0.49752066\n16  M20.110.1 0.53057851\n17   M20.70.3 0.53553719\n18   M19.12.1 0.54380165\n19    M19.8.1 0.56694215\n20   M19.33.2 0.57851240\n\n)\n\n\n\n\n\nCompleted: :: \n Completed: dartR.base \n Completed: gl.report.callrate \n\nEYR.correct &lt;- dartR.base::gl.filter.callrate(EYR.correct, method = \"ind\",\n    threshold = 0.65, verbose = 0, recalc = TRUE)\n# Filter for MAC (= 3)\ndartR.base::gl.report.maf(EYR.correct)\n\nStarting :: \n Starting dartR.base \n Starting gl.report.maf \n  Processing genlight object with SNP data\nStarting :: \n\n Starting dartR.base \n\n Starting gl.report.maf \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population Crusoe \n  No. of loci = 573 \n  No. of individuals = 231 \n    Minimum      :  0.0022 \n    1st quantile :  0.06 \n    Median       :  0.1488 \n    Mean         :  0.1741178 \n    3r quantile  :  0.2646 \n    Maximum      :  0.4975 \n    Missing Rate Overall:  0.08 \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population Muckleford \n  No. of loci = 585 \n  No. of individuals = 401 \n    Minimum      :  0.0013 \n    1st quantile :  0.055 \n    Median       :  0.129 \n    Mean         :  0.163993 \n    3r quantile  :  0.2474 \n    Maximum      :  0.4985 \n    Missing Rate Overall:  0.07 \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population Timor \n  No. of loci = 504 \n  No. of individuals = 52 \n    Minimum      :  0.0096 \n    1st quantile :  0.068275 \n    Median       :  0.1635 \n    Mean         :  0.1898613 \n    3r quantile  :  0.286075 \n    Maximum      :  0.5 \n    Missing Rate Overall:  0.06 \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population Wombat \n  No. of loci = 536 \n  No. of individuals = 71 \n    Minimum      :  0.007 \n    1st quantile :  0.062475 \n    Median       :  0.13805 \n    Mean         :  0.1706063 \n    3r quantile  :  0.2509 \n    Maximum      :  0.5 \n    Missing Rate Overall:  0.06 \n\n  Reporting Minor Allele Frequency (MAF) by Locus OVERALL\n  No. of loci = 605 \n  No. of individuals = 755 \n    Minimum      :  3e-04 \n    1st quantile :  0.058025 \n    Median       :  0.1306 \n    Mean         :  0.1628656 \n    3r quantile  :  0.23785 \n    Maximum      :  0.4991 \n    Missing Rate Overall:  0.07 \n\n\n\n\n\n   Quantile Threshold Retained Percent Filtered Percent\n1      100%    0.4991        1     0.2      601    99.8\n2       95%    0.4367       31     5.1      571    94.9\n3       90%    0.3771       61    10.1      541    89.9\n4       85%    0.3250       91    15.1      511    84.9\n5       80%    0.2747      121    20.1      481    79.9\n6       75%    0.2387      151    25.1      451    74.9\n7       70%    0.2132      181    30.1      421    69.9\n8       65%    0.1916      211    35.0      391    65.0\n9       60%    0.1720      241    40.0      361    60.0\n10      55%    0.1486      271    45.0      331    55.0\n11      50%    0.1306      302    50.2      300    49.8\n12      45%    0.1118      332    55.1      270    44.9\n13      40%    0.0975      362    60.1      240    39.9\n14      35%    0.0808      392    65.1      210    34.9\n15      30%    0.0700      422    70.1      180    29.9\n16      25%    0.0578      452    75.1      150    24.9\n17      20%    0.0445      482    80.1      120    19.9\n18      15%    0.0300      512    85.0       90    15.0\n19      10%    0.0174      542    90.0       60    10.0\n20       5%    0.0046      572    95.0       30     5.0\n21       0%    0.0003      602   100.0        0     0.0\nCompleted: :: \n Completed: dartR.base \n Completed: gl.report.maf \n\nEYR.correct &lt;- dartR.base::gl.filter.maf(EYR.correct, threshold = 3, verbose = 0,\n    recalc = TRUE)\n\nStarting gl.select.colors \n  Warning: Number of required colors not specified, set to 9\n  Library: RColorBrewer\n  Palette: brewer.pal\n  Showing and returning 2 of 9 colors for library RColorBrewer : palette Blues \n\n\n\n\n\nCompleted: gl.select.colors \n\n\n\n\n\n3. Changes in PCA before and after removing the SLM?\n\nPCA on sloppy dataset (only standard filters)\n\nPCA.sloppy &lt;- dartR.base::gl.pcoa(EYR.sloppy, verbose = 0)\ndartR.base::gl.pcoa.plot(PCA.sloppy, EYR.sloppy, xaxis = 1, yaxis = 2)\ndartR.base::gl.pcoa.plot(PCA.sloppy, EYR.sloppy, xaxis = 2, yaxis = 3)\n\nStarting gl.colors \nSelected color type 2 \nCompleted: gl.colors \nStarting :: \n Starting dartR.base \n Starting gl.pcoa.plot \n  Processing an ordination file (glPca)\n  Processing genlight object with SNP data\nPackage directlabels  needed for this function to work. Please install it.\n[1] -1\nStarting :: \n Starting dartR.base \n Starting gl.pcoa.plot \n  Processing an ordination file (glPca)\n  Processing genlight object with SNP data\nPackage directlabels  needed for this function to work. Please install it.\n[1] -1\n\n\n\n\nPCA on correct dataset (filter.sex.linked and standard filters)\n\nPCA.correct &lt;- dartR.base::gl.pcoa(EYR.correct, verbose = 0)\ndartR.base::gl.pcoa.plot(PCA.correct, EYR.correct, xaxis = 1, yaxis = 2)\ndartR.base::gl.pcoa.plot(PCA.correct, EYR.correct, xaxis = 2, yaxis = 3)\n\nStarting gl.colors \nSelected color type 2 \nCompleted: gl.colors \nStarting :: \n Starting dartR.base \n Starting gl.pcoa.plot \n  Processing an ordination file (glPca)\n  Processing genlight object with SNP data\nPackage directlabels  needed for this function to work. Please install it.\n[1] -1\nStarting :: \n Starting dartR.base \n Starting gl.pcoa.plot \n  Processing an ordination file (glPca)\n  Processing genlight object with SNP data\nPackage directlabels  needed for this function to work. Please install it.\n[1] -1\n\n\n\n\n\n4. Differences in genetic diversity and fixation indices between autosomal and SLM?\n\n# Basic stats\nbasic.sloppy &lt;- dartR.base::utils.basic.stats(EYR.sloppy)\nbasic.correct &lt;- dartR.base::utils.basic.stats(EYR.correct)\nbasic.sloppy$overall\n\n     Ho      Hs      Ht     Dst     Htp    Dstp     Fst    Fstp     Fis    Dest \n 0.1603  0.2376  0.2464  0.0087  0.2487  0.0148  0.0355  0.0596  0.3256  0.0259 \nGst_max   Gst_H \n 0.7141  0.0834 \n\nbasic.correct$overall\n\n     Ho      Hs      Ht     Dst     Htp    Dstp     Fst    Fstp     Fis    Dest \n 0.1579  0.2302  0.2375  0.0073  0.2398  0.0128  0.0307  0.0532  0.3139  0.0221 \nGst_max   Gst_H \n 0.7229  0.0737 \n\n# Genetic diversity per pop\ndivers.sloppy &lt;- dartR.base::gl.report.diversity(EYR.sloppy, pbar = FALSE,\n    table = FALSE, verbose = 0)\n\n  Processing genlight object with SNP data\n\n\n\n\ndivers.correct &lt;- dartR.base::gl.report.diversity(EYR.correct, pbar = FALSE,\n    table = FALSE, verbose = 0)\n\n  Processing genlight object with SNP data\n\n\n\n\ndivers.sloppy$one_H_alpha\n\n    Crusoe Muckleford      Timor     Wombat \n 0.3884366  0.3844244  0.3519361  0.3591638 \n\ndivers.correct$one_H_alpha\n\n    Crusoe Muckleford      Timor     Wombat \n 0.3766483  0.3689045  0.3468530  0.3503540 \n\ndivers.sloppy$one_H_beta\n\n                Crusoe Muckleford      Timor     Wombat\nCrusoe              NA 0.02660219 0.09367676 0.06237102\nMuckleford 0.006274769         NA 0.07326488 0.06577359\nTimor      0.022518949 0.02452504         NA 0.08763552\nWombat     0.018905085 0.02091118 0.03715536         NA\n\ndivers.correct$one_H_beta\n\n                Crusoe Muckleford      Timor     Wombat\nCrusoe              NA 0.02545762 0.08568969 0.05988791\nMuckleford 0.005778848         NA 0.06967786 0.06243346\nTimor      0.016804630 0.02067653         NA 0.08306746\nWombat     0.015054123 0.01892602 0.02995180         NA\n\n# Fixation indices\ndartR.base::gl.fst.pop(EYR.sloppy, verbose = 0)\n\n               Crusoe Muckleford      Timor Wombat\nCrusoe             NA         NA         NA     NA\nMuckleford 0.03160198         NA         NA     NA\nTimor      0.04023766 0.05408752         NA     NA\nWombat     0.05466955 0.02407235 0.08452847     NA\n\ndartR.base::gl.fst.pop(EYR.correct, verbose = 0)\n\n               Crusoe Muckleford      Timor Wombat\nCrusoe             NA         NA         NA     NA\nMuckleford 0.02777612         NA         NA     NA\nTimor      0.04008148 0.04786375         NA     NA\nWombat     0.04413257 0.02208816 0.07111737     NA\n\ndartR.base::gl.report.fstat(EYR.sloppy, verbose = 0)\n\n   Your plot was not shown in full because your 'Plots' pane\n    is too small. Increase the size of the 'Plots' pane and run the\n    function again. Alternatively, use the parameter 'plot.file' to\n    save the plot to a file.\n\n\n$Stat_matrices\n$Stat_matrices$Fst\n           Crusoe Muckleford  Timor Wombat\nCrusoe         NA     0.0148 0.0171 0.0255\nMuckleford 0.0148         NA 0.0249 0.0096\nTimor      0.0171     0.0249     NA 0.0387\nWombat     0.0255     0.0096 0.0387     NA\n\n$Stat_matrices$Fstp\n           Crusoe Muckleford  Timor Wombat\nCrusoe         NA     0.0356 0.0545 0.0669\nMuckleford 0.0356         NA 0.0681 0.0337\nTimor      0.0545     0.0681     NA 0.1046\nWombat     0.0669     0.0337 0.1046     NA\n\n$Stat_matrices$Dest\n           Crusoe Muckleford  Timor Wombat\nCrusoe         NA     0.0236 0.0351 0.0434\nMuckleford 0.0236         NA 0.0437 0.0213\nTimor      0.0351     0.0437     NA 0.0657\nWombat     0.0434     0.0213 0.0657     NA\n\n$Stat_matrices$Gst_H\n           Crusoe Muckleford  Timor Wombat\nCrusoe         NA     0.0566 0.0850 0.1047\nMuckleford 0.0566         NA 0.1059 0.0525\nTimor      0.0850     0.1059     NA 0.1603\nWombat     0.1047     0.0525 0.1603     NA\n\n\n[[2]]\n      Stat_tables.Crusoe_vs_Muckleford Stat_tables.Crusoe_vs_Timor\nFst                             0.0148                      0.0171\nFstp                            0.0356                      0.0545\nDest                            0.0236                      0.0351\nGst_H                           0.0566                      0.0850\n      Stat_tables.Crusoe_vs_Wombat Stat_tables.Muckleford_vs_Timor\nFst                         0.0255                          0.0249\nFstp                        0.0669                          0.0681\nDest                        0.0434                          0.0437\nGst_H                       0.1047                          0.1059\n      Stat_tables.Muckleford_vs_Wombat Stat_tables.Timor_vs_Wombat\nFst                             0.0096                      0.0387\nFstp                            0.0337                      0.1046\nDest                            0.0213                      0.0657\nGst_H                           0.0525                      0.1603\n\ndartR.base::gl.report.fstat(EYR.correct, verbose = 0)\n\n   Your plot was not shown in full because your 'Plots' pane\n    is too small. Increase the size of the 'Plots' pane and run the\n    function again. Alternatively, use the parameter 'plot.file' to\n    save the plot to a file.\n\n\n$Stat_matrices\n$Stat_matrices$Fst\n           Crusoe Muckleford  Timor Wombat\nCrusoe         NA     0.0128 0.0168 0.0199\nMuckleford 0.0128         NA 0.0212 0.0085\nTimor      0.0168     0.0212     NA 0.0313\nWombat     0.0199     0.0085 0.0313     NA\n\n$Stat_matrices$Fstp\n           Crusoe Muckleford  Timor Wombat\nCrusoe         NA     0.0317 0.0540 0.0556\nMuckleford 0.0317         NA 0.0608 0.0315\nTimor      0.0540     0.0608     NA 0.0903\nWombat     0.0556     0.0315 0.0903     NA\n\n$Stat_matrices$Dest\n           Crusoe Muckleford  Timor Wombat\nCrusoe         NA     0.0199 0.0337 0.0344\nMuckleford 0.0199         NA 0.0373 0.0189\nTimor      0.0337     0.0373     NA 0.0547\nWombat     0.0344     0.0189 0.0547     NA\n\n$Stat_matrices$Gst_H\n           Crusoe Muckleford  Timor Wombat\nCrusoe         NA     0.0492 0.0832 0.0856\nMuckleford 0.0492         NA 0.0930 0.0480\nTimor      0.0832     0.0930     NA 0.1368\nWombat     0.0856     0.0480 0.1368     NA\n\n\n[[2]]\n      Stat_tables.Crusoe_vs_Muckleford Stat_tables.Crusoe_vs_Timor\nFst                             0.0128                      0.0168\nFstp                            0.0317                      0.0540\nDest                            0.0199                      0.0337\nGst_H                           0.0492                      0.0832\n      Stat_tables.Crusoe_vs_Wombat Stat_tables.Muckleford_vs_Timor\nFst                         0.0199                          0.0212\nFstp                        0.0556                          0.0608\nDest                        0.0344                          0.0373\nGst_H                       0.0856                          0.0930\n      Stat_tables.Muckleford_vs_Wombat Stat_tables.Timor_vs_Wombat\nFst                             0.0085                      0.0313\nFstp                            0.0315                      0.0903\nDest                            0.0189                      0.0547\nGst_H                           0.0480                      0.1368\n\n\n\n\n\nExercise data 3 - Bull shark\nData from Devloo‐Delva et al. (2023).\n\n\n\nThe Bull Shark\n\n\n\nLoad data\n\nprint(load(\"data/Bull_shark_DArTseq_genlight_for_sex-linked_markers.Rdata\"))\n\n[1] \"data.gl\"\n\ndata.gl@n.loc\n\n[1] 93202\n\ntable(data.gl@pop)\n\n\nE-ATL  E-IO  Fiji Japan  N-IO W-ATL  W-IO W-PAC \n    2    36     8    14    20    36    40    26 \n\ntable(data.gl@other$ind.metrics$pop)\n\n\nE-ATL  E-IO  Fiji Japan  N-IO W-ATL  W-IO W-PAC \n    2    36     8    14    20    36    40    26 \n\ntable(data.gl@other$ind.metrics$sex, useNA = \"ifany\")\n\n\n   F    M &lt;NA&gt; \n  85   64   33 \n\n\n\n\n1. Number of sex-linked markers?\n\nres &lt;- dartR.sexlinked::filter.sex.linked(gl = data.gl, system = \"xy\", plots = TRUE,\n    ncores = 1)\n\nDetected 85 females and 64 males.\n\n\nStarting phase 1. May take a while...\n\n\nBuilding call rate plots.\n\n\n\n\n\nDone. Starting phase 2.\n\n\nBuilding heterozygosity plots.\n\n\n\n\n\n\n\n\nDone building heterozygosity plots.\n\n\n**FINISHED** Total of analyzed loci: 93202.\nFound 9 sex-linked loci:\n   2 Y-linked loci\n   2 sex-biased loci\n   4 X-linked loci\n   1 XY gametologs.\nAnd 93193 autosomal loci.\n\n\n\n\n\n\n\n2. Individuals with wrong sexID?\n\nsexID &lt;- dartR.sexlinked::infer.sex(gl_sex_filtered = res, system = \"xy\",\n    seed = 124)\n\nNot enough gametologs (need at least 5). Assigning NA...\n\n\n***FINISHED***\n\nknitr::kable(head(sexID))\n\nagreed.sex &lt;- sub(pattern = \"\\\\*\", replacement = \"\", x = sexID$agreed.sex)  # remove asterisk\nsum(data.gl$other$ind.metrics$sex != agreed.sex, na.rm = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nid\ny.linked.sex\n#called\n#missing\nx.linked.sex\n#Het.x\n#Hom.x\ngametolog.sex\n#Het.g\n#Hom.g\nagreed.sex\n\n\n\n\nCL-FIJ002-F\nCL-FIJ002-F\nF\n0\n2\nF\n4\n0\nNA\nNA\nNA\nF\n\n\nCL-FIJ003-M\nCL-FIJ003-M\nM\n2\n0\nM\n0\n4\nNA\nNA\nNA\nM\n\n\nCL-FIJ008-F\nCL-FIJ008-F\nF\n0\n2\nF\n2\n2\nNA\nNA\nNA\nF\n\n\nCL-FIJ010-F\nCL-FIJ010-F\nF\n0\n2\nF\n3\n1\nNA\nNA\nNA\nF\n\n\nCL-FIJ015-F\nCL-FIJ015-F\nF\n0\n2\nF\n4\n0\nNA\nNA\nNA\nF\n\n\nCL-FIJ018-F\nCL-FIJ018-F\nF\n0\n2\nF\n3\n1\nNA\nNA\nNA\nF\n\n\n\n\n\n[1] 8\n\n\n\n\n\nExercise data 4 - Blue shark\nData from Nikolic et al. (2023).\n\n\n\nThe Blue Shark\n\n\n\nLoad data\n\nprint(load(\"data/Blue_shark_DArTseq_genlight_for_sex-linked_markers.Rdata\"))\n\n[1] \"data.gl\"\n\ndata.gl@n.loc\n\n[1] 172384\n\ntable(data.gl@pop)\n\n\n   EIO   MED1   MED2   NATL  NEATL    NIO   NPAC   SAF1   SAF2 SWPAC1 SWPAC2 \n     8     34     20     49     26     27      4     21     89     30     16 \nSWPAC3    WIO \n    11     29 \n\ntable(data.gl@other$ind.metrics$pop)\n\n\n   EIO   MED1   MED2   NATL  NEATL    NIO   NPAC   SAF1   SAF2 SWPAC1 SWPAC2 \n     8     34     20     49     26     27      4     21     89     30     16 \nSWPAC3    WIO \n    11     29 \n\ntable(data.gl@other$ind.metrics$sex, useNA = \"ifany\")\n\n\n   F    M &lt;NA&gt; \n 104  111  149 \n\n\n\n\n1. Number of sex-linked markers?\n\nres &lt;- dartR.sexlinked::filter.sex.linked(gl = data.gl, system = \"xy\", plots = TRUE,\n    ncores = 1)\n\nDetected 104 females and 111 males.\n\n\nStarting phase 1. May take a while...\n\n\nBuilding call rate plots.\n\n\n\n\n\nDone. Starting phase 2.\n\n\nBuilding heterozygosity plots.\n\n\n\n\n\n\n\n\nDone building heterozygosity plots.\n\n\n**FINISHED** Total of analyzed loci: 172384.\nFound 26 sex-linked loci:\n   2 Y-linked loci\n   2 sex-biased loci\n   22 X-linked loci\n   0 XY gametologs.\nAnd 172358 autosomal loci.\n\n\n\n\n\n\n\n2. Individuals with wrong sexID?\n\nsexID &lt;- dartR.sexlinked::infer.sex(gl_sex_filtered = res, system = \"xy\",\n    seed = 124)\n\nNot enough gametologs (need at least 5). Assigning NA...\n\n\n***FINISHED***\n\nknitr::kable(head(sexID))\n\nagreed.sex &lt;- sub(pattern = \"\\\\*\", replacement = \"\", x = sexID$agreed.sex)  # remove asterisk\nsum(data.gl$other$ind.metrics$sex != agreed.sex, na.rm = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nid\ny.linked.sex\n#called\n#missing\nx.linked.sex\n#Het.x\n#Hom.x\ngametolog.sex\n#Het.g\n#Hom.g\nagreed.sex\n\n\n\n\n60088\n60088\nM\n2\n0\nM\n0\n22\nNA\nNA\nNA\nM\n\n\n60160\n60160\nM\n2\n0\nM\n0\n21\nNA\nNA\nNA\nM\n\n\n60168\n60168\nM\n2\n0\nM\n0\n22\nNA\nNA\nNA\nM\n\n\n60176\n60176\nM\n2\n0\nM\n0\n21\nNA\nNA\nNA\nM\n\n\n60096\n60096\nM\n2\n0\nM\n0\n22\nNA\nNA\nNA\nM\n\n\n60104\n60104\nM\n2\n0\nM\n1\n19\nNA\nNA\nNA\nM\n\n\n\n\n\n[1] 22"
  },
  {
    "objectID": "session10.html#further-study",
    "href": "session10.html#further-study",
    "title": "10  Sex Linked Markers",
    "section": "Further study",
    "text": "Further study\n\nExercise data 1 - Your own data\n\n\n\n\n\n\nHINT\n\n\n\nYou can have a look at the exercise data below for inspiration.\n\n\n\n\n\n\n\n\nExercise - Your own data\n\n\n\n\nNumber of sex-linked markers?\nIndividuals with wrong sexID?\nChanges in PCA before and after removing the SLM?\nDifferences in genetic diversity and fixation indices between autosomal and SLM?\n\n\n\n\n\nExercise data 2 - The Eastern Yellow Robin\nData from Robledo-Ruiz et al. (2023)\n\n\n\nThe Eastern Yellow Robin\n\n\n\nLoad data\n\n#data(\"EYR\")\nload('./data/EYR.rda')\nEYR@n.loc\ntable(EYR@pop)\ntable(EYR@other$ind.metrics$pop)\ntable(EYR@other$ind.metrics$sex, useNA = \"ifany\")\n\n[1] 1000\n\n    Crusoe Muckleford      Timor     Wombat \n       238        421         52         71 \n\n    Crusoe Muckleford      Timor     Wombat \n       238        421         52         71 \n\n      F   M \n  1 352 429 \n\n\n\n\n1. Number of sex-linked markers?\n\nres &lt;- dartR.sexlinked::gl.filter.sexlinked(gl = EYR, system = \"zw\")\n\nDetected 352 females and 429 males.\n\n\nStarting phase 1. May take a while...\n\n\nBuilding call rate plots.\n\n\n\n\n\nDone. Starting phase 2.\n\n\nBuilding heterozygosity plots.\n\n\n\n\n\n\n\n\nDone building heterozygosity plots.\n\n\n**FINISHED** Total of analyzed loci: 1000.\nFound 150 sex-linked loci:\n   16 W-linked loci\n   82 sex-biased loci\n   32 Z-linked loci\n   20 ZW gametologs.\nAnd 850 autosomal loci.\n\n\n\n\n\n\n\n2. Individuals with wrong sexID?\n\nsexID &lt;- dartR.sexlinked::gl.infer.sex(gl_sex_filtered = res, system = \"zw\", seed = 124)\n\n***FINISHED***\n\nknitr::kable(head(sexID))\n\nsum(EYR$other$ind.metrics$sex != sexID$agreed.sex, na.rm = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nid\nw.linked.sex\n#missing\n#called\nz.linked.sex\n#Hom.z\n#Het.z\ngametolog.sex\n#Hom.g\n#Het.g\nagreed.sex\n\n\n\n\n024-96401\n024-96401\nM\n0\n16\nM\n7\n25\nM\n0\n5\nM\n\n\n024-96401b\n024-96401b\nM\n0\n16\nM\n9\n21\nM\n0\n5\nM\n\n\n024-96402\n024-96402\nF\n15\n1\nF\n0\n32\nF\n5\n0\nF\n\n\n024-96403\n024-96403\nM\n1\n15\nM\n11\n21\nM\n0\n5\nM\n\n\n024-96404\n024-96404\nM\n0\n16\nM\n12\n20\nM\n0\n5\nM\n\n\n024-96405\n024-96405\nM\n0\n16\nM\n11\n21\nM\n0\n5\nM\n\n\n\n\n\n[1] 55\n\n\n\n\n\n\n\n\nExercise\n\n\n\n\nCan you tell which misidentified sexes are due to uncertain genetic sex (indicated with *)?\nHINT Try using grep(pattern = \"\\\\*\", x = sexID$agreed.sex)\n\n\n\n\nProcessing SNPs with two filtering regimes\n\nFiltering SNPs only with standard filters (sloppy)\n\n# Filter for read depth\ndartR.base::gl.report.rdepth(EYR)  # This is the initial dataset\n\nStarting :: \n Starting dartR.base \n Starting gl.report.rdepth \n  Processing genlight object with SNP data\n  Reporting Read Depth by Locus\n  No. of loci = 1000 \n  No. of individuals = 782 \n    Minimum      :  2.6 \n    1st quartile :  4.3 \n    Median       :  5.6 \n    Mean         :  5.9649 \n    3r quartile  :  7.325 \n    Maximum      :  13.2 \n    Missing Rate Overall:  0.19 \n\n\n\n\n\n   Quantile Threshold Retained Percent Filtered Percent\n1      100%      13.2        1     0.1      999    99.9\n2       95%       9.9       51     5.1      949    94.9\n3       90%       9.0      105    10.5      895    89.5\n4       85%       8.3      151    15.1      849    84.9\n5       80%       7.8      208    20.8      792    79.2\n6       75%       7.3      258    25.8      742    74.2\n7       70%       6.9      304    30.4      696    69.6\n8       65%       6.5      354    35.4      646    64.6\n9       60%       6.2      404    40.4      596    59.6\n10      55%       5.9      451    45.1      549    54.9\n11      50%       5.6      504    50.4      496    49.6\n12      45%       5.3      563    56.3      437    43.7\n13      40%       5.1      602    60.2      398    39.8\n14      35%       4.8      659    65.9      341    34.1\n15      30%       4.6      702    70.2      298    29.8\n16      25%       4.3      752    75.2      248    24.8\n17      20%       4.0      823    82.3      177    17.7\n18      15%       3.9      852    85.2      148    14.8\n19      10%       3.6      906    90.6       94     9.4\n20       5%       3.3      956    95.6       44     4.4\n21       0%       2.6     1000   100.0        0     0.0\nCompleted: :: \n Completed: dartR.base \n Completed: gl.report.rdepth \n\nEYR.sloppy &lt;- dartR.base::gl.filter.rdepth(EYR, lower = 3, upper = 11, verbose = 0)\n\n\n\n# Filter for loci call rate\ndartR.base::gl.report.callrate(EYR.sloppy, method = \"loc\")\n\nStarting :: \n Starting dartR.base \n Starting gl.report.callrate \n  Processing genlight object with SNP data\n  Reporting Call Rate by Locus\n  No. of loci = 958 \n  No. of individuals = 782 \n    Minimum      :  0.20844 \n    1st quartile :  0.7202688 \n    Median       :  0.895141 \n    Mean         :  0.8131871 \n    3r quartile  :  0.950128 \n    Maximum      :  0.988491 \n    Missing Rate Overall:  0.1868 \n\n\n\n\n\nCompleted: :: \n Completed: dartR.base \n Completed: gl.report.callrate \n\nEYR.sloppy &lt;- dartR.base::gl.filter.callrate(EYR.sloppy, method = \"loc\",  threshold = 0.75, verbose = 0, recalc = TRUE)\n\n# Filter for individual call rate\ndartR.base::gl.report.callrate(EYR.sloppy, method = \"ind\")\n\nStarting :: \n Starting dartR.base \n Starting gl.report.callrate \n  Processing genlight object with SNP data\n\n  Reporting Call Rate by Individual\n  No. of loci = 703 \n  No. of individuals = 782 \n    Minimum      :  0.03556188 \n    1st quartile :  0.9174964 \n    Median       :  0.9416785 \n    Mean         :  0.9108097 \n    3r quartile  :  0.9573257 \n    Maximum      :  0.9829303 \n    Missing Rate Overall:  0.0892 \n\nListing 4 populations and their average CallRates\n  Monitor again after filtering\n  Population CallRate   N\n1     Crusoe   0.9027 238\n2 Muckleford   0.9073 421\n3      Timor   0.9402  52\n4     Wombat   0.9371  71\n\nListing 20 individuals with the lowest CallRates\n  Use this list to see which individuals will be lost on filtering by individual\n  Set ind.to.list parameter to see more individuals\n   Individual   CallRate\n1    M18.29.1 0.03556188\n2    M18.18.1 0.03982930\n3    M18.47.2 0.06970128\n4    C18.16.1 0.07112376\n5   027-34168 0.07681366\n6    C18.15.2 0.08534851\n7    C18.21.2 0.08677098\n8    M18.47.3 0.14224751\n9    M18.35.2 0.17211949\n10   M18.20.3 0.24039829\n11   M20.70.2 0.39687055\n12   C18.28.1 0.39971550\n13   C18.17.2 0.46088193\n14  027-34065 0.50640114\n15   C18.14.1 0.50640114\n16   M20.70.3 0.50782361\n17  M20.110.1 0.52347084\n18   M19.12.1 0.53342817\n19    M19.8.1 0.54907539\n20   M20.64.3 0.56045519\n\n)\n\n\n\n\n\nCompleted: :: \n Completed: dartR.base \n Completed: gl.report.callrate \n\nEYR.sloppy &lt;- dartR.base::gl.filter.callrate(EYR.sloppy, method = \"ind\", threshold = 0.65, verbose = 0, recalc = TRUE)\n# Filter for MAC (= 3)\ndartR.base::gl.report.maf(EYR.sloppy)\n\nStarting :: \n Starting dartR.base \n Starting gl.report.maf \n  Processing genlight object with SNP data\nStarting :: \n\n Starting dartR.base \n\n Starting gl.report.maf \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population Crusoe \n  No. of loci = 670 \n  No. of individuals = 231 \n    Minimum      :  0.0022 \n    1st quantile :  0.064825 \n    Median       :  0.1582 \n    Mean         :  0.1793525 \n    3r quantile  :  0.267475 \n    Maximum      :  0.4975 \n    Missing Rate Overall:  0.08 \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population Muckleford \n  No. of loci = 683 \n  No. of individuals = 401 \n    Minimum      :  0.0013 \n    1st quantile :  0.05875 \n    Median       :  0.1404 \n    Mean         :  0.1729489 \n    3r quantile  :  0.2617 \n    Maximum      :  0.4985 \n    Missing Rate Overall:  0.07 \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population Timor \n  No. of loci = 589 \n  No. of individuals = 52 \n    Minimum      :  0.0096 \n    1st quantile :  0.0673 \n    Median       :  0.1667 \n    Mean         :  0.1914129 \n    3r quantile  :  0.2872 \n    Maximum      :  0.5 \n    Missing Rate Overall:  0.06 \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population Wombat \n  No. of loci = 627 \n  No. of individuals = 71 \n    Minimum      :  0.007 \n    1st quantile :  0.06385 \n    Median       :  0.1449 \n    Mean         :  0.1746703 \n    3r quantile  :  0.2542 \n    Maximum      :  0.5 \n    Missing Rate Overall:  0.06 \n\n  Reporting Minor Allele Frequency (MAF) by Locus OVERALL\n  No. of loci = 703 \n  No. of individuals = 755 \n    Minimum      :  7e-04 \n    1st quantile :  0.0618 \n    Median       :  0.1443 \n    Mean         :  0.1711869 \n    3r quantile  :  0.254425 \n    Maximum      :  0.5 \n    Missing Rate Overall:  0.07 \n\n\n\n\n\n   Quantile Threshold Retained Percent Filtered Percent\n1      100%    0.5000        1     0.1      699    99.9\n2       95%    0.4431       36     5.1      664    94.9\n3       90%    0.3812       71    10.1      629    89.9\n4       85%    0.3346      105    15.0      595    85.0\n5       80%    0.2873      141    20.1      559    79.9\n6       75%    0.2537      176    25.1      524    74.9\n7       70%    0.2279      210    30.0      490    70.0\n8       65%    0.2009      246    35.1      454    64.9\n9       60%    0.1779      280    40.0      420    60.0\n10      55%    0.1595      315    45.0      385    55.0\n11      50%    0.1442      351    50.1      349    49.9\n12      45%    0.1210      386    55.1      314    44.9\n13      40%    0.1024      422    60.3      278    39.7\n14      35%    0.0872      455    65.0      245    35.0\n15      30%    0.0755      490    70.0      210    30.0\n16      25%    0.0618      526    75.1      174    24.9\n17      20%    0.0487      561    80.1      139    19.9\n18      15%    0.0346      595    85.0      105    15.0\n19      10%    0.0227      631    90.1       69     9.9\n20       5%    0.0053      666    95.1       34     4.9\n21       0%    0.0007      700   100.0        0     0.0\nCompleted: :: \n Completed: dartR.base \n Completed: gl.report.maf \n\nEYR.sloppy &lt;- dartR.base::gl.filter.maf(EYR.sloppy, threshold = 3, verbose = 0, recalc = TRUE)\n\nStarting gl.select.colors \n  Warning: Number of required colors not specified, set to 9\n  Library: RColorBrewer\n  Palette: brewer.pal\n  Showing and returning 2 of 9 colors for library RColorBrewer : palette Blues \n\n\n\n\n\nCompleted: gl.select.colors \n\n\n\n\nFiltering SNPs with gl.filter.sexlinked and standard filters (correct)\n\n# Filter for sex-linked loci\ncorrect &lt;- dartR.sexlinked::gl.filter.sexlinked(EYR, system = \"zw\")  # This is the initial dataset\n\n\n\n\n\n\n\n\n\n\n\n\n# We will use correct$autosomal for the next filters\n\n# Filter for read depth\ndartR.base::gl.report.rdepth(correct$autosomal)  # This is the filtered dataset\n\nStarting :: \n Starting dartR.base \n Starting gl.report.rdepth \n  Processing genlight object with SNP data\n  Reporting Read Depth by Locus\n  No. of loci = 850 \n  No. of individuals = 782 \n    Minimum      :  2.6 \n    1st quartile :  4.3 \n    Median       :  5.6 \n    Mean         :  6.008941 \n    3r quartile  :  7.4 \n    Maximum      :  13.2 \n    Missing Rate Overall:  0.18 \n\n\n\n\n\n   Quantile Threshold Retained Percent Filtered Percent\n1      100%      13.2        1     0.1      849    99.9\n2       95%       9.9       45     5.3      805    94.7\n3       90%       9.1       88    10.4      762    89.6\n4       85%       8.4      129    15.2      721    84.8\n5       80%       7.9      173    20.4      677    79.6\n6       75%       7.4      220    25.9      630    74.1\n7       70%       6.9      264    31.1      586    68.9\n8       65%       6.5      305    35.9      545    64.1\n9       60%       6.2      350    41.2      500    58.8\n10      55%       5.9      391    46.0      459    54.0\n11      50%       5.6      435    51.2      415    48.8\n12      45%       5.4      472    55.5      378    44.5\n13      40%       5.1      519    61.1      331    38.9\n14      35%       4.9      555    65.3      295    34.7\n15      30%       4.6      603    70.9      247    29.1\n16      25%       4.3      645    75.9      205    24.1\n17      20%       4.0      705    82.9      145    17.1\n18      15%       3.9      730    85.9      120    14.1\n19      10%       3.6      774    91.1       76     8.9\n20       5%       3.3      812    95.5       38     4.5\n21       0%       2.6      850   100.0        0     0.0\nCompleted: :: \n Completed: dartR.base \n Completed: gl.report.rdepth \n\nEYR.correct &lt;- dartR.base::gl.filter.rdepth(correct$autosomal, lower = 3, upper = 11, verbose = 0)\n\n\n\n# Filter for loci call rate\ndartR.base::gl.report.callrate(EYR.correct, method = \"loc\")\n\nStarting :: \n Starting dartR.base \n Starting gl.report.callrate \n  Processing genlight object with SNP data\n  Reporting Call Rate by Locus\n  No. of loci = 811 \n  No. of individuals = 782 \n    Minimum      :  0.20844 \n    1st quartile :  0.7436065 \n    Median       :  0.900256 \n    Mean         :  0.8192658 \n    3r quartile  :  0.951407 \n    Maximum      :  0.988491 \n    Missing Rate Overall:  0.1807 \n\n\n\n\n\nCompleted: :: \n Completed: dartR.base \n Completed: gl.report.callrate \n\nEYR.correct &lt;- dartR.base::gl.filter.callrate(EYR.correct, method = \"loc\",  threshold = 0.75, verbose = 0, recalc = TRUE)\n\n# Filter for individual call rate\ndartR.base::gl.report.callrate(EYR.correct, method = \"ind\")\n\nStarting :: \n Starting dartR.base \n Starting gl.report.callrate \n  Processing genlight object with SNP data\n\n  Reporting Call Rate by Individual\n  No. of loci = 605 \n  No. of individuals = 782 \n    Minimum      :  0.03801653 \n    1st quartile :  0.9173554 \n    Median       :  0.9438017 \n    Mean         :  0.9120479 \n    3r quartile  :  0.9586777 \n    Maximum      :  0.9818182 \n    Missing Rate Overall:  0.088 \n\nListing 4 populations and their average CallRates\n  Monitor again after filtering\n  Population CallRate   N\n1     Crusoe   0.9037 238\n2 Muckleford   0.9090 421\n3      Timor   0.9418  52\n4     Wombat   0.9365  71\n\nListing 20 individuals with the lowest CallRates\n  Use this list to see which individuals will be lost on filtering by individual\n  Set ind.to.list parameter to see more individuals\n   Individual   CallRate\n1    M18.29.1 0.03801653\n2    M18.18.1 0.04462810\n3    M18.47.2 0.06776860\n4    C18.16.1 0.07438017\n5   027-34168 0.08760331\n6    C18.15.2 0.08760331\n7    C18.21.2 0.08760331\n8    M18.47.3 0.13719008\n9    M18.35.2 0.18016529\n10   M18.20.3 0.24132231\n11   C18.28.1 0.41487603\n12   M20.70.2 0.42644628\n13   C18.17.2 0.44628099\n14  027-34065 0.49586777\n15   C18.14.1 0.49752066\n16  M20.110.1 0.53057851\n17   M20.70.3 0.53553719\n18   M19.12.1 0.54380165\n19    M19.8.1 0.56694215\n20   M19.33.2 0.57851240\n\n)\n\n\n\n\n\nCompleted: :: \n Completed: dartR.base \n Completed: gl.report.callrate \n\nEYR.correct &lt;- dartR.base::gl.filter.callrate(EYR.correct, method = \"ind\", threshold = 0.65, verbose = 0, recalc = TRUE)\n# Filter for MAC (= 3)\ndartR.base::gl.report.maf(EYR.correct)\n\nStarting :: \n Starting dartR.base \n Starting gl.report.maf \n  Processing genlight object with SNP data\nStarting :: \n\n Starting dartR.base \n\n Starting gl.report.maf \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population Crusoe \n  No. of loci = 573 \n  No. of individuals = 231 \n    Minimum      :  0.0022 \n    1st quantile :  0.06 \n    Median       :  0.1488 \n    Mean         :  0.1741178 \n    3r quantile  :  0.2646 \n    Maximum      :  0.4975 \n    Missing Rate Overall:  0.08 \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population Muckleford \n  No. of loci = 585 \n  No. of individuals = 401 \n    Minimum      :  0.0013 \n    1st quantile :  0.055 \n    Median       :  0.129 \n    Mean         :  0.1639928 \n    3r quantile  :  0.2474 \n    Maximum      :  0.4985 \n    Missing Rate Overall:  0.07 \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population Timor \n  No. of loci = 504 \n  No. of individuals = 52 \n    Minimum      :  0.0096 \n    1st quantile :  0.068275 \n    Median       :  0.1635 \n    Mean         :  0.1898613 \n    3r quantile  :  0.286075 \n    Maximum      :  0.5 \n    Missing Rate Overall:  0.06 \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population Wombat \n  No. of loci = 536 \n  No. of individuals = 71 \n    Minimum      :  0.007 \n    1st quantile :  0.062475 \n    Median       :  0.13805 \n    Mean         :  0.1706063 \n    3r quantile  :  0.2509 \n    Maximum      :  0.5 \n    Missing Rate Overall:  0.06 \n\n  Reporting Minor Allele Frequency (MAF) by Locus OVERALL\n  No. of loci = 605 \n  No. of individuals = 755 \n    Minimum      :  7e-04 \n    1st quantile :  0.05815 \n    Median       :  0.13255 \n    Mean         :  0.1628168 \n    3r quantile  :  0.243425 \n    Maximum      :  0.5 \n    Missing Rate Overall:  0.07 \n\n\n\n\n\n   Quantile Threshold Retained Percent Filtered Percent\n1      100%    0.5000        1     0.2      601    99.8\n2       95%    0.4364       31     5.1      571    94.9\n3       90%    0.3714       61    10.1      541    89.9\n4       85%    0.3207       91    15.1      511    84.9\n5       80%    0.2734      121    20.1      481    79.9\n6       75%    0.2436      151    25.1      451    74.9\n7       70%    0.2127      181    30.1      421    69.9\n8       65%    0.1901      211    35.0      391    65.0\n9       60%    0.1714      241    40.0      361    60.0\n10      55%    0.1499      271    45.0      331    55.0\n11      50%    0.1320      302    50.2      300    49.8\n12      45%    0.1092      332    55.1      270    44.9\n13      40%    0.0950      362    60.1      240    39.9\n14      35%    0.0806      393    65.3      209    34.7\n15      30%    0.0710      422    70.1      180    29.9\n16      25%    0.0580      452    75.1      150    24.9\n17      20%    0.0447      482    80.1      120    19.9\n18      15%    0.0305      512    85.0       90    15.0\n19      10%    0.0194      542    90.0       60    10.0\n20       5%    0.0048      572    95.0       30     5.0\n21       0%    0.0007      602   100.0        0     0.0\nCompleted: :: \n Completed: dartR.base \n Completed: gl.report.maf \n\nEYR.correct &lt;- dartR.base::gl.filter.maf(EYR.correct, threshold = 3, verbose = 0, recalc = TRUE)\n\nStarting gl.select.colors \n  Warning: Number of required colors not specified, set to 9\n  Library: RColorBrewer\n  Palette: brewer.pal\n  Showing and returning 2 of 9 colors for library RColorBrewer : palette Blues \n\n\n\n\n\nCompleted: gl.select.colors \n\n\n\n\n\n3. Changes in PCA before and after removing the SLM?\n\nPCA on sloppy dataset (only standard filters)\n\nPCA.sloppy &lt;- dartR.base::gl.pcoa(EYR.sloppy, verbose = 0)\ndartR.base::gl.pcoa.plot(PCA.sloppy, EYR.sloppy, xaxis = 1, yaxis = 2)\n\n\n\n\n\n\ndartR.base::gl.pcoa.plot(PCA.sloppy, EYR.sloppy, xaxis = 2, yaxis = 3)\n\n\n\n\n\n\n\nStarting gl.colors \nSelected color type 2 \nCompleted: gl.colors \nStarting :: \n Starting dartR.base \n Starting gl.pcoa.plot \n  Processing an ordination file (glPca)\n  Processing genlight object with SNP data\n  Plotting populations in a space defined by the SNPs\n  Preparing plot .... please wait\nCompleted: :: \n Completed: dartR.base \n Completed: gl.pcoa.plot \nStarting :: \n Starting dartR.base \n Starting gl.pcoa.plot \n  Processing an ordination file (glPca)\n  Processing genlight object with SNP data\n  Plotting populations in a space defined by the SNPs\n  Preparing plot .... please wait\nCompleted: :: \n Completed: dartR.base \n Completed: gl.pcoa.plot \n\n\n\n\nPCA on correct dataset (gl.filter.sexlinked and standard filters)\n\nPCA.correct &lt;- dartR.base::gl.pcoa(EYR.correct, verbose = 0)\ndartR.base::gl.pcoa.plot(PCA.correct, EYR.correct, xaxis = 1, yaxis = 2)\n\n\n\n\n\n\ndartR.base::gl.pcoa.plot(PCA.correct, EYR.correct, xaxis = 2, yaxis = 3)\n\n\n\n\n\n\n\nStarting gl.colors \nSelected color type 2 \nCompleted: gl.colors \nStarting :: \n Starting dartR.base \n Starting gl.pcoa.plot \n  Processing an ordination file (glPca)\n  Processing genlight object with SNP data\n  Plotting populations in a space defined by the SNPs\n  Preparing plot .... please wait\nCompleted: :: \n Completed: dartR.base \n Completed: gl.pcoa.plot \nStarting :: \n Starting dartR.base \n Starting gl.pcoa.plot \n  Processing an ordination file (glPca)\n  Processing genlight object with SNP data\n  Plotting populations in a space defined by the SNPs\n  Preparing plot .... please wait\nCompleted: :: \n Completed: dartR.base \n Completed: gl.pcoa.plot \n\n\n\n\n\n4. Differences in genetic diversity and fixation indices between autosomal and SLM?\n\n# Basic stats\nbasic.sloppy  &lt;- dartR.base::utils.basic.stats(EYR.sloppy)\nbasic.correct &lt;- dartR.base::utils.basic.stats(EYR.correct)\nbasic.sloppy$overall\n\n     Ho      Hs      Ht     Dst     Htp    Dstp     Fst    Fstp     Fis    Dest \n 0.1638  0.2442  0.2537  0.0095  0.2568  0.0126  0.0373  0.0491  0.3294  0.0167 \nGst_max   Gst_H \n 0.7061  0.0696 \n\nbasic.correct$overall\n\n     Ho      Hs      Ht     Dst     Htp    Dstp     Fst    Fstp     Fis    Dest \n 0.1631  0.2379  0.2459  0.0080  0.2485  0.0107  0.0325  0.0429  0.3144  0.0140 \nGst_max   Gst_H \n 0.7135  0.0601 \n\n# Genetic diversity per pop\ndivers.sloppy &lt;- dartR.base::gl.report.diversity(EYR.sloppy, pbar = FALSE, table = FALSE, verbose = 0)\n\n  Processing genlight object with SNP data\n\n\n\n\ndivers.correct &lt;- dartR.base::gl.report.diversity(EYR.correct, pbar = FALSE, table = FALSE, verbose = 0)\n\n  Processing genlight object with SNP data\n\n\n\n\ndivers.sloppy$one_H_alpha\n\n    Crusoe Muckleford      Timor     Wombat \n 0.3995681  0.3947475  0.3621317  0.3686690 \n\ndivers.correct$one_H_alpha\n\n    Crusoe Muckleford      Timor     Wombat \n 0.3896088  0.3810663  0.3594440  0.3619161 \n\ndivers.sloppy$one_H_beta\n\n                Crusoe Muckleford      Timor     Wombat\nCrusoe              NA 0.02730206 0.09476805 0.06283335\nMuckleford 0.006464867         NA 0.07400643 0.06687160\nTimor      0.022772763 0.02518305         NA 0.08882423\nWombat     0.019504127 0.02191442 0.03822232         NA\n\ndivers.correct$one_H_beta\n\n                Crusoe Muckleford      Timor     Wombat\nCrusoe              NA 0.02594333 0.08764100 0.06061531\nMuckleford 0.005966702         NA 0.07063921 0.06381958\nTimor      0.016777813 0.02104909         NA 0.08446058\nWombat     0.015541765 0.01981305 0.03062416         NA\n\n# Fixation indices\ndartR.base::gl.fst.pop(EYR.sloppy, verbose = 0)\n\n               Crusoe Muckleford      Timor Wombat\nCrusoe             NA         NA         NA     NA\nMuckleford 0.03234709         NA         NA     NA\nTimor      0.04072932 0.05451318         NA     NA\nWombat     0.05484958 0.02376727 0.08401313     NA\n\ndartR.base::gl.fst.pop(EYR.correct, verbose = 0)\n\n               Crusoe Muckleford      Timor Wombat\nCrusoe             NA         NA         NA     NA\nMuckleford 0.02795813         NA         NA     NA\nTimor      0.03987369 0.04810759         NA     NA\nWombat     0.04446378 0.02270137 0.07114017     NA\n\ndartR.base::gl.report.fstat(EYR.sloppy, verbose = 0)\n\nStarting gl.colors \nSelected color type div \nCompleted: gl.colors \n\n\n\n\n\n$Stat_matrices\n$Stat_matrices$Fst\n           Crusoe Muckleford  Timor Wombat\nCrusoe         NA     0.0164 0.0214 0.0289\nMuckleford 0.0164         NA 0.0288 0.0124\nTimor      0.0214     0.0288     NA 0.0439\nWombat     0.0289     0.0124 0.0439     NA\n\n$Stat_matrices$Fstp\n           Crusoe Muckleford  Timor Wombat\nCrusoe         NA     0.0323 0.0420 0.0561\nMuckleford 0.0323         NA 0.0559 0.0244\nTimor      0.0420     0.0559     NA 0.0840\nWombat     0.0561     0.0244 0.0840     NA\n\n$Stat_matrices$Dest\n           Crusoe Muckleford  Timor Wombat\nCrusoe         NA     0.0113 0.0143 0.0193\nMuckleford 0.0113         NA 0.0190 0.0080\nTimor      0.0143     0.0190     NA 0.0283\nWombat     0.0193     0.0080 0.0283     NA\n\n$Stat_matrices$Gst_H\n           Crusoe Muckleford  Timor Wombat\nCrusoe         NA     0.0521 0.0665 0.0892\nMuckleford 0.0521         NA 0.0883 0.0385\nTimor      0.0665     0.0883     NA 0.1308\nWombat     0.0892     0.0385 0.1308     NA\n\n\n[[2]]\n      Stat_tables.Crusoe_vs_Muckleford Stat_tables.Crusoe_vs_Timor\nFst                             0.0164                      0.0214\nFstp                            0.0323                      0.0420\nDest                            0.0113                      0.0143\nGst_H                           0.0521                      0.0665\n      Stat_tables.Crusoe_vs_Wombat Stat_tables.Muckleford_vs_Timor\nFst                         0.0289                          0.0288\nFstp                        0.0561                          0.0559\nDest                        0.0193                          0.0190\nGst_H                       0.0892                          0.0883\n      Stat_tables.Muckleford_vs_Wombat Stat_tables.Timor_vs_Wombat\nFst                             0.0124                      0.0439\nFstp                            0.0244                      0.0840\nDest                            0.0080                      0.0283\nGst_H                           0.0385                      0.1308\n\ndartR.base::gl.report.fstat(EYR.correct, verbose = 0)\n\nStarting gl.colors \nSelected color type div \nCompleted: gl.colors \n\n\n\n\n\n$Stat_matrices\n$Stat_matrices$Fst\n           Crusoe Muckleford  Timor Wombat\nCrusoe         NA     0.0141 0.0208 0.0232\nMuckleford 0.0141         NA 0.0249 0.0117\nTimor      0.0208     0.0249     NA 0.0368\nWombat     0.0232     0.0117 0.0368     NA\n\n$Stat_matrices$Fstp\n           Crusoe Muckleford  Timor Wombat\nCrusoe         NA     0.0278 0.0408 0.0454\nMuckleford 0.0278         NA 0.0487 0.0231\nTimor      0.0408     0.0487     NA 0.0711\nWombat     0.0454     0.0231 0.0711     NA\n\n$Stat_matrices$Dest\n           Crusoe Muckleford  Timor Wombat\nCrusoe         NA     0.0092 0.0135 0.0149\nMuckleford 0.0092         NA 0.0159 0.0073\nTimor      0.0135     0.0159     NA 0.0231\nWombat     0.0149     0.0073 0.0231     NA\n\n$Stat_matrices$Gst_H\n           Crusoe Muckleford  Timor Wombat\nCrusoe         NA     0.0441 0.0640 0.0713\nMuckleford 0.0441         NA 0.0758 0.0359\nTimor      0.0640     0.0758     NA 0.1097\nWombat     0.0713     0.0359 0.1097     NA\n\n\n[[2]]\n      Stat_tables.Crusoe_vs_Muckleford Stat_tables.Crusoe_vs_Timor\nFst                             0.0141                      0.0208\nFstp                            0.0278                      0.0408\nDest                            0.0092                      0.0135\nGst_H                           0.0441                      0.0640\n      Stat_tables.Crusoe_vs_Wombat Stat_tables.Muckleford_vs_Timor\nFst                         0.0232                          0.0249\nFstp                        0.0454                          0.0487\nDest                        0.0149                          0.0159\nGst_H                       0.0713                          0.0758\n      Stat_tables.Muckleford_vs_Wombat Stat_tables.Timor_vs_Wombat\nFst                             0.0117                      0.0368\nFstp                            0.0231                      0.0711\nDest                            0.0073                      0.0231\nGst_H                           0.0359                      0.1097\n\n\n\n\n\nExercise data 3 - Bull shark\nData from Devloo‐Delva et al. (2023).\n\n\n\nThe Bull Shark\n\n\n\nLoad data\n\nprint(load(\"data/Bull_shark_DArTseq_genlight_for_sex-linked_markers.Rdata\"))\n\n[1] \"data.gl\"\n\ndata.gl@n.loc\n\n[1] 93202\n\ntable(data.gl@pop)\n\n\nE-ATL  E-IO  Fiji Japan  N-IO W-ATL  W-IO W-PAC \n    2    36     8    14    20    36    40    26 \n\ntable(data.gl@other$ind.metrics$pop)\n\n\nE-ATL  E-IO  Fiji Japan  N-IO W-ATL  W-IO W-PAC \n    2    36     8    14    20    36    40    26 \n\ntable(data.gl@other$ind.metrics$sex, useNA = \"ifany\")\n\n\n   F    M &lt;NA&gt; \n  85   64   33 \n\n\n\n\n1. Number of sex-linked markers?\n\nres &lt;- dartR.sexlinked::gl.filter.sexlinked(gl = data.gl, system = \"xy\", plots = TRUE, ncores = 1)\n\nDetected 85 females and 64 males.\n\n\nStarting phase 1. May take a while...\n\n\nBuilding call rate plots.\n\n\n\n\n\nDone. Starting phase 2.\n\n\nBuilding heterozygosity plots.\n\n\n\n\n\n\n\n\nDone building heterozygosity plots.\n\n\n**FINISHED** Total of analyzed loci: 93202.\nFound 9 sex-linked loci:\n   2 Y-linked loci\n   2 sex-biased loci\n   4 X-linked loci\n   1 XY gametologs.\nAnd 93193 autosomal loci.\n\n\n\n\n\n\n\n2. Individuals with wrong sexID?\n\nsexID &lt;- dartR.sexlinked::gl.infer.sex(gl_sex_filtered = res, system = \"xy\", seed = 124)\n\nNot enough gametologs (need at least 5). Assigning NA...\n\n\n***FINISHED***\n\nknitr::kable(head(sexID))\n\nagreed.sex &lt;- sub(pattern = \"\\\\*\", replacement = \"\", x = sexID$agreed.sex) # remove asterisk\nsum(data.gl$other$ind.metrics$sex != agreed.sex, na.rm = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nid\ny.linked.sex\n#called\n#missing\nx.linked.sex\n#Het.x\n#Hom.x\ngametolog.sex\n#Het.g\n#Hom.g\nagreed.sex\n\n\n\n\nCL-FIJ002-F\nCL-FIJ002-F\nF\n0\n2\nF\n4\n0\nNA\nNA\nNA\nF\n\n\nCL-FIJ003-M\nCL-FIJ003-M\nM\n2\n0\nM\n0\n4\nNA\nNA\nNA\nM\n\n\nCL-FIJ008-F\nCL-FIJ008-F\nF\n0\n2\nF\n2\n2\nNA\nNA\nNA\nF\n\n\nCL-FIJ010-F\nCL-FIJ010-F\nF\n0\n2\nF\n3\n1\nNA\nNA\nNA\nF\n\n\nCL-FIJ015-F\nCL-FIJ015-F\nF\n0\n2\nF\n4\n0\nNA\nNA\nNA\nF\n\n\nCL-FIJ018-F\nCL-FIJ018-F\nF\n0\n2\nF\n3\n1\nNA\nNA\nNA\nF\n\n\n\n\n\n[1] 8\n\n\n\n\n\nExercise data 4 - Blue shark\nData from Nikolic et al. (2023).\n\n\n\nThe Blue Shark\n\n\n\nLoad data\n\nprint(load(\"data/Blue_shark_DArTseq_genlight_for_sex-linked_markers.Rdata\"))\n\n[1] \"data.gl\"\n\ndata.gl@n.loc\n\n[1] 172384\n\ntable(data.gl@pop)\n\n\n   EIO   MED1   MED2   NATL  NEATL    NIO   NPAC   SAF1   SAF2 SWPAC1 SWPAC2 \n     8     34     20     49     26     27      4     21     89     30     16 \nSWPAC3    WIO \n    11     29 \n\ntable(data.gl@other$ind.metrics$pop)\n\n\n   EIO   MED1   MED2   NATL  NEATL    NIO   NPAC   SAF1   SAF2 SWPAC1 SWPAC2 \n     8     34     20     49     26     27      4     21     89     30     16 \nSWPAC3    WIO \n    11     29 \n\ntable(data.gl@other$ind.metrics$sex, useNA = \"ifany\")\n\n\n   F    M &lt;NA&gt; \n 104  111  149 \n\n\n\n\n1. Number of sex-linked markers?\n\nres &lt;- dartR.sexlinked::gl.filter.sexlinked(gl = data.gl, system = \"xy\", plots = TRUE, ncores = 1)\n\nDetected 104 females and 111 males.\n\n\nStarting phase 1. May take a while...\n\n\nBuilding call rate plots.\n\n\n\n\n\nDone. Starting phase 2.\n\n\nBuilding heterozygosity plots.\n\n\n\n\n\n\n\n\nDone building heterozygosity plots.\n\n\n**FINISHED** Total of analyzed loci: 172384.\nFound 26 sex-linked loci:\n   2 Y-linked loci\n   2 sex-biased loci\n   22 X-linked loci\n   0 XY gametologs.\nAnd 172358 autosomal loci.\n\n\n\n\n\n\n\n2. Individuals with wrong sexID?\n\nsexID &lt;- dartR.sexlinked::gl.infer.sex(gl_sex_filtered = res, system = \"xy\", seed = 124)\n\nNot enough gametologs (need at least 5). Assigning NA...\n\n\n***FINISHED***\n\nknitr::kable(head(sexID))\n\nagreed.sex &lt;- sub(pattern = \"\\\\*\", replacement = \"\", x = sexID$agreed.sex) # remove asterisk\nsum(data.gl$other$ind.metrics$sex != agreed.sex, na.rm = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nid\ny.linked.sex\n#called\n#missing\nx.linked.sex\n#Het.x\n#Hom.x\ngametolog.sex\n#Het.g\n#Hom.g\nagreed.sex\n\n\n\n\n60088\n60088\nM\n2\n0\nM\n0\n22\nNA\nNA\nNA\nM\n\n\n60160\n60160\nM\n2\n0\nM\n0\n21\nNA\nNA\nNA\nM\n\n\n60168\n60168\nM\n2\n0\nM\n0\n22\nNA\nNA\nNA\nM\n\n\n60176\n60176\nM\n2\n0\nM\n0\n21\nNA\nNA\nNA\nM\n\n\n60096\n60096\nM\n2\n0\nM\n0\n22\nNA\nNA\nNA\nM\n\n\n60104\n60104\nM\n2\n0\nM\n1\n19\nNA\nNA\nNA\nM\n\n\n\n\n\n[1] 22\n\n\n\n\n\n\nDevloo‐Delva, Floriaan, Christopher P. Burridge, Peter M. Kyne, Juerg M. Brunnschweiler, Demian D. Chapman, Patricia Charvet, Xiao Chen, et al. 2023. “From Rivers to Ocean Basins: The Role of Ocean Barriers and Philopatry in the Genetic Structuring of a Cosmopolitan Coastal Predator.” Ecology and Evolution 13 (2): e9837. https://doi.org/10.1002/ece3.9837.\n\n\nNikolic, Natacha, Floriaan Devloo-Delva, Diane Bailleul, Ekaterina Noskova, Clément Rougeux, Chrystelle Delord, Philippe Borsa, et al. 2023. “Stepping up to Genome Scan Allows Stock Differentiation in the Worldwide Distributed Blue Shark Prionace Glauca.” Molecular Ecology 32 (5): 1000–1019. https://doi.org/10.1111/mec.16822.\n\n\nRobledo-Ruiz, Diana A., Lana Austin, J. Nevil Amos, Jesús Castrejón-Figueroa, Daniel K. P. Harley, Michael J. L. Magrath, Paul Sunnucks, and Alexandra Pavlova. 2023. “Easy-to-Use R Functions to Separate Reduced-Representation Genomic Datasets into Sex-Linked and Autosomal Loci, and Conduct Sex Assignment.” Molecular Ecology Resources 0 (n/a). https://doi.org/10.1111/1755-0998.13844."
  },
  {
    "objectID": "session10.html#references",
    "href": "session10.html#references",
    "title": "10  Sex Linked Markers",
    "section": "References",
    "text": "References\nDevloo-Delva, F., Burridge, C. P., Kyne, P. M., Brunnschweiler, J. M., Chapman, D. D., Charvet, P., … & Feutry, P. (2023). From rivers to ocean basins: The role of ocean barriers and philopatry in the genetic structuring of a cosmopolitan coastal predator. Ecology and Evolution, 13(2), e9837. https://doi.org/10.1002/ece3.9837\nNikolic, N., Devloo-Delva, F., Bailleul, D., Noskova, E., Rougeux, C., Delord, C., … & Arnaud‐Haond, S. (2023). Stepping up to genome scan allows stock differentiation in the worldwide distributed blue shark Prionace glauca. Molecular Ecology, 32(5), 1000-1019. https://doi.org/10.1111/mec.16822\nRobledo-Ruiz, D. A., Austin, L., Amos, J. N., Castrejón-Figueroa, J., Harley, D. K. P., Magrath, M. J. L., Sunnucks, P., & Pavlova, A. (2023). Easy-to-use R functions to separate reduced-representation genomic datasets into sex-linked and autosomal loci, and conduct sex assignment. Molecular Ecology Resources, 00, 1–21. https://doi.org/10.1111/1755-0998.13844\n\n\n\n\nDevloo‐Delva, Floriaan, Christopher P. Burridge, Peter M. Kyne, Juerg M. Brunnschweiler, Demian D. Chapman, Patricia Charvet, Xiao Chen, et al. 2023. “From Rivers to Ocean Basins: The Role of Ocean Barriers and Philopatry in the Genetic Structuring of a Cosmopolitan Coastal Predator.” Ecology and Evolution 13 (2): e9837. https://doi.org/10.1002/ece3.9837.\n\n\nNikolic, Natacha, Floriaan Devloo-Delva, Diane Bailleul, Ekaterina Noskova, Clément Rougeux, Chrystelle Delord, Philippe Borsa, et al. 2023. “Stepping up to Genome Scan Allows Stock Differentiation in the Worldwide Distributed Blue Shark Prionace Glauca.” Molecular Ecology 32 (5): 1000–1019. https://doi.org/10.1111/mec.16822.\n\n\nRobledo-Ruiz, Diana A., Lana Austin, J. Nevil Amos, Jesús Castrejón-Figueroa, Daniel K. P. Harley, Michael J. L. Magrath, Paul Sunnucks, and Alexandra Pavlova. 2023. “Easy-to-Use R Functions to Separate Reduced-Representation Genomic Datasets into Sex-Linked and Autosomal Loci, and Conduct Sex Assignment.” Molecular Ecology Resources 0 (n/a). https://doi.org/10.1111/1755-0998.13844."
  },
  {
    "objectID": "session10.html#exercise-4",
    "href": "session10.html#exercise-4",
    "title": "10  Sex Linked Markers",
    "section": "EXERCISE",
    "text": "EXERCISE\n\n\n\n\n\n\nExercise\n\n\n\n\nImagine you are analyzing the genetic data of a population and you want to look at its genetic structure and genetic diversity. You get to work by filtering your beautiful set of SNPs. Because you are a rigorous, you want to test whether using function gl.filter.sexlinked to properly filter out sex-linked loci changes the results of the populations analyses. So you: (1) process your SNP dataset by applying standard filters and run analyses, and (2) process the dataset by filtering out sex-linked loci first, applying standard filters second, and then run analyses.\nChoose one of the following datasets (or your own data) and report:\n\nHow many sex-linked markers are present?\nHow many individuals had a wrong sexID?\nDo you see any changes in your PCA/structure analyses when you filtered out sex-linked markers versus when you did not?\nDo you see any differences in genetic diversity and fixation indices when you filtered out sex-linked markers versus when you did not?"
  },
  {
    "objectID": "session02.html#assessing-populations-structure-diversity-and-demographic-history",
    "href": "session02.html#assessing-populations-structure-diversity-and-demographic-history",
    "title": "2  Pop Gen In Conservation",
    "section": "Assessing populations: structure, diversity, and demographic history",
    "text": "Assessing populations: structure, diversity, and demographic history\n\nLoad data and explore\nread in data\nthis dataset is to assess population structure and diversity in Uperoleia crassa, from https://onlinelibrary.wiley.com/doi/epdf/10.1111/mec.16597\n\n# gl &lt;- dartR::gl.read.dart(\"Report_DUp20-4995_1_moreOrders_SNP_mapping_2.csv\",\n#                           ind.metafile = \"Uperoleia_metadata.csv\")\n\nload('./data/session02_Uperoleia_crassa.RData') # data named gl\n\nThese are monsoonal tropical frogs, who are very common and abundant. They do interesting and weird stuff evolutionarily and reproductively\nlets quickly look at our samples and populations\n\ngl.map.interactive(gl)\n\nStarting gl.map.interactive \n  Processing genlight object with SNP data\nCompleted: gl.map.interactive \n\n\n\n\n\n\nwe have two populations - the Kimberley (IK) and the Top End (IT)\n\n\nClean data\nClean up your dataset to remove the most egregiously bad loci and individuals this set of filtering can be used across analyses\n\n#Get rid of really poorly sequenced loci\n#But don’t cut hard\ngl.report.callrate(gl)\n\nStarting gl.report.callrate \n  Processing genlight object with SNP data\n  Reporting Call Rate by Locus\n  No. of loci = 227143 \n  No. of individuals = 36 \n    Minimum      :  0.222222 \n    1st quartile :  0.611111 \n    Median       :  0.777778 \n    Mean         :  0.7464089 \n    3r quartile  :  0.916667 \n    Maximum      :  1 \n    Missing Rate Overall:  0.2536 \n\n\n\n\n\nCompleted: gl.report.callrate \n\ngl.1 &lt;- gl.filter.callrate(gl, method = \"loc\", threshold = 0.8)\n\nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Warning: Data may include monomorphic loci in call rate \n                    calculations for filtering\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 0.8 \n\n\n\n\n\nCompleted: gl.filter.callrate \n\n#Very low filter – this is only to get rid of your really bad individuals\ngl.report.callrate(gl.1, method = \"ind\")\n\nStarting gl.report.callrate \n  Processing genlight object with SNP data\n\n  Reporting Call Rate by Individual\n  No. of loci = 113404 \n  No. of individuals = 36 \n    Minimum      :  0.7589944 \n    1st quartile :  0.8751808 \n    Median       :  0.9524179 \n    Mean         :  0.9159171 \n    3r quartile  :  0.9598625 \n    Maximum      :  0.9787662 \n    Missing Rate Overall:  0.0841 \n\nListing 2 populations and their average CallRates\n  Monitor again after filtering\n  Population CallRate  N\n1         IK   0.9567 22\n2         IT   0.8519 14\n\nListing 20 individuals with the lowest CallRates\n  Use this list to see which individuals will be lost on filtering by individual\n  Set ind.to.list parameter to see more individuals\n          Individual  CallRate\n1     Up1041_R138706 0.7589944\n2    Up1186_QMJ88804 0.7730856\n3      Up1096_R36195 0.8080932\n4   Up0969_ABTC29129 0.8429597\n5   Up1136_NTMR36228 0.8449878\n6   Up0854_ABTC17229 0.8483299\n7   Up0276_NTMR35114 0.8558869\n8   Up1118_NTMR36173 0.8596699\n9      Up1120_R36170 0.8701809\n10  Up0767_ABTC12489 0.8768474\n11  Up0731_ABTC99709 0.8850834\n12  Up0832_ABTC93392 0.8948097\n13  Up0769_ABTC12511 0.8980988\n14 Up0166_WAMR162490 0.9082308\n15     Up1078_R36177 0.9091390\n16 Up1269_WAMR164857 0.9188212\n17 Up1266_WAMR164844 0.9397640\n18 Up1321_WAMR171536 0.9517389\n19        WAMR162566 0.9530969\n20 Up0083_WAMR113846 0.9537142\n\n)\n\n\n\n\n\nCompleted: gl.report.callrate \n\ngl.2 &lt;- gl.filter.callrate(gl.1, method = \"ind\", threshold = 0.25)\n\nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Warning: Data may include monomorphic loci in call rate \n                    calculations for filtering\n  Recalculating Call Rate\n  Removing individuals based on Call Rate, threshold = 0.25 \n\n\n\n\n\n  Note: Locus metrics not recalculated\n  Note: Resultant monomorphic loci not deleted\nCompleted: gl.filter.callrate \n\n#Always run this after removing individuals – removes loci that are no longer variable\ngl.3 &lt;- gl.filter.monomorphs(gl.2)\n\nStarting gl.filter.monomorphs \n  Processing genlight object with SNP data\n  Identifying monomorphic loci\n  No monomorphic loci to remove\nCompleted: gl.filter.monomorphs \n\n#Get rid of unreliable loci\ngl.report.reproducibility(gl.3)\n\nStarting gl.report.reproducibility \n  Processing genlight object with SNP data\n  Reporting Repeatability by Locus\n  No. of loci = 113404 \n  No. of individuals = 36 \n    Minimum      :  0.875 \n    1st quartile :  1 \n    Median       :  1 \n    Mean         :  0.9962267 \n    3r quartile  :  1 \n    Maximum      :  1 \n    Missing Rate Overall:  0.08 \n\n\n\n\n\n   Quantile Threshold Retained Percent Filtered Percent\n1      100%  1.000000   106676    94.1     6728     5.9\n2       95%  1.000000   106676    94.1     6728     5.9\n3       90%  1.000000   106676    94.1     6728     5.9\n4       85%  1.000000   106676    94.1     6728     5.9\n5       80%  1.000000   106676    94.1     6728     5.9\n6       75%  1.000000   106676    94.1     6728     5.9\n7       70%  1.000000   106676    94.1     6728     5.9\n8       65%  1.000000   106676    94.1     6728     5.9\n9       60%  1.000000   106676    94.1     6728     5.9\n10      55%  1.000000   106676    94.1     6728     5.9\n11      50%  1.000000   106676    94.1     6728     5.9\n12      45%  1.000000   106676    94.1     6728     5.9\n13      40%  1.000000   106676    94.1     6728     5.9\n14      35%  1.000000   106676    94.1     6728     5.9\n15      30%  1.000000   106676    94.1     6728     5.9\n16      25%  1.000000   106676    94.1     6728     5.9\n17      20%  1.000000   106676    94.1     6728     5.9\n18      15%  1.000000   106676    94.1     6728     5.9\n19      10%  1.000000   106676    94.1     6728     5.9\n20       5%  0.944444   110021    97.0     3383     3.0\n21       0%  0.875000   113404   100.0        0     0.0\nCompleted: gl.report.reproducibility \n\ngl.4 &lt;- gl.filter.reproducibility(gl.3)\n\nStarting gl.select.colors \n  Warning: Number of required colors not specified, set to 9\n  Library: RColorBrewer\n  Palette: brewer.pal\n  Showing and returning 2 of 9 colors for library RColorBrewer : palette Blues \n\n\n\n\n\nCompleted: gl.select.colors \nStarting gl.filter.reproducibility \n  Processing genlight object with SNP data\n  Removing loci with repeatability less than 0.99 \n\n\n\n\n\nCompleted: gl.filter.reproducibility \n\n#Get rid of low and super high read depth loci\n#do twice so you can zoom in\ngl.report.rdepth(gl.4)\n\nStarting gl.report.rdepth \n  Processing genlight object with SNP data\n  Reporting Read Depth by Locus\n  No. of loci = 106676 \n  No. of individuals = 36 \n    Minimum      :  2.5 \n    1st quartile :  5 \n    Median       :  7.2 \n    Mean         :  7.741356 \n    3r quartile  :  10 \n    Maximum      :  121.7 \n    Missing Rate Overall:  0.09 \n\n\n\n\n\n   Quantile Threshold Retained Percent Filtered Percent\n1      100%     121.7        1     0.0   106675   100.0\n2       95%      13.6     5520     5.2   101156    94.8\n3       90%      12.4    10872    10.2    95804    89.8\n4       85%      11.5    16057    15.1    90619    84.9\n5       80%      10.7    21633    20.3    85043    79.7\n6       75%      10.0    26932    25.2    79744    74.8\n7       70%       9.4    32193    30.2    74483    69.8\n8       65%       8.8    37650    35.3    69026    64.7\n9       60%       8.2    43461    40.7    63215    59.3\n10      55%       7.7    48582    45.5    58094    54.5\n11      50%       7.2    53911    50.5    52765    49.5\n12      45%       6.7    59668    55.9    47008    44.1\n13      40%       6.3    64353    60.3    42323    39.7\n14      35%       5.8    70391    66.0    36285    34.0\n15      30%       5.4    75457    70.7    31219    29.3\n16      25%       5.0    80644    75.6    26032    24.4\n17      20%       4.6    86041    80.7    20635    19.3\n18      15%       4.2    91353    85.6    15323    14.4\n19      10%       3.8    96433    90.4    10243     9.6\n20       5%       3.3   102090    95.7     4586     4.3\n21       0%       2.5   106676   100.0        0     0.0\nCompleted: gl.report.rdepth \n\ngl.5 &lt;- gl.filter.rdepth(gl.4, lower = 0, upper = 25)\n\nStarting gl.filter.rdepth \n  Processing genlight object with SNP data\n  Removing loci with rdepth &lt;= 0 and &gt;= 25 \n\n\n\n\n\nCompleted: gl.filter.rdepth \n\ngl.clean &lt;- gl.filter.rdepth(gl.5, lower = 8, upper = 17)\n\nStarting gl.filter.rdepth \n  Processing genlight object with SNP data\n  Removing loci with rdepth &lt;= 8 and &gt;= 17 \n\n\n\n\n\nCompleted: gl.filter.rdepth \n\nnInd(gl.clean)\n\n[1] 36\n\nnLoc(gl.clean)\n\n[1] 44752\n\n#look at the data to see if you see any obvious issues and redo if you do.\nplot(gl.clean)\n\n\n\nrm(gl.1, gl.2, gl.3, gl.4, gl.5)\n\n\nthis file is now your starting file for other filtering\n\n\n\nFiltering: Structure and phylogenetic analyses\n\nFiltering data for population structure and phylogenetic analyses\nloci on the same fragment and missing data are not well supported in these analyses. Structure-like analyses dislikes missing data. So, we are going to filter even harder than normal here just so that we can see a result.\n\ngl.report.callrate(gl.clean)\ngl.1 &lt;- gl.filter.callrate(gl.clean, method = \"loc\", threshold = 0.98)\n#Remove minor alleles\n#I usually set up the threshold so it is just \n# removing singletons to improve computation time\ngl.report.maf(gl.1)\ngl.2 &lt;- gl.filter.maf(gl.1,  threshold = 1/(2*nInd(gl.1)))\n#check that the data looks fairly clean\n#this starts to show some obvious population banding\nplot(gl.2)\n#remove secondary SNPs on the same fragment\n#Always do this as the last loci filter so that you’ve cut for quality \n# before you cut because there are two SNPs\ngl.3 &lt;- gl.filter.secondaries(gl.2)\n\n#Filter on individuals. You can usually be a bit flexible at this point.\n#individuals look a whole lot better now\n#make note of any idnviduals with a low call rate. Keep them in for now\n#but if they act weird in the analysis, you may want to consider removing\ngl.report.callrate(gl.3, method = \"ind\")\ngl.4 &lt;- gl.filter.callrate(gl.3, method = \"ind\", threshold = .9)\n#Always run this after removing individuals\ngl.structure &lt;- gl.filter.monomorphs(gl.4)\n\n#this is your cleaned dataset for a population structure analysis              \nplot(gl.structure)\nnInd(gl.structure)\nnLoc(gl.structure)\n\nyou can write this file out for various analyses that we will not go into here\ngl2structure(XXXX) gl2faststructure(XXXX)\n\n\n\nRUN SNMF (LEA)\nThis is a structure-like analysis called SNMF. This code is not all you would need to publish this result, but it is a good first look.\n\n# LEA requires the genotype style file\ngl2faststructure(gl.structure, outfile = \"gl_structure.fstr\",\n                 outpath = './data/')\nstruct2geno(\"./data/gl_structure.fstr\", ploidy = 2, FORMAT = 2) \n###this hates any loci with all heterozygotes\n\nsnmf.Sy.K1_8.10 = snmf(\"./data/gl_structure.fstr.geno\", K = 1:8,\n                       entropy = T, ploidy = 2, project=\"new\", repetitions = 10)  \n\n\nplot(snmf.Sy.K1_8.10)\n\n\n\nk &lt;- 2 #chose best based on lowest cross entropy in graph\nce = cross.entropy(snmf.Sy.K1_8.10, K = k)\nbest &lt;- which.min(ce)\npar (mfrow = c(1,1))\nbarplot(t(Q(snmf.Sy.K1_8.10, K = k, run = best)), col = 1:k)\n\n\n\n#Do a PCoA plot. I had these but they are also good for some stuff\npc &lt;- gl.pcoa(gl.structure)\n\nStarting gl.pcoa \n  Processing genlight object with SNP data\n  Performing a PCA, individuals as entities, loci as attributes, SNP genotype as state\nStarting gl.colors \nSelected color type 2 \nCompleted: gl.colors \n\n\n\n\n\nCompleted: gl.pcoa \n\ngl.pcoa.plot(pc, gl.structure)\n\nStarting gl.pcoa.plot \n  Processing an ordination file (glPca)\n  Processing genlight object with SNP data\n  Plotting populations in a space defined by the SNPs\n  Preparing plot .... please wait\n\n\n\n\n\nCompleted: gl.pcoa.plot \n\nrm(ce, gl.1, gl.2, gl.3, gl.4, snmf.Sy.K1_8.10, best, k, pc)\n\n\n\n\n\n\n\nExercise\n\n\n\n Have a go at altering various parameters and seeing how this changes your answers. One thing that regularly changes with MAF filters is the amount of variance explained. Removing more minor alleles increases the variance explained in a PCoA. Think about why that would be the case.\n\n\n\n\nFiltering for Tajima’s D\nNow we are going to look at how filtering can affect your understanding of demographic processes that population is Significant negative values of Tajima’s D are due to an excess of rare alleles and are consistent with range expansion. Significant positive values are associated with population contraction. Significance (a P-value) cannot be calculated without a simulation. Please ask me how to do this using Hudson’s ms program. Rare alleles matter! Lets look at how singletons impact our estimations of whether a population is expanding or contracting\nThis is a function written to calculate Tajima’s D from SNP data. It will create the function in your global environment so that you can call it.\n\nget_tajima_D &lt;- function(x){\n  require(dartRverse) # possibly not needed for a function in an R package?\n  \n  # Find allele frequencies (p1 and p2) for every locus in every population\n  allele_freqs &lt;- gl.allele.freq(x)\n  names(allele_freqs)[names(allele_freqs) == \"frequency\"] &lt;- \"p1\"\n  allele_freqs$p1 &lt;- allele_freqs$p1 / 100\n  allele_freqs$p2 &lt;- 1 - allele_freqs$p1\n  \n  # Get the names of all the populations\n  pops &lt;- unique(allele_freqs$popn)\n  \n  #split each population\n  allele_freqs_by_pop &lt;- split(allele_freqs, allele_freqs$popn)\n  \n  # Internal function to calculate pi\n  calc_pi &lt;- function(allele_freqs) {\n    n = allele_freqs$nobs * 2  # vector of n values\n    pi_sqr &lt;- allele_freqs$p1 ^ 2 + allele_freqs$p2 ^ 2\n    h = (n / (n - 1)) * (1 - pi_sqr) # vector of values of h\n    sum(h) # return pi, which is the sum of h across loci\n  }\n  \n  get_tajima_D_for_one_pop &lt;- function(allele_freqs_by_pop) {\n    pi &lt;- calc_pi(allele_freqs_by_pop)\n    \n# Calculate number of segregating sites, ignoring missing data (missing data will not appear in teh allele freq calcualtions)\n    #S &lt;- sum(!(allele_freqs_by_pop$p1 == 0 | allele_freqs_by_pop$p1 == 1))\n    S &lt;- sum(allele_freqs_by_pop$p1 &gt;0 & allele_freqs_by_pop$p1 &lt;1)\n    if(S == 0) {\n      warning(\"No segregating sites\")\n      data.frame(pi = NaN, \n                 S = NaN, \n                 D = NaN, \n                 Pval.normal = NaN, \n                 Pval.beta = NaN)\n    }\n    \n    n &lt;- mean(allele_freqs_by_pop$nobs * 2 )\n    \n    tmp &lt;- 1:(n - 1)\n    a1 &lt;- sum(1/tmp)\n    a2 &lt;- sum(1/tmp^2)\n    b1 &lt;- (n + 1)/(3 * (n - 1))\n    b2 &lt;- 2 * (n^2 + n + 3)/(9 * n * (n - 1))\n    c1 &lt;- b1 - 1/a1\n    c2 &lt;- b2 - (n + 2)/(a1 * n) + a2/a1^2\n    e1 &lt;- c1/a1\n    e2 &lt;- c2/(a1^2 + a2)\n    \n    \n    #calculate D and do beta testing\n    D &lt;- (pi - S/a1) / sqrt(e1 * S + e2 * S * (S - 1))\n    Dmin &lt;- (2/n - 1/a1)/sqrt(e2)\n    Dmax &lt;- ((n/(2*(n - 1))) - 1/a1)/sqrt(e2)\n    tmp1 &lt;- 1 + Dmin * Dmax\n    tmp2 &lt;- Dmax - Dmin\n    a &lt;- -tmp1 * Dmax/tmp2\n    b &lt;- tmp1 * Dmin/tmp2\n  \n    \n    data.frame(pi = pi, \n               S = S, \n               D = D)\n  }\n  \n  output &lt;- do.call(\"rbind\", lapply(allele_freqs_by_pop, \n                                    get_tajima_D_for_one_pop))\n  data.frame(population = rownames(output), output, row.names = NULL)\n}\n\nWe are going to focus on key filters and how they impact estimates\n\nMinor allele frequency (MAF) filtering\nNo MAF allele filtering\nNo MAF filtering but filtering on Read depth\n\n\n1. MAF filtering\nWe will start with our lightly cleaned data and filter this for the tajima’s calculation\n\n#This function is written to calculate Tajima's D with a fair amount of missing data\n#we are going to filter lightly here \ngl.report.callrate(gl.clean)\n\nStarting gl.report.callrate \n  Processing genlight object with SNP data\n  Reporting Call Rate by Locus\n  No. of loci = 44752 \n  No. of individuals = 36 \n    Minimum      :  0.805556 \n    1st quartile :  0.888889 \n    Median       :  0.944444 \n    Mean         :  0.9387004 \n    3r quartile  :  1 \n    Maximum      :  1 \n    Missing Rate Overall:  0.0613 \n\n\n\n\n\nCompleted: gl.report.callrate \n\ngl.1 &lt;- gl.filter.callrate(gl.clean, method = \"loc\", threshold = 0.9)\n\nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 0.9 \n\n\n\n\n\nCompleted: gl.filter.callrate \n\n#In this first round, we are going to actually remove singletons to see what happens\ngl.report.maf(gl.1)\n\nStarting gl.report.maf \n  Processing genlight object with SNP data\nStarting gl.report.maf \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population IK \n  No. of loci = 14958 \n  No. of individuals = 22 \n    Minimum      :  0.0227 \n    1st quantile :  0.0227 \n    Median       :  0.0455 \n    Mean         :  0.09433557 \n    3r quantile  :  0.0952 \n    Maximum      :  0.5 \n    Missing Rate Overall:  0.01 \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population IT \n  No. of loci = 24122 \n  No. of individuals = 14 \n    Minimum      :  0.0357 \n    1st quantile :  0.0385 \n    Median       :  0.0769 \n    Mean         :  0.1268348 \n    3r quantile  :  0.1667 \n    Maximum      :  0.5 \n    Missing Rate Overall:  0.06 \n\n  Reporting Minor Allele Frequency (MAF) by Locus OVERALL\n  No. of loci = 33136 \n  No. of individuals = 36 \n    Minimum      :  0.0114 \n    1st quantile :  0.0192 \n    Median       :  0.0384 \n    Mean         :  0.08512636 \n    3r quantile  :  0.0893 \n    Maximum      :  0.5 \n    Missing Rate Overall:  0.03 \n\n\n\n\n\n   Quantile Threshold Retained Percent Filtered Percent\n1      100%    0.5000       75     0.2    33061    99.8\n2       95%    0.3785     1657     5.0    31479    95.0\n3       90%    0.2559     3314    10.0    29822    90.0\n4       85%    0.1705     4984    15.0    28152    85.0\n5       80%    0.1190     6630    20.0    26506    80.0\n6       75%    0.0893     8533    25.8    24603    74.2\n7       70%    0.0714    10159    30.7    22977    69.3\n8       65%    0.0577    11608    35.0    21528    65.0\n9       60%    0.0454    13989    42.2    19147    57.8\n10      55%    0.0416    15067    45.5    18069    54.5\n11      50%    0.0384    16598    50.1    16538    49.9\n12      45%    0.0357    18691    56.4    14445    43.6\n13      40%    0.0292    19887    60.0    13249    40.0\n14      35%    0.0227    22254    67.2    10882    32.8\n15      30%    0.0209    23242    70.1     9894    29.9\n16      25%    0.0192    25099    75.7     8037    24.3\n17      20%    0.0178    28849    87.1     4287    12.9\n18      15%    0.0178    28849    87.1     4287    12.9\n19      10%    0.0114    32776    98.9      360     1.1\n20       5%    0.0114    32776    98.9      360     1.1\n21       0%    0.0114    33136   100.0        0     0.0\nCompleted: gl.report.maf \n\nnLoc(gl.1)\n\n[1] 33136\n\ngl.2 &lt;- gl.filter.maf(gl.1,  threshold = 0.05)\n\nStarting gl.select.colors \n  Warning: Number of required colors not specified, set to 9\n  Library: RColorBrewer\n  Palette: brewer.pal\n  Showing and returning 2 of 9 colors for library RColorBrewer : palette Blues \n\n\n\n\n\nCompleted: gl.select.colors \nStarting gl.filter.maf \n  Processing genlight object with SNP data\n  Removing loci with MAF &lt; 0.05 over all the dataset \n                and recalculating FreqHoms and FreqHets\n\n\n\n\n\nCompleted: gl.filter.maf \n\nnLoc(gl.2)\n\n[1] 12823\n\n#check that the data looks fairly clean\n#this starts ot show some obvious population banding\nplot(gl.2)\n\n\n\n#we are also going to remove secondary SNPs on the same fragment in this first round\ngl.3 &lt;- gl.filter.secondaries(gl.2)\n\nStarting gl.filter.secondaries \n  Processing genlight object with SNP data\n  Selecting one SNP per sequence tag at random\nCompleted: gl.filter.secondaries \n\n#Filter on individuals. You can usually be a bit flexible at this point.\n#make note of any idnviduals with a low call rate. Keep them in for now\n#but if they act weird in the analysis, you may want to consider removing\ngl.report.callrate(gl.3, method = \"ind\")\n\nStarting gl.report.callrate \n  Processing genlight object with SNP data\n\n  Reporting Call Rate by Individual\n  No. of loci = 10422 \n  No. of individuals = 36 \n    Minimum      :  0.8513721 \n    1st quartile :  0.9509211 \n    Median       :  0.9869507 \n    Mean         :  0.9658255 \n    3r quartile  :  0.9918922 \n    Maximum      :  0.9948187 \n    Missing Rate Overall:  0.0342 \n\nListing 2 populations and their average CallRates\n  Monitor again after filtering\n  Population CallRate  N\n1         IK   0.9878 22\n2         IT   0.9313 14\n\nListing 20 individuals with the lowest CallRates\n  Use this list to see which individuals will be lost on filtering by individual\n  Set ind.to.list parameter to see more individuals\n          Individual  CallRate\n1     Up1041_R138706 0.8513721\n2    Up1186_QMJ88804 0.8919593\n3      Up1096_R36195 0.9030896\n4   Up0854_ABTC17229 0.9175782\n5   Up0969_ABTC29129 0.9260219\n6      Up1120_R36170 0.9375360\n7   Up1118_NTMR36173 0.9396469\n8   Up0767_ABTC12489 0.9418538\n9   Up0832_ABTC93392 0.9507772\n10  Up0731_ABTC99709 0.9509691\n11  Up1136_NTMR36228 0.9531760\n12  Up0769_ABTC12511 0.9537517\n13 Up1269_WAMR164857 0.9573019\n14  Up0276_NTMR35114 0.9580695\n15     Up1078_R36177 0.9618116\n16 Up0166_WAMR162490 0.9654577\n17 Up1266_WAMR164844 0.9762042\n18 Up0183_WAMR162558 0.9866628\n19 Up1321_WAMR171536 0.9872385\n20        WAMR162566 0.9877183\n\n)\n\n\n\n\n\nCompleted: gl.report.callrate \n\ngl.4 &lt;- gl.filter.callrate(gl.3, method = \"ind\", threshold = .9)\n\nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Recalculating Call Rate\n  Removing individuals based on Call Rate, threshold = 0.9 \n  Individuals deleted (CallRate &lt;=  0.9 ):\nUp1186_QMJ88804[IT], Up1041_R138706[IT],\n\n\n\n\n\n  Note: Locus metrics not recalculated\n  Note: Resultant monomorphic loci not deleted\nCompleted: gl.filter.callrate \n\n#Always run this after removing individuals\ngl.D_withfiltering &lt;- gl.filter.monomorphs(gl.4)\n\nStarting gl.filter.monomorphs \n  Processing genlight object with SNP data\n  Identifying monomorphic loci\n  Removing monomorphic loci and loci with all missing \n                       data\nCompleted: gl.filter.monomorphs \n\n#calculate tajima's D with removing singletons and secondaries\n\nD_w_filtering &lt;- get_tajima_D(gl.D_withfiltering)\n\nStarting gl.allele.freq \n  Processing genlight object with SNP data\n  Calculating Tag allele frequencies for populations\nCompleted: gl.allele.freq \n\nD_w_filtering\n\n  population          pi S         D\n1         IK 0.003249825 1 -1.380214\n2         IT 0.004958104 1 -1.715483\n\nrm(gl.1, gl.2, gl.3, gl.4)\n\n\n\n2. No MAF filtering\nNow lets try it where we don’t remove singletons or secondaries\n\n#This function is written to calculate Tajima's D with a fair amount of missing data\n#we are going to filter lightly here \ngl.report.callrate(gl.clean)\n\nStarting gl.report.callrate \n  Processing genlight object with SNP data\n  Reporting Call Rate by Locus\n  No. of loci = 44752 \n  No. of individuals = 36 \n    Minimum      :  0.805556 \n    1st quartile :  0.888889 \n    Median       :  0.944444 \n    Mean         :  0.9387004 \n    3r quartile  :  1 \n    Maximum      :  1 \n    Missing Rate Overall:  0.0613 \n\n\n\n\n\nCompleted: gl.report.callrate \n\ngl.1 &lt;- gl.filter.callrate(gl.clean, method = \"loc\", threshold = 0.9)\n\nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 0.9 \n\n\n\n\n\nCompleted: gl.filter.callrate \n\n#check that the data looks fairly clean\n#this starts ot show some obvious population banding\nplot(gl.1)\n\n\n\n#Filter on individuals. You can usually be a bit flexible at this point.\n#make note of any idnviduals with a low call rate. Keep them in for now\n#but if they act weird in the analysis, you may want to consider removing\ngl.report.callrate(gl.1, method = \"ind\")\n\nStarting gl.report.callrate \n  Processing genlight object with SNP data\n\n  Reporting Call Rate by Individual\n  No. of loci = 33136 \n  No. of individuals = 36 \n    Minimum      :  0.8620232 \n    1st quartile :  0.9536758 \n    Median       :  0.9886679 \n    Mean         :  0.9684834 \n    3r quartile  :  0.9923648 \n    Maximum      :  0.9943264 \n    Missing Rate Overall:  0.0315 \n\nListing 2 populations and their average CallRates\n  Monitor again after filtering\n  Population CallRate  N\n1         IK   0.9888 22\n2         IT   0.9366 14\n\nListing 20 individuals with the lowest CallRates\n  Use this list to see which individuals will be lost on filtering by individual\n  Set ind.to.list parameter to see more individuals\n          Individual  CallRate\n1     Up1041_R138706 0.8620232\n2    Up1186_QMJ88804 0.9028549\n3      Up1096_R36195 0.9145039\n4   Up0854_ABTC17229 0.9209319\n5   Up0969_ABTC29129 0.9341803\n6      Up1120_R36170 0.9400954\n7   Up1118_NTMR36173 0.9462216\n8   Up0767_ABTC12489 0.9478211\n9   Up0731_ABTC99709 0.9527704\n10  Up1136_NTMR36228 0.9539775\n11  Up0832_ABTC93392 0.9551545\n12  Up0276_NTMR35114 0.9586251\n13  Up0769_ABTC12511 0.9594097\n14 Up1269_WAMR164857 0.9621861\n15     Up1078_R36177 0.9633028\n16 Up0166_WAMR162490 0.9667733\n17 Up1266_WAMR164844 0.9783317\n18 Up1321_WAMR171536 0.9882001\n19 Up0083_WAMR113846 0.9891357\n20 Up0183_WAMR162558 0.9891960\n\n)\n\n\n\n\n\nCompleted: gl.report.callrate \n\ngl.2 &lt;- gl.filter.callrate(gl.1, method = \"ind\", threshold = .9)\n\nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Recalculating Call Rate\n  Removing individuals based on Call Rate, threshold = 0.9 \n  Individuals deleted (CallRate &lt;=  0.9 ):\nUp1041_R138706[IT],\n\n\n\n\n\n  Note: Locus metrics not recalculated\n  Note: Resultant monomorphic loci not deleted\nCompleted: gl.filter.callrate \n\n#Always run this after removing individuals\ngl.D_withOutfiltering &lt;- gl.filter.monomorphs(gl.2)\n\nStarting gl.filter.monomorphs \n  Processing genlight object with SNP data\n  Identifying monomorphic loci\n  Removing monomorphic loci and loci with all missing \n                       data\nCompleted: gl.filter.monomorphs \n\nrm(gl.1, gl.2)\n\nD_wOUT_filtering &lt;- get_tajima_D(gl.D_withOutfiltering)\n\nStarting gl.allele.freq \n  Processing genlight object with SNP data\n  Calculating Tag allele frequencies for populations\nCompleted: gl.allele.freq \n\n\n\n\n\n3. No MAF filtering but filtering on Read depth\nNow lets try it where we don’t remove singletons or secondaries AND we filter for read depth to remove singletons where we are not confident about their base calls\n\n#This function is written to calculate Tajima's D with a fair amount of missing data\n#we are going to filter lightly here \ngl.report.callrate(gl.clean)\n\nStarting gl.report.callrate \n  Processing genlight object with SNP data\n  Reporting Call Rate by Locus\n  No. of loci = 44752 \n  No. of individuals = 36 \n    Minimum      :  0.805556 \n    1st quartile :  0.888889 \n    Median       :  0.944444 \n    Mean         :  0.9387004 \n    3r quartile  :  1 \n    Maximum      :  1 \n    Missing Rate Overall:  0.0613 \n\n\n\n\n\nCompleted: gl.report.callrate \n\ngl.1 &lt;- gl.filter.callrate(gl.clean, method = \"loc\", threshold = 0.9)\n\nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 0.9 \n\n\n\n\n\nCompleted: gl.filter.callrate \n\n#check that the data looks fairly clean\n#this starts ot show some obvious population banding\nplot(gl.1)\n\n\n\n#filter to loci with a lower read depth, so that we are really confident\n#that our base calls are correct\ngl.report.rdepth(gl.1)\n\nStarting gl.report.rdepth \n  Processing genlight object with SNP data\n  Reporting Read Depth by Locus\n  No. of loci = 33136 \n  No. of individuals = 36 \n    Minimum      :  8 \n    1st quartile :  9.3 \n    Median       :  10.7 \n    Mean         :  10.94332 \n    3r quartile  :  12.4 \n    Maximum      :  17 \n    Missing Rate Overall:  0.03 \n\n\n\n\n\n   Quantile Threshold Retained Percent Filtered Percent\n1      100%      17.0       27     0.1    33109    99.9\n2       95%      14.7     1707     5.2    31429    94.8\n3       90%      13.8     3536    10.7    29600    89.3\n4       85%      13.3     5002    15.1    28134    84.9\n5       80%      12.8     6811    20.6    26325    79.4\n6       75%      12.4     8369    25.3    24767    74.7\n7       70%      12.0    10014    30.2    23122    69.8\n8       65%      11.6    11913    36.0    21223    64.0\n9       60%      11.3    13385    40.4    19751    59.6\n10      55%      11.0    14934    45.1    18202    54.9\n11      50%      10.7    16641    50.2    16495    49.8\n12      45%      10.4    18337    55.3    14799    44.7\n13      40%      10.1    19974    60.3    13162    39.7\n14      35%       9.8    21780    65.7    11356    34.3\n15      30%       9.5    23645    71.4     9491    28.6\n16      25%       9.3    24859    75.0     8277    25.0\n17      20%       9.0    26704    80.6     6432    19.4\n18      15%       8.7    28644    86.4     4492    13.6\n19      10%       8.5    29974    90.5     3162     9.5\n20       5%       8.2    31834    96.1     1302     3.9\n21       0%       8.0    33136   100.0        0     0.0\nCompleted: gl.report.rdepth \n\ngl.2 &lt;- gl.filter.rdepth(gl.1, lower = 12, upper = 17)\n\nStarting gl.filter.rdepth \n  Processing genlight object with SNP data\n  Removing loci with rdepth &lt;= 12 and &gt;= 17 \n\n\n\n\n\nCompleted: gl.filter.rdepth \n\n#Filter on individuals. You can usually be a bit flexible at this point.\n#make note of any idnviduals with a low call rate. Keep them in for now\n#but if they act weird in the analysis, you may want to consider removing\ngl.report.callrate(gl.2, method = \"ind\")\n\nStarting gl.report.callrate \n  Processing genlight object with SNP data\n\n  Reporting Call Rate by Individual\n  No. of loci = 10014 \n  No. of individuals = 36 \n    Minimum      :  0.8722788 \n    1st quartile :  0.9646245 \n    Median       :  0.9926103 \n    Mean         :  0.9749822 \n    3r quartile  :  0.9955063 \n    Maximum      :  0.9969043 \n    Missing Rate Overall:  0.025 \n\nListing 2 populations and their average CallRates\n  Monitor again after filtering\n  Population CallRate  N\n1         IK   0.9926 22\n2         IT   0.9473 14\n\nListing 20 individuals with the lowest CallRates\n  Use this list to see which individuals will be lost on filtering by individual\n  Set ind.to.list parameter to see more individuals\n          Individual  CallRate\n1     Up1041_R138706 0.8722788\n2    Up1186_QMJ88804 0.9191132\n3      Up1096_R36195 0.9281007\n4   Up0854_ABTC17229 0.9320951\n5   Up0969_ABTC29129 0.9398842\n6      Up1120_R36170 0.9531656\n7   Up1118_NTMR36173 0.9573597\n8   Up0767_ABTC12489 0.9620531\n9   Up0832_ABTC93392 0.9636509\n10     Up1078_R36177 0.9649491\n11  Up0731_ABTC99709 0.9657480\n12  Up0769_ABTC12511 0.9662473\n13  Up1136_NTMR36228 0.9678450\n14  Up0276_NTMR35114 0.9690433\n15 Up1269_WAMR164857 0.9721390\n16 Up0166_WAMR162490 0.9740363\n17 Up1266_WAMR164844 0.9870182\n18 Up1321_WAMR171536 0.9924106\n19        WAMR162566 0.9928101\n20 Up0183_WAMR162558 0.9928101\n\n)\n\n\n\n\n\nCompleted: gl.report.callrate \n\ngl.3 &lt;- gl.filter.callrate(gl.2, method = \"ind\", threshold = .9)\n\nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Recalculating Call Rate\n  Removing individuals based on Call Rate, threshold = 0.9 \n  Individuals deleted (CallRate &lt;=  0.9 ):\nUp1041_R138706[IT],\n\n\n\n\n\n  Note: Locus metrics not recalculated\n  Note: Resultant monomorphic loci not deleted\nCompleted: gl.filter.callrate \n\n#Always run this after removing individuals\ngl.D_withOutfilteringRDepth &lt;- gl.filter.monomorphs(gl.3)\n\nStarting gl.filter.monomorphs \n  Processing genlight object with SNP data\n  Identifying monomorphic loci\n  Removing monomorphic loci and loci with all missing \n                       data\nCompleted: gl.filter.monomorphs \n\nrm(gl.1, gl.2, gl.3)\n\n#calculate tajima's D with removing singletons and secondaries\n\nD_wOUT_filtering_Rdepth &lt;- get_tajima_D(gl.D_withOutfilteringRDepth)\n\nStarting gl.allele.freq \n  Processing genlight object with SNP data\n  Calculating Tag allele frequencies for populations\nCompleted: gl.allele.freq \n\n\n\nlets look at all three\n\nD_w_filtering\n\n  population          pi S         D\n1         IK 0.003249825 1 -1.380214\n2         IT 0.004958104 1 -1.715483\n\nD_wOUT_filtering\n\n  population          pi S         D\n1         IK 0.002888251 1 -1.382837\n2         IT 0.004468415 1 -1.661505\n\nD_wOUT_filtering_Rdepth\n\n  population          pi S         D\n1         IK 0.002827014 1 -1.383208\n2         IT 0.004398409 1 -1.664054\n\n\nFor our Kimberley population, removing minor alleles give the actual wrong answer and suggests the population is contracting. This would have contradicted the rest of the findings of the paper, and been an artifact of the filtering process.\nThis shows how understanding the population genetic theory for a metric is crucial to useful analyses."
  },
  {
    "objectID": "session02.html#assessing-populations-structure-and-demographic-history",
    "href": "session02.html#assessing-populations-structure-and-demographic-history",
    "title": "2  Pop Gen In Conservation",
    "section": "Assessing Populations: structure and demographic history",
    "text": "Assessing Populations: structure and demographic history\n\nLoad data and explore\nThis dataset is to assess population structure and diversity in Uperoleia crassa, from Jaya et al. (2022).\n\n# gl &lt;- dartR::gl.read.dart(\"Report_DUp20-4995_1_moreOrders_SNP_mapping_2.csv\",\n#                           ind.metafile = \"Uperoleia_metadata.csv\")\n\nload('./data/session_2.RData') # data named gl\n\nThese are monsoonal tropical frogs, who are very common and abundant. They do interesting and weird stuff evolutionarily and reproductively\nlets quickly look at our samples and populations\n\ngl.map.interactive(gl)\n\nStarting gl.map.interactive \n  Processing genlight object with SNP data\nCompleted: gl.map.interactive \n\n\n\n\n\n\nwe have two populations - the Kimberley (IK) and the Top End (IT)\n\n\nClean data\nClean up your dataset to remove the most egregiously bad loci and individuals this set of filtering can be used across analyses\n\n#Get rid of really poorly sequenced loci\n#But don’t cut hard\ngl.report.callrate(gl)\n\nStarting gl.report.callrate \n  Processing genlight object with SNP data\n  Reporting Call Rate by Locus\n  No. of loci = 227143 \n  No. of individuals = 36 \n    Minimum      :  0.222222 \n    1st quartile :  0.611111 \n    Median       :  0.777778 \n    Mean         :  0.7464089 \n    3r quartile  :  0.916667 \n    Maximum      :  1 \n    Missing Rate Overall:  0.2536 \n\n\n\n\n\nCompleted: gl.report.callrate \n\ngl.1 &lt;- gl.filter.callrate(gl, method = \"loc\", threshold = 0.8)\n\nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Warning: Data may include monomorphic loci in call rate \n                    calculations for filtering\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 0.8 \n\n\n\n\n\nCompleted: gl.filter.callrate \n\n#Very low filter – this is only to get rid of your really bad individuals\ngl.report.callrate(gl.1, method = \"ind\")\n\nStarting gl.report.callrate \n  Processing genlight object with SNP data\n\n  Reporting Call Rate by Individual\n  No. of loci = 113404 \n  No. of individuals = 36 \n    Minimum      :  0.7589944 \n    1st quartile :  0.8751808 \n    Median       :  0.9524179 \n    Mean         :  0.9159171 \n    3r quartile  :  0.9598625 \n    Maximum      :  0.9787662 \n    Missing Rate Overall:  0.0841 \n\nListing 2 populations and their average CallRates\n  Monitor again after filtering\n  Population CallRate  N\n1         IK   0.9567 22\n2         IT   0.8519 14\n\nListing 20 individuals with the lowest CallRates\n  Use this list to see which individuals will be lost on filtering by individual\n  Set ind.to.list parameter to see more individuals\n          Individual  CallRate\n1     Up1041_R138706 0.7589944\n2    Up1186_QMJ88804 0.7730856\n3      Up1096_R36195 0.8080932\n4   Up0969_ABTC29129 0.8429597\n5   Up1136_NTMR36228 0.8449878\n6   Up0854_ABTC17229 0.8483299\n7   Up0276_NTMR35114 0.8558869\n8   Up1118_NTMR36173 0.8596699\n9      Up1120_R36170 0.8701809\n10  Up0767_ABTC12489 0.8768474\n11  Up0731_ABTC99709 0.8850834\n12  Up0832_ABTC93392 0.8948097\n13  Up0769_ABTC12511 0.8980988\n14 Up0166_WAMR162490 0.9082308\n15     Up1078_R36177 0.9091390\n16 Up1269_WAMR164857 0.9188212\n17 Up1266_WAMR164844 0.9397640\n18 Up1321_WAMR171536 0.9517389\n19        WAMR162566 0.9530969\n20 Up0083_WAMR113846 0.9537142\n\n)\n\n\n\n\n\nCompleted: gl.report.callrate \n\ngl.2 &lt;- gl.filter.callrate(gl.1, method = \"ind\", threshold = 0.25)\n\nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Warning: Data may include monomorphic loci in call rate \n                    calculations for filtering\n  Recalculating Call Rate\n  Removing individuals based on Call Rate, threshold = 0.25 \n\n\n\n\n\n  Note: Locus metrics not recalculated\n  Note: Resultant monomorphic loci not deleted\nCompleted: gl.filter.callrate \n\n#Always run this after removing individuals – removes loci that are no longer variable\ngl.3 &lt;- gl.filter.monomorphs(gl.2)\n\nStarting gl.filter.monomorphs \n  Processing genlight object with SNP data\n  Identifying monomorphic loci\n  No monomorphic loci to remove\nCompleted: gl.filter.monomorphs \n\n#Get rid of unreliable loci\ngl.report.reproducibility(gl.3)\n\nStarting gl.report.reproducibility \n  Processing genlight object with SNP data\n  Reporting Repeatability by Locus\n  No. of loci = 113404 \n  No. of individuals = 36 \n    Minimum      :  0.875 \n    1st quartile :  1 \n    Median       :  1 \n    Mean         :  0.9962267 \n    3r quartile  :  1 \n    Maximum      :  1 \n    Missing Rate Overall:  0.08 \n\n\n\n\n\n   Quantile Threshold Retained Percent Filtered Percent\n1      100%  1.000000   106676    94.1     6728     5.9\n2       95%  1.000000   106676    94.1     6728     5.9\n3       90%  1.000000   106676    94.1     6728     5.9\n4       85%  1.000000   106676    94.1     6728     5.9\n5       80%  1.000000   106676    94.1     6728     5.9\n6       75%  1.000000   106676    94.1     6728     5.9\n7       70%  1.000000   106676    94.1     6728     5.9\n8       65%  1.000000   106676    94.1     6728     5.9\n9       60%  1.000000   106676    94.1     6728     5.9\n10      55%  1.000000   106676    94.1     6728     5.9\n11      50%  1.000000   106676    94.1     6728     5.9\n12      45%  1.000000   106676    94.1     6728     5.9\n13      40%  1.000000   106676    94.1     6728     5.9\n14      35%  1.000000   106676    94.1     6728     5.9\n15      30%  1.000000   106676    94.1     6728     5.9\n16      25%  1.000000   106676    94.1     6728     5.9\n17      20%  1.000000   106676    94.1     6728     5.9\n18      15%  1.000000   106676    94.1     6728     5.9\n19      10%  1.000000   106676    94.1     6728     5.9\n20       5%  0.944444   110021    97.0     3383     3.0\n21       0%  0.875000   113404   100.0        0     0.0\nCompleted: gl.report.reproducibility \n\ngl.4 &lt;- gl.filter.reproducibility(gl.3)\n\nStarting gl.select.colors \n  Warning: Number of required colors not specified, set to 9\n  Library: RColorBrewer\n  Palette: brewer.pal\n  Showing and returning 2 of 9 colors for library RColorBrewer : palette Blues \n\n\n\n\n\nCompleted: gl.select.colors \nStarting gl.filter.reproducibility \n  Processing genlight object with SNP data\n  Removing loci with repeatability less than 0.99 \n\n\n\n\n\nCompleted: gl.filter.reproducibility \n\n#Get rid of low and super high read depth loci\n#do twice so you can zoom in\ngl.report.rdepth(gl.4)\n\nStarting gl.report.rdepth \n  Processing genlight object with SNP data\n  Reporting Read Depth by Locus\n  No. of loci = 106676 \n  No. of individuals = 36 \n    Minimum      :  2.5 \n    1st quartile :  5 \n    Median       :  7.2 \n    Mean         :  7.741356 \n    3r quartile  :  10 \n    Maximum      :  121.7 \n    Missing Rate Overall:  0.09 \n\n\n\n\n\n   Quantile Threshold Retained Percent Filtered Percent\n1      100%     121.7        1     0.0   106675   100.0\n2       95%      13.6     5520     5.2   101156    94.8\n3       90%      12.4    10872    10.2    95804    89.8\n4       85%      11.5    16057    15.1    90619    84.9\n5       80%      10.7    21633    20.3    85043    79.7\n6       75%      10.0    26932    25.2    79744    74.8\n7       70%       9.4    32193    30.2    74483    69.8\n8       65%       8.8    37650    35.3    69026    64.7\n9       60%       8.2    43461    40.7    63215    59.3\n10      55%       7.7    48582    45.5    58094    54.5\n11      50%       7.2    53911    50.5    52765    49.5\n12      45%       6.7    59668    55.9    47008    44.1\n13      40%       6.3    64353    60.3    42323    39.7\n14      35%       5.8    70391    66.0    36285    34.0\n15      30%       5.4    75457    70.7    31219    29.3\n16      25%       5.0    80644    75.6    26032    24.4\n17      20%       4.6    86041    80.7    20635    19.3\n18      15%       4.2    91353    85.6    15323    14.4\n19      10%       3.8    96433    90.4    10243     9.6\n20       5%       3.3   102090    95.7     4586     4.3\n21       0%       2.5   106676   100.0        0     0.0\nCompleted: gl.report.rdepth \n\ngl.5 &lt;- gl.filter.rdepth(gl.4, lower = 0, upper = 25)\n\nStarting gl.filter.rdepth \n  Processing genlight object with SNP data\n  Removing loci with rdepth &lt;= 0 and &gt;= 25 \n\n\n\n\n\nCompleted: gl.filter.rdepth \n\ngl.clean &lt;- gl.filter.rdepth(gl.5, lower = 8, upper = 17)\n\nStarting gl.filter.rdepth \n  Processing genlight object with SNP data\n  Removing loci with rdepth &lt;= 8 and &gt;= 17 \n\n\n\n\n\nCompleted: gl.filter.rdepth \n\nnInd(gl.clean)\n\n[1] 36\n\nnLoc(gl.clean)\n\n[1] 44752\n\n#look at the data to see if you see any obvious issues and redo if you do.\nplot(gl.clean)\n\n\n\nrm(gl.1, gl.2, gl.3, gl.4, gl.5)\n\n\n\n\n\n\n\ngl.clean\n\n\n\nThis file is now your starting file for other filtering\n\n\n\n\nFiltering\n\nFiltering data for population structure and phylogenetic analyses\nloci on the same fragment and missing data are not well supported in these analyses. Structure-like analyses dislikes missing data. So, we are going to filter even harder than normal here just so that we can see a result.\n\ngl.report.callrate(gl.clean)\ngl.1 &lt;- gl.filter.callrate(gl.clean, method = \"loc\", threshold = 0.98)\n#Remove minor alleles\n#I usually set up the threshold so it is just \n# removing singletons to improve computation time\ngl.report.maf(gl.1)\ngl.2 &lt;- gl.filter.maf(gl.1,  threshold = 1/(2*nInd(gl.1)))\n#check that the data looks fairly clean\n#this starts to show some obvious population banding\nplot(gl.2)\n#remove secondary SNPs on the same fragment\n#Always do this as the last loci filter so that you’ve cut for quality \n# before you cut because there are two SNPs\ngl.3 &lt;- gl.filter.secondaries(gl.2)\n\n#Filter on individuals. You can usually be a bit flexible at this point.\n#individuals look a whole lot better now\n#make note of any idnviduals with a low call rate. Keep them in for now\n#but if they act weird in the analysis, you may want to consider removing\ngl.report.callrate(gl.3, method = \"ind\")\ngl.4 &lt;- gl.filter.callrate(gl.3, method = \"ind\", threshold = .9)\n#Always run this after removing individuals\ngl.structure &lt;- gl.filter.monomorphs(gl.4)\n\n#this is your cleaned dataset for a population structure analysis              \nplot(gl.structure)\nnInd(gl.structure)\nnLoc(gl.structure)\n\nyou can write this file out for various analyses that we will not go into here (e.g. gl2structure(x) or gl2faststructure(x))\n\n\n\nRun SNMF (LEA)\nThis is a structure-like analysis called SNMF. This code is not all you would need to publish this result, but it is a good first look.\n\n# LEA requires the genotype style file\ngl2faststructure(gl.structure, outfile = \"gl_structure.fstr\",\n                 outpath = './data/')\nstruct2geno(\"./data/gl_structure.fstr\", ploidy = 2, FORMAT = 2) \n###this hates any loci with all heterozygotes\n\nsnmf.Sy.K1_8.10 = snmf(\"./data/gl_structure.fstr.geno\", K = 1:8,\n                       entropy = T, ploidy = 2, project=\"new\", repetitions = 10)  \n\n\nplot(snmf.Sy.K1_8.10)\n\n\n\nk &lt;- 2 #chose best based on lowest cross entropy in graph\nce = cross.entropy(snmf.Sy.K1_8.10, K = k)\nbest &lt;- which.min(ce)\npar (mfrow = c(1,1))\nbarplot(t(Q(snmf.Sy.K1_8.10, K = k, run = best)), col = 1:k)\n\n\n\n#Do a PCoA plot. I had these but they are also good for some stuff\npc &lt;- gl.pcoa(gl.structure)\n\nStarting gl.pcoa \n  Processing genlight object with SNP data\n  Performing a PCA, individuals as entities, loci as attributes, SNP genotype as state\nStarting gl.colors \nSelected color type 2 \nCompleted: gl.colors \n\n\n\n\n\nCompleted: gl.pcoa \n\ngl.pcoa.plot(pc, gl.structure)\n\nStarting gl.pcoa.plot \n  Processing an ordination file (glPca)\n  Processing genlight object with SNP data\n  Plotting populations in a space defined by the SNPs\n  Preparing plot .... please wait\n\n\n\n\n\nCompleted: gl.pcoa.plot \n\nrm(ce, gl.1, gl.2, gl.3, gl.4, snmf.Sy.K1_8.10, best, k, pc)\n\n\n\n\n\n\n\nExercise\n\n\n\n Have a go at altering various parameters and seeing how this changes your answers.\nOne thing that regularly changes with MAF filters is the amount of variance explained. Removing more minor alleles increases the variance explained in a PCoA. Think about why that would be the case.\n\n\n\n\nFiltering for Tajima’s D\nNow we are going to look at how filtering can affect your understanding of demographic processes that population is Significant negative values of Tajima’s D are due to an excess of rare alleles and are consistent with range expansion. Significant positive values are associated with population contraction. Significance (a P-value) cannot be calculated without a simulation. Please ask me how to do this using Hudson’s ms program. Rare alleles matter! Lets look at how singletons impact our estimations of whether a population is expanding or contracting\nThis is a function written to calculate Tajima’s D from SNP data. It will create the function in your global environment so that you can call it.\n\nget_tajima_D &lt;- function(x){\n  require(dartRverse) # possibly not needed for a function in an R package?\n  \n  # Find allele frequencies (p1 and p2) for every locus in every population\n  allele_freqs &lt;- gl.allele.freq(x)\n  names(allele_freqs)[names(allele_freqs) == \"frequency\"] &lt;- \"p1\"\n  allele_freqs$p1 &lt;- allele_freqs$p1 / 100\n  allele_freqs$p2 &lt;- 1 - allele_freqs$p1\n  \n  # Get the names of all the populations\n  pops &lt;- unique(allele_freqs$popn)\n  \n  #split each population\n  allele_freqs_by_pop &lt;- split(allele_freqs, allele_freqs$popn)\n  \n  # Internal function to calculate pi\n  calc_pi &lt;- function(allele_freqs) {\n    n = allele_freqs$nobs * 2  # vector of n values\n    pi_sqr &lt;- allele_freqs$p1 ^ 2 + allele_freqs$p2 ^ 2\n    h = (n / (n - 1)) * (1 - pi_sqr) # vector of values of h\n    sum(h) # return pi, which is the sum of h across loci\n  }\n  \n  get_tajima_D_for_one_pop &lt;- function(allele_freqs_by_pop) {\n    pi &lt;- calc_pi(allele_freqs_by_pop)\n    \n# Calculate number of segregating sites, ignoring missing data (missing data will not appear in teh allele freq calcualtions)\n    #S &lt;- sum(!(allele_freqs_by_pop$p1 == 0 | allele_freqs_by_pop$p1 == 1))\n    S &lt;- sum(allele_freqs_by_pop$p1 &gt;0 & allele_freqs_by_pop$p1 &lt;1)\n    if(S == 0) {\n      warning(\"No segregating sites\")\n      data.frame(pi = NaN, \n                 S = NaN, \n                 D = NaN, \n                 Pval.normal = NaN, \n                 Pval.beta = NaN)\n    }\n    \n    n &lt;- mean(allele_freqs_by_pop$nobs * 2 )\n    \n    tmp &lt;- 1:(n - 1)\n    a1 &lt;- sum(1/tmp)\n    a2 &lt;- sum(1/tmp^2)\n    b1 &lt;- (n + 1)/(3 * (n - 1))\n    b2 &lt;- 2 * (n^2 + n + 3)/(9 * n * (n - 1))\n    c1 &lt;- b1 - 1/a1\n    c2 &lt;- b2 - (n + 2)/(a1 * n) + a2/a1^2\n    e1 &lt;- c1/a1\n    e2 &lt;- c2/(a1^2 + a2)\n    \n    \n    #calculate D and do beta testing\n    D &lt;- (pi - S/a1) / sqrt(e1 * S + e2 * S * (S - 1))\n    Dmin &lt;- (2/n - 1/a1)/sqrt(e2)\n    Dmax &lt;- ((n/(2*(n - 1))) - 1/a1)/sqrt(e2)\n    tmp1 &lt;- 1 + Dmin * Dmax\n    tmp2 &lt;- Dmax - Dmin\n    a &lt;- -tmp1 * Dmax/tmp2\n    b &lt;- tmp1 * Dmin/tmp2\n  \n    \n    data.frame(pi = pi, \n               S = S, \n               D = D)\n  }\n  \n  output &lt;- do.call(\"rbind\", lapply(allele_freqs_by_pop, \n                                    get_tajima_D_for_one_pop))\n  data.frame(population = rownames(output), output, row.names = NULL)\n}\n\nWe are going to focus on key filters and how they impact estimates\n\nMinor allele frequency (MAF) filtering\nNo MAF allele filtering\nNo MAF filtering but filtering on Read depth\n\n\n1. MAF filtering\nWe will start with our lightly cleaned data and filter this for the tajima’s calculation\n\n#This function is written to calculate Tajima's D with a fair amount of missing data\n#we are going to filter lightly here \ngl.report.callrate(gl.clean)\n\nStarting gl.report.callrate \n  Processing genlight object with SNP data\n  Reporting Call Rate by Locus\n  No. of loci = 44752 \n  No. of individuals = 36 \n    Minimum      :  0.805556 \n    1st quartile :  0.888889 \n    Median       :  0.944444 \n    Mean         :  0.9387004 \n    3r quartile  :  1 \n    Maximum      :  1 \n    Missing Rate Overall:  0.0613 \n\n\n\n\n\nCompleted: gl.report.callrate \n\ngl.1 &lt;- gl.filter.callrate(gl.clean, method = \"loc\", threshold = 0.9)\n\nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 0.9 \n\n\n\n\n\nCompleted: gl.filter.callrate \n\n#In this first round, we are going to actually remove singletons to see what happens\ngl.report.maf(gl.1)\n\nStarting gl.report.maf \n  Processing genlight object with SNP data\nStarting gl.report.maf \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population IK \n  No. of loci = 14958 \n  No. of individuals = 22 \n    Minimum      :  0.0227 \n    1st quantile :  0.0227 \n    Median       :  0.0455 \n    Mean         :  0.09433557 \n    3r quantile  :  0.0952 \n    Maximum      :  0.5 \n    Missing Rate Overall:  0.01 \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population IT \n  No. of loci = 24122 \n  No. of individuals = 14 \n    Minimum      :  0.0357 \n    1st quantile :  0.0385 \n    Median       :  0.0769 \n    Mean         :  0.1268348 \n    3r quantile  :  0.1667 \n    Maximum      :  0.5 \n    Missing Rate Overall:  0.06 \n\n  Reporting Minor Allele Frequency (MAF) by Locus OVERALL\n  No. of loci = 33136 \n  No. of individuals = 36 \n    Minimum      :  0.0114 \n    1st quantile :  0.0192 \n    Median       :  0.0384 \n    Mean         :  0.08512636 \n    3r quantile  :  0.0893 \n    Maximum      :  0.5 \n    Missing Rate Overall:  0.03 \n\n\n\n\n\n   Quantile Threshold Retained Percent Filtered Percent\n1      100%    0.5000       75     0.2    33061    99.8\n2       95%    0.3785     1657     5.0    31479    95.0\n3       90%    0.2559     3314    10.0    29822    90.0\n4       85%    0.1705     4984    15.0    28152    85.0\n5       80%    0.1190     6630    20.0    26506    80.0\n6       75%    0.0893     8533    25.8    24603    74.2\n7       70%    0.0714    10159    30.7    22977    69.3\n8       65%    0.0577    11608    35.0    21528    65.0\n9       60%    0.0454    13989    42.2    19147    57.8\n10      55%    0.0416    15067    45.5    18069    54.5\n11      50%    0.0384    16598    50.1    16538    49.9\n12      45%    0.0357    18691    56.4    14445    43.6\n13      40%    0.0292    19887    60.0    13249    40.0\n14      35%    0.0227    22254    67.2    10882    32.8\n15      30%    0.0209    23242    70.1     9894    29.9\n16      25%    0.0192    25099    75.7     8037    24.3\n17      20%    0.0178    28849    87.1     4287    12.9\n18      15%    0.0178    28849    87.1     4287    12.9\n19      10%    0.0114    32776    98.9      360     1.1\n20       5%    0.0114    32776    98.9      360     1.1\n21       0%    0.0114    33136   100.0        0     0.0\nCompleted: gl.report.maf \n\nnLoc(gl.1)\n\n[1] 33136\n\ngl.2 &lt;- gl.filter.maf(gl.1,  threshold = 0.05)\n\nStarting gl.select.colors \n  Warning: Number of required colors not specified, set to 9\n  Library: RColorBrewer\n  Palette: brewer.pal\n  Showing and returning 2 of 9 colors for library RColorBrewer : palette Blues \n\n\n\n\n\nCompleted: gl.select.colors \nStarting gl.filter.maf \n  Processing genlight object with SNP data\n  Removing loci with MAF &lt; 0.05 over all the dataset \n                and recalculating FreqHoms and FreqHets\n\n\n\n\n\nCompleted: gl.filter.maf \n\nnLoc(gl.2)\n\n[1] 12823\n\n#check that the data looks fairly clean\n#this starts ot show some obvious population banding\nplot(gl.2)\n\n\n\n#we are also going to remove secondary SNPs on the same fragment in this first round\ngl.3 &lt;- gl.filter.secondaries(gl.2)\n\nStarting gl.filter.secondaries \n  Processing genlight object with SNP data\n  Selecting one SNP per sequence tag at random\nCompleted: gl.filter.secondaries \n\n#Filter on individuals. You can usually be a bit flexible at this point.\n#make note of any idnviduals with a low call rate. Keep them in for now\n#but if they act weird in the analysis, you may want to consider removing\ngl.report.callrate(gl.3, method = \"ind\")\n\nStarting gl.report.callrate \n  Processing genlight object with SNP data\n\n  Reporting Call Rate by Individual\n  No. of loci = 10422 \n  No. of individuals = 36 \n    Minimum      :  0.8513721 \n    1st quartile :  0.9509211 \n    Median       :  0.9869507 \n    Mean         :  0.9658255 \n    3r quartile  :  0.9918922 \n    Maximum      :  0.9948187 \n    Missing Rate Overall:  0.0342 \n\nListing 2 populations and their average CallRates\n  Monitor again after filtering\n  Population CallRate  N\n1         IK   0.9878 22\n2         IT   0.9313 14\n\nListing 20 individuals with the lowest CallRates\n  Use this list to see which individuals will be lost on filtering by individual\n  Set ind.to.list parameter to see more individuals\n          Individual  CallRate\n1     Up1041_R138706 0.8513721\n2    Up1186_QMJ88804 0.8919593\n3      Up1096_R36195 0.9030896\n4   Up0854_ABTC17229 0.9175782\n5   Up0969_ABTC29129 0.9260219\n6      Up1120_R36170 0.9375360\n7   Up1118_NTMR36173 0.9396469\n8   Up0767_ABTC12489 0.9418538\n9   Up0832_ABTC93392 0.9507772\n10  Up0731_ABTC99709 0.9509691\n11  Up1136_NTMR36228 0.9531760\n12  Up0769_ABTC12511 0.9537517\n13 Up1269_WAMR164857 0.9573019\n14  Up0276_NTMR35114 0.9580695\n15     Up1078_R36177 0.9618116\n16 Up0166_WAMR162490 0.9654577\n17 Up1266_WAMR164844 0.9762042\n18 Up0183_WAMR162558 0.9866628\n19 Up1321_WAMR171536 0.9872385\n20        WAMR162566 0.9877183\n\n)\n\n\n\n\n\nCompleted: gl.report.callrate \n\ngl.4 &lt;- gl.filter.callrate(gl.3, method = \"ind\", threshold = .9)\n\nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Recalculating Call Rate\n  Removing individuals based on Call Rate, threshold = 0.9 \n  Individuals deleted (CallRate &lt;=  0.9 ):\nUp1186_QMJ88804[IT], Up1041_R138706[IT],\n\n\n\n\n\n  Note: Locus metrics not recalculated\n  Note: Resultant monomorphic loci not deleted\nCompleted: gl.filter.callrate \n\n#Always run this after removing individuals\ngl.D_withfiltering &lt;- gl.filter.monomorphs(gl.4)\n\nStarting gl.filter.monomorphs \n  Processing genlight object with SNP data\n  Identifying monomorphic loci\n  Removing monomorphic loci and loci with all missing \n                       data\nCompleted: gl.filter.monomorphs \n\n#calculate tajima's D with removing singletons and secondaries\n\nD_w_filtering &lt;- get_tajima_D(gl.D_withfiltering)\n\nStarting gl.allele.freq \n  Processing genlight object with SNP data\n  Calculating Tag allele frequencies for populations\nCompleted: gl.allele.freq \n\nD_w_filtering\n\n  population          pi S         D\n1         IK 0.003249825 1 -1.380214\n2         IT 0.004958104 1 -1.715483\n\nrm(gl.1, gl.2, gl.3, gl.4)\n\n\n\n2. No MAF filtering\nNow lets try it where we don’t remove singletons or secondaries\n\n#This function is written to calculate Tajima's D with a fair amount of missing data\n#we are going to filter lightly here \ngl.report.callrate(gl.clean)\n\nStarting gl.report.callrate \n  Processing genlight object with SNP data\n  Reporting Call Rate by Locus\n  No. of loci = 44752 \n  No. of individuals = 36 \n    Minimum      :  0.805556 \n    1st quartile :  0.888889 \n    Median       :  0.944444 \n    Mean         :  0.9387004 \n    3r quartile  :  1 \n    Maximum      :  1 \n    Missing Rate Overall:  0.0613 \n\n\n\n\n\nCompleted: gl.report.callrate \n\ngl.1 &lt;- gl.filter.callrate(gl.clean, method = \"loc\", threshold = 0.9)\n\nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 0.9 \n\n\n\n\n\nCompleted: gl.filter.callrate \n\n#check that the data looks fairly clean\n#this starts ot show some obvious population banding\nplot(gl.1)\n\n\n\n#Filter on individuals. You can usually be a bit flexible at this point.\n#make note of any idnviduals with a low call rate. Keep them in for now\n#but if they act weird in the analysis, you may want to consider removing\ngl.report.callrate(gl.1, method = \"ind\")\n\nStarting gl.report.callrate \n  Processing genlight object with SNP data\n\n  Reporting Call Rate by Individual\n  No. of loci = 33136 \n  No. of individuals = 36 \n    Minimum      :  0.8620232 \n    1st quartile :  0.9536758 \n    Median       :  0.9886679 \n    Mean         :  0.9684834 \n    3r quartile  :  0.9923648 \n    Maximum      :  0.9943264 \n    Missing Rate Overall:  0.0315 \n\nListing 2 populations and their average CallRates\n  Monitor again after filtering\n  Population CallRate  N\n1         IK   0.9888 22\n2         IT   0.9366 14\n\nListing 20 individuals with the lowest CallRates\n  Use this list to see which individuals will be lost on filtering by individual\n  Set ind.to.list parameter to see more individuals\n          Individual  CallRate\n1     Up1041_R138706 0.8620232\n2    Up1186_QMJ88804 0.9028549\n3      Up1096_R36195 0.9145039\n4   Up0854_ABTC17229 0.9209319\n5   Up0969_ABTC29129 0.9341803\n6      Up1120_R36170 0.9400954\n7   Up1118_NTMR36173 0.9462216\n8   Up0767_ABTC12489 0.9478211\n9   Up0731_ABTC99709 0.9527704\n10  Up1136_NTMR36228 0.9539775\n11  Up0832_ABTC93392 0.9551545\n12  Up0276_NTMR35114 0.9586251\n13  Up0769_ABTC12511 0.9594097\n14 Up1269_WAMR164857 0.9621861\n15     Up1078_R36177 0.9633028\n16 Up0166_WAMR162490 0.9667733\n17 Up1266_WAMR164844 0.9783317\n18 Up1321_WAMR171536 0.9882001\n19 Up0083_WAMR113846 0.9891357\n20 Up0183_WAMR162558 0.9891960\n\n)\n\n\n\n\n\nCompleted: gl.report.callrate \n\ngl.2 &lt;- gl.filter.callrate(gl.1, method = \"ind\", threshold = .9)\n\nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Recalculating Call Rate\n  Removing individuals based on Call Rate, threshold = 0.9 \n  Individuals deleted (CallRate &lt;=  0.9 ):\nUp1041_R138706[IT],\n\n\n\n\n\n  Note: Locus metrics not recalculated\n  Note: Resultant monomorphic loci not deleted\nCompleted: gl.filter.callrate \n\n#Always run this after removing individuals\ngl.D_withOutfiltering &lt;- gl.filter.monomorphs(gl.2)\n\nStarting gl.filter.monomorphs \n  Processing genlight object with SNP data\n  Identifying monomorphic loci\n  Removing monomorphic loci and loci with all missing \n                       data\nCompleted: gl.filter.monomorphs \n\nrm(gl.1, gl.2)\n\nD_wOUT_filtering &lt;- get_tajima_D(gl.D_withOutfiltering)\n\nStarting gl.allele.freq \n  Processing genlight object with SNP data\n  Calculating Tag allele frequencies for populations\nCompleted: gl.allele.freq \n\n\n\n\n3. No MAF filtering but filtering on Read depth\nNow lets try it where we don’t remove singletons or secondaries AND we filter for read depth to remove singletons where we are not confident about their base calls\n\n#This function is written to calculate Tajima's D with a fair amount of missing data\n# we are going to filter lightly here \ngl.report.callrate(gl.clean)\n\nStarting gl.report.callrate \n  Processing genlight object with SNP data\n  Reporting Call Rate by Locus\n  No. of loci = 44752 \n  No. of individuals = 36 \n    Minimum      :  0.805556 \n    1st quartile :  0.888889 \n    Median       :  0.944444 \n    Mean         :  0.9387004 \n    3r quartile  :  1 \n    Maximum      :  1 \n    Missing Rate Overall:  0.0613 \n\n\n\n\n\nCompleted: gl.report.callrate \n\ngl.1 &lt;- gl.filter.callrate(gl.clean, method = \"loc\", threshold = 0.9)\n\nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 0.9 \n\n\n\n\n\nCompleted: gl.filter.callrate \n\n#check that the data looks fairly clean\n#this starts ot show some obvious population banding\nplot(gl.1)\n\n\n\n#filter to loci with a lower read depth, so that we are really confident\n#that our base calls are correct\ngl.report.rdepth(gl.1)\n\nStarting gl.report.rdepth \n  Processing genlight object with SNP data\n  Reporting Read Depth by Locus\n  No. of loci = 33136 \n  No. of individuals = 36 \n    Minimum      :  8 \n    1st quartile :  9.3 \n    Median       :  10.7 \n    Mean         :  10.94332 \n    3r quartile  :  12.4 \n    Maximum      :  17 \n    Missing Rate Overall:  0.03 \n\n\n\n\n\n   Quantile Threshold Retained Percent Filtered Percent\n1      100%      17.0       27     0.1    33109    99.9\n2       95%      14.7     1707     5.2    31429    94.8\n3       90%      13.8     3536    10.7    29600    89.3\n4       85%      13.3     5002    15.1    28134    84.9\n5       80%      12.8     6811    20.6    26325    79.4\n6       75%      12.4     8369    25.3    24767    74.7\n7       70%      12.0    10014    30.2    23122    69.8\n8       65%      11.6    11913    36.0    21223    64.0\n9       60%      11.3    13385    40.4    19751    59.6\n10      55%      11.0    14934    45.1    18202    54.9\n11      50%      10.7    16641    50.2    16495    49.8\n12      45%      10.4    18337    55.3    14799    44.7\n13      40%      10.1    19974    60.3    13162    39.7\n14      35%       9.8    21780    65.7    11356    34.3\n15      30%       9.5    23645    71.4     9491    28.6\n16      25%       9.3    24859    75.0     8277    25.0\n17      20%       9.0    26704    80.6     6432    19.4\n18      15%       8.7    28644    86.4     4492    13.6\n19      10%       8.5    29974    90.5     3162     9.5\n20       5%       8.2    31834    96.1     1302     3.9\n21       0%       8.0    33136   100.0        0     0.0\nCompleted: gl.report.rdepth \n\ngl.2 &lt;- gl.filter.rdepth(gl.1, lower = 12, upper = 17)\n\nStarting gl.filter.rdepth \n  Processing genlight object with SNP data\n  Removing loci with rdepth &lt;= 12 and &gt;= 17 \n\n\n\n\n\nCompleted: gl.filter.rdepth \n\n#Filter on individuals. You can usually be a bit flexible at this point.\n#make note of any idnviduals with a low call rate. Keep them in for now\n#but if they act weird in the analysis, you may want to consider removing\ngl.report.callrate(gl.2, method = \"ind\")\n\nStarting gl.report.callrate \n  Processing genlight object with SNP data\n\n  Reporting Call Rate by Individual\n  No. of loci = 10014 \n  No. of individuals = 36 \n    Minimum      :  0.8722788 \n    1st quartile :  0.9646245 \n    Median       :  0.9926103 \n    Mean         :  0.9749822 \n    3r quartile  :  0.9955063 \n    Maximum      :  0.9969043 \n    Missing Rate Overall:  0.025 \n\nListing 2 populations and their average CallRates\n  Monitor again after filtering\n  Population CallRate  N\n1         IK   0.9926 22\n2         IT   0.9473 14\n\nListing 20 individuals with the lowest CallRates\n  Use this list to see which individuals will be lost on filtering by individual\n  Set ind.to.list parameter to see more individuals\n          Individual  CallRate\n1     Up1041_R138706 0.8722788\n2    Up1186_QMJ88804 0.9191132\n3      Up1096_R36195 0.9281007\n4   Up0854_ABTC17229 0.9320951\n5   Up0969_ABTC29129 0.9398842\n6      Up1120_R36170 0.9531656\n7   Up1118_NTMR36173 0.9573597\n8   Up0767_ABTC12489 0.9620531\n9   Up0832_ABTC93392 0.9636509\n10     Up1078_R36177 0.9649491\n11  Up0731_ABTC99709 0.9657480\n12  Up0769_ABTC12511 0.9662473\n13  Up1136_NTMR36228 0.9678450\n14  Up0276_NTMR35114 0.9690433\n15 Up1269_WAMR164857 0.9721390\n16 Up0166_WAMR162490 0.9740363\n17 Up1266_WAMR164844 0.9870182\n18 Up1321_WAMR171536 0.9924106\n19        WAMR162566 0.9928101\n20 Up0183_WAMR162558 0.9928101\n\n)\n\n\n\n\n\nCompleted: gl.report.callrate \n\ngl.3 &lt;- gl.filter.callrate(gl.2, method = \"ind\", threshold = .9)\n\nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Recalculating Call Rate\n  Removing individuals based on Call Rate, threshold = 0.9 \n  Individuals deleted (CallRate &lt;=  0.9 ):\nUp1041_R138706[IT],\n\n\n\n\n\n  Note: Locus metrics not recalculated\n  Note: Resultant monomorphic loci not deleted\nCompleted: gl.filter.callrate \n\n#Always run this after removing individuals\ngl.D_withOutfilteringRDepth &lt;- gl.filter.monomorphs(gl.3)\n\nStarting gl.filter.monomorphs \n  Processing genlight object with SNP data\n  Identifying monomorphic loci\n  Removing monomorphic loci and loci with all missing \n                       data\nCompleted: gl.filter.monomorphs \n\nrm(gl.1, gl.2, gl.3)\n\n#calculate tajima's D with removing singletons and secondaries\n\nD_wOUT_filtering_Rdepth &lt;- get_tajima_D(gl.D_withOutfilteringRDepth)\n\nStarting gl.allele.freq \n  Processing genlight object with SNP data\n  Calculating Tag allele frequencies for populations\nCompleted: gl.allele.freq \n\n\n\n\n\nResults\n\nlets look at all three\n\nD_w_filtering\n\n  population          pi S         D\n1         IK 0.003249825 1 -1.380214\n2         IT 0.004958104 1 -1.715483\n\nD_wOUT_filtering\n\n  population          pi S         D\n1         IK 0.002888251 1 -1.382837\n2         IT 0.004468415 1 -1.661505\n\nD_wOUT_filtering_Rdepth\n\n  population          pi S         D\n1         IK 0.002827014 1 -1.383208\n2         IT 0.004398409 1 -1.664054\n\n\n\n\n\n\n\n\nInterpreting results\n\n\n\nFor our Kimberley population, removing minor alleles give the actual wrong answer and suggests the population is contracting. This would have contradicted the rest of the findings of the paper, and been an artifact of the filtering process.\nThis shows how understanding the population genetic theory for a metric is crucial to useful analyses."
  },
  {
    "objectID": "session02.html#introduction",
    "href": "session02.html#introduction",
    "title": "2  Pop Gen In Conservation",
    "section": "Introduction",
    "text": "Introduction\nHere is an introductory video on genetic diversity measures that is assumed knowledge for this session.\nVideo\nFor more details see Sherwin et al. (2017)."
  },
  {
    "objectID": "session02.html#different-dynamics-same-result",
    "href": "session02.html#different-dynamics-same-result",
    "title": "2  Pop Gen In Conservation",
    "section": "Different dynamics, same result",
    "text": "Different dynamics, same result\nSeveral descriptive genetic parameters are almost routinely computed, and one would be tempted to interpret them with a standardised approach. For example, low genetic diversity is often considered as an indication that the population size is small. If the inbreeding coefficient (\\(Fis\\)) is positive, that is often taken as an indication that the population is inbred and potentially at risk of inbreeding depression. However, there are situation where different dynamics can produce the same result. It is not always easy to diagnose these situations and identify the cause of our results, but my recommendation would be to give priority to your understanding of the biology, ecology and history of the populations and species you are working with. If the suggested interpretation do not fit your understanding of the ecology or demographics of the populations you are working with, explore possible alternative explanations. In the example above, a low genetic diversity can also occur because of a severe bottleneck even if the population has then recovered to large numbers.\nRecall that \\(Fis = (He-Ho)/He\\), hence any cause of alteration of HWE can cause an increased/decrease \\(Fis\\) as well sampling effects. For example, the selective sampling of related individuals (e.g. when sampling individuals within family groups - as often happens with feral pigs/boar - or when you are sampling intensively within the dispersal distance range of few individuals) can cause your samples not to be representative of the population, and while your analysis could indicate inbreeding, this may not be the case at population level. Wahlund effect is also another common cause of increased \\(Fis\\).\nLet’s have a look at an example of what happens if our sampling design caused us to sample selectively related individuals. We are going to use a simulated dataset based on the concept presented in Pacioni et al (2020) where females intensively trapped (using a grid design, ‘G’) within an area that didn’t encompassed multiple home ranges were highly related. ON the contrary, individuals trapped along transect (‘T’) that extended over multiple home ranges were an actual random rapresentation of the population.\n\nLoad data\n\nglw &lt;- gl.load(\"./data/sess2_glDes.rds\")\n#check the population size and number of populations\ntable(pop(glw)) # G stands for trapped in a grid, T for transect\n#number of loci\nnLoc(glw)\n\nglw &lt;- gl.filter.monomorphs(glw, verbose = 5)\n\n\n\nCalculate Relatedness\n\n# Run EMIBD9 to detect related individuals. Output saved to save time\n#ibd9 &lt;- gl.run.EMIBD9(glw, Inbreed = FALSE, \n #                     emibd9.path = \"E:/Software/Genetic software/EMIBD9\")\n#saveRDS(ibd9, file=\"Gen Diversity/ibd9.rds\")\n\n# Load EMIBD9 results\nibd9 &lt;- readRDS(\"./data/sess2_ibd9.rds\")\n\n# Do some manipulation to have everything in one table\nibd9Tab &lt;- ibd9[[2]]\n# Kick out self comparisons\nibd9Tab &lt;- ibd9Tab[ibd9Tab$Indiv1 != ibd9Tab$Indiv2,  c(1, 2, 21)]\n# Add trapping des for each individuals\nDes1 &lt;- pop(glw)[as.numeric(ibd9Tab$Indiv1)]\nDes2 &lt;- pop(glw)[as.numeric(ibd9Tab$Indiv2)]\n# Flag pairs trapping within G, T and in between (BW)\nPDes &lt;- ifelse((Des1 == \"G\" & Des2 == \"G\"), yes = \"G\", \n       no = ifelse((Des1 == \"T\" & Des2 == \"T\"), yes = \"T\", \"BW\"))\n# Combine together\nibd9DT &lt;- data.table(cbind(ibd9Tab, Des1, Des2, PDes))\n# Compute the mean relatedness\nibd9DT[, mean(as.numeric(`r(1,2)`)), by=PDes]\n\n     PDes         V1\n   &lt;char&gt;      &lt;num&gt;\n1:      T 0.03800294\n2:     BW 0.01454867\n3:      G 0.08464706\n\n\n\n\nRelatedness results\nMean relatedness for animals trapped in the grid is 3 times those trapped with a transect. There are also a series of other interesting things that happens: Mean relatedness of animals trapped in the grid is just marginally above the mean expected for first cousins (~0.06). However, more than half of the comparisons were between half sibs or more related individuals:\n\nibd9DT[, sum(`r(1,2)`&gt;=0.125), by=PDes] # HS or more\n\n     PDes    V1\n   &lt;char&gt; &lt;int&gt;\n1:      T     0\n2:     BW     0\n3:      G   512\n\nibd9DT[, sum(`r(1,2)`&gt;=0.25), by=PDes] # FS or PO\n\n     PDes    V1\n   &lt;char&gt; &lt;int&gt;\n1:      T     0\n2:     BW     0\n3:      G    92\n\n# Recall that the number of pairwise comparisons within 'G' is\nnG &lt;- sum(pop(glw) == \"G\")\nnG*(nG-1)/2\n\n[1] 1770\n\n\nOnly a limited number of loci are out of HWE after correction for multiple comparisons\n\nhwe &lt;- gl.report.hwe(glw, multi_comp = TRUE)\n\nStarting gl.report.hwe \n  Processing genlight object with SNP data\nPackage HardyWeinberg  needed for this function to work. Please install it.\n\n\nBut incredibly, because of the het excess, \\(Fis\\) in ‘G’ is negative suggesting a outbred population!\n\nhet &lt;- gl.report.heterozygosity(glw)\n\nStarting gl.report.heterozygosity \n  Processing genlight object with SNP data\n  Calculating Observed Heterozygosities, averaged across\n                    loci, for each population\n  Calculating Expected Heterozygosities\n\nStarting gl.colors \nSelected color type dis \nCompleted: gl.colors \n\n\n\n\n\n  pop n.Ind n.Loc n.Loc.adj polyLoc monoLoc all_NALoc       Ho     HoSD\nT   T    50   992         1     982      10         0 0.332258 0.162559\nG   G    60   992         1     959      33         0 0.327991 0.198620\n      HoSE HoLCI HoHCI   Ho.adj Ho.adjSD Ho.adjSE Ho.adjLCI Ho.adjHCI       He\nT 0.005161    NA    NA 0.332258 0.162559 0.005161        NA        NA 0.329298\nG 0.006306    NA    NA 0.327991 0.198620 0.006306        NA        NA 0.294170\n      HeSD     HeSE HeLCI HeHCI      uHe    uHeSD    uHeSE uHeLCI uHeHCI\nT 0.152419 0.004839    NA    NA 0.332624 0.153958 0.004888     NA     NA\nG 0.169669 0.005387    NA    NA 0.296642 0.171094 0.005432     NA     NA\n    He.adj He.adjSD He.adjSE He.adjLCI He.adjHCI       FIS    FISSD    FISSE\nT 0.329298 0.152419 0.004839        NA        NA  0.001446 0.130990 0.004159\nG 0.294170 0.169669 0.005387        NA        NA -0.091603 0.140922 0.004474\n  FISLCI FISHCI\nT     NA     NA\nG     NA     NA\nCompleted: gl.report.heterozygosity \n\n\n\n\n\n\n\n\nInterpreting results\n\n\n\nIn our task, when the restoration project took place, two separate populations came in contact, creating an admixture zone. As the species is long-lived there has not been enough mixing and turnover for the two amalgamate. The lack of HWE and increased \\(Fis\\) is a result of the Wahlund effect."
  },
  {
    "objectID": "session02.html#exercise-data",
    "href": "session02.html#exercise-data",
    "title": "2  Pop Gen In Conservation",
    "section": "Exercise data",
    "text": "Exercise data\n\ngl.report.heterozygosity(glsim)\n\nStarting gl.report.heterozygosity \n  Processing genlight object with SNP data\n  Calculating Observed Heterozygosities, averaged across\n                    loci, for each population\n  Calculating Expected Heterozygosities\n\nStarting gl.colors \nSelected color type dis \nCompleted: gl.colors \n\n\n\n\n\n      pop n.Ind n.Loc n.Loc.adj polyLoc monoLoc all_NALoc       Ho     HoSD\npopA popA   100  2500         1    2500       0         0 0.386004 0.142553\n         HoSE HoLCI HoHCI   Ho.adj Ho.adjSD Ho.adjSE Ho.adjLCI Ho.adjHCI\npopA 0.002851    NA    NA 0.386004 0.142553 0.002851        NA        NA\n           He     HeSD     HeSE HeLCI HeHCI      uHe   uHeSD    uHeSE uHeLCI\npopA 0.441149 0.096207 0.001924    NA    NA 0.443366 0.09669 0.001934     NA\n     uHeHCI   He.adj He.adjSD He.adjSE He.adjLCI He.adjHCI      FIS    FISSD\npopA     NA 0.441149 0.096207 0.001924        NA        NA 0.114365 0.268448\n        FISSE FISLCI FISHCI\npopA 0.005369     NA     NA\nCompleted: gl.report.heterozygosity \n\npcaglsim &lt;- gl.pcoa(glsim)\n\nStarting gl.pcoa \n  Processing genlight object with SNP data\n  Performing a PCA, individuals as entities, loci as attributes, SNP genotype as state\nStarting gl.colors \nSelected color type 2 \nCompleted: gl.colors \n\n\n\n\n\nCompleted: gl.pcoa \n\ngl.pcoa.plot(glPca = pcaglsim, x = glsim)\n\nStarting gl.pcoa.plot \n  Processing an ordination file (glPca)\n  Processing genlight object with SNP data\n  Plotting populations in a space defined by the SNPs\n  Preparing plot .... please wait\n\n\n\n\n\nCompleted: gl.pcoa.plot \n\nhwe &lt;- gl.report.hwe(glsim, multi_comp = TRUE)\n\nStarting gl.report.hwe \n  Processing genlight object with SNP data\nPackage HardyWeinberg  needed for this function to work. Please install it."
  },
  {
    "objectID": "session03.html#estimating-heterozygosity-70-callrate",
    "href": "session03.html#estimating-heterozygosity-70-callrate",
    "title": "3  Sequencing Technologies",
    "section": "1. Estimating heterozygosity: 70% callrate",
    "text": "1. Estimating heterozygosity: 70% callrate\nHow do estimates of heterozygosity change as the number of individuals changes in your SNP calling?\nThis uses data from Litoria rubella, a very abundant and widespread frog species we are using data following https://onlinelibrary.wiley.com/doi/10.1111/1755-0998.13947. Let’s focus on the Kimberley, where we have lots of samples, and we expect the diversity to be really high because there are millions of them everywhere. SNPs were called on different numbers of individuals, in increments of 5 using the Stacks pipeline. We are only going to do a simple filter for call rates because we already filtered for allele depth in Stacks. SNPs were called independent of other populations, which we will get to later.\n\nLoad data\n\n# load data\nload('./data/Session3_data.RData')\n\n#create a list of the kimberley genlights\nkimberley_names &lt;- ls(pattern = \"^Kimberley\")\n#put all the genlights into a mega list\nkimberley &lt;- mget(kimberley_names)\n\n#we're going to do this in a loop for speed, applying the same filters\n# Iterate over the names of the kimberley list\nfor(name in names(kimberley)){\n  # Extract the genlight object from the kimberley list using its name\n  genlight_object &lt;- kimberley[[name]]\n  # Apply the filter call rate function\n  # Assuming gl.filter.callrate is a function that operates on a genlight object\n  filtered_object &lt;- gl.filter.callrate(genlight_object, threshold = 0.7, mono.rm = TRUE)\n  # Assign the filtered object back to the environment with a new name\n  assign(paste0(name, \"_0.7\"), filtered_object)\n}\n\nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Warning: data include loci that are scored NA across all individuals.\n  Consider filtering using gl &lt;- gl.filter.allna(gl)\n  Warning: Data may include monomorphic loci in call rate \n                    calculations for filtering\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 0.7 \n\n\n\n\n\nCompleted: gl.filter.callrate \nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Warning: data include loci that are scored NA across all individuals.\n  Consider filtering using gl &lt;- gl.filter.allna(gl)\n  Warning: Data may include monomorphic loci in call rate \n                    calculations for filtering\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 0.7 \n\n\n\n\n\nCompleted: gl.filter.callrate \nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Warning: Data may include monomorphic loci in call rate \n                    calculations for filtering\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 0.7 \n\n\n\n\n\nCompleted: gl.filter.callrate \nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Warning: Data may include monomorphic loci in call rate \n                    calculations for filtering\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 0.7 \n\n\n\n\n\nCompleted: gl.filter.callrate \nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Warning: Data may include monomorphic loci in call rate \n                    calculations for filtering\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 0.7 \n\n\n\n\n\nCompleted: gl.filter.callrate \nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Warning: Data may include monomorphic loci in call rate \n                    calculations for filtering\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 0.7 \n\n\n\n\n\nCompleted: gl.filter.callrate \nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Warning: Data may include monomorphic loci in call rate \n                    calculations for filtering\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 0.7 \n\n\n\n\n\nCompleted: gl.filter.callrate \nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Warning: Data may include monomorphic loci in call rate \n                    calculations for filtering\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 0.7 \n\n\n\n\n\nCompleted: gl.filter.callrate \n\n\n\n\nCalculate heterozygosity\n\n# List all object names in the environment\nall_names &lt;- ls()\n\n# Use grep() to match names that start with \"Kimberley\" \n# and end with \"0.7\", .+ indicates any characters in between\nkimberley_filtered &lt;- grep(\"^Kimberley.+0\\\\.7$\", all_names, value = TRUE)#put all the genlights into a mega list\n#create another list with the ones we want\nkimberley &lt;- mget(kimberley_filtered)\n\n#Initialize an empty data frame\nheterozygosity_reports_df &lt;- data.frame()\n\n# Iterate over the kimberley list to apply gl.report.heterozygosity\n# and bind the results\nfor(name in names(kimberley)) {\n  # Apply the function\n  report &lt;- gl.report.heterozygosity(kimberley[[name]])\n  \n  # Add 'ObjectName' as the first column of the report\n  report &lt;- cbind(ObjectName = name, report)\n  \n  # Bind this report to the main data frame\n  heterozygosity_reports_df &lt;- bind_rows(heterozygosity_reports_df, report)\n}\n\nStarting gl.report.heterozygosity \n  Processing genlight object with SNP data\n  Calculating Observed Heterozygosities, averaged across\n                    loci, for each population\n  Calculating Expected Heterozygosities\n\nStarting gl.colors \nSelected color type dis \nCompleted: gl.colors \n\n\n\n\n\n      pop    n.Ind n.Loc n.Loc.adj polyLoc monoLoc all_NALoc       Ho     HoSD\npop1 pop1 4.327947 28465         1   28465       0         0 0.233986 0.190371\n         HoSE       He     HeSD     HeSE      uHe    uHeSD    uHeSE      FIS\npop1 0.001128 0.329375 0.112778 0.000668 0.372398 0.127509 0.000756 0.302454\n        FISSD    FISSE\npop1 0.469498 0.002783\nCompleted: gl.report.heterozygosity \nStarting gl.report.heterozygosity \n  Processing genlight object with SNP data\n  Calculating Observed Heterozygosities, averaged across\n                    loci, for each population\n  Calculating Expected Heterozygosities\n\nStarting gl.colors \nSelected color type dis \nCompleted: gl.colors \n\n\n\n\n\n      pop    n.Ind n.Loc n.Loc.adj polyLoc monoLoc all_NALoc       Ho     HoSD\npop1 pop1 8.113689 47375         1   47375       0         0 0.174677 0.144488\n         HoSE       He     HeSD    HeSE      uHe    uHeSD    uHeSE      FIS\npop1 0.000664 0.256162 0.135015 0.00062 0.272985 0.143882 0.000661 0.279239\n        FISSD    FISSE\npop1 0.419149 0.001926\nCompleted: gl.report.heterozygosity \nStarting gl.report.heterozygosity \n  Processing genlight object with SNP data\n  Calculating Observed Heterozygosities, averaged across\n                    loci, for each population\n  Calculating Expected Heterozygosities\n\nStarting gl.colors \nSelected color type dis \nCompleted: gl.colors \n\n\n\n\n\n      pop    n.Ind n.Loc n.Loc.adj polyLoc monoLoc all_NALoc      Ho     HoSD\npop1 pop1 12.36041 35945         1   35945       0         0 0.15375 0.130734\n        HoSE       He    HeSD     HeSE      uHe    uHeSD   uHeSE      FIS\npop1 0.00069 0.218107 0.14199 0.000749 0.227301 0.147975 0.00078 0.244173\n        FISSD    FISSE\npop1 0.379656 0.002002\nCompleted: gl.report.heterozygosity \nStarting gl.report.heterozygosity \n  Processing genlight object with SNP data\n  Calculating Observed Heterozygosities, averaged across\n                    loci, for each population\n  Calculating Expected Heterozygosities\n\nStarting gl.colors \nSelected color type dis \nCompleted: gl.colors \n\n\n\n\n\n      pop    n.Ind n.Loc n.Loc.adj polyLoc monoLoc all_NALoc       Ho     HoSD\npop1 pop1 16.03257 46276         1   46276       0         0 0.136788 0.122952\n         HoSE       He     HeSD     HeSE      uHe    uHeSD    uHeSE     FIS\npop1 0.000572 0.196149 0.143623 0.000668 0.202464 0.148246 0.000689 0.24159\n        FISSD    FISSE\npop1 0.366035 0.001702\nCompleted: gl.report.heterozygosity \nStarting gl.report.heterozygosity \n  Processing genlight object with SNP data\n  Calculating Observed Heterozygosities, averaged across\n                    loci, for each population\n  Calculating Expected Heterozygosities\n\nStarting gl.colors \nSelected color type dis \nCompleted: gl.colors \n\n\n\n\n\n      pop    n.Ind n.Loc n.Loc.adj polyLoc monoLoc all_NALoc       Ho     HoSD\npop1 pop1 20.24648 39573         1   39573       0         0 0.128296 0.118505\n         HoSE       He     HeSD     HeSE      uHe    uHeSD    uHeSE      FIS\npop1 0.000596 0.180369 0.144139 0.000725 0.184936 0.147788 0.000743 0.224197\n        FISSD    FISSE\npop1 0.345555 0.001737\nCompleted: gl.report.heterozygosity \nStarting gl.report.heterozygosity \n  Processing genlight object with SNP data\n  Calculating Observed Heterozygosities, averaged across\n                    loci, for each population\n  Calculating Expected Heterozygosities\n\nStarting gl.colors \nSelected color type dis \nCompleted: gl.colors \n\n\n\n\n\n      pop    n.Ind n.Loc n.Loc.adj polyLoc monoLoc all_NALoc       Ho     HoSD\npop1 pop1 23.86971 44532         1   44532       0         0 0.122023 0.115572\n         HoSE       He     HeSD     HeSE      uHe    uHeSD    uHeSE      FIS\npop1 0.000548 0.172406 0.144272 0.000684 0.176095 0.147359 0.000698 0.225027\n        FISSD    FISSE\npop1 0.336198 0.001593\nCompleted: gl.report.heterozygosity \nStarting gl.report.heterozygosity \n  Processing genlight object with SNP data\n  Calculating Observed Heterozygosities, averaged across\n                    loci, for each population\n  Calculating Expected Heterozygosities\n\nStarting gl.colors \nSelected color type dis \nCompleted: gl.colors \n\n\n\n\n\n      pop    n.Ind n.Loc n.Loc.adj polyLoc monoLoc all_NALoc       Ho     HoSD\npop1 pop1 28.28105 46273         1   46273       0         0 0.114091 0.112716\n         HoSE       He     HeSD     HeSE      uHe    uHeSD    uHeSE      FIS\npop1 0.000524 0.160215 0.143001 0.000665 0.163099 0.145574 0.000677 0.217536\n        FISSD    FISSE\npop1 0.325623 0.001514\nCompleted: gl.report.heterozygosity \nStarting gl.report.heterozygosity \n  Processing genlight object with SNP data\n  Calculating Observed Heterozygosities, averaged across\n                    loci, for each population\n  Calculating Expected Heterozygosities\n\nStarting gl.colors \nSelected color type dis \nCompleted: gl.colors \n\n\n\n\n\n      pop    n.Ind n.Loc n.Loc.adj polyLoc monoLoc all_NALoc       Ho     HoSD\npop1 pop1 31.86356 49487         1   49487       0         0 0.110686 0.111441\n         HoSE       He     HeSD     HeSE      uHe    uHeSD    uHeSE      FIS\npop1 0.000501 0.156579 0.143352 0.000644 0.159075 0.145637 0.000655 0.221427\n       FISSD    FISSE\npop1 0.32204 0.001448\nCompleted: gl.report.heterozygosity \n\n# heterozygosity_reports_df now contains all the reports with an \n# additional column for object names\nknitr::kable(heterozygosity_reports_df)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nObjectName\npop\nn.Ind\nn.Loc\nn.Loc.adj\npolyLoc\nmonoLoc\nall_NALoc\nHo\nHoSD\nHoSE\nHe\nHeSD\nHeSE\nuHe\nuHeSD\nuHeSE\nFIS\nFISSD\nFISSE\n\n\n\n\npop1…1\nKimberley_n_05.vcf_0.7\npop1\n4.327947\n28465\n1\n28465\n0\n0\n0.233986\n0.190371\n0.001128\n0.329375\n0.112778\n0.000668\n0.372398\n0.127509\n0.000756\n0.302454\n0.469498\n0.002783\n\n\npop1…2\nKimberley_n_10.vcf_0.7\npop1\n8.113689\n47375\n1\n47375\n0\n0\n0.174677\n0.144488\n0.000664\n0.256162\n0.135015\n0.000620\n0.272985\n0.143882\n0.000661\n0.279239\n0.419149\n0.001926\n\n\npop1…3\nKimberley_n_15.vcf_0.7\npop1\n12.360412\n35945\n1\n35945\n0\n0\n0.153750\n0.130734\n0.000690\n0.218107\n0.141990\n0.000749\n0.227301\n0.147975\n0.000780\n0.244173\n0.379656\n0.002002\n\n\npop1…4\nKimberley_n_20.vcf_0.7\npop1\n16.032565\n46276\n1\n46276\n0\n0\n0.136788\n0.122952\n0.000572\n0.196149\n0.143623\n0.000668\n0.202464\n0.148246\n0.000689\n0.241590\n0.366035\n0.001702\n\n\npop1…5\nKimberley_n_25.vcf_0.7\npop1\n20.246481\n39573\n1\n39573\n0\n0\n0.128296\n0.118505\n0.000596\n0.180369\n0.144139\n0.000725\n0.184936\n0.147788\n0.000743\n0.224197\n0.345555\n0.001737\n\n\npop1…6\nKimberley_n_30.vcf_0.7\npop1\n23.869712\n44532\n1\n44532\n0\n0\n0.122023\n0.115572\n0.000548\n0.172406\n0.144272\n0.000684\n0.176095\n0.147359\n0.000698\n0.225027\n0.336198\n0.001593\n\n\npop1…7\nKimberley_n_35.vcf_0.7\npop1\n28.281049\n46273\n1\n46273\n0\n0\n0.114091\n0.112716\n0.000524\n0.160215\n0.143001\n0.000665\n0.163099\n0.145574\n0.000677\n0.217536\n0.325623\n0.001514\n\n\npop1…8\nKimberley_n_40.vcf_0.7\npop1\n31.863560\n49487\n1\n49487\n0\n0\n0.110686\n0.111441\n0.000501\n0.156579\n0.143352\n0.000644\n0.159075\n0.145637\n0.000655\n0.221427\n0.322040\n0.001448\n\n\n\n\n\n\n\nPlotting results\n\nkimberley_Ho_0.7callrate &lt;- ggplot(heterozygosity_reports_df, aes(x = ObjectName, y = Ho)) +\n  geom_point() +\n  scale_y_continuous(limits = c(0, NA)) +\n  theme(axis.text.x = element_text(angle = 65, hjust = 1)) +\n  labs(title = \"Observed Heterozygosity by Sample number\", x = \"Sample Number\", y = \"Observed Heterozygosity (Ho)\")\n\nkimberley_Ho_0.7callrate\n\n\n\n\n\n\n\n\n\n\nSampling\n\n\n\nAs you can see, different numbers samples can substantially change your heterozygosity estimate."
  },
  {
    "objectID": "session03.html#estimating-heterozygosity-95-callrate",
    "href": "session03.html#estimating-heterozygosity-95-callrate",
    "title": "3  Sequencing Technologies",
    "section": "2. Estimating heterozygosity: 95% callrate",
    "text": "2. Estimating heterozygosity: 95% callrate\nLets redo our heterozygosity estimates, but see how changing your call rate filter impacts estimates\n\nReload data\n\n# reload data\nload('./data/Session3_data.RData')\n# List all object names in the environment\nall_names &lt;- ls()\n\n# Use grep() to match names that start with \"Kimberley\" \nkimberley_names &lt;- grep(\"^Kimberley.*\\\\.vcf$\", all_names, value = TRUE) #put all the genlights into a mega list\n#create another list with the ones we want\nkimberley &lt;- mget(kimberley_names)\n\n#we're going to do this in a loop for speed, applying the same filters\n# Iterate over the names of the kimberley list\nfor(name in names(kimberley)){\n  # Extract the genlight object from the kimberley list using its name\n  genlight_object &lt;- kimberley[[name]]\n  # Apply the filter call rate function\n  # Assuming gl.filter.callrate is a function that operates on a genlight object\n  filtered_object &lt;- gl.filter.callrate(genlight_object, threshold = .95, mono.rm = TRUE)\n  # Assign the filtered object back to the environment with a new name\n  assign(paste0(name, \"_0.95\"), filtered_object)\n}\n\nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Warning: data include loci that are scored NA across all individuals.\n  Consider filtering using gl &lt;- gl.filter.allna(gl)\n  Warning: Data may include monomorphic loci in call rate \n                    calculations for filtering\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 0.95 \n\n\n\n\n\nCompleted: gl.filter.callrate \nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Warning: data include loci that are scored NA across all individuals.\n  Consider filtering using gl &lt;- gl.filter.allna(gl)\n  Warning: Data may include monomorphic loci in call rate \n                    calculations for filtering\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 0.95 \n\n\n\n\n\nCompleted: gl.filter.callrate \nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Warning: Data may include monomorphic loci in call rate \n                    calculations for filtering\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 0.95 \n\n\n\n\n\nCompleted: gl.filter.callrate \nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Warning: Data may include monomorphic loci in call rate \n                    calculations for filtering\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 0.95 \n\n\n\n\n\nCompleted: gl.filter.callrate \nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Warning: Data may include monomorphic loci in call rate \n                    calculations for filtering\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 0.95 \n\n\n\n\n\nCompleted: gl.filter.callrate \nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Warning: Data may include monomorphic loci in call rate \n                    calculations for filtering\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 0.95 \n\n\n\n\n\nCompleted: gl.filter.callrate \nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Warning: Data may include monomorphic loci in call rate \n                    calculations for filtering\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 0.95 \n\n\n\n\n\nCompleted: gl.filter.callrate \nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Warning: Data may include monomorphic loci in call rate \n                    calculations for filtering\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 0.95 \n\n\n\n\n\nCompleted: gl.filter.callrate \n\n\n\n\nCalculate heterozygosity\n\n# List all object names in the environment\nall_names &lt;- ls()\n\n# Use grep() to match names that start with \"Kimberley\" \n# and end with \"0.95\", .+ indicates any characters in between\nkimberley_filtered &lt;- grep(\"^Kimberley.+0\\\\.95$\", all_names, value = TRUE)#put all the genlights into a mega list\n#create another list with the ones we want\nkimberley &lt;- mget(kimberley_filtered)\n\n\n#Initialize an empty data frame\nheterozygosity_reports_df_0.95 &lt;- data.frame()\n\n# Iterate over the kimberley list to apply gl.report.heterozygosity\n# and bind the results\nfor(name in names(kimberley)) {\n  # Apply the function\n  report &lt;- gl.report.heterozygosity(kimberley[[name]])\n  \n  # Add 'ObjectName' as the first column of the report\n  report &lt;- cbind(ObjectName = name, report)\n  \n  # Bind this report to the main data frame\n  heterozygosity_reports_df_0.95 &lt;- bind_rows(heterozygosity_reports_df_0.95, report)\n}\n\nStarting gl.report.heterozygosity \n  Processing genlight object with SNP data\n  Calculating Observed Heterozygosities, averaged across\n                    loci, for each population\n  Calculating Expected Heterozygosities\n\nStarting gl.colors \nSelected color type dis \nCompleted: gl.colors \n\n\n\n\n\n      pop n.Ind n.Loc n.Loc.adj polyLoc monoLoc all_NALoc       Ho     HoSD\npop1 pop1     5  9335         1    9335       0         0 0.229502 0.173222\n         HoSE       He     HeSD    HeSE      uHe    uHeSD    uHeSE      FIS\npop1 0.001793 0.307878 0.119766 0.00124 0.342087 0.133073 0.001377 0.261799\n        FISSD    FISSE\npop1 0.439324 0.004547\nCompleted: gl.report.heterozygosity \nStarting gl.report.heterozygosity \n  Processing genlight object with SNP data\n  Calculating Observed Heterozygosities, averaged across\n                    loci, for each population\n  Calculating Expected Heterozygosities\n\nStarting gl.colors \nSelected color type dis \nCompleted: gl.colors \n\n\n\n\n\n      pop n.Ind n.Loc n.Loc.adj polyLoc monoLoc all_NALoc       Ho     HoSD\npop1 pop1    10  5814         1    5814       0         0 0.176402 0.137187\n         HoSE       He     HeSD    HeSE      uHe    uHeSD    uHeSE      FIS\npop1 0.001799 0.228789 0.139511 0.00183 0.240831 0.146854 0.001926 0.192591\n        FISSD    FISSE\npop1 0.359841 0.004719\nCompleted: gl.report.heterozygosity \nStarting gl.report.heterozygosity \n  Processing genlight object with SNP data\n  Calculating Observed Heterozygosities, averaged across\n                    loci, for each population\n  Calculating Expected Heterozygosities\n\nStarting gl.colors \nSelected color type dis \nCompleted: gl.colors \n\n\n\n\n\n      pop n.Ind n.Loc n.Loc.adj polyLoc monoLoc all_NALoc       Ho     HoSD\npop1 pop1    15  2003         1    2003       0         0 0.152804 0.122813\n         HoSE       He     HeSD     HeSE      uHe   uHeSD    uHeSE      FIS\npop1 0.002744 0.196298 0.145174 0.003244 0.203067 0.15018 0.003356 0.161721\n        FISSD    FISSE\npop1 0.315393 0.007047\nCompleted: gl.report.heterozygosity \nStarting gl.report.heterozygosity \n  Processing genlight object with SNP data\n  Calculating Observed Heterozygosities, averaged across\n                    loci, for each population\n  Calculating Expected Heterozygosities\n\nStarting gl.colors \nSelected color type dis \nCompleted: gl.colors \n\n\n\n\n\n      pop    n.Ind n.Loc n.Loc.adj polyLoc monoLoc all_NALoc       Ho     HoSD\npop1 pop1 19.27864  4199         1    4199       0         0 0.140333 0.124561\n         HoSE       He     HeSD     HeSE      uHe    uHeSD    uHeSE      FIS\npop1 0.001922 0.177053 0.144114 0.002224 0.181767 0.147951 0.002283 0.153933\n        FISSD    FISSE\npop1 0.306136 0.004724\nCompleted: gl.report.heterozygosity \nStarting gl.report.heterozygosity \n  Processing genlight object with SNP data\n  Calculating Observed Heterozygosities, averaged across\n                    loci, for each population\n  Calculating Expected Heterozygosities\n\nStarting gl.colors \nSelected color type dis \nCompleted: gl.colors \n\n\n\n\n\n      pop   n.Ind n.Loc n.Loc.adj polyLoc monoLoc all_NALoc       Ho     HoSD\npop1 pop1 24.2354  2243         1    2243       0         0 0.129226 0.119719\n         HoSE       He     HeSD     HeSE      uHe    uHeSD    uHeSE      FIS\npop1 0.002528 0.162692 0.145793 0.003078 0.166119 0.148864 0.003143 0.135561\n        FISSD    FISSE\npop1 0.276653 0.005841\nCompleted: gl.report.heterozygosity \nStarting gl.report.heterozygosity \n  Processing genlight object with SNP data\n  Calculating Observed Heterozygosities, averaged across\n                    loci, for each population\n  Calculating Expected Heterozygosities\n\nStarting gl.colors \nSelected color type dis \nCompleted: gl.colors \n\n\n\n\n\n      pop    n.Ind n.Loc n.Loc.adj polyLoc monoLoc all_NALoc       Ho     HoSD\npop1 pop1 29.20428  1356         1    1356       0         0 0.117792 0.114525\n        HoSE       He     HeSD     HeSE      uHe    uHeSD  uHeSE      FIS\npop1 0.00311 0.147605 0.141139 0.003833 0.150176 0.143597 0.0039 0.129329\n        FISSD    FISSE\npop1 0.267582 0.007267\nCompleted: gl.report.heterozygosity \nStarting gl.report.heterozygosity \n  Processing genlight object with SNP data\n  Calculating Observed Heterozygosities, averaged across\n                    loci, for each population\n  Calculating Expected Heterozygosities\n\nStarting gl.colors \nSelected color type dis \nCompleted: gl.colors \n\n\n\n\n\n      pop    n.Ind n.Loc n.Loc.adj polyLoc monoLoc all_NALoc       Ho     HoSD\npop1 pop1 34.21357  1105         1    1105       0         0 0.111003 0.113222\n         HoSE       He     HeSD     HeSE      uHe    uHeSD    uHeSE      FIS\npop1 0.003406 0.136806 0.139159 0.004186 0.138835 0.141223 0.004248 0.112563\n        FISSD    FISSE\npop1 0.246423 0.007413\nCompleted: gl.report.heterozygosity \nStarting gl.report.heterozygosity \n  Processing genlight object with SNP data\n  Calculating Observed Heterozygosities, averaged across\n                    loci, for each population\n  Calculating Expected Heterozygosities\n\nStarting gl.colors \nSelected color type dis \nCompleted: gl.colors \n\n\n\n\n\n      pop    n.Ind n.Loc n.Loc.adj polyLoc monoLoc all_NALoc       Ho     HoSD\npop1 pop1 38.42546  1838         1    1838       0         0 0.110599 0.115467\n         HoSE       He     HeSD     HeSE      uHe    uHeSD    uHeSE      FIS\npop1 0.002693 0.137218 0.141699 0.003305 0.139027 0.143567 0.003349 0.114931\n        FISSD    FISSE\npop1 0.246381 0.005747\nCompleted: gl.report.heterozygosity \n\n# heterozygosity_reports_df now contains all the reports with an \n# additional column for object names\nknitr::kable(heterozygosity_reports_df_0.95)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nObjectName\npop\nn.Ind\nn.Loc\nn.Loc.adj\npolyLoc\nmonoLoc\nall_NALoc\nHo\nHoSD\nHoSE\nHe\nHeSD\nHeSE\nuHe\nuHeSD\nuHeSE\nFIS\nFISSD\nFISSE\n\n\n\n\npop1…1\nKimberley_n_05.vcf_0.95\npop1\n5.00000\n9335\n1\n9335\n0\n0\n0.229502\n0.173222\n0.001793\n0.307878\n0.119766\n0.001240\n0.342087\n0.133073\n0.001377\n0.261799\n0.439324\n0.004547\n\n\npop1…2\nKimberley_n_10.vcf_0.95\npop1\n10.00000\n5814\n1\n5814\n0\n0\n0.176402\n0.137187\n0.001799\n0.228789\n0.139511\n0.001830\n0.240831\n0.146854\n0.001926\n0.192591\n0.359841\n0.004719\n\n\npop1…3\nKimberley_n_15.vcf_0.95\npop1\n15.00000\n2003\n1\n2003\n0\n0\n0.152804\n0.122813\n0.002744\n0.196298\n0.145174\n0.003244\n0.203067\n0.150180\n0.003356\n0.161721\n0.315393\n0.007047\n\n\npop1…4\nKimberley_n_20.vcf_0.95\npop1\n19.27864\n4199\n1\n4199\n0\n0\n0.140333\n0.124561\n0.001922\n0.177053\n0.144114\n0.002224\n0.181767\n0.147951\n0.002283\n0.153933\n0.306136\n0.004724\n\n\npop1…5\nKimberley_n_25.vcf_0.95\npop1\n24.23540\n2243\n1\n2243\n0\n0\n0.129226\n0.119719\n0.002528\n0.162692\n0.145793\n0.003078\n0.166119\n0.148864\n0.003143\n0.135561\n0.276653\n0.005841\n\n\npop1…6\nKimberley_n_30.vcf_0.95\npop1\n29.20428\n1356\n1\n1356\n0\n0\n0.117792\n0.114525\n0.003110\n0.147605\n0.141139\n0.003833\n0.150176\n0.143597\n0.003900\n0.129329\n0.267582\n0.007267\n\n\npop1…7\nKimberley_n_35.vcf_0.95\npop1\n34.21357\n1105\n1\n1105\n0\n0\n0.111003\n0.113222\n0.003406\n0.136806\n0.139159\n0.004186\n0.138835\n0.141223\n0.004248\n0.112563\n0.246423\n0.007413\n\n\npop1…8\nKimberley_n_40.vcf_0.95\npop1\n38.42546\n1838\n1\n1838\n0\n0\n0.110599\n0.115467\n0.002693\n0.137218\n0.141699\n0.003305\n0.139027\n0.143567\n0.003349\n0.114931\n0.246381\n0.005747\n\n\n\n\n\n\n\nPlotting results\n\n# Example using ggplot2 to plot the data\nlibrary(ggplot2)\nkimberley_Ho_0.95callrate &lt;- ggplot(heterozygosity_reports_df_0.95, aes(x = ObjectName, y = Ho)) +\n  geom_point() +\n  scale_y_continuous(limits = c(0, NA)) +\n  theme(axis.text.x = element_text(angle = 65, hjust = 1)) +\n  labs(title = \"Observed Heterozygosity by Sample number 0.95 Call Rate\",\n       x = \"Sample Number\", y = \"Observed Heterozygosity (Ho)\")\n\nkimberley_Ho_0.95callrate\n\n\n\npar(mfrow = c(2,1))\nkimberley_Ho_0.7callrate +kimberley_Ho_0.95callrate\n\n\n\n\n\n\n\n\n\n\nCall rate filters\n\n\n\nHigher call rate filters can reduce your slightly reduce your heterozygosity estimate"
  },
  {
    "objectID": "session03.html#estimating-heterozygosity-even-sampling",
    "href": "session03.html#estimating-heterozygosity-even-sampling",
    "title": "3  Sequencing Technologies",
    "section": "3. Estimating heterozygosity: Even sampling",
    "text": "3. Estimating heterozygosity: Even sampling\ndoes subsetting to have the same sample numbers fix the issue?\nLet’s compare heterozygosity when SNPs are called on 5 individuals, versus called on 40 individuals and then is subset to 5 individuals.\nIf you called SNPs on more individuals than you wanted to make them equal, can you just remove individuals without re-calling SNPS? Let’s test.\n\nSubsampling\n\n# Use grep() to match names that start with \"Kimberley\" \nkimberley_names &lt;- grep(\"^Kimberley.*\\\\.vcf$\", all_names, value = TRUE) \n# put all the genlights into a mega list\n\n#create another list with the ones we want\nkimberley &lt;- mget(kimberley_names)\n\n# Now lets subsample the datasets down to the same five individuals\n# so that the only difference is our SNP calling\n# who are the individuals\ninds &lt;- indNames(Kimberley_n_05.vcf_0.7)\n\n#Initialize an empty data frame\nheterozygosity_when_subsampling &lt;- data.frame()\n\nfor(name in names(kimberley)) {\n  # Access the genlight object from your list\n  genlight_object &lt;- kimberley[[name]]\n  \n  # Subset the individuals\n  x &lt;- gl.keep.ind(genlight_object, ind.list = inds, mono.rm = TRUE)\n  \n  #filter on call rate\n  \n  x &lt;- gl.filter.callrate(x, threshold = .7)\n  \n  # Apply the function\n  report &lt;- gl.report.heterozygosity(x)\n  \n  # Add 'ObjectName' as the first column of the report\n  report$ObjectName &lt;- name \n  # Adjusting to add column without cbind to maintain data frame classes\n  \n  # Bind this report to the main data frame\n  heterozygosity_when_subsampling &lt;- bind_rows(heterozygosity_when_subsampling,\n                                               report)\n}\n\nStarting gl.keep.ind \n  Processing genlight object with SNP data\n  Warning: data include loci that are scored NA across all individuals.\n  Consider filtering using gl &lt;- gl.filter.allna(gl)\n  Deleting all but the listed individuals Kimberley_ABTC102537_DLit20-5353_CE4Y2ANXX_1, Kimberley_ABTC11911_DLit20-5353_CE7VEANXX_1, Kimberley_ABTC86488_DLit20-5353_CECHMANXX_4, Kimberley_CCM7524_DLit20-5353_CECHMANXX_2, Kimberley_ABTC135731_DLit20-5353_CE7VEANXX_1 \n  Deleting monomorphic loc\n  Locus metrics not recalculated\nCompleted: gl.keep.ind \nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Warning: Data may include monomorphic loci in call rate \n                    calculations for filtering\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 0.7 \n\n\n\n\n\nCompleted: gl.filter.callrate \nStarting gl.report.heterozygosity \n  Processing genlight object with SNP data\n  Calculating Observed Heterozygosities, averaged across\n                    loci, for each population\n  Calculating Expected Heterozygosities\n\nStarting gl.colors \nSelected color type dis \nCompleted: gl.colors \n\n\n\n\n\n      pop    n.Ind n.Loc n.Loc.adj polyLoc monoLoc all_NALoc       Ho     HoSD\npop1 pop1 4.327947 28465         1   28465       0         0 0.233986 0.190371\n         HoSE       He     HeSD     HeSE      uHe    uHeSD    uHeSE      FIS\npop1 0.001128 0.329375 0.112778 0.000668 0.372398 0.127509 0.000756 0.302454\n        FISSD    FISSE\npop1 0.469498 0.002783\nCompleted: gl.report.heterozygosity \nStarting gl.keep.ind \n  Processing genlight object with SNP data\n  Warning: data include loci that are scored NA across all individuals.\n  Consider filtering using gl &lt;- gl.filter.allna(gl)\n  Deleting all but the listed individuals Kimberley_ABTC102537_DLit20-5353_CE4Y2ANXX_1, Kimberley_ABTC11911_DLit20-5353_CE7VEANXX_1, Kimberley_ABTC86488_DLit20-5353_CECHMANXX_4, Kimberley_CCM7524_DLit20-5353_CECHMANXX_2, Kimberley_ABTC135731_DLit20-5353_CE7VEANXX_1 \n  Deleting monomorphic loc\n  Locus metrics not recalculated\nCompleted: gl.keep.ind \nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Warning: Data may include monomorphic loci in call rate \n                    calculations for filtering\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 0.7 \n\n\n\n\n\nCompleted: gl.filter.callrate \nStarting gl.report.heterozygosity \n  Processing genlight object with SNP data\n  Calculating Observed Heterozygosities, averaged across\n                    loci, for each population\n  Calculating Expected Heterozygosities\n\nStarting gl.colors \nSelected color type dis \nCompleted: gl.colors \n\n\n\n\n\n      pop    n.Ind n.Loc n.Loc.adj polyLoc monoLoc all_NALoc       Ho     HoSD\npop1 pop1 4.360384 25656         1   25656       0         0 0.236861 0.185631\n         HoSE       He     HeSD     HeSE      uHe    uHeSD    uHeSE     FIS\npop1 0.001159 0.324224 0.113105 0.000706 0.366218 0.127754 0.000798 0.28369\n        FISSD    FISSE\npop1 0.460341 0.002874\nCompleted: gl.report.heterozygosity \nStarting gl.keep.ind \n  Processing genlight object with SNP data\n  Deleting all but the listed individuals Kimberley_ABTC102537_DLit20-5353_CE4Y2ANXX_1, Kimberley_ABTC11911_DLit20-5353_CE7VEANXX_1, Kimberley_ABTC86488_DLit20-5353_CECHMANXX_4, Kimberley_CCM7524_DLit20-5353_CECHMANXX_2, Kimberley_ABTC135731_DLit20-5353_CE7VEANXX_1 \n  Deleting monomorphic loc\n  Locus metrics not recalculated\nCompleted: gl.keep.ind \nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Warning: Data may include monomorphic loci in call rate \n                    calculations for filtering\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 0.7 \n\n\n\n\n\nCompleted: gl.filter.callrate \nStarting gl.report.heterozygosity \n  Processing genlight object with SNP data\n  Calculating Observed Heterozygosities, averaged across\n                    loci, for each population\n  Calculating Expected Heterozygosities\n\nStarting gl.colors \nSelected color type dis \nCompleted: gl.colors \n\n\n\n\n\n      pop    n.Ind n.Loc n.Loc.adj polyLoc monoLoc all_NALoc       Ho     HoSD\npop1 pop1 4.404846 21171         1   21171       0         0 0.241755 0.181273\n         HoSE       He     HeSD     HeSE      uHe    uHeSD    uHeSE      FIS\npop1 0.001246 0.318786 0.113593 0.000781 0.359605 0.128138 0.000881 0.259282\n       FISSD    FISSE\npop1 0.44866 0.003084\nCompleted: gl.report.heterozygosity \nStarting gl.keep.ind \n  Processing genlight object with SNP data\n  Deleting all but the listed individuals Kimberley_ABTC102537_DLit20-5353_CE4Y2ANXX_1, Kimberley_ABTC11911_DLit20-5353_CE7VEANXX_1, Kimberley_ABTC86488_DLit20-5353_CECHMANXX_4, Kimberley_CCM7524_DLit20-5353_CECHMANXX_2, Kimberley_ABTC135731_DLit20-5353_CE7VEANXX_1 \n  Deleting monomorphic loc\n  Locus metrics not recalculated\nCompleted: gl.keep.ind \nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Warning: Data may include monomorphic loci in call rate \n                    calculations for filtering\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 0.7 \n\n\n\n\n\nCompleted: gl.filter.callrate \nStarting gl.report.heterozygosity \n  Processing genlight object with SNP data\n  Calculating Observed Heterozygosities, averaged across\n                    loci, for each population\n  Calculating Expected Heterozygosities\n\nStarting gl.colors \nSelected color type dis \nCompleted: gl.colors \n\n\n\n\n\n      pop    n.Ind n.Loc n.Loc.adj polyLoc monoLoc all_NALoc       Ho     HoSD\npop1 pop1 4.390371 22184         1   22184       0         0 0.241731 0.181534\n         HoSE       He     HeSD     HeSE      uHe    uHeSD    uHeSE      FIS\npop1 0.001219 0.319324 0.113423 0.000762 0.360365 0.128001 0.000859 0.260639\n        FISSD    FISSE\npop1 0.449285 0.003016\nCompleted: gl.report.heterozygosity \nStarting gl.keep.ind \n  Processing genlight object with SNP data\n  Deleting all but the listed individuals Kimberley_ABTC102537_DLit20-5353_CE4Y2ANXX_1, Kimberley_ABTC11911_DLit20-5353_CE7VEANXX_1, Kimberley_ABTC86488_DLit20-5353_CECHMANXX_4, Kimberley_CCM7524_DLit20-5353_CECHMANXX_2, Kimberley_ABTC135731_DLit20-5353_CE7VEANXX_1 \n  Deleting monomorphic loc\n  Locus metrics not recalculated\nCompleted: gl.keep.ind \nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Warning: Data may include monomorphic loci in call rate \n                    calculations for filtering\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 0.7 \n\n\n\n\n\nCompleted: gl.filter.callrate \nStarting gl.report.heterozygosity \n  Processing genlight object with SNP data\n  Calculating Observed Heterozygosities, averaged across\n                    loci, for each population\n  Calculating Expected Heterozygosities\n\nStarting gl.colors \nSelected color type dis \nCompleted: gl.colors \n\n\n\n\n\n      pop    n.Ind n.Loc n.Loc.adj polyLoc monoLoc all_NALoc       Ho     HoSD\npop1 pop1 4.414982 19731         1   19731       0         0 0.243949 0.180217\n         HoSE       He     HeSD     HeSE     uHe    uHeSD    uHeSE      FIS\npop1 0.001283 0.317031 0.113598 0.000809 0.35752 0.128106 0.000912 0.250234\n        FISSD    FISSE\npop1 0.444447 0.003164\nCompleted: gl.report.heterozygosity \nStarting gl.keep.ind \n  Processing genlight object with SNP data\n  Deleting all but the listed individuals Kimberley_ABTC102537_DLit20-5353_CE4Y2ANXX_1, Kimberley_ABTC11911_DLit20-5353_CE7VEANXX_1, Kimberley_ABTC86488_DLit20-5353_CECHMANXX_4, Kimberley_CCM7524_DLit20-5353_CECHMANXX_2, Kimberley_ABTC135731_DLit20-5353_CE7VEANXX_1 \n  Deleting monomorphic loc\n  Locus metrics not recalculated\nCompleted: gl.keep.ind \nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Warning: Data may include monomorphic loci in call rate \n                    calculations for filtering\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 0.7 \n\n\n\n\n\nCompleted: gl.filter.callrate \nStarting gl.report.heterozygosity \n  Processing genlight object with SNP data\n  Calculating Observed Heterozygosities, averaged across\n                    loci, for each population\n  Calculating Expected Heterozygosities\n\nStarting gl.colors \nSelected color type dis \nCompleted: gl.colors \n\n\n\n\n\n      pop    n.Ind n.Loc n.Loc.adj polyLoc monoLoc all_NALoc       Ho     HoSD\npop1 pop1 4.404714 20239         1   20239       0         0 0.242991 0.179167\n         HoSE       He     HeSD     HeSE     uHe    uHeSD    uHeSE      FIS\npop1 0.001259 0.316909 0.113413 0.000797 0.35749 0.127936 0.000899 0.251896\n        FISSD    FISSE\npop1 0.444278 0.003123\nCompleted: gl.report.heterozygosity \nStarting gl.keep.ind \n  Processing genlight object with SNP data\n  Deleting all but the listed individuals Kimberley_ABTC102537_DLit20-5353_CE4Y2ANXX_1, Kimberley_ABTC11911_DLit20-5353_CE7VEANXX_1, Kimberley_ABTC86488_DLit20-5353_CECHMANXX_4, Kimberley_CCM7524_DLit20-5353_CECHMANXX_2, Kimberley_ABTC135731_DLit20-5353_CE7VEANXX_1 \n  Deleting monomorphic loc\n  Locus metrics not recalculated\nCompleted: gl.keep.ind \nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Warning: Data may include monomorphic loci in call rate \n                    calculations for filtering\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 0.7 \n\n\n\n\n\nCompleted: gl.filter.callrate \nStarting gl.report.heterozygosity \n  Processing genlight object with SNP data\n  Calculating Observed Heterozygosities, averaged across\n                    loci, for each population\n  Calculating Expected Heterozygosities\n\nStarting gl.colors \nSelected color type dis \nCompleted: gl.colors \n\n\n\n\n\n      pop    n.Ind n.Loc n.Loc.adj polyLoc monoLoc all_NALoc       Ho     HoSD\npop1 pop1 4.407437 19873         1   19873       0         0 0.244377 0.179303\n         HoSE       He     HeSD     HeSE      uHe    uHeSD    uHeSE      FIS\npop1 0.001272 0.316308 0.113527 0.000805 0.356783 0.128054 0.000908 0.247269\n       FISSD   FISSE\npop1 0.44271 0.00314\nCompleted: gl.report.heterozygosity \nStarting gl.keep.ind \n  Processing genlight object with SNP data\n  Deleting all but the listed individuals Kimberley_ABTC102537_DLit20-5353_CE4Y2ANXX_1, Kimberley_ABTC11911_DLit20-5353_CE7VEANXX_1, Kimberley_ABTC86488_DLit20-5353_CECHMANXX_4, Kimberley_CCM7524_DLit20-5353_CECHMANXX_2, Kimberley_ABTC135731_DLit20-5353_CE7VEANXX_1 \n  Deleting monomorphic loc\n  Locus metrics not recalculated\nCompleted: gl.keep.ind \nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Warning: Data may include monomorphic loci in call rate \n                    calculations for filtering\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 0.7 \n\n\n\n\n\nCompleted: gl.filter.callrate \nStarting gl.report.heterozygosity \n  Processing genlight object with SNP data\n  Calculating Observed Heterozygosities, averaged across\n                    loci, for each population\n  Calculating Expected Heterozygosities\n\nStarting gl.colors \nSelected color type dis \nCompleted: gl.colors \n\n\n\n\n\n      pop    n.Ind n.Loc n.Loc.adj polyLoc monoLoc all_NALoc       Ho     HoSD\npop1 pop1 4.404922 20073         1   20073       0         0 0.244488 0.179823\n         HoSE       He     HeSD     HeSE      uHe    uHeSD    uHeSE      FIS\npop1 0.001269 0.316304 0.113509 0.000801 0.356805 0.128043 0.000904 0.247144\n        FISSD    FISSE\npop1 0.443154 0.003128\nCompleted: gl.report.heterozygosity \n\n\n\n\nPlotting results\n\nkimberley_Ho_subsampling &lt;- ggplot(heterozygosity_when_subsampling, aes(x = ObjectName, y = Ho)) +\n  geom_point() +\n  scale_y_continuous(limits = c(0, NA)) +\n  theme(axis.text.x = element_text(angle = 65, hjust = 1)) +\n  labs(title = \"Observed Heterozygosity when subsampling\", \n       x = \"SNP Calling\", y = \"Observed Heterozygosity (Ho)\")\n\nkimberley_Ho_subsampling\n\n\n\n\n\n\n\n\n\n\nsubsampling\n\n\n\nThere are some minor differences but it’s not too bad\n\n\n\n\nSubsampling more populations\nThere appears to be minor differences between sample sizes for the Kimberley population, but is this true for all populations?\n\nSoutheast\n\n#create a list of the southeast genlights\nSoutheast_names &lt;- ls(pattern = \"^SouthEast\")\n#put all the genlights into a mega list\nsoutheast &lt;- mget(Southeast_names)\n\n#Now lets subsample the datasets down to the same five individuals\n#so that the only difference is our SNP calling\n#who are the individuals\ninds &lt;- indNames(SouthEast_n_05.vcf)\n\n\nfor(name in names(southeast)) {\n  # Access the genlight object from your list\n  genlight_object &lt;- southeast[[name]]\n  \n  # Subset the individuals\n  x &lt;- gl.keep.ind(genlight_object, ind.list = inds, mono.rm = TRUE)\n  \n  #filter on call rate\n  \n  x &lt;- gl.filter.callrate(x, threshold = .7)\n  \n  # Apply the function\n  report &lt;- gl.report.heterozygosity(x)\n  \n  # Add 'ObjectName' as the first column of the report\n  report$ObjectName &lt;- name # Adjusting to add column without cbind to maintain data frame classes\n  \n  # Bind this report to the main data frame\n  heterozygosity_when_subsampling &lt;- bind_rows(heterozygosity_when_subsampling, report)\n}\n\nStarting gl.keep.ind \n  Processing genlight object with SNP data\n  Warning: data include loci that are scored NA across all individuals.\n  Consider filtering using gl &lt;- gl.filter.allna(gl)\n  Deleting all but the listed individuals SouthEast_ABTC92145_DLit20-5353_CECHMANXX_3, SouthEast_ABTC112638_DLit20-5353_CE7VEANXX_1, SouthEast_AMR164735_DLit20-5353_CE7VEANXX_1, SouthEast_ABTC38934_DLit20-5353_CECHMANXX_3, SouthEast_ABTC111142_DLit20-5353_CECHMANXX_3 \n  Deleting monomorphic loc\n  Locus metrics not recalculated\nCompleted: gl.keep.ind \nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Warning: Data may include monomorphic loci in call rate \n                    calculations for filtering\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 0.7 \n\n\n\n\n\nCompleted: gl.filter.callrate \nStarting gl.report.heterozygosity \n  Processing genlight object with SNP data\n  Calculating Observed Heterozygosities, averaged across\n                    loci, for each population\n  Calculating Expected Heterozygosities\n\nStarting gl.colors \nSelected color type dis \nCompleted: gl.colors \n\n\n\n\n\n      pop    n.Ind n.Loc n.Loc.adj polyLoc monoLoc all_NALoc       Ho     HoSD\npop1 pop1 4.543063 23907         1   23907       0         0 0.306134 0.227794\n         HoSE       He     HeSD     HeSE     uHe    uHeSD    uHeSE     FIS\npop1 0.001473 0.345947 0.118783 0.000768 0.38873 0.133473 0.000863 0.18011\n        FISSD    FISSE\npop1 0.458069 0.002963\nCompleted: gl.report.heterozygosity \nStarting gl.keep.ind \n  Processing genlight object with SNP data\n  Warning: data include loci that are scored NA across all individuals.\n  Consider filtering using gl &lt;- gl.filter.allna(gl)\n  Deleting all but the listed individuals SouthEast_ABTC92145_DLit20-5353_CECHMANXX_3, SouthEast_ABTC112638_DLit20-5353_CE7VEANXX_1, SouthEast_AMR164735_DLit20-5353_CE7VEANXX_1, SouthEast_ABTC38934_DLit20-5353_CECHMANXX_3, SouthEast_ABTC111142_DLit20-5353_CECHMANXX_3 \n  Deleting monomorphic loc\n  Locus metrics not recalculated\nCompleted: gl.keep.ind \nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Warning: Data may include monomorphic loci in call rate \n                    calculations for filtering\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 0.7 \n\n\n\n\n\nCompleted: gl.filter.callrate \nStarting gl.report.heterozygosity \n  Processing genlight object with SNP data\n  Calculating Observed Heterozygosities, averaged across\n                    loci, for each population\n  Calculating Expected Heterozygosities\n\nStarting gl.colors \nSelected color type dis \nCompleted: gl.colors \n\n\n\n\n\n      pop    n.Ind n.Loc n.Loc.adj polyLoc monoLoc all_NALoc      Ho    HoSD\npop1 pop1 4.560711 23167         1   23167       0         0 0.30276 0.21977\n         HoSE       He     HeSD     HeSE      uHe    uHeSD    uHeSE      FIS\npop1 0.001444 0.340234 0.119545 0.000785 0.382127 0.134265 0.000882 0.172587\n        FISSD    FISSE\npop1 0.445217 0.002925\nCompleted: gl.report.heterozygosity \nStarting gl.keep.ind \n  Processing genlight object with SNP data\n  Warning: data include loci that are scored NA across all individuals.\n  Consider filtering using gl &lt;- gl.filter.allna(gl)\n  Deleting all but the listed individuals SouthEast_ABTC92145_DLit20-5353_CECHMANXX_3, SouthEast_ABTC112638_DLit20-5353_CE7VEANXX_1, SouthEast_AMR164735_DLit20-5353_CE7VEANXX_1, SouthEast_ABTC38934_DLit20-5353_CECHMANXX_3, SouthEast_ABTC111142_DLit20-5353_CECHMANXX_3 \n  Deleting monomorphic loc\n  Locus metrics not recalculated\nCompleted: gl.keep.ind \nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Warning: Data may include monomorphic loci in call rate \n                    calculations for filtering\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 0.7 \n\n\n\n\n\nCompleted: gl.filter.callrate \nStarting gl.report.heterozygosity \n  Processing genlight object with SNP data\n  Calculating Observed Heterozygosities, averaged across\n                    loci, for each population\n  Calculating Expected Heterozygosities\n\nStarting gl.colors \nSelected color type dis \nCompleted: gl.colors \n\n\n\n\n\n      pop    n.Ind n.Loc n.Loc.adj polyLoc monoLoc all_NALoc       Ho     HoSD\npop1 pop1 4.584442 21956         1   21956       0         0 0.300644 0.212385\n         HoSE       He     HeSD    HeSE      uHe    uHeSD    uHeSE      FIS\npop1 0.001433 0.337159 0.119975 0.00081 0.378432 0.134662 0.000909 0.168427\n        FISSD    FISSE\npop1 0.433861 0.002928\nCompleted: gl.report.heterozygosity \nStarting gl.keep.ind \n  Processing genlight object with SNP data\n  Deleting all but the listed individuals SouthEast_ABTC92145_DLit20-5353_CECHMANXX_3, SouthEast_ABTC112638_DLit20-5353_CE7VEANXX_1, SouthEast_AMR164735_DLit20-5353_CE7VEANXX_1, SouthEast_ABTC38934_DLit20-5353_CECHMANXX_3, SouthEast_ABTC111142_DLit20-5353_CECHMANXX_3 \n  Deleting monomorphic loc\n  Locus metrics not recalculated\nCompleted: gl.keep.ind \nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Warning: Data may include monomorphic loci in call rate \n                    calculations for filtering\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 0.7 \n\n\n\n\n\nCompleted: gl.filter.callrate \nStarting gl.report.heterozygosity \n  Processing genlight object with SNP data\n  Calculating Observed Heterozygosities, averaged across\n                    loci, for each population\n  Calculating Expected Heterozygosities\n\nStarting gl.colors \nSelected color type dis \nCompleted: gl.colors \n\n\n\n\n\n      pop    n.Ind n.Loc n.Loc.adj polyLoc monoLoc all_NALoc       Ho     HoSD\npop1 pop1 4.575179 22513         1   22513       0         0 0.300346 0.212014\n         HoSE       He     HeSD  HeSE     uHe    uHeSD    uHeSE      FIS\npop1 0.001413 0.336459 0.120052 8e-04 0.37774 0.134782 0.000898 0.167435\n        FISSD    FISSE\npop1 0.432974 0.002886\nCompleted: gl.report.heterozygosity \n\nsoutheast_Ho_subsampling &lt;- ggplot(heterozygosity_when_subsampling, aes(x = ObjectName, y = Ho)) +\n  geom_point() +\n  scale_y_continuous(limits = c(0, NA)) +\n  theme(axis.text.x = element_text(angle = 65, hjust = 1)) +\n  labs(title = \"Observed Heterozygosity when subsampling\",\n       x = \"SNP Calling\", y = \"Observed Heterozygosity (Ho)\")\n\n\n\nCentral\n\n#create a list of the central australian genlights\ncentral_names &lt;- ls(pattern = \"^Central\")\n#put all the genlights into a mega list\ncentral &lt;- mget(central_names)\n\n#Now lets subsample the datasets down to the same five individuals\n#so that the only difference is our SNP calling\n#who are the individuals\ninds &lt;- indNames(Central_n_05.vcf)\n\nfor(name in names(central)) {\n  # Access the genlight object from your list\n  genlight_object &lt;- central[[name]]\n  \n  # Subset the individuals\n  x &lt;- gl.keep.ind(genlight_object, ind.list = inds, mono.rm = TRUE)\n  \n  #filter on call rate\n  \n  x &lt;- gl.filter.callrate(x, threshold = .7)\n  \n  # Apply the function\n  report &lt;- gl.report.heterozygosity(x)\n  \n  # Add 'ObjectName' as the first column of the report\n  report$ObjectName &lt;- name # Adjusting to add column without cbind to maintain data frame classes\n  \n  # Bind this report to the main data frame\n  heterozygosity_when_subsampling &lt;- bind_rows(heterozygosity_when_subsampling, report)\n}\n\nStarting gl.keep.ind \n  Processing genlight object with SNP data\n  Warning: data include loci that are scored NA across all individuals.\n  Consider filtering using gl &lt;- gl.filter.allna(gl)\n  Deleting all but the listed individuals Central_ABTC12035_DLit20-5353_CECHMANXX_3, Central_ABTC36027_DLit20-5353_CECHMANXX_4, Central_ABTC9964_DLit20-5353_CE4Y2ANXX_5, Central_ABTC30246_DLit20-5353_CECHMANXX_3, Central_ABTC58795_DLit20-5353_CE4Y2ANXX_5 \n  Deleting monomorphic loc\n  Locus metrics not recalculated\nCompleted: gl.keep.ind \nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Warning: Data may include monomorphic loci in call rate \n                    calculations for filtering\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 0.7 \n\n\n\n\n\nCompleted: gl.filter.callrate \nStarting gl.report.heterozygosity \n  Processing genlight object with SNP data\n  Calculating Observed Heterozygosities, averaged across\n                    loci, for each population\n  Calculating Expected Heterozygosities\n\nStarting gl.colors \nSelected color type dis \nCompleted: gl.colors \n\n\n\n\n\n      pop    n.Ind n.Loc n.Loc.adj polyLoc monoLoc all_NALoc       Ho     HoSD\npop1 pop1 4.591516 20745         1   20745       0         0 0.293408 0.265273\n         HoSE      He     HeSD     HeSE      uHe    uHeSD    uHeSE      FIS\npop1 0.001842 0.35118 0.115651 0.000803 0.394095 0.129784 0.000901 0.246186\n        FISSD    FISSE\npop1 0.526134 0.003653\nCompleted: gl.report.heterozygosity \nStarting gl.keep.ind \n  Processing genlight object with SNP data\n  Warning: data include loci that are scored NA across all individuals.\n  Consider filtering using gl &lt;- gl.filter.allna(gl)\n  Deleting all but the listed individuals Central_ABTC12035_DLit20-5353_CECHMANXX_3, Central_ABTC36027_DLit20-5353_CECHMANXX_4, Central_ABTC9964_DLit20-5353_CE4Y2ANXX_5, Central_ABTC30246_DLit20-5353_CECHMANXX_3, Central_ABTC58795_DLit20-5353_CE4Y2ANXX_5 \n  Deleting monomorphic loc\n  Locus metrics not recalculated\nCompleted: gl.keep.ind \nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Warning: Data may include monomorphic loci in call rate \n                    calculations for filtering\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 0.7 \n\n\n\n\n\nCompleted: gl.filter.callrate \nStarting gl.report.heterozygosity \n  Processing genlight object with SNP data\n  Calculating Observed Heterozygosities, averaged across\n                    loci, for each population\n  Calculating Expected Heterozygosities\n\nStarting gl.colors \nSelected color type dis \nCompleted: gl.colors \n\n\n\n\n\n      pop    n.Ind n.Loc n.Loc.adj polyLoc monoLoc all_NALoc       Ho     HoSD\npop1 pop1 4.612141 20064         1   20064       0         0 0.281935 0.253619\n        HoSE       He     HeSD    HeSE     uHe    uHeSD    uHeSE      FIS\npop1 0.00179 0.346597 0.116089 0.00082 0.38874 0.130204 0.000919 0.258105\n        FISSD    FISSE\npop1 0.514939 0.003635\nCompleted: gl.report.heterozygosity \nStarting gl.keep.ind \n  Processing genlight object with SNP data\n  Warning: data include loci that are scored NA across all individuals.\n  Consider filtering using gl &lt;- gl.filter.allna(gl)\n  Deleting all but the listed individuals Central_ABTC12035_DLit20-5353_CECHMANXX_3, Central_ABTC36027_DLit20-5353_CECHMANXX_4, Central_ABTC9964_DLit20-5353_CE4Y2ANXX_5, Central_ABTC30246_DLit20-5353_CECHMANXX_3, Central_ABTC58795_DLit20-5353_CE4Y2ANXX_5 \n  Deleting monomorphic loc\n  Locus metrics not recalculated\nCompleted: gl.keep.ind \nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Warning: Data may include monomorphic loci in call rate \n                    calculations for filtering\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 0.7 \n\n\n\n\n\nCompleted: gl.filter.callrate \nStarting gl.report.heterozygosity \n  Processing genlight object with SNP data\n  Calculating Observed Heterozygosities, averaged across\n                    loci, for each population\n  Calculating Expected Heterozygosities\n\nStarting gl.colors \nSelected color type dis \nCompleted: gl.colors \n\n\n\n\n\n      pop   n.Ind n.Loc n.Loc.adj polyLoc monoLoc all_NALoc       Ho     HoSD\npop1 pop1 4.63602 19067         1   19067       0         0 0.276449 0.249131\n         HoSE       He     HeSD     HeSE      uHe   uHeSD    uHeSE      FIS\npop1 0.001804 0.345069 0.116176 0.000841 0.386784 0.13022 0.000943 0.266283\n        FISSD    FISSE\npop1 0.511497 0.003704\nCompleted: gl.report.heterozygosity \n\ncentral_Ho_subsampling &lt;- ggplot(heterozygosity_when_subsampling, aes(x = ObjectName, y = Ho)) +\n  geom_point() +\n  scale_y_continuous(limits = c(0, NA)) +\n  theme(axis.text.x = element_text(angle = 65, hjust = 1)) +\n  labs(title = \"Observed Heterozygosity when subsampling 5 individuals\",\n       x = \"SNP Calling\", y = \"Observed Heterozygosity (Ho)\")\n\n\n\n\nPlotting Results\n\nsoutheast_Ho_subsampling\n\n\n\ncentral_Ho_subsampling\n\n\n\n\n\n\n\n\n\n\nSubsampling\n\n\n\nso we’re not seeing too much impact of subsampling if SNPs are called separately on populations.\nBUT, BUT, BUT, BUT, BUT, BUT, BUT…\nThe kimberley population has the highest actual heterozygosity (see the paper) the difference here is that this population lost a lot of variable sites because 7% of the variable sites have more than two alleles So a comparison between Central & SE and Kimberley Rubella would find the highest in the wrong population.\nThis is very problematic and is an ongoing bioinformatic issue.\nTherefore, calling SNPs separately on populations and keeping sample sizesthe same does not resolve the issues with heterozygosity based on SNPs."
  },
  {
    "objectID": "session03.html#calling-populations-together",
    "href": "session03.html#calling-populations-together",
    "title": "3  Sequencing Technologies",
    "section": "Calling populations together",
    "text": "Calling populations together\nDoes this resolve the issue?\nLets look at a file where SNPs were called on all three populations at once, and the samples were equal numbers.\n\n#first we assign populations to the individuals in the genlight\nindividual_names &lt;- as.vector(indNames(combined_kim_15_cen_15_se_15.vcf))\n\n# Split each name at the underscore and keep the first part\nmodified_names &lt;- sapply(individual_names, function(name) {\n  parts &lt;- strsplit(name, \"_\")[[1]]\n  parts[1]\n})\n\n# Convert the output to a factor\nmodified_names &lt;- factor(modified_names)\n\n#then we assign the populations\ncombined_kim_15_cen_15_se_15.vcf@pop &lt;- modified_names\n\n#then we apply a call rate filter\ncombined_kim_15_cen_15_se_15.vcf_0.7 &lt;- gl.filter.callrate(combined_kim_15_cen_15_se_15.vcf,\n                                                           threshold = 0.95, mono.rm = T)\n\nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Warning: Data may include monomorphic loci in call rate \n                    calculations for filtering\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 0.95 \n\n\n\n\n\nCompleted: gl.filter.callrate \n\n#then we look at the heterozygosity estimates by population\ndiversity_equal_sample_15_ind &lt;- gl.report.heterozygosity(combined_kim_15_cen_15_se_15.vcf_0.7)\n\nStarting gl.report.heterozygosity \n  Processing genlight object with SNP data\n  Calculating Observed Heterozygosities, averaged across\n                    loci, for each population\n  Calculating Expected Heterozygosities\n\nStarting gl.colors \nSelected color type dis \nCompleted: gl.colors \n\n\n\n\n\n                pop    n.Ind n.Loc n.Loc.adj polyLoc monoLoc all_NALoc       Ho\nCentral     Central 14.74289   914         1     205     709         0 0.037671\nKimberley Kimberley 14.07878   914         1     656     258         0 0.117284\nSouthEast SouthEast 14.62144   914         1     372     542         0 0.079583\n              HoSD     HoSE       He     HeSD     HeSE      uHe    uHeSD\nCentral   0.112102 0.003708 0.071363 0.153583 0.005080 0.073868 0.158975\nKimberley 0.134002 0.004432 0.143542 0.152636 0.005049 0.148827 0.158257\nSouthEast 0.134695 0.004455 0.089745 0.145624 0.004817 0.092922 0.150781\n             uHeSE      FIS    FISSD FISSE\nCentral   0.005258 0.400900 0.452247    NA\nKimberley 0.005235 0.128504 0.310302    NA\nSouthEast 0.004987 0.091166 0.254158    NA\nCompleted: gl.report.heterozygosity \n\n\nWe now see that our heterozygosity if found to be highest in the Kimberley and lowest in Central Australia, which is true.\n\nCalling SNPs together but with different sample sizes\nLots of times we have different numbers of samples… so what does this do to our estimates? Lets look at what happens when we have different sample numbers across all populations\n\nindividual_names &lt;- as.vector(indNames(combined_kim_15_cen_5_se_10.vcf))\n\n# Split each name at the underscore and keep the first part\nmodified_names &lt;- sapply(individual_names, function(name) {\n  parts &lt;- strsplit(name, \"_\")[[1]]\n  parts[1]\n})\n\n# Convert the output to a factor\nmodified_names &lt;- factor(modified_names)\n\n#then we assign the populations\ncombined_kim_15_cen_5_se_10.vcf@pop &lt;- modified_names\n\n#then we apply a call rate filter\ncombined_kim_15_cen_5_se_10.vcf_0.95 &lt;- gl.filter.callrate(combined_kim_15_cen_5_se_10.vcf, threshold = 0.95, mono.rm = T)\n\nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Warning: Data may include monomorphic loci in call rate \n                    calculations for filtering\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 0.95 \n\n\n\n\n\nCompleted: gl.filter.callrate \n\n#then we look at the heterozygosity estimates by population\ndiversity_unequal_sample &lt;- gl.report.heterozygosity(combined_kim_15_cen_5_se_10.vcf_0.95)\n\nStarting gl.report.heterozygosity \n  Processing genlight object with SNP data\n  Calculating Observed Heterozygosities, averaged across\n                    loci, for each population\n  Calculating Expected Heterozygosities\n\nStarting gl.colors \nSelected color type dis \nCompleted: gl.colors \n\n\n\n\n\n                pop     n.Ind n.Loc n.Loc.adj polyLoc monoLoc all_NALoc\nCentral     Central  4.980290   964         1     206     758         0\nKimberley Kimberley 14.429461   964         1     709     255         0\nSouthEast SouthEast  9.854772   964         1     373     591         0\n                Ho     HoSD     HoSE       He     HeSD     HeSE      uHe\nCentral   0.047355 0.138961 0.004476 0.067501 0.141209 0.004548 0.075034\nKimberley 0.113975 0.131324 0.004230 0.140553 0.147435 0.004749 0.145598\nSouthEast 0.089523 0.153169 0.004933 0.094679 0.151447 0.004878 0.099740\n             uHeSD    uHeSE      FIS    FISSD FISSE\nCentral   0.156968 0.005056 0.325189 0.510923    NA\nKimberley 0.152727 0.004919 0.130096 0.317600    NA\nSouthEast 0.159541 0.005138 0.065369 0.267902    NA\nCompleted: gl.report.heterozygosity \n\n#how much more heterozygosity does kimberley have than central in different analyses?\n\n#where our samples are equal?\ndiversity_equal_sample_15_ind$Ho[1]/diversity_equal_sample_15_ind$Ho[3]\n\n[1] 0.4733549\n\n#where our samples are equal?\ndiversity_unequal_sample$Ho[1]/diversity_unequal_sample$Ho[3]\n\n[1] 0.5289702\n\n\n\n\n\n\n\n\nTake away\n\n\n\nWhat you need to take away here is that as the sample size of our most diverse population grows, the less diverse populations become more similar in this case, if you use really unequal sample sizes, you can get so biased that your less diverse population can be calculated as more diverse than your most diverse population.\n\nThink of the conservation implications!\n\n\n\n\n\n\n\n\n\nSNP-based heterozygosity\n\n\n\nSNP-based heterozygosity is extremely biased and cannot be used to compare different populations, and there are no clear workarounds that will give you reliable answers.\nYou need to report autosomal heterozygosity at a minimum, which means doing your own bioinformatics from raw data at this time."
  },
  {
    "objectID": "session03.html#subsampling-2",
    "href": "session03.html#subsampling-2",
    "title": "3  Sequencing Technologies",
    "section": "Subsampling",
    "text": "Subsampling\nso we’re not seeing too much impact of subsampling if SNPs are called separately on populations.\nBUT, BUT, BUT, BUT, BUT, BUT, BUT…\nThe kimberley population has the highest actual heterozygosity (see the paper) the difference here is that this population lost a lot of variable sites because 7% of the variable sites have more than two alleles So a comparison between Central & SE and Kimberley Rubella would find the highest in the wrong population.\nThis is very problematic and is an ongoing bioinformatic issue.\nTherefore, calling SNPs separately on populations and keeping sample sizesthe same does not resolve the issues with heterozygosity based on SNPs."
  },
  {
    "objectID": "session12.html#genetic-distance-and-visualization",
    "href": "session12.html#genetic-distance-and-visualization",
    "title": "12  Genetic Structure",
    "section": "Genetic Distance and Visualization",
    "text": "Genetic Distance and Visualization\n\nLoad data and explore\n\n# Read in the example data\ngl &lt;- readRDS(\"./data/Example_12.1_SNP.Rdata\")\n# Interrogate to see what the data are\nnLoc(gl)\n\n[1] 10529\n\nnInd(gl)\n\n[1] 113\n\ntable(pop(gl))\n\n\n   signata   farnorth   krefftii      nigra  gunabarra   emmottii  macquarii \n        11         10         10         10         10         10         10 \nsubglobosa   worrelli tanybaraga  victoriae \n        10         10         12         10 \n\n\n\n\nCalculate Distance\n\n# Calculate an Euclidean Distance Matrix on individuals\nD &lt;- gl.dist.ind(gl)\n\nStarting gl.dist.ind \n  Processing genlight object with SNP data\n  Calculating raw Euclidean Distances between individuals\n\n\n\n\n\n  Returning a stat::dist object\nCompleted: gl.dist.ind \n\n# Represent visually as a heat map\ngl.plot.heatmap(D)\n\nStarting gl.plot.heatmap \n  Processing a distance matrix\nStarting gl.colors \nSelected color type div \nCompleted: gl.colors \n\n\n\n\n\nCompleted: gl.plot.heatmap \n\n\n\n\nPCA\n\n# Undertake a PCA on the raw data\npc &lt;- gl.pcoa(gl)\n\nStarting gl.pcoa \n  Processing genlight object with SNP data\n  Performing a PCA, individuals as entities, loci as attributes, SNP genotype as state\nStarting gl.colors \nSelected color type 2 \nCompleted: gl.colors \n\n\n\n\n\nCompleted: gl.pcoa \n\n# Plot the first two dimensions of the PCA\ngl.pcoa.plot(pc,gl,pop.labels=\"legend\")\n\nStarting gl.pcoa.plot \n  Processing an ordination file (glPca)\n  Processing genlight object with SNP data\n  Plotting populations identified by a legend\n  Preparing plot .... please wait\n\n\n\n\n\nCompleted: gl.pcoa.plot \n\n# Plot the first and third dimensions of the PCA\ngl.pcoa.plot(pc,gl,xaxis=1,yaxis=3, pop.labels=\"legend\")\n\nStarting gl.pcoa.plot \n  Processing an ordination file (glPca)\n  Processing genlight object with SNP data\n  Plotting populations identified by a legend\n  Preparing plot .... please wait\n\n\n\n\n\nCompleted: gl.pcoa.plot \n\n\n\n\nSelect one cluster\n\n# Select only the data from one cluster in the primary PCA\ntemp &lt;- gl.drop.pop(gl, pop.list=c(\"victoriae\",\"subglobosa\",\n                                   \"worrelli\",\"tanybaraga\"))\n\nStarting gl.drop.pop \n  Processing genlight object with SNP data\n  Checking for presence of nominated populations, deleting them\n  Warning: Resultant dataset may contain monomorphic loci\n  Locus metrics not recalculated\nCompleted: gl.drop.pop \n\n# Plot the first two dimensions of the secondary PCA\npc &lt;- gl.pcoa(temp)\n\nStarting gl.pcoa \n  Processing genlight object with SNP data\n  Performing a PCA, individuals as entities, loci as attributes, SNP genotype as state\nStarting gl.colors \nSelected color type 2 \nCompleted: gl.colors \n\n\n\n\n\nCompleted: gl.pcoa \n\ngl.pcoa.plot(pc, temp,pop.labels=\"legend\")\n\nStarting gl.pcoa.plot \n  Processing an ordination file (glPca)\n  Processing genlight object with SNP data\n  Plotting populations identified by a legend\n  Preparing plot .... please wait\n\n\n\n\n\nCompleted: gl.pcoa.plot \n\n# Repeat the analysis as a PCoA\nD &lt;- gl.dist.ind(temp)\n\nStarting gl.dist.ind \n  Processing genlight object with SNP data\n  Calculating raw Euclidean Distances between individuals\n\n\n\n\n\n  Returning a stat::dist object\nCompleted: gl.dist.ind \n\npco &lt;- gl.pcoa(D)\n\nStarting gl.pcoa \n  Processing a distance matrix\n  Performing a PCoA, individuals as entities, no correction applied\nStarting gl.colors \nSelected color type 2 \nCompleted: gl.colors \n\n\n\n\n\nCompleted: gl.pcoa \n\ngl.pcoa.plot(pco,temp,pop.labels=\"legend\")\n\nStarting gl.pcoa.plot \n  Processing an ordination file (glPca)\n  Processing genlight object with SNP data\n  Plotting populations identified by a legend\n  Preparing plot .... please wait\n\n\n\n\n\nCompleted: gl.pcoa.plot"
  },
  {
    "objectID": "session12.html#structure-and-faststructure",
    "href": "session12.html#structure-and-faststructure",
    "title": "12  Genetic Structure",
    "section": "Structure and FastStructure",
    "text": "Structure and FastStructure\nTo run STRUCTURE from within R, we need to install the non-GUI executable (the version without frontend) for your operating system [e.g windows, mac or linux]. You can download STRUCTURE for your OS from http://web.stanford.edu/group/pritchardlab/structure_software/release_versions/v2.3.4/html/structure.html.\nTo let R know where the executable is, you need to set the path to the executable. For example, under windows, if you have the executable in d:/programms/structure/structure.exe, you can use the command below.\n\nRunning STRUCTURE\nThe small example below is just to test if the programm is set up correctly, hence the binary for your system is in the right place and the path is set correctly.\n\n#quick test to run on windows\nbc &lt;- bandicoot.gl[,1:10]\nsr &lt;- gl.run.structure(bc, k.range = 2:6, num.k.rep = 5, exec = 'd:/programms/structure/structure.exe' )\n\nfor Linux/Mac the command might look like this:\n\n#quick test to run on linux/mac\nbc &lt;- bandicoot.gl[,1:10]\nsr &lt;- gl.run.structure(bc, k.range = 2:6, num.k.rep = 5, exec = '../binaries/linux/structure' )\n\n\n\nA more serious example: simulated possums\nFor this example we will run STRUCTURE on a simulated dataset of possums. The dataset is a genlight object and contains 10 populations of 30 individuals each and 1000 loci and is part of the dartRverse package. The populations are fairly independent but are linked by some imigration, so a typical Metapopulation scenario. The populations are named A to J and follow more or less an isolation by distance (actually an isolation by resistance model). So population next to each other (e.g. B and C) are fairly well mixed and populations further apart from the rest (e.g. D) are more isolated.\nTo simplify this further we limit our exercise to the first 150 individuals only (which entails now 5 populations a 30 individuals, A to $E). To get an overview on the population we use the function: gl.map.interactive which plots the individuals on a map. Please note the genlight/dartR object needs to have valid lat long coordinates for each individual to be able to do so.\nAlso be aware this tutorial will not talk about how to filter your data set before running structure. For this please refer to the previous tutorials on filtering and data preparation.\n\npossums &lt;- possums.gl[1:150,]  #only the first 150 individuals\ntable(pop(possums)) #check the individuals and the populations\n\n\n A  B  C  D  E \n30 30 30 30 30 \n\ngl.map.interactive(possums)\n\nStarting gl.map.interactive \n  Processing genlight object with SNP data\nCompleted: gl.map.interactive \n\n\n\n\n\n\nAs mentioned this is a simulated data set and we know the true population structure. Populations B and C are very close to each other so those are basically one population and E is at least somewhat in the vicinity. To confirm that our simulation was successful, we quickly can run a pcoa to confirm the population structure.\n\npcoa &lt;- gl.pcoa(possums, plot.out = FALSE, verbose = 0)\n\nStarting gl.colors \nSelected color type 2 \nCompleted: gl.colors \n\npcoaplot &lt;- gl.pcoa.plot(pcoa, possums, verbose = 0)\n\n\n\n\nAnd yes it looks like expected.\n\n\n\n\n\n\nExercise PCOA and a map\n\n\n\n Confirm that you understand how the map and the pcoa plot relate to each other.\n\n\nNow, lets see what kind of information we can get from a structure run.\nDifferent to the above we run structure with at least some repetitions for each K (num.k.rep=10) and also over a suitable range. Unfortunately, this takes a while and we will not run it here. Instead we will load the results from a previous run that is saved in the data folder of this repository. [In case you want to re-run structure simply rename or delete the file in your folder, but be aware that this will take a while.].\n\nif (file.exists(\"./data/srnoad.rds\")) {\nsrnoad&lt;- readRDS(\"./data/srnoad.rds\")\n} else {\npossums &lt;- possums.gl[1:150,]\nsrnoad &lt;- gl.run.structure(possums, k.range = 2:7, num.k.rep = 10, exec =\n                       './binaries/structure',plot.out = FALSE, \n                       burnin=50000, numreps=100000, noadmix=FALSE)\nsaveRDS(srnoad, \"./data/srnoad.rds\")\n}\n\nHey this was quick! We have the results of the structure run. Let’s see what we can do with it.\n\n\nStructure run (no-admixture)\nTo run structure we use an dartR implementation of functions which is based on the functions provided by the strataG package (F. Archer (2016)). There you can find a detailed description of the function and its arguments. We had to integrate the functionality because strataG is no longer on CRAN.\nThe possible arguments are listed below:\n\n\n\n\n\n\n\nparameter\ndescription\n\n\n\n\nk.range\nvector of values to for maxpop in multiple runs. If set to NULL, a single STRUCTURE run is conducted with maxpops groups. If specified, do not also specify maxpops.\n\n\nnum.k.rep\nnumber of replicates for each value in k.range.\n\n\nlabel\nlabel to use for input and output files\n\n\ndelete.files\nlogical. Delete all files when STRUCTURE is finished?\n\n\nexec\nname of executable for STRUCTURE. Defaults to “structure”.\n\n\nburnin\nnumber of iterations for MCMC burnin.\n\n\nnumreps\nnumber of MCMC replicates.\n\n\nnoadmix\nlogical. No admixture?\n\n\nfreqscorr\nlogical. Correlated frequencies?\n\n\nrandomize\nrandomize.\n\n\npop.prior\na character specifying which population prior model to use: “locprior” or “usepopinfo”.\n\n\nlocpriorinit\nparameterizes locprior parameter r - how informative the populations are. Only used when pop.prior = “locprior”.\n\n\nmaxlocprior\nspecifies range of locprior parameter r. Only used when pop.prior = “locprior”.\n\n\ngensback\ninteger defining the number of generations back to test for immigrant ancestry. Only used when pop.prior = “usepopinfo”.\n\n\nmigrprior\nnumeric between 0 and 1 listing migration prior. Only used when pop.prior = “usepopinfo”.\n\n\npopflag\na vector of integers (0, 1) or logicals identifiying whether or not to use strata information. Only used when pop.prior = “usepopinfo”.\n\n\npops\nvector of population labels to be used in place of numbers in STRUCTURE file.\n\n\n\nSome words about admixture\n\n\nAdmixture Model\n\nDefinition: The admixture model assumes that individuals can have ancestry from multiple populations. This means that the genetic makeup of an individual can be a mixture of two or more populations. This model is particularly useful for analyzing genetic data from populations that are known to have mixed or where there is gene flow between populations.\nApplication: It is applied when there is historical or recent admixture between populations, and it allows for the estimation of individual ancestry proportions from each of the inferred clusters. For example, an individual might be 50% from population A, 30% from population B, and 20% from population C under the admixture model.\nUtility: The admixture model can uncover complex patterns of genetic structure that are not apparent under the assumption of discrete, non-overlapping populations.\n\n\n\nNo-Admixture Model\n\nDefinition: The no-admixture model assumes that individuals have ancestry from only one population. This model is particularly useful for analyzing genetic data from populations that are known to be isolated from one another.\nApplication: This model is used in situations where populations are relatively well-defined and isolated, with little to no gene flow between them. It simplifies the analysis by considering that an individual’s entire genetic information originates from one of the K clusters without any mixture.\nUtility: The no-admixture model is useful for identifying distinct populations and their members, especially in cases where populations are clearly separated geographically or temporally."
  },
  {
    "objectID": "session12.html#structure-results",
    "href": "session12.html#structure-results",
    "title": "12  Genetic Structure",
    "section": "Structure Results",
    "text": "Structure Results\nOkay now that we got that out of our way lets see how to interprete the results of the structure run.\n\nEvanno Plots\nThe Evanno method is a statistical approach used to determine the most likely number of genetic clusters (K) present in a dataset analyzed by STRUCTURE software. STRUCTURE is a computational tool used for inferring population structure using genetic data. Identifying the correct number of clusters (K) is crucial for accurately interpreting genetic data in the context of population structure, evolutionary biology, and conservation genetics. The Evanno method specifically addresses the challenge of choosing the optimal K by analyzing the rate of change in the likelihood of data between successive K values, rather than just relying on the maximum likelihood. This is done through the calculation of ΔK, a quantity based on the second order rate of change of the likelihood function with respect to K. The method suggests that the value of K corresponding to the highest ΔK should be considered the most likely number of clusters present in the dataset.\nThe Evanno method is a method to determine the most likely number of populations. It is based on the second order rate of change of the likelihood function with respect to K. The method is implemented in the gl.evanno function.\n\nev &lt;- gl.evanno(srnoad)\n\n\n\n\n\n\nPlotting the results (Q matrix)\nThe Q matrix represents the estimated ancestry proportions of individuals across different inferred genetic clusters. STRUCTURE aims to identify K clusters (populations) that best explain the patterns of genetic variation observed in the data, with K either being predefined by the user or determined using methods like the Evanno method.\nThe Q matrix is essentially a matrix where each row corresponds to an individual in the dataset, and each column represents one of the K inferred genetic clusters. The entries in the matrix are the estimated proportions (ranging from 0 to 1) of each individual’s genome that originated from each cluster. The sum of an individual’s ancestry proportions across all K clusters equals 1.\nThe values in the Q matrix can be interpreted as the fraction of an individual’s ancestry that comes from each of the K clusters. The Q matrix is often visualized using bar plots or stacked bar graphs, where each individual’s ancestry proportions are shown as segments of a bar colored differently for each cluster.\nTo get a plot for a certain level you need to specify K or at least a range of K.\n\nqmatnoad &lt;- gl.plot.structure(srnoad, K=3:5)\n\nStarting gl.plot.structure \n\n\n\n\n\nCompleted: gl.plot.structure \n\nhead(qmatnoad[[1]])\n\n    Label cluster1 cluster2 cluster3      K orig.pop   ord\n   &lt;char&gt;    &lt;num&gt;    &lt;num&gt;    &lt;num&gt; &lt;char&gt;   &lt;fctr&gt; &lt;int&gt;\n1:      1        0        0        1    3.1        A     1\n2:     10        0        0        1    3.1        A     2\n3:    100        0        1        0    3.1        D    91\n4:    101        0        1        0    3.1        D    92\n5:    102        0        1        0    3.1        D    93\n6:    103        0        1        0    3.1        D    94\n\n\n\n\nA “spatial” structure plot\n\ngm &lt;- gl.map.structure(qmat = qmatnoad, x = possums,K=5, scalex=1, scaley=0.5 )\n\n\n\n\nspatial qmat plot\n\n\n\n\n\n\n\n\nExercise: Study the results using different Ks\n\n\n\n The above run was a structure run using the no-admixture model for a range of K=2:7. Study the results by plotting it for various Ks and try to interpret the results in the light of the simulated population structure.\n\n\n\n\nStructure run (no-admixture=FALSE :-))\nWe will now run the same example using the admixture model. The only difference is that we will set the no-admixture parameter to FALSE.\n\nif (file.exists(\"./data/srnoad.rds\")) {\nsrad&lt;- readRDS(\"./data/srad.rds\")\n} else {\npossums &lt;- possums.gl[1:150,]\nsrad &lt;- gl.run.structure(possums, k.range = 2:7, num.k.rep = 10, exec =\n                       '../binaries/linux/structure',plot.out = FALSE, \n                       burnin=50000, numreps=100000, noadmix=FALSE)\nsaveRDS(srad, \"./data/srad.rds\")\n}\n\nAnd again the evanno plots\n\nev &lt;- gl.evanno(srad)\n\n\n\n\nSomething between 4-5 seems to be a good number of K.\nHence lets look at the qmat (for K=4) and then you can check the same for K=5\n\nqmatad &lt;- gl.plot.structure(srad, K=4)\n\nStarting gl.plot.structure \n\n\n\n\n\nCompleted: gl.plot.structure \n\nhead(qmatad[[1]])\n\n    Label   cluster1   cluster2   cluster3   cluster4      K orig.pop   ord\n   &lt;char&gt;      &lt;num&gt;      &lt;num&gt;      &lt;num&gt;      &lt;num&gt; &lt;char&gt;   &lt;fctr&gt; &lt;int&gt;\n1:      1 0.01889411 0.92092396 0.02099371 0.03918822      4        A    23\n2:     10 0.01700341 0.94348888 0.01950371 0.02000401      4        A    24\n3:    100 0.93530017 0.01900001 0.01869981 0.02700001      4        D   115\n4:    101 0.94469458 0.02400241 0.01430130 0.01700171      4        D   111\n5:    102 0.94820537 0.01479831 0.01999801 0.01699831      4        D   107\n6:    103 0.91689208 0.02110211 0.03420331 0.02780251      4        D   118\n\n\nAn the spatial version\n\ngm &lt;- gl.map.structure(qmat = qmatad, x = possums,K=4, scalex=1, scaley=0.5 )\n\n\n\n\nspatial qmat plot"
  },
  {
    "objectID": "session12.html#faststructure",
    "href": "session12.html#faststructure",
    "title": "12  Genetic Structure",
    "section": "Faststructure",
    "text": "Faststructure\nFaststructure is a faster implementation of the structure algorithm. Be aware though it is named Fast’structure’ it is a fairly different implementation of the original approach, hence the results might differ from the original STRUCTURE. The method is based on a variational Bayesian framework and is designed to be faster and more scalable than the original STRUCTURE software. It is particularly useful for analyzing large datasets with many individuals and/or many SNPs (&gt;5000). One of the most important differences is that there is no no-admixture model in Faststructure, but you can run two models that allow for “complex” situtations (logistic prior) and situations where the ancestry is more evenly distributed (simple prior). Also the way how to identify K differ between the methods. We will run the previous examples with both settings and compare the results.\nThe method is now implemented in the gl.run.faststructure function. Unfortunatley noone to my knowledge has compiled Faststructure for windows, so it is only available for Linux and Mac. We also need to have plink installed as this is the required input format for faststructure.\n\nFaststructure simple prior\n\n#takes about 3 minutes\n#fsr.sim &lt;- gl.run.faststructure(possums, k.range = 2:7, num.k.rep = 10, \n#                                exec = \"./binaries/fastStructure\", output = tempdir(),\n#                                exec.plink=\"./binaries\", prior = \"simple\")\n#load from the previous run\nfsr.simple &lt;- readRDS((\"./data/fsr.sim.rds\"))\n\nHere is the output of the run:\n\nfsr.simple$plot\n\n\n\n\nfaststructure simple prior plot\n\n\nHere we can check the marginal likelihoods for the different K values. The recommended K is then the one with the highest marginal likelihood at the lowest K possible. So here we would decide on K=4. As before we can plot the Q matrix and the spatial structure plot.\n\nqmat.simple &lt;- gl.plot.faststructure(fsr.simple$q_list, k.range = 4,clumpak = T)\n\nStarting gl.select.colors \n  Warning: No color library specified, set to scales and palette set to hue_pal \n    Need to select one of baseR, brewer, scales, gr.palette or gr.hcl\n  Showing and returning 4 colors for library scales : palette hue_pal \n\n\n\n\n\nCompleted: gl.select.colors \n\n\n\n\ngm &lt;-gl.map.structure(qmat.simple, K = 4, x = possums, scalex = 1, scaley = 0.5)\n\n\n\nFaststructure logistic prior\n\n#takes about 4 minutes\n#fsr.log &lt;- gl.run.faststructure(possums, k.range = 2:7, num.k.rep = 10, exec = \"./binaries/fastStructure\", output = tempdir(), exec.plink=\"./binaries\", prior = \"logistic\",)\n\nfsr.log &lt;- readRDS((\"./data/fsr.log.rds\"))\n\nHere is the output of the run:\n\nfsr.log$plot\n\n\n\n\nfaststructure logistic prior plot\n\n\nAs before we can plot the Q matrix and the spatial structure plot.\n\nqmat.log &lt;- gl.plot.faststructure(fsr.log$q_list, k.range = 4,clumpak = T)\ngm &lt;-gl.map.structure(qmat.log, K = 4, x = possums, scalex = 1, scaley = 0.5)"
  },
  {
    "objectID": "session12.html#exercises",
    "href": "session12.html#exercises",
    "title": "12  Genetic Structure",
    "section": "Exercises",
    "text": "Exercises\n\n\n\n\n\n\nExercise: Compare Structure and Faststructure runs\n\n\n\n Now it is time to compare the results from all four previous runs.\n\n\n\n\n\n\n\n\nExercise: Crocodiles\n\n\n\n If you are feeling energetic, you can try to run the structure and faststructure on the crocodile dataset. (crocs.rds)\nThis is a publically available dataset (though it has been filtered and pruned) from the paper:) to make is a bit easier to run. Nevertheless it still has &gt;1500 SNPs and more then 400 individuals, so it takes a bit of time to run. If you do not want to wait I did two faststructure runs for you. * prior = simple, K=2:18 (max number of populations), but only 3 repeat (num.k.rep) * prior = logistic, K=2:18 (max number of populations), but only 3 repeat (num.k.rep)\nMaybe plot the data first, have a look at a PCA and then decide on the number of populations (range of K) you want to run the faststructure on. It might also make sense to simplify the number of populations in a smaller number of subunits. A description of the dataset (and the original paper) can be found here: (fukuda2024?)\n\n\n\ncrocs &lt;- readRDS(\"./data/crocs.rds\")\ngl.map.interactive(crocs)\n\nStarting gl.map.interactive \n  Processing genlight object with SNP data\nCompleted: gl.map.interactive"
  },
  {
    "objectID": "session02.html#before-we-begin",
    "href": "session02.html#before-we-begin",
    "title": "2  Pop Gen In Conservation",
    "section": "Before we begin",
    "text": "Before we begin\nThis session is all about\nVideo\nMore details can be found in W. B. Sherwin et al. (2017)"
  },
  {
    "objectID": "session03.html#snps-and-heterozygosity-estimates",
    "href": "session03.html#snps-and-heterozygosity-estimates",
    "title": "3  Sequencing Technologies",
    "section": "SNPs and Heterozygosity Estimates",
    "text": "SNPs and Heterozygosity Estimates"
  },
  {
    "objectID": "session03.html#snp-based-heterozygosity-estimates",
    "href": "session03.html#snp-based-heterozygosity-estimates",
    "title": "3  Sequencing Technologies",
    "section": "SNP-based heterozygosity estimates",
    "text": "SNP-based heterozygosity estimates"
  },
  {
    "objectID": "session03.html#dart-sequencing",
    "href": "session03.html#dart-sequencing",
    "title": "3  Sequencing Technologies",
    "section": "DArT sequencing",
    "text": "DArT sequencing\n\n\nDArTseq is our proprietary genome complexity reduction-based sequencing technology.\nIt differs from other methods through its ability to intelligently select the predominantly active – low copy sequence – areas in a genome, which are the ones containing the most useful information. At the same time, DArTseq masks the lesser value, repetitive sequences. It does this through the application of a combination of restriction enzymes to fragment DNA samples in a highly reproducible manner.\nA key component of DArTseq is its complexity reduction step. This involves reducing complexity of the genome by cutting it down to a consistent and reproducible fraction from which markers are discovered and called. This process does not introduce ascertainment bias because we are discovering markers within the (restriction) fragment set without the bias.\n\nCharacteristics\nDArTseq is designed to provide a consistent genomic representation across samples within and between experiments, even over a decade of operations. DArTseq has been used to process tens of thousands of samples from hundreds of organisms, and is capable of co-analysing thousands of samples together, with the great majority of markers called across all of the samples. These advantages come from the library processing methods of DArTseq which distinguish it from all other complexity reduced genotyping technologies using restriction enzymes.\n\n\nStandardised\nLaboratory sample processing is performed in a very high throughput streamlined operation utilising end-to-end pipetting robotics and informatics integration, with a Laboratory Information Management System (LIMS). All the physical sample processing steps undertaken in the lab are linked with the data storage and analysis components via tight integration with the LIMS. Sample processing robots have automated data exchange with the LIMS.\nManual operations have been minimised and plate based sample handling prevents the introduction of sample-tracking mistakes after arrival. The analytical components for processing DArTseq data and generating marker calls have been tailored specifically to the unique DArTseq complexity reduction and library construction methods. This results in a streamlined and highly effective data analysis pipeline, enabling rapid generation of high-quality marker data from thousands or even tens of thousands of assays in a single analysis. Ability to co-analysis with past services of 14 years despite 5 generations of the illumina sequences. The population of fragments in the genomic representation does not vary across multiple sample submissions despite the many years.\nSee more at https://www.diversityarrays.com/"
  },
  {
    "objectID": "session04.html#reproducible-research",
    "href": "session04.html#reproducible-research",
    "title": "4  Data Management, Reproducibility & Integrity",
    "section": "Reproducible research",
    "text": "Reproducible research\n\n\n\n\n\n\nGoal\n\n\n\nOur goal is to make reproducible research, and data management and integrity are the necessary steps to achieve this goal\n\n\n\nQuestionAnswer\n\n\n Have you ever had problems reproducing your own or someone else’s research?\n\nHave you ever had problems reproducing your own or someone else’s research?\n\n My own research Someone else's Both I have never had problems reproducing r…\n\n\n\n\n\nCheck out https://www.repro4everyone.org/\n\n\n\n\nThings to consider when it comes to research\nWe will go through some of the practical steps for reproducible research:"
  },
  {
    "objectID": "session04.html#quarto",
    "href": "session04.html#quarto",
    "title": "4  Data Management, Reproducibility & Integrity",
    "section": "Quarto",
    "text": "Quarto\n\nMeet Quarto\nQuarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org.\n\n\nMeet the penguins\n\nThe penguins data from the palmerpenguins package contains size measurements for {r} nrow(penguins) penguins from three species observed on three islands in the Palmer Archipelago, Antarctica.\nThe plot below shows the relationship between flipper and bill lengths of these penguins.\n\n\n\n\n\n\n\nQuarto file\n\n\n\n\n\n\nExercise\n\n\n\n Download an example quarto file and try running it on your own.\n\n\n\n\n\n Download hello.qmd"
  },
  {
    "objectID": "session04.html#quarto-for-reproducibility",
    "href": "session04.html#quarto-for-reproducibility",
    "title": "4  Data Management, Reproducibility & Integrity",
    "section": "Quarto for Reproducibility",
    "text": "Quarto for Reproducibility\n\nMeet Quarto\nQuarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org.\n\n\nMeet the penguins\n\nThe penguins data from the palmerpenguins package contains size measurements for {r} nrow(penguins) penguins from three species observed on three islands in the Palmer Archipelago, Antarctica.\nThe plot below shows the relationship between flipper and bill lengths of these penguins.\n\n\n\n\n\n\n\nQuarto file\n\n\n\n\n\n\nExercise\n\n\n\n Download an example quarto file and try running it on your own.\n\n\n\n\n\n Download hello.qmd"
  },
  {
    "objectID": "session07.html#gea-analysis-of-snp-and-environmental-data-using-rda",
    "href": "session07.html#gea-analysis-of-snp-and-environmental-data-using-rda",
    "title": "7  Natural Selection",
    "section": "GEA analysis of SNP and environmental data using RDA",
    "text": "GEA analysis of SNP and environmental data using RDA\nFirst lets load in some functions we will be using.\n\nsource(\"utils.R\")"
  },
  {
    "objectID": "session07.html#data-preparation",
    "href": "session07.html#data-preparation",
    "title": "7  Natural Selection",
    "section": "1. Data preparation",
    "text": "1. Data preparation\n\n# load genlight object\nload(\"data/Mf5000_gl.RData\")\nMf5000_gl\n\n /// GENLIGHT OBJECT /////////\n\n // 249 genotypes,  5,000 binary SNPs, size: 1.1 Mb\n 12917 (1.04 %) missing data\n\n // Basic content\n   @gen: list of 249 SNPbin\n   @ploidy: ploidy of each individual  (range: 2-2)\n\n // Optional content\n   @ind.names:  249 individual labels\n   @loc.names:  5000 locus labels\n   @pop: population of each individual (group size range: 9-30)\n   @other: a list containing: X \n\nMf5000_gl@pop\n\n  [1] MBR MBR MBR MBR MBR MBR MBR MBR MBR MBR MBR MBR MBR MBR MBR MBR MBR MBR\n [19] MBR MBR MDC MDC MDC MDC MDC MDC MDC MDC MDC MDC MDC MDC MDC MDC MDC MDC\n [37] MDC MDC MDC MDC MDC MDC GGL GGL GGL GGL GGL GGL GGL GGL GGL GGL GGL GGL\n [55] GGL GGL GGL GGL GGL GGL GGL GGL GGL GGL GGL GGL GGL GGL GGL GGL GGL GGL\n [73] WAK WAK WAK WAK WAK WAK WAK WAK WAK WAK WAK WAK WAK WAK WAK WAK BEN BEN\n [91] BEN BEN BEN BEN BEN BEN BEN BEN BEN BEN BEN BEN BOG BOG BOG BOG BOG BOG\n[109] BOG BOG BOG BOG BOG BOG BOG BOG BOG BOG PEL PEL PEL PEL PEL PEL PEL PEL\n[127] PEL GWY GWY GWY GWY GWY GWY GWY GWY GWY GWY GWY GWY DUM DUM DUM DUM DUM\n[145] DUM DUM DUM DUM DUM DUM DUM DUM DUM MIB MIB MIB MIB MIB MIB MIB MIB MIB\n[163] MIB MIB MIB MIB MIB MIB MIB MIB MIB MIB MIB STG STG STG STG STG STG STG\n[181] STG STG STG STG STG STG STG STG STG STG STG STG STG OAK OAK OAK OAK OAK\n[199] OAK OAK OAK OAK OAK OAK OAK OAK OAK OAK OAK OAK OAK WAR WAR WAR WAR WAR\n[217] WAR WAR WAR WAR WAR WAR WAR WAR WAR WAR WAR WAR WAR WAR WAR KIL KIL KIL\n[235] KIL KIL KIL KIL KIL KIL KIL KIL KIL KIL KIL KIL KIL KIL KIL\nLevels: BEN BOG DUM GGL GWY KIL MBR MDC MIB OAK PEL STG WAK WAR\n\n# Factors in R can make you question your life choices like nothing else...\n# re-order the pop levels to match the order of individuals in your data\nMf5000_gl@pop &lt;- factor(Mf5000_gl@pop, levels = as.character(unique(Mf5000_gl@pop)))\nMf5000_gl@pop\n\n  [1] MBR MBR MBR MBR MBR MBR MBR MBR MBR MBR MBR MBR MBR MBR MBR MBR MBR MBR\n [19] MBR MBR MDC MDC MDC MDC MDC MDC MDC MDC MDC MDC MDC MDC MDC MDC MDC MDC\n [37] MDC MDC MDC MDC MDC MDC GGL GGL GGL GGL GGL GGL GGL GGL GGL GGL GGL GGL\n [55] GGL GGL GGL GGL GGL GGL GGL GGL GGL GGL GGL GGL GGL GGL GGL GGL GGL GGL\n [73] WAK WAK WAK WAK WAK WAK WAK WAK WAK WAK WAK WAK WAK WAK WAK WAK BEN BEN\n [91] BEN BEN BEN BEN BEN BEN BEN BEN BEN BEN BEN BEN BOG BOG BOG BOG BOG BOG\n[109] BOG BOG BOG BOG BOG BOG BOG BOG BOG BOG PEL PEL PEL PEL PEL PEL PEL PEL\n[127] PEL GWY GWY GWY GWY GWY GWY GWY GWY GWY GWY GWY GWY DUM DUM DUM DUM DUM\n[145] DUM DUM DUM DUM DUM DUM DUM DUM DUM MIB MIB MIB MIB MIB MIB MIB MIB MIB\n[163] MIB MIB MIB MIB MIB MIB MIB MIB MIB MIB MIB STG STG STG STG STG STG STG\n[181] STG STG STG STG STG STG STG STG STG STG STG STG STG OAK OAK OAK OAK OAK\n[199] OAK OAK OAK OAK OAK OAK OAK OAK OAK OAK OAK OAK OAK WAR WAR WAR WAR WAR\n[217] WAR WAR WAR WAR WAR WAR WAR WAR WAR WAR WAR WAR WAR WAR WAR KIL KIL KIL\n[235] KIL KIL KIL KIL KIL KIL KIL KIL KIL KIL KIL KIL KIL KIL KIL\nLevels: MBR MDC GGL WAK BEN BOG PEL GWY DUM MIB STG OAK WAR KIL\n\n# convert to genind\nMf5000.genind &lt;- gl2gi(Mf5000_gl)\n\nStarting gl2gi \n  Processing genlight object with SNP data\nMatrix converted.. Prepare genind object...\nCompleted: gl2gi \n\nMf5000.genind\n\n/// GENIND OBJECT /////////\n\n // 249 individuals; 5,000 loci; 10,000 alleles; size: 12.2 Mb\n\n // Basic content\n   @tab:  249 x 10000 matrix of allele counts\n   @loc.n.all: number of alleles per locus (range: 2-2)\n   @loc.fac: locus factor for the 10000 columns of @tab\n   @all.names: list of allele names for each locus\n   @ploidy: ploidy of each individual  (range: 2-2)\n   @type:  codom\n   @call: df2genind(X = xx[, ], sep = \"/\", ncode = 1, ind.names = x@ind.names, \n    pop = x@pop, NA.char = \"-\", ploidy = 2)\n\n // Optional content\n   @pop: population of each individual (group size range: 9-30)\n   @other: a list containing: X \n\n\n\n\n\n\n\n\nOrdination analyses cannot handle missing data…\n\n\n\nImpute missing data\nDecision time\n\nremove loci with missing data?\nremove individuals with missing data?\nimpute missing data, ok how?\n3a. most common genotype across all data?\n3b. most common genotype per site/population/other?\n3c. based on population allele frequencies characterised using snmf (admixture)?\n\n\n\n\n\n# ADMIXTURE results most likely 6 pops\nimputed.gi &lt;- melfuR::impute.data(Mf5000.genind, K = 6)\n\nTotal missing data =  1.04 %\n[1] \"*********************************************************\"\n[1] \" Conversion from the lfmm format to the geno format\"\n[1] \"*********************************************************\"\n\n    - number of detected individuals:   249\n    - number of detected loci:      5000\n\nThe project is saved into :\n dat.snmfProject \n\nTo load the project, use:\n project = load.snmfProject(\"dat.snmfProject\")\n\nTo remove the project, use:\n remove.snmfProject(\"dat.snmfProject\")\n\n[1] 42\n[1] \"*************************************\"\n[1] \"*          create.dataset            *\"\n[1] \"*************************************\"\nsummary of the options:\n\n        -n (number of individuals)                 249\n        -L (number of loci)                        5000\n        -s (seed random init)                      42\n        -r (percentage of masked data)             0.05\n        -x (genotype file in .geno format)         C:\\repositories\\dartR_workshop\\kioloa\\dat.geno\n        -o (output file in .geno format)           C:/repositories/dartR_workshop/kioloa/dat.snmf/masked/dat_I.geno\n\n Write genotype file with masked data, C:/repositories/dartR_workshop/kioloa/dat.snmf/masked/dat_I.geno:        OK.\n\n[1] \"*************************************\"\n[1] \"* sNMF K = 6  repetition 1      *\"\n[1] \"*************************************\"\nsummary of the options:\n\n        -n (number of individuals)             249\n        -L (number of loci)                    5000\n        -K (number of ancestral pops)          6\n        -x (input file)                        C:/repositories/dartR_workshop/kioloa/dat.snmf/masked/dat_I.geno\n        -q (individual admixture file)         C:/repositories/dartR_workshop/kioloa/dat.snmf/K6/run1/dat_r1.6.Q\n        -g (ancestral frequencies file)        C:/repositories/dartR_workshop/kioloa/dat.snmf/K6/run1/dat_r1.6.G\n        -i (number max of iterations)          200\n        -a (regularization parameter)          10\n        -s (seed random init)                  42\n        -e (tolerance error)                   1E-05\n        -p (number of processes)               1\n        - diploid\n\nRead genotype file C:/repositories/dartR_workshop/kioloa/dat.snmf/masked/dat_I.geno:        OK.\n\n\nMain algorithm:\n    [                                                                           ]\n    [=====================================]\nNumber of iterations: 98\n\nLeast-square error: 388910.818678\nWrite individual ancestry coefficient file C:/repositories/dartR_workshop/kioloa/dat.snmf/K6/run1/dat_r1.6.Q:       OK.\nWrite ancestral allele frequency coefficient file C:/repositories/dartR_workshop/kioloa/dat.snmf/K6/run1/dat_r1.6.G:    OK.\n\n[1] \"*************************************\"\n[1] \"*    cross-entropy estimation       *\"\n[1] \"*************************************\"\nsummary of the options:\n\n        -n (number of individuals)         249\n        -L (number of loci)                5000\n        -K (number of ancestral pops)      6\n        -x (genotype file)                 C:\\repositories\\dartR_workshop\\kioloa\\dat.geno\n        -q (individual admixture)          C:/repositories/dartR_workshop/kioloa/dat.snmf/K6/run1/dat_r1.6.Q\n        -g (ancestral frequencies)         C:/repositories/dartR_workshop/kioloa/dat.snmf/K6/run1/dat_r1.6.G\n        -i (with masked genotypes)         C:/repositories/dartR_workshop/kioloa/dat.snmf/masked/dat_I.geno\n        - diploid\n\nCross-Entropy (all data):    0.515314\nCross-Entropy (masked data):     0.550054\nThe project is saved into :\n dat.snmfProject \n\nTo load the project, use:\n project = load.snmfProject(\"dat.snmfProject\")\n\nTo remove the project, use:\n remove.snmfProject(\"dat.snmfProject\")\n\n[1] 2036314816\n[1] \"*************************************\"\n[1] \"*          create.dataset            *\"\n[1] \"*************************************\"\nsummary of the options:\n\n        -n (number of individuals)                 249\n        -L (number of loci)                        5000\n        -s (seed random init)                      2036314816\n        -r (percentage of masked data)             0.05\n        -x (genotype file in .geno format)         C:\\repositories\\dartR_workshop\\kioloa\\dat.geno\n        -o (output file in .geno format)           C:/repositories/dartR_workshop/kioloa/dat.snmf/masked/dat_I.geno\n\n Write genotype file with masked data, C:/repositories/dartR_workshop/kioloa/dat.snmf/masked/dat_I.geno:        OK.\n\n[1] \"*************************************\"\n[1] \"* sNMF K = 6  repetition 2      *\"\n[1] \"*************************************\"\nsummary of the options:\n\n        -n (number of individuals)             249\n        -L (number of loci)                    5000\n        -K (number of ancestral pops)          6\n        -x (input file)                        C:/repositories/dartR_workshop/kioloa/dat.snmf/masked/dat_I.geno\n        -q (individual admixture file)         C:/repositories/dartR_workshop/kioloa/dat.snmf/K6/run2/dat_r2.6.Q\n        -g (ancestral frequencies file)        C:/repositories/dartR_workshop/kioloa/dat.snmf/K6/run2/dat_r2.6.G\n        -i (number max of iterations)          200\n        -a (regularization parameter)          10\n        -s (seed random init)                  2036314816\n        -e (tolerance error)                   1E-05\n        -p (number of processes)               1\n        - diploid\n\nRead genotype file C:/repositories/dartR_workshop/kioloa/dat.snmf/masked/dat_I.geno:        OK.\n\n\nMain algorithm:\n    [                                                                           ]\n    [======================================]\nNumber of iterations: 102\n\nLeast-square error: 390122.868041\nWrite individual ancestry coefficient file C:/repositories/dartR_workshop/kioloa/dat.snmf/K6/run2/dat_r2.6.Q:       OK.\nWrite ancestral allele frequency coefficient file C:/repositories/dartR_workshop/kioloa/dat.snmf/K6/run2/dat_r2.6.G:    OK.\n\n[1] \"*************************************\"\n[1] \"*    cross-entropy estimation       *\"\n[1] \"*************************************\"\nsummary of the options:\n\n        -n (number of individuals)         249\n        -L (number of loci)                5000\n        -K (number of ancestral pops)      6\n        -x (genotype file)                 C:\\repositories\\dartR_workshop\\kioloa\\dat.geno\n        -q (individual admixture)          C:/repositories/dartR_workshop/kioloa/dat.snmf/K6/run2/dat_r2.6.Q\n        -g (ancestral frequencies)         C:/repositories/dartR_workshop/kioloa/dat.snmf/K6/run2/dat_r2.6.G\n        -i (with masked genotypes)         C:/repositories/dartR_workshop/kioloa/dat.snmf/masked/dat_I.geno\n        - diploid\n\nCross-Entropy (all data):    0.51454\nCross-Entropy (masked data):     0.558075\nThe project is saved into :\n dat.snmfProject \n\nTo load the project, use:\n project = load.snmfProject(\"dat.snmfProject\")\n\nTo remove the project, use:\n remove.snmfProject(\"dat.snmfProject\")\n\n[1] 1372102712\n[1] \"*************************************\"\n[1] \"*          create.dataset            *\"\n[1] \"*************************************\"\nsummary of the options:\n\n        -n (number of individuals)                 249\n        -L (number of loci)                        5000\n        -s (seed random init)                      1372102712\n        -r (percentage of masked data)             0.05\n        -x (genotype file in .geno format)         C:\\repositories\\dartR_workshop\\kioloa\\dat.geno\n        -o (output file in .geno format)           C:/repositories/dartR_workshop/kioloa/dat.snmf/masked/dat_I.geno\n\n Write genotype file with masked data, C:/repositories/dartR_workshop/kioloa/dat.snmf/masked/dat_I.geno:        OK.\n\n[1] \"*************************************\"\n[1] \"* sNMF K = 6  repetition 3      *\"\n[1] \"*************************************\"\nsummary of the options:\n\n        -n (number of individuals)             249\n        -L (number of loci)                    5000\n        -K (number of ancestral pops)          6\n        -x (input file)                        C:/repositories/dartR_workshop/kioloa/dat.snmf/masked/dat_I.geno\n        -q (individual admixture file)         C:/repositories/dartR_workshop/kioloa/dat.snmf/K6/run3/dat_r3.6.Q\n        -g (ancestral frequencies file)        C:/repositories/dartR_workshop/kioloa/dat.snmf/K6/run3/dat_r3.6.G\n        -i (number max of iterations)          200\n        -a (regularization parameter)          10\n        -s (seed random init)                  1372102712\n        -e (tolerance error)                   1E-05\n        -p (number of processes)               1\n        - diploid\n\nRead genotype file C:/repositories/dartR_workshop/kioloa/dat.snmf/masked/dat_I.geno:        OK.\n\n\nMain algorithm:\n    [                                                                           ]\n    [=====================================]\nNumber of iterations: 98\n\nLeast-square error: 390123.414335\nWrite individual ancestry coefficient file C:/repositories/dartR_workshop/kioloa/dat.snmf/K6/run3/dat_r3.6.Q:       OK.\nWrite ancestral allele frequency coefficient file C:/repositories/dartR_workshop/kioloa/dat.snmf/K6/run3/dat_r3.6.G:    OK.\n\n[1] \"*************************************\"\n[1] \"*    cross-entropy estimation       *\"\n[1] \"*************************************\"\nsummary of the options:\n\n        -n (number of individuals)         249\n        -L (number of loci)                5000\n        -K (number of ancestral pops)      6\n        -x (genotype file)                 C:\\repositories\\dartR_workshop\\kioloa\\dat.geno\n        -q (individual admixture)          C:/repositories/dartR_workshop/kioloa/dat.snmf/K6/run3/dat_r3.6.Q\n        -g (ancestral frequencies)         C:/repositories/dartR_workshop/kioloa/dat.snmf/K6/run3/dat_r3.6.G\n        -i (with masked genotypes)         C:/repositories/dartR_workshop/kioloa/dat.snmf/masked/dat_I.geno\n        - diploid\n\nCross-Entropy (all data):    0.515192\nCross-Entropy (masked data):     0.546855\nThe project is saved into :\n dat.snmfProject \n\nTo load the project, use:\n project = load.snmfProject(\"dat.snmfProject\")\n\nTo remove the project, use:\n remove.snmfProject(\"dat.snmfProject\")\n\n[1] 501538892\n[1] \"*************************************\"\n[1] \"*          create.dataset            *\"\n[1] \"*************************************\"\nsummary of the options:\n\n        -n (number of individuals)                 249\n        -L (number of loci)                        5000\n        -s (seed random init)                      501538892\n        -r (percentage of masked data)             0.05\n        -x (genotype file in .geno format)         C:\\repositories\\dartR_workshop\\kioloa\\dat.geno\n        -o (output file in .geno format)           C:/repositories/dartR_workshop/kioloa/dat.snmf/masked/dat_I.geno\n\n Write genotype file with masked data, C:/repositories/dartR_workshop/kioloa/dat.snmf/masked/dat_I.geno:        OK.\n\n[1] \"*************************************\"\n[1] \"* sNMF K = 6  repetition 4      *\"\n[1] \"*************************************\"\nsummary of the options:\n\n        -n (number of individuals)             249\n        -L (number of loci)                    5000\n        -K (number of ancestral pops)          6\n        -x (input file)                        C:/repositories/dartR_workshop/kioloa/dat.snmf/masked/dat_I.geno\n        -q (individual admixture file)         C:/repositories/dartR_workshop/kioloa/dat.snmf/K6/run4/dat_r4.6.Q\n        -g (ancestral frequencies file)        C:/repositories/dartR_workshop/kioloa/dat.snmf/K6/run4/dat_r4.6.G\n        -i (number max of iterations)          200\n        -a (regularization parameter)          10\n        -s (seed random init)                  501538892\n        -e (tolerance error)                   1E-05\n        -p (number of processes)               1\n        - diploid\n\nRead genotype file C:/repositories/dartR_workshop/kioloa/dat.snmf/masked/dat_I.geno:        OK.\n\n\nMain algorithm:\n    [                                                                           ]\n    [==================================]\nNumber of iterations: 92\n\nLeast-square error: 389969.387848\nWrite individual ancestry coefficient file C:/repositories/dartR_workshop/kioloa/dat.snmf/K6/run4/dat_r4.6.Q:       OK.\nWrite ancestral allele frequency coefficient file C:/repositories/dartR_workshop/kioloa/dat.snmf/K6/run4/dat_r4.6.G:    OK.\n\n[1] \"*************************************\"\n[1] \"*    cross-entropy estimation       *\"\n[1] \"*************************************\"\nsummary of the options:\n\n        -n (number of individuals)         249\n        -L (number of loci)                5000\n        -K (number of ancestral pops)      6\n        -x (genotype file)                 C:\\repositories\\dartR_workshop\\kioloa\\dat.geno\n        -q (individual admixture)          C:/repositories/dartR_workshop/kioloa/dat.snmf/K6/run4/dat_r4.6.Q\n        -g (ancestral frequencies)         C:/repositories/dartR_workshop/kioloa/dat.snmf/K6/run4/dat_r4.6.G\n        -i (with masked genotypes)         C:/repositories/dartR_workshop/kioloa/dat.snmf/masked/dat_I.geno\n        - diploid\n\nCross-Entropy (all data):    0.514871\nCross-Entropy (masked data):     0.554227\nThe project is saved into :\n dat.snmfProject \n\nTo load the project, use:\n project = load.snmfProject(\"dat.snmfProject\")\n\nTo remove the project, use:\n remove.snmfProject(\"dat.snmfProject\")\n\n[1] 1497835296\n[1] \"*************************************\"\n[1] \"*          create.dataset            *\"\n[1] \"*************************************\"\nsummary of the options:\n\n        -n (number of individuals)                 249\n        -L (number of loci)                        5000\n        -s (seed random init)                      1497835296\n        -r (percentage of masked data)             0.05\n        -x (genotype file in .geno format)         C:\\repositories\\dartR_workshop\\kioloa\\dat.geno\n        -o (output file in .geno format)           C:/repositories/dartR_workshop/kioloa/dat.snmf/masked/dat_I.geno\n\n Write genotype file with masked data, C:/repositories/dartR_workshop/kioloa/dat.snmf/masked/dat_I.geno:        OK.\n\n[1] \"*************************************\"\n[1] \"* sNMF K = 6  repetition 5      *\"\n[1] \"*************************************\"\nsummary of the options:\n\n        -n (number of individuals)             249\n        -L (number of loci)                    5000\n        -K (number of ancestral pops)          6\n        -x (input file)                        C:/repositories/dartR_workshop/kioloa/dat.snmf/masked/dat_I.geno\n        -q (individual admixture file)         C:/repositories/dartR_workshop/kioloa/dat.snmf/K6/run5/dat_r5.6.Q\n        -g (ancestral frequencies file)        C:/repositories/dartR_workshop/kioloa/dat.snmf/K6/run5/dat_r5.6.G\n        -i (number max of iterations)          200\n        -a (regularization parameter)          10\n        -s (seed random init)                  1497835296\n        -e (tolerance error)                   1E-05\n        -p (number of processes)               1\n        - diploid\n\nRead genotype file C:/repositories/dartR_workshop/kioloa/dat.snmf/masked/dat_I.geno:        OK.\n\n\nMain algorithm:\n    [                                                                           ]\n    [=======================================]\nNumber of iterations: 105\n\nLeast-square error: 390133.766506\nWrite individual ancestry coefficient file C:/repositories/dartR_workshop/kioloa/dat.snmf/K6/run5/dat_r5.6.Q:       OK.\nWrite ancestral allele frequency coefficient file C:/repositories/dartR_workshop/kioloa/dat.snmf/K6/run5/dat_r5.6.G:    OK.\n\n[1] \"*************************************\"\n[1] \"*    cross-entropy estimation       *\"\n[1] \"*************************************\"\nsummary of the options:\n\n        -n (number of individuals)         249\n        -L (number of loci)                5000\n        -K (number of ancestral pops)      6\n        -x (genotype file)                 C:\\repositories\\dartR_workshop\\kioloa\\dat.geno\n        -q (individual admixture)          C:/repositories/dartR_workshop/kioloa/dat.snmf/K6/run5/dat_r5.6.Q\n        -g (ancestral frequencies)         C:/repositories/dartR_workshop/kioloa/dat.snmf/K6/run5/dat_r5.6.G\n        -i (with masked genotypes)         C:/repositories/dartR_workshop/kioloa/dat.snmf/masked/dat_I.geno\n        - diploid\n\nCross-Entropy (all data):    0.515216\nCross-Entropy (masked data):     0.547343\nThe project is saved into :\n dat.snmfProject \n\nTo load the project, use:\n project = load.snmfProject(\"dat.snmfProject\")\n\nTo remove the project, use:\n remove.snmfProject(\"dat.snmfProject\")\n\n[1] 2046585485\n[1] \"*************************************\"\n[1] \"*          create.dataset            *\"\n[1] \"*************************************\"\nsummary of the options:\n\n        -n (number of individuals)                 249\n        -L (number of loci)                        5000\n        -s (seed random init)                      2046585485\n        -r (percentage of masked data)             0.05\n        -x (genotype file in .geno format)         C:\\repositories\\dartR_workshop\\kioloa\\dat.geno\n        -o (output file in .geno format)           C:/repositories/dartR_workshop/kioloa/dat.snmf/masked/dat_I.geno\n\n Write genotype file with masked data, C:/repositories/dartR_workshop/kioloa/dat.snmf/masked/dat_I.geno:        OK.\n\n[1] \"*************************************\"\n[1] \"* sNMF K = 6  repetition 6      *\"\n[1] \"*************************************\"\nsummary of the options:\n\n        -n (number of individuals)             249\n        -L (number of loci)                    5000\n        -K (number of ancestral pops)          6\n        -x (input file)                        C:/repositories/dartR_workshop/kioloa/dat.snmf/masked/dat_I.geno\n        -q (individual admixture file)         C:/repositories/dartR_workshop/kioloa/dat.snmf/K6/run6/dat_r6.6.Q\n        -g (ancestral frequencies file)        C:/repositories/dartR_workshop/kioloa/dat.snmf/K6/run6/dat_r6.6.G\n        -i (number max of iterations)          200\n        -a (regularization parameter)          10\n        -s (seed random init)                  2046585485\n        -e (tolerance error)                   1E-05\n        -p (number of processes)               1\n        - diploid\n\nRead genotype file C:/repositories/dartR_workshop/kioloa/dat.snmf/masked/dat_I.geno:        OK.\n\n\nMain algorithm:\n    [                                                                           ]\n    [==================================================]\nNumber of iterations: 133\n\nLeast-square error: 388974.296211\nWrite individual ancestry coefficient file C:/repositories/dartR_workshop/kioloa/dat.snmf/K6/run6/dat_r6.6.Q:       OK.\nWrite ancestral allele frequency coefficient file C:/repositories/dartR_workshop/kioloa/dat.snmf/K6/run6/dat_r6.6.G:    OK.\n\n[1] \"*************************************\"\n[1] \"*    cross-entropy estimation       *\"\n[1] \"*************************************\"\nsummary of the options:\n\n        -n (number of individuals)         249\n        -L (number of loci)                5000\n        -K (number of ancestral pops)      6\n        -x (genotype file)                 C:\\repositories\\dartR_workshop\\kioloa\\dat.geno\n        -q (individual admixture)          C:/repositories/dartR_workshop/kioloa/dat.snmf/K6/run6/dat_r6.6.Q\n        -g (ancestral frequencies)         C:/repositories/dartR_workshop/kioloa/dat.snmf/K6/run6/dat_r6.6.G\n        -i (with masked genotypes)         C:/repositories/dartR_workshop/kioloa/dat.snmf/masked/dat_I.geno\n        - diploid\n\nCross-Entropy (all data):    0.515075\nCross-Entropy (masked data):     0.55581\nThe project is saved into :\n dat.snmfProject \n\nTo load the project, use:\n project = load.snmfProject(\"dat.snmfProject\")\n\nTo remove the project, use:\n remove.snmfProject(\"dat.snmfProject\")\n\n[1] 1629520877\n[1] \"*************************************\"\n[1] \"*          create.dataset            *\"\n[1] \"*************************************\"\nsummary of the options:\n\n        -n (number of individuals)                 249\n        -L (number of loci)                        5000\n        -s (seed random init)                      1629520877\n        -r (percentage of masked data)             0.05\n        -x (genotype file in .geno format)         C:\\repositories\\dartR_workshop\\kioloa\\dat.geno\n        -o (output file in .geno format)           C:/repositories/dartR_workshop/kioloa/dat.snmf/masked/dat_I.geno\n\n Write genotype file with masked data, C:/repositories/dartR_workshop/kioloa/dat.snmf/masked/dat_I.geno:        OK.\n\n[1] \"*************************************\"\n[1] \"* sNMF K = 6  repetition 7      *\"\n[1] \"*************************************\"\nsummary of the options:\n\n        -n (number of individuals)             249\n        -L (number of loci)                    5000\n        -K (number of ancestral pops)          6\n        -x (input file)                        C:/repositories/dartR_workshop/kioloa/dat.snmf/masked/dat_I.geno\n        -q (individual admixture file)         C:/repositories/dartR_workshop/kioloa/dat.snmf/K6/run7/dat_r7.6.Q\n        -g (ancestral frequencies file)        C:/repositories/dartR_workshop/kioloa/dat.snmf/K6/run7/dat_r7.6.G\n        -i (number max of iterations)          200\n        -a (regularization parameter)          10\n        -s (seed random init)                  1629520877\n        -e (tolerance error)                   1E-05\n        -p (number of processes)               1\n        - diploid\n\nRead genotype file C:/repositories/dartR_workshop/kioloa/dat.snmf/masked/dat_I.geno:        OK.\n\n\nMain algorithm:\n    [                                                                           ]\n    [=========]\nNumber of iterations: 23\n\nLeast-square error: 390786.553313\nWrite individual ancestry coefficient file C:/repositories/dartR_workshop/kioloa/dat.snmf/K6/run7/dat_r7.6.Q:       OK.\nWrite ancestral allele frequency coefficient file C:/repositories/dartR_workshop/kioloa/dat.snmf/K6/run7/dat_r7.6.G:    OK.\n\n[1] \"*************************************\"\n[1] \"*    cross-entropy estimation       *\"\n[1] \"*************************************\"\nsummary of the options:\n\n        -n (number of individuals)         249\n        -L (number of loci)                5000\n        -K (number of ancestral pops)      6\n        -x (genotype file)                 C:\\repositories\\dartR_workshop\\kioloa\\dat.geno\n        -q (individual admixture)          C:/repositories/dartR_workshop/kioloa/dat.snmf/K6/run7/dat_r7.6.Q\n        -g (ancestral frequencies)         C:/repositories/dartR_workshop/kioloa/dat.snmf/K6/run7/dat_r7.6.G\n        -i (with masked genotypes)         C:/repositories/dartR_workshop/kioloa/dat.snmf/masked/dat_I.geno\n        - diploid\n\nCross-Entropy (all data):    0.518724\nCross-Entropy (masked data):     0.559747\nThe project is saved into :\n dat.snmfProject \n\nTo load the project, use:\n project = load.snmfProject(\"dat.snmfProject\")\n\nTo remove the project, use:\n remove.snmfProject(\"dat.snmfProject\")\n\n[1] 1792160697\n[1] \"*************************************\"\n[1] \"*          create.dataset            *\"\n[1] \"*************************************\"\nsummary of the options:\n\n        -n (number of individuals)                 249\n        -L (number of loci)                        5000\n        -s (seed random init)                      1792160697\n        -r (percentage of masked data)             0.05\n        -x (genotype file in .geno format)         C:\\repositories\\dartR_workshop\\kioloa\\dat.geno\n        -o (output file in .geno format)           C:/repositories/dartR_workshop/kioloa/dat.snmf/masked/dat_I.geno\n\n Write genotype file with masked data, C:/repositories/dartR_workshop/kioloa/dat.snmf/masked/dat_I.geno:        OK.\n\n[1] \"*************************************\"\n[1] \"* sNMF K = 6  repetition 8      *\"\n[1] \"*************************************\"\nsummary of the options:\n\n        -n (number of individuals)             249\n        -L (number of loci)                    5000\n        -K (number of ancestral pops)          6\n        -x (input file)                        C:/repositories/dartR_workshop/kioloa/dat.snmf/masked/dat_I.geno\n        -q (individual admixture file)         C:/repositories/dartR_workshop/kioloa/dat.snmf/K6/run8/dat_r8.6.Q\n        -g (ancestral frequencies file)        C:/repositories/dartR_workshop/kioloa/dat.snmf/K6/run8/dat_r8.6.G\n        -i (number max of iterations)          200\n        -a (regularization parameter)          10\n        -s (seed random init)                  1792160697\n        -e (tolerance error)                   1E-05\n        -p (number of processes)               1\n        - diploid\n\nRead genotype file C:/repositories/dartR_workshop/kioloa/dat.snmf/masked/dat_I.geno:        OK.\n\n\nMain algorithm:\n    [                                                                           ]\n    [=====================================================]\nNumber of iterations: 141\n\nLeast-square error: 389482.108053\nWrite individual ancestry coefficient file C:/repositories/dartR_workshop/kioloa/dat.snmf/K6/run8/dat_r8.6.Q:       OK.\nWrite ancestral allele frequency coefficient file C:/repositories/dartR_workshop/kioloa/dat.snmf/K6/run8/dat_r8.6.G:    OK.\n\n[1] \"*************************************\"\n[1] \"*    cross-entropy estimation       *\"\n[1] \"*************************************\"\nsummary of the options:\n\n        -n (number of individuals)         249\n        -L (number of loci)                5000\n        -K (number of ancestral pops)      6\n        -x (genotype file)                 C:\\repositories\\dartR_workshop\\kioloa\\dat.geno\n        -q (individual admixture)          C:/repositories/dartR_workshop/kioloa/dat.snmf/K6/run8/dat_r8.6.Q\n        -g (ancestral frequencies)         C:/repositories/dartR_workshop/kioloa/dat.snmf/K6/run8/dat_r8.6.G\n        -i (with masked genotypes)         C:/repositories/dartR_workshop/kioloa/dat.snmf/masked/dat_I.geno\n        - diploid\n\nCross-Entropy (all data):    0.515373\nCross-Entropy (masked data):     0.552094\nThe project is saved into :\n dat.snmfProject \n\nTo load the project, use:\n project = load.snmfProject(\"dat.snmfProject\")\n\nTo remove the project, use:\n remove.snmfProject(\"dat.snmfProject\")\n\n[1] 1478357482\n[1] \"*************************************\"\n[1] \"*          create.dataset            *\"\n[1] \"*************************************\"\nsummary of the options:\n\n        -n (number of individuals)                 249\n        -L (number of loci)                        5000\n        -s (seed random init)                      1478357482\n        -r (percentage of masked data)             0.05\n        -x (genotype file in .geno format)         C:\\repositories\\dartR_workshop\\kioloa\\dat.geno\n        -o (output file in .geno format)           C:/repositories/dartR_workshop/kioloa/dat.snmf/masked/dat_I.geno\n\n Write genotype file with masked data, C:/repositories/dartR_workshop/kioloa/dat.snmf/masked/dat_I.geno:        OK.\n\n[1] \"*************************************\"\n[1] \"* sNMF K = 6  repetition 9      *\"\n[1] \"*************************************\"\nsummary of the options:\n\n        -n (number of individuals)             249\n        -L (number of loci)                    5000\n        -K (number of ancestral pops)          6\n        -x (input file)                        C:/repositories/dartR_workshop/kioloa/dat.snmf/masked/dat_I.geno\n        -q (individual admixture file)         C:/repositories/dartR_workshop/kioloa/dat.snmf/K6/run9/dat_r9.6.Q\n        -g (ancestral frequencies file)        C:/repositories/dartR_workshop/kioloa/dat.snmf/K6/run9/dat_r9.6.G\n        -i (number max of iterations)          200\n        -a (regularization parameter)          10\n        -s (seed random init)                  1478357482\n        -e (tolerance error)                   1E-05\n        -p (number of processes)               1\n        - diploid\n\nRead genotype file C:/repositories/dartR_workshop/kioloa/dat.snmf/masked/dat_I.geno:        OK.\n\n\nMain algorithm:\n    [                                                                           ]\n    [==================================================]\nNumber of iterations: 134\n\nLeast-square error: 389483.213088\nWrite individual ancestry coefficient file C:/repositories/dartR_workshop/kioloa/dat.snmf/K6/run9/dat_r9.6.Q:       OK.\nWrite ancestral allele frequency coefficient file C:/repositories/dartR_workshop/kioloa/dat.snmf/K6/run9/dat_r9.6.G:    OK.\n\n[1] \"*************************************\"\n[1] \"*    cross-entropy estimation       *\"\n[1] \"*************************************\"\nsummary of the options:\n\n        -n (number of individuals)         249\n        -L (number of loci)                5000\n        -K (number of ancestral pops)      6\n        -x (genotype file)                 C:\\repositories\\dartR_workshop\\kioloa\\dat.geno\n        -q (individual admixture)          C:/repositories/dartR_workshop/kioloa/dat.snmf/K6/run9/dat_r9.6.Q\n        -g (ancestral frequencies)         C:/repositories/dartR_workshop/kioloa/dat.snmf/K6/run9/dat_r9.6.G\n        -i (with masked genotypes)         C:/repositories/dartR_workshop/kioloa/dat.snmf/masked/dat_I.geno\n        - diploid\n\nCross-Entropy (all data):    0.51554\nCross-Entropy (masked data):     0.549863\nThe project is saved into :\n dat.snmfProject \n\nTo load the project, use:\n project = load.snmfProject(\"dat.snmfProject\")\n\nTo remove the project, use:\n remove.snmfProject(\"dat.snmfProject\")\n\n[1] 1849722938\n[1] \"*************************************\"\n[1] \"*          create.dataset            *\"\n[1] \"*************************************\"\nsummary of the options:\n\n        -n (number of individuals)                 249\n        -L (number of loci)                        5000\n        -s (seed random init)                      1849722938\n        -r (percentage of masked data)             0.05\n        -x (genotype file in .geno format)         C:\\repositories\\dartR_workshop\\kioloa\\dat.geno\n        -o (output file in .geno format)           C:/repositories/dartR_workshop/kioloa/dat.snmf/masked/dat_I.geno\n\n Write genotype file with masked data, C:/repositories/dartR_workshop/kioloa/dat.snmf/masked/dat_I.geno:        OK.\n\n[1] \"*************************************\"\n[1] \"* sNMF K = 6  repetition 10      *\"\n[1] \"*************************************\"\nsummary of the options:\n\n        -n (number of individuals)             249\n        -L (number of loci)                    5000\n        -K (number of ancestral pops)          6\n        -x (input file)                        C:/repositories/dartR_workshop/kioloa/dat.snmf/masked/dat_I.geno\n        -q (individual admixture file)         C:/repositories/dartR_workshop/kioloa/dat.snmf/K6/run10/dat_r10.6.Q\n        -g (ancestral frequencies file)        C:/repositories/dartR_workshop/kioloa/dat.snmf/K6/run10/dat_r10.6.G\n        -i (number max of iterations)          200\n        -a (regularization parameter)          10\n        -s (seed random init)                  1849722938\n        -e (tolerance error)                   1E-05\n        -p (number of processes)               1\n        - diploid\n\nRead genotype file C:/repositories/dartR_workshop/kioloa/dat.snmf/masked/dat_I.geno:        OK.\n\n\nMain algorithm:\n    [                                                                           ]\n    [=================================]\nNumber of iterations: 87\n\nLeast-square error: 389102.635227\nWrite individual ancestry coefficient file C:/repositories/dartR_workshop/kioloa/dat.snmf/K6/run10/dat_r10.6.Q:     OK.\nWrite ancestral allele frequency coefficient file C:/repositories/dartR_workshop/kioloa/dat.snmf/K6/run10/dat_r10.6.G:  OK.\n\n[1] \"*************************************\"\n[1] \"*    cross-entropy estimation       *\"\n[1] \"*************************************\"\nsummary of the options:\n\n        -n (number of individuals)         249\n        -L (number of loci)                5000\n        -K (number of ancestral pops)      6\n        -x (genotype file)                 C:\\repositories\\dartR_workshop\\kioloa\\dat.geno\n        -q (individual admixture)          C:/repositories/dartR_workshop/kioloa/dat.snmf/K6/run10/dat_r10.6.Q\n        -g (ancestral frequencies)         C:/repositories/dartR_workshop/kioloa/dat.snmf/K6/run10/dat_r10.6.G\n        -i (with masked genotypes)         C:/repositories/dartR_workshop/kioloa/dat.snmf/masked/dat_I.geno\n        - diploid\n\nCross-Entropy (all data):    0.515332\nCross-Entropy (masked data):     0.550284\nThe project is saved into :\n dat.snmfProject \n\nTo load the project, use:\n project = load.snmfProject(\"dat.snmfProject\")\n\nTo remove the project, use:\n remove.snmfProject(\"dat.snmfProject\")\n\nMissing genotype imputation for K = 6 \nMissing genotype imputation for run = 3 \nResults are written in the file:  dat.lfmm_imputed.lfmm \nTotal missing data was =  1.04 %\nTotal missing data now =  0 %\n\n# order major/minor alleles (generally no reason to do this... but might be useful for someone)\nimputed.sorted.gi &lt;- sort_alleles(imputed.gi)\n\n# check results\nimputed.gi@tab[1:10,1:6]\n\n       SNP_1.C SNP_1.G SNP_2.A SNP_2.T SNP_3.T SNP_3.A\nMBR_10       1       1       1       1       2       0\nMBR_11       1       1       1       1       2       0\nMBR_12       1       1       2       0       2       0\nMBR_14       0       2       2       0       2       0\nMBR_15       0       2       1       1       2       0\nMBR_16       0       2       2       0       2       0\nMBR_17       0       2       0       2       2       0\nMBR_18       0       2       1       1       2       0\nMBR_19       1       1       2       0       2       0\nMBR_1        0       2       1       1       2       0\n\nimputed.sorted.gi@tab[1:10,1:6]\n\n       SNP_1.G SNP_1.C SNP_2.A SNP_2.T SNP_3.T SNP_3.A\nMBR_10       1       1       1       1       2       0\nMBR_11       1       1       1       1       2       0\nMBR_12       1       1       2       0       2       0\nMBR_14       2       0       2       0       2       0\nMBR_15       2       0       1       1       2       0\nMBR_16       2       0       2       0       2       0\nMBR_17       2       0       0       2       2       0\nMBR_18       2       0       1       1       2       0\nMBR_19       1       1       2       0       2       0\nMBR_1        2       0       1       1       2       0\n\n\nFormat SNP data for ordination analysis in vegan. You want a matrix of allele counts per locus, per individual can use population allele frequencies instead\n\nIndividual based\n\n# for individual based analyses\n# get allele counts\nalleles &lt;- imputed.sorted.gi@tab\n\n# get genotypes (counts of reference allele) and clean up locus names\nsnps &lt;- alleles[,seq(1,ncol(alleles),2)]\ncolnames(snps) &lt;- locNames(imputed.sorted.gi)\nsnps[1:10,1:10]\n\n       SNP_1 SNP_2 SNP_3 SNP_4 SNP_5 SNP_6 SNP_7 SNP_8 SNP_9 SNP_10\nMBR_10     1     1     2     2     2     2     1     1     2      1\nMBR_11     1     1     2     2     2     2     2     2     2      0\nMBR_12     1     2     2     2     2     1     2     2     2      1\nMBR_14     2     2     2     2     2     2     1     1     2      2\nMBR_15     2     1     2     2     2     2     1     1     2      2\nMBR_16     2     2     2     2     2     2     2     2     2      2\nMBR_17     2     0     2     2     2     2     0     2     2      2\nMBR_18     2     1     2     2     2     1     1     2     2      0\nMBR_19     1     2     2     2     2     1     2     2     2      2\nMBR_1      2     1     2     2     1     2     2     2     2      2\n\n# Alternative: impute missing data with most common genotype across all data\n# alleles &lt;- Mf5000.genind@tab\n# snps &lt;- alleles[,seq(1,ncol(alleles),2)]\n# colnames(snps) &lt;- locNames(Mf5000.genind)\n# snps &lt;- apply(snps, 2, function(x) replace(x, is.na(x), as.numeric(names(which.max(table(x))))))\n# check total % missing data\n# (sum(is.na(snps)))/(dim(snps)[1]*dim(snps)[2])*100\n\n\n\nPopulation based\n\n# for population based analyses\n# get pop allele frequencies\ngp &lt;- genind2genpop(imputed.sorted.gi)\n\n\n Converting data from a genind to a genpop object... \n\n...done.\n\nAF &lt;- makefreq(gp)\n\n\n Finding allelic frequencies from a genpop object... \n\n...done.\n\n# drop one (redundant) allele per locus\nAF &lt;- AF[,seq(1,ncol(AF),2)]\ncolnames(AF) &lt;- locNames(gp)\nrownames(AF) &lt;- levels(imputed.sorted.gi@pop)\nAF[1:14,1:6]\n\n         SNP_1     SNP_2     SNP_3     SNP_4     SNP_5     SNP_6\nMBR 0.87500000 0.8250000 0.9750000 1.0000000 0.9750000 0.8250000\nMDC 0.70454545 0.7045455 0.8409091 0.9545455 0.8863636 0.8181818\nGGL 0.71666667 0.7833333 0.9000000 0.9166667 0.8500000 0.8000000\nWAK 0.93750000 1.0000000 1.0000000 1.0000000 1.0000000 0.3125000\nBEN 0.92857143 1.0000000 1.0000000 1.0000000 1.0000000 0.6071429\nBOG 0.75000000 0.8125000 0.7812500 1.0000000 0.7812500 0.9062500\nPEL 0.83333333 0.7222222 0.9444444 0.9444444 0.8888889 1.0000000\nGWY 0.75000000 0.9166667 1.0000000 1.0000000 1.0000000 0.8333333\nDUM 0.82142857 1.0000000 0.9285714 0.9285714 1.0000000 0.8571429\nMIB 0.92500000 0.7750000 0.9250000 0.8250000 0.9750000 0.8500000\nSTG 0.97500000 0.8750000 0.6500000 0.8000000 1.0000000 0.8000000\nOAK 0.02777778 0.6388889 0.6388889 0.6666667 0.3333333 1.0000000\nWAR 0.20000000 0.9000000 0.7000000 0.5750000 0.2750000 1.0000000\nKIL 0.25000000 0.7777778 0.5277778 0.7222222 0.3055556 1.0000000\n\n\n\n\nGet environmental data\n\n\n\n\n\n\nDecision time:\n\n\n\nWhat are the variables you want to use? Considerations: Prior/expert knowledge, hypotheses, species distribution models (SDMs), most important variables, data availability, think about surrogates/proxies if specific data not available, raw variables, PCA, other transformations?\nIn this case we are going to keep it simple and just use a few WorldClim variables Bio01 (annual mean temperature), Bio05 (temperature in hottest month), Bio15 (rainfall seasonality) and Bio19 (rainfall in coldest quarter)\n\n\n\n# set the data dir and extend the waiting time (sometimes the database can be slow to respond)\noptions(sdmpredictors_datadir=\"data/spatial_data\")\noptions(timeout = max(300, getOption(\"timeout\")))\n\n# Explore datasets in the package \nsdmpredictors::list_datasets()\n\n  dataset_code terrestrial marine                              url\n1    WorldClim        TRUE  FALSE        http://www.worldclim.org/\n2   Bio-ORACLE       FALSE   TRUE          https://bio-oracle.org/\n3      MARSPEC       FALSE   TRUE              http://marspec.org/\n4      ENVIREM        TRUE  FALSE       https://envirem.github.io/\n5   Freshwater        TRUE  FALSE https://www.earthenv.org/streams\ndescription\norldClim is a set of global climate layers (climate grids). Note that all data has been transformed back to real values, so there is no need to e.g. divide temperature layers by 10.\nio-ORACLE is a set of GIS rasters providing geophysical, biotic and environmental data for surface and benthic marine realms at a spatial resolution 5 arcmin (9.2 km) in the ESRI ascii and tif format.\n3 MARSPEC is a set of high resolution climatic and geophysical GIS data layers for the world ocean. Seven geophysical variables were derived from the SRTM30_PLUS high resolution bathymetry dataset.  These layers characterize the horizontal orientation (aspect), slope, and curvature of the seafloor and the distance from shore.  Ten \"bioclimatic\" variables were derived from NOAA's World Ocean Atlas and NASA's MODIS satellite imagery and characterize the inter-annual means, extremes, and variances in sea surface temperature and salinity. These variables will be useful to those interested in the spatial ecology of marine shallow-water and surface-associated pelagic organisms across the globe. Note that, in contrary to the original MARSPEC, all layers have unscaled values.\n4                                                                                                                                 The ENVIREM dataset is a set of 16 climatic and 2 topographic variables that can be used in modeling species' distributions. The strengths of this dataset include their close ties to ecological processes, and their availability at a global scale, at several spatial resolutions, and for several time periods. The underlying temperature and precipitation data that went into their construction comes from the WorldClim dataset (www.worldclim.org), and the solar radiation data comes from the Consortium for Spatial Information (www.cgiar-csi.org). The data are compatible with and expand the set of variables from WorldClim v1.4 (www.worldclim.org).\n5                                                      The dataset consists of near-global, spatially continuous, and freshwater-specific environmental variables in a standardized 1km grid. We delineated the sub-catchment for each grid cell along the HydroSHEDS river network and summarized the upstream environment (climate, topography, land cover, surface geology and soil) to each grid cell using various metrics (average, minimum, maximum, range, sum, inverse distance-weighted average and sum). All variables were subsequently averaged across single lakes and reservoirs of the Global lakes and Wetlands Database that are connected to the river network. Monthly climate variables were summarized into 19 long-term climatic variables following the \\xd2bioclim\\xd3 framework.\n                                                                                                                                                                                                                                  citation\n1                                   Hijmans, R.J., S.E. Cameron, J.L. Parra, P.G. Jones and A. Jarvis, 2005. Very high resolution interpolated climate surfaces for global land areas. International Journal of Climatology 25: 1965-1978.\n2 Tyberghein L., Verbruggen H., Pauly K., Troupin C., Mineur F. & De Clerck O. Bio-ORACLE: a global environmental dataset for marine species distribution modeling. Global Ecology and Biogeography. doi: 10.1111/j.1466-8238.2011.00656.x\n3                                                                                                      Sbrocco, EJ and Barber, PH (2013) MARSPEC: Ocean climate layers for marine spatial ecology. Ecology 94: 979. doi: 10.1890/12-1358.1\n4                       Title, P.O., Bemmels, J.B. 2017. ENVIREM: An expanded set of bioclimatic and topographic variables increases flexibility and improves performance of ecological niche modeling. Ecography doi: 10.1111/ecog.02880.\n5                                 Domisch, S., Amatulli, G., and Jetz, W. (2015) Near-global freshwater-specific environmental variables for biodiversity analyses in 1 km resolution. Scientific Data 2:150073 doi: 10.1038/sdata.2015.73\n\nsdmpredictors::list_layers(\"WorldClim\")\n\n   dataset_code layer_code                                name\n1     WorldClim     WC_alt                            Altitude\n2     WorldClim    WC_bio1             Annual mean temperature\n3     WorldClim    WC_bio2      Mean diurnal temperature range\n4     WorldClim    WC_bio3                       Isothermality\n5     WorldClim    WC_bio4             Temperature seasonality\n6     WorldClim    WC_bio5                 Maximum temperature\n7     WorldClim    WC_bio6                 Minimum temperature\n8     WorldClim    WC_bio7            Annual temperature range\n9     WorldClim    WC_bio8 Mean temperature of wettest quarter\n10    WorldClim    WC_bio9  Mean temperature of driest quarter\n11    WorldClim   WC_bio10 Mean temperature of warmest quarter\n12    WorldClim   WC_bio11 Mean temperature of coldest quarter\n13    WorldClim   WC_bio12                Annual precipitation\n14    WorldClim   WC_bio13      Precipitation of wettest month\n15    WorldClim   WC_bio14       Precipitation of driest month\n16    WorldClim   WC_bio15           Precipitation seasonality\n17    WorldClim   WC_bio16    Precipitation of wettest quarter\n18    WorldClim   WC_bio17     Precipitation of driest quarter\n19    WorldClim   WC_bio18    Precipitation of warmest quarter\n20    WorldClim   WC_bio19    Precipitation of coldest quarter\n21    WorldClim   WC_prec1             Precipitation (January)\n22    WorldClim   WC_prec2            Precipitation (February)\n23    WorldClim   WC_prec3               Precipitation (March)\n24    WorldClim   WC_prec4               Precipitation (April)\n25    WorldClim   WC_prec5                 Precipitation (May)\n26    WorldClim   WC_prec6                Precipitation (June)\n27    WorldClim   WC_prec7                Precipitation (July)\n28    WorldClim   WC_prec8              Precipitation (August)\n29    WorldClim   WC_prec9           Precipitation (September)\n30    WorldClim  WC_prec10             Precipitation (October)\n31    WorldClim  WC_prec11            Precipitation (November)\n32    WorldClim  WC_prec12            Precipitation (December)\n33    WorldClim   WC_tmax1       Maximum temperature (January)\n34    WorldClim   WC_tmax2      Maximum temperature (February)\n35    WorldClim   WC_tmax3         Maximum temperature (March)\n36    WorldClim   WC_tmax4         Maximum temperature (April)\n37    WorldClim   WC_tmax5           Maximum temperature (May)\n38    WorldClim   WC_tmax6          Maximum temperature (June)\n39    WorldClim   WC_tmax7          Maximum temperature (July)\n40    WorldClim   WC_tmax8        Maximum temperature (August)\n41    WorldClim   WC_tmax9     Maximum temperature (September)\n42    WorldClim  WC_tmax10       Maximum temperature (October)\n43    WorldClim  WC_tmax11      Maximum temperature (November)\n44    WorldClim  WC_tmax12      Maximum temperature (December)\n45    WorldClim  WC_tmean1          Mean temperature (January)\n46    WorldClim  WC_tmean2         Mean temperature (February)\n47    WorldClim  WC_tmean3            Mean temperature (March)\n48    WorldClim  WC_tmean4            Mean temperature (April)\n49    WorldClim  WC_tmean5              Mean temperature (May)\n50    WorldClim  WC_tmean6             Mean temperature (June)\n51    WorldClim  WC_tmean7             Mean temperature (July)\n52    WorldClim  WC_tmean8           Mean temperature (August)\n53    WorldClim  WC_tmean9        Mean temperature (September)\n54    WorldClim WC_tmean10          Mean temperature (October)\n55    WorldClim WC_tmean11         Mean temperature (November)\n56    WorldClim WC_tmean12         Mean temperature (December)\n57    WorldClim   WC_tmin1       Minimum temperature (January)\n58    WorldClim   WC_tmin2      Minimum temperature (February)\n59    WorldClim   WC_tmin3         Minimum temperature (March)\n60    WorldClim   WC_tmin4         Minimum temperature (April)\n61    WorldClim   WC_tmin5           Minimum temperature (May)\n62    WorldClim   WC_tmin6          Minimum temperature (June)\n63    WorldClim   WC_tmin7          Minimum temperature (July)\n64    WorldClim   WC_tmin8        Minimum temperature (August)\n65    WorldClim   WC_tmin9     Minimum temperature (September)\n66    WorldClim  WC_tmin10       Minimum temperature (October)\n67    WorldClim  WC_tmin11      Minimum temperature (November)\n68    WorldClim  WC_tmin12      Minimum temperature (December)\n                                                               description\n1                                                                 Altitude\n2                                                  Annual mean temperature\n3          Mean of the monthly (maximum temperature - minimum temperature)\n4  Mean diurnal temperature range (bio2) / Annual temperature range (bio7)\n5                        Standard deviation of the annual mean temperature\n6                                 Maximum temperature of the warmest month\n7                                 Minimum temperature of the coldest month\n8                  Maximum temperature (bio5) - minimum temperature (bio6)\n9                                      Mean temperature of wettest quarter\n10                                      Mean temperature of driest quarter\n11                                     Mean temperature of warmest quarter\n12                                     Mean temperature of coldest quarter\n13                                                    Annual precipitation\n14                                          Precipitation of wettest month\n15                                           Precipitation of driest month\n16                   Coefficient of variation of the monthly precipitation\n17                                        Precipitation of wettest quarter\n18                                         Precipitation of driest quarter\n19                                        Precipitation of warmest quarter\n20                                        Precipitation of coldest quarter\n21                                           Average January precipitation\n22                                          Average February precipitation\n23                                             Average March precipitation\n24                                             Average April precipitation\n25                                               Average May precipitation\n26                                              Average June precipitation\n27                                              Average July precipitation\n28                                            Average August precipitation\n29                                         Average September precipitation\n30                                           Average October precipitation\n31                                          Average November precipitation\n32                                                        Average December\n33                                             Maximum January temperature\n34                                            Maximum February temperature\n35                                               Maximum March temperature\n36                                               Maximum April temperature\n37                                                 Maximum May temperature\n38                                                Maximum June temperature\n39                                                Maximum July temperature\n40                                              Maximum August temperature\n41                                           Maximum September temperature\n42                                             Maximum October temperature\n43                                            Maximum November temperature\n44                                            Maximum December temperature\n45                                             Average January temperature\n46                                            Average February temperature\n47                                               Average March temperature\n48                                               Average April temperature\n49                                                 Average May temperature\n50                                                Average June temperature\n51                                                Average July temperature\n52                                              Average August temperature\n53                                           Average September temperature\n54                                             Average October temperature\n55                                            Average November temperature\n56                                            Average December temperature\n57                                             Minimum January temperature\n58                                            Minimum February temperature\n59                                               Minimum March temperature\n60                                               Minimum April temperature\n61                                                 Minimum May temperature\n62                                                Minimum June temperature\n63                                                Minimum July temperature\n64                                              Minimum August temperature\n65                                           Minimum September temperature\n66                                             Minimum October temperature\n67                                            Minimum November temperature\n68                                            Minimum December temperature\n   terrestrial marine freshwater cellsize_equalarea cellsize_lonlat   units\n1         TRUE  FALSE      FALSE               7000      0.08333333  meters\n2         TRUE  FALSE      FALSE               7000      0.08333333 Celsius\n3         TRUE  FALSE      FALSE               7000      0.08333333 Celsius\n4         TRUE  FALSE      FALSE               7000      0.08333333 Celsius\n5         TRUE  FALSE      FALSE               7000      0.08333333 Celsius\n6         TRUE  FALSE      FALSE               7000      0.08333333 Celsius\n7         TRUE  FALSE      FALSE               7000      0.08333333 Celsius\n8         TRUE  FALSE      FALSE               7000      0.08333333 Celsius\n9         TRUE  FALSE      FALSE               7000      0.08333333 Celsius\n10        TRUE  FALSE      FALSE               7000      0.08333333 Celsius\n11        TRUE  FALSE      FALSE               7000      0.08333333 Celsius\n12        TRUE  FALSE      FALSE               7000      0.08333333 Celsius\n13        TRUE  FALSE      FALSE               7000      0.08333333      mm\n14        TRUE  FALSE      FALSE               7000      0.08333333      mm\n15        TRUE  FALSE      FALSE               7000      0.08333333      mm\n16        TRUE  FALSE      FALSE               7000      0.08333333      mm\n17        TRUE  FALSE      FALSE               7000      0.08333333      mm\n18        TRUE  FALSE      FALSE               7000      0.08333333      mm\n19        TRUE  FALSE      FALSE               7000      0.08333333      mm\n20        TRUE  FALSE      FALSE               7000      0.08333333      mm\n21        TRUE  FALSE      FALSE               7000      0.08333333      mm\n22        TRUE  FALSE      FALSE               7000      0.08333333      mm\n23        TRUE  FALSE      FALSE               7000      0.08333333      mm\n24        TRUE  FALSE      FALSE               7000      0.08333333      mm\n25        TRUE  FALSE      FALSE               7000      0.08333333      mm\n26        TRUE  FALSE      FALSE               7000      0.08333333      mm\n27        TRUE  FALSE      FALSE               7000      0.08333333      mm\n28        TRUE  FALSE      FALSE               7000      0.08333333      mm\n29        TRUE  FALSE      FALSE               7000      0.08333333      mm\n30        TRUE  FALSE      FALSE               7000      0.08333333      mm\n31        TRUE  FALSE      FALSE               7000      0.08333333      mm\n32        TRUE  FALSE      FALSE               7000      0.08333333      mm\n33        TRUE  FALSE      FALSE               7000      0.08333333 Celsius\n34        TRUE  FALSE      FALSE               7000      0.08333333 Celsius\n35        TRUE  FALSE      FALSE               7000      0.08333333 Celsius\n36        TRUE  FALSE      FALSE               7000      0.08333333 Celsius\n37        TRUE  FALSE      FALSE               7000      0.08333333 Celsius\n38        TRUE  FALSE      FALSE               7000      0.08333333 Celsius\n39        TRUE  FALSE      FALSE               7000      0.08333333 Celsius\n40        TRUE  FALSE      FALSE               7000      0.08333333 Celsius\n41        TRUE  FALSE      FALSE               7000      0.08333333 Celsius\n42        TRUE  FALSE      FALSE               7000      0.08333333 Celsius\n43        TRUE  FALSE      FALSE               7000      0.08333333 Celsius\n44        TRUE  FALSE      FALSE               7000      0.08333333 Celsius\n45        TRUE  FALSE      FALSE               7000      0.08333333 Celsius\n46        TRUE  FALSE      FALSE               7000      0.08333333 Celsius\n47        TRUE  FALSE      FALSE               7000      0.08333333 Celsius\n48        TRUE  FALSE      FALSE               7000      0.08333333 Celsius\n49        TRUE  FALSE      FALSE               7000      0.08333333 Celsius\n50        TRUE  FALSE      FALSE               7000      0.08333333 Celsius\n51        TRUE  FALSE      FALSE               7000      0.08333333 Celsius\n52        TRUE  FALSE      FALSE               7000      0.08333333 Celsius\n53        TRUE  FALSE      FALSE               7000      0.08333333 Celsius\n54        TRUE  FALSE      FALSE               7000      0.08333333 Celsius\n55        TRUE  FALSE      FALSE               7000      0.08333333 Celsius\n56        TRUE  FALSE      FALSE               7000      0.08333333 Celsius\n57        TRUE  FALSE      FALSE               7000      0.08333333 Celsius\n58        TRUE  FALSE      FALSE               7000      0.08333333 Celsius\n59        TRUE  FALSE      FALSE               7000      0.08333333 Celsius\n60        TRUE  FALSE      FALSE               7000      0.08333333 Celsius\n61        TRUE  FALSE      FALSE               7000      0.08333333 Celsius\n62        TRUE  FALSE      FALSE               7000      0.08333333 Celsius\n63        TRUE  FALSE      FALSE               7000      0.08333333 Celsius\n64        TRUE  FALSE      FALSE               7000      0.08333333 Celsius\n65        TRUE  FALSE      FALSE               7000      0.08333333 Celsius\n66        TRUE  FALSE      FALSE               7000      0.08333333 Celsius\n67        TRUE  FALSE      FALSE               7000      0.08333333 Celsius\n68        TRUE  FALSE      FALSE               7000      0.08333333 Celsius\n                primary_type primary_spatial_resolution\n1  Satellite (SRTM), GTOPO30   3 arcsecond, 30 arsecond\n2        in situ measurement                         ''\n3        in situ measurement                         ''\n4        in situ measurement                         ''\n5        in situ measurement                         ''\n6        in situ measurement                         ''\n7        in situ measurement                         ''\n8        in situ measurement                         ''\n9        in situ measurement                         ''\n10       in situ measurement                         ''\n11       in situ measurement                         ''\n12       in situ measurement                         ''\n13       in situ measurement                         ''\n14       in situ measurement                         ''\n15       in situ measurement                         ''\n16       in situ measurement                         ''\n17       in situ measurement                         ''\n18       in situ measurement                         ''\n19       in situ measurement                         ''\n20       in situ measurement                         ''\n21       in situ measurement                         ''\n22       in situ measurement                         ''\n23       in situ measurement                         ''\n24       in situ measurement                         ''\n25       in situ measurement                         ''\n26       in situ measurement                         ''\n27       in situ measurement                         ''\n28       in situ measurement                         ''\n29       in situ measurement                         ''\n30       in situ measurement                         ''\n31       in situ measurement                         ''\n32       in situ measurement                         ''\n33       in situ measurement                         ''\n34       in situ measurement                         ''\n35       in situ measurement                         ''\n36       in situ measurement                         ''\n37       in situ measurement                         ''\n38       in situ measurement                         ''\n39       in situ measurement                         ''\n40       in situ measurement                         ''\n41       in situ measurement                         ''\n42       in situ measurement                         ''\n43       in situ measurement                         ''\n44       in situ measurement                         ''\n45       in situ measurement                         ''\n46       in situ measurement                         ''\n47       in situ measurement                         ''\n48       in situ measurement                         ''\n49       in situ measurement                         ''\n50       in situ measurement                         ''\n51       in situ measurement                         ''\n52       in situ measurement                         ''\n53       in situ measurement                         ''\n54       in situ measurement                         ''\n55       in situ measurement                         ''\n56       in situ measurement                         ''\n57       in situ measurement                         ''\n58       in situ measurement                         ''\n59       in situ measurement                         ''\n60       in situ measurement                         ''\n61       in situ measurement                         ''\n62       in situ measurement                         ''\n63       in situ measurement                         ''\n64       in situ measurement                         ''\n65       in situ measurement                         ''\n66       in situ measurement                         ''\n67       in situ measurement                         ''\n68       in situ measurement                         ''\n                                                                                                                                                                                                                                           primary_source\n1   SRTM: CGIAR-CSI, reference: Jarvis, A., H.I. Reuter, A. Nelson, E. Guevara, 2008, Hole-filled SRTM for the globe Version 4, available from the CGIAR-CSI SRTM 90m Database (http://srtm.csi.cgiar.org). GTOPO30: url: https://lta.cr.usgs.gov/GTOPO30\n2  Weather station data from multiple sources, see Hijmans, R.J., S.E. Cameron, J.L. Parra, P.G. Jones and A. Jarvis, 2005. Very high resolution interpolated climate surfaces for global land areas. International Journal of Climatology 25: 1965-1978.\n3  Weather station data from multiple sources, see Hijmans, R.J., S.E. Cameron, J.L. Parra, P.G. Jones and A. Jarvis, 2005. Very high resolution interpolated climate surfaces for global land areas. International Journal of Climatology 25: 1965-1978.\n4  Weather station data from multiple sources, see Hijmans, R.J., S.E. Cameron, J.L. Parra, P.G. Jones and A. Jarvis, 2005. Very high resolution interpolated climate surfaces for global land areas. International Journal of Climatology 25: 1965-1978.\n5  Weather station data from multiple sources, see Hijmans, R.J., S.E. Cameron, J.L. Parra, P.G. Jones and A. Jarvis, 2005. Very high resolution interpolated climate surfaces for global land areas. International Journal of Climatology 25: 1965-1978.\n6  Weather station data from multiple sources, see Hijmans, R.J., S.E. Cameron, J.L. Parra, P.G. Jones and A. Jarvis, 2005. Very high resolution interpolated climate surfaces for global land areas. International Journal of Climatology 25: 1965-1978.\n7  Weather station data from multiple sources, see Hijmans, R.J., S.E. Cameron, J.L. Parra, P.G. Jones and A. Jarvis, 2005. Very high resolution interpolated climate surfaces for global land areas. International Journal of Climatology 25: 1965-1978.\n8  Weather station data from multiple sources, see Hijmans, R.J., S.E. Cameron, J.L. Parra, P.G. Jones and A. Jarvis, 2005. Very high resolution interpolated climate surfaces for global land areas. International Journal of Climatology 25: 1965-1978.\n9  Weather station data from multiple sources, see Hijmans, R.J., S.E. Cameron, J.L. Parra, P.G. Jones and A. Jarvis, 2005. Very high resolution interpolated climate surfaces for global land areas. International Journal of Climatology 25: 1965-1978.\n10 Weather station data from multiple sources, see Hijmans, R.J., S.E. Cameron, J.L. Parra, P.G. Jones and A. Jarvis, 2005. Very high resolution interpolated climate surfaces for global land areas. International Journal of Climatology 25: 1965-1978.\n11 Weather station data from multiple sources, see Hijmans, R.J., S.E. Cameron, J.L. Parra, P.G. Jones and A. Jarvis, 2005. Very high resolution interpolated climate surfaces for global land areas. International Journal of Climatology 25: 1965-1978.\n12 Weather station data from multiple sources, see Hijmans, R.J., S.E. Cameron, J.L. Parra, P.G. Jones and A. Jarvis, 2005. Very high resolution interpolated climate surfaces for global land areas. International Journal of Climatology 25: 1965-1978.\n13 Weather station data from multiple sources, see Hijmans, R.J., S.E. Cameron, J.L. Parra, P.G. Jones and A. Jarvis, 2005. Very high resolution interpolated climate surfaces for global land areas. International Journal of Climatology 25: 1965-1978.\n14 Weather station data from multiple sources, see Hijmans, R.J., S.E. Cameron, J.L. Parra, P.G. Jones and A. Jarvis, 2005. Very high resolution interpolated climate surfaces for global land areas. International Journal of Climatology 25: 1965-1978.\n15 Weather station data from multiple sources, see Hijmans, R.J., S.E. Cameron, J.L. Parra, P.G. Jones and A. Jarvis, 2005. Very high resolution interpolated climate surfaces for global land areas. International Journal of Climatology 25: 1965-1978.\n16 Weather station data from multiple sources, see Hijmans, R.J., S.E. Cameron, J.L. Parra, P.G. Jones and A. Jarvis, 2005. Very high resolution interpolated climate surfaces for global land areas. International Journal of Climatology 25: 1965-1978.\n17 Weather station data from multiple sources, see Hijmans, R.J., S.E. Cameron, J.L. Parra, P.G. Jones and A. Jarvis, 2005. Very high resolution interpolated climate surfaces for global land areas. International Journal of Climatology 25: 1965-1978.\n18 Weather station data from multiple sources, see Hijmans, R.J., S.E. Cameron, J.L. Parra, P.G. Jones and A. Jarvis, 2005. Very high resolution interpolated climate surfaces for global land areas. International Journal of Climatology 25: 1965-1978.\n19 Weather station data from multiple sources, see Hijmans, R.J., S.E. Cameron, J.L. Parra, P.G. Jones and A. Jarvis, 2005. Very high resolution interpolated climate surfaces for global land areas. International Journal of Climatology 25: 1965-1978.\n20 Weather station data from multiple sources, see Hijmans, R.J., S.E. Cameron, J.L. Parra, P.G. Jones and A. Jarvis, 2005. Very high resolution interpolated climate surfaces for global land areas. International Journal of Climatology 25: 1965-1978.\n21 Weather station data from multiple sources, see Hijmans, R.J., S.E. Cameron, J.L. Parra, P.G. Jones and A. Jarvis, 2005. Very high resolution interpolated climate surfaces for global land areas. International Journal of Climatology 25: 1965-1978.\n22 Weather station data from multiple sources, see Hijmans, R.J., S.E. Cameron, J.L. Parra, P.G. Jones and A. Jarvis, 2005. Very high resolution interpolated climate surfaces for global land areas. International Journal of Climatology 25: 1965-1978.\n23 Weather station data from multiple sources, see Hijmans, R.J., S.E. Cameron, J.L. Parra, P.G. Jones and A. Jarvis, 2005. Very high resolution interpolated climate surfaces for global land areas. International Journal of Climatology 25: 1965-1978.\n24 Weather station data from multiple sources, see Hijmans, R.J., S.E. Cameron, J.L. Parra, P.G. Jones and A. Jarvis, 2005. Very high resolution interpolated climate surfaces for global land areas. International Journal of Climatology 25: 1965-1978.\n25 Weather station data from multiple sources, see Hijmans, R.J., S.E. Cameron, J.L. Parra, P.G. Jones and A. Jarvis, 2005. Very high resolution interpolated climate surfaces for global land areas. International Journal of Climatology 25: 1965-1978.\n26 Weather station data from multiple sources, see Hijmans, R.J., S.E. Cameron, J.L. Parra, P.G. Jones and A. Jarvis, 2005. Very high resolution interpolated climate surfaces for global land areas. International Journal of Climatology 25: 1965-1978.\n27 Weather station data from multiple sources, see Hijmans, R.J., S.E. Cameron, J.L. Parra, P.G. Jones and A. Jarvis, 2005. Very high resolution interpolated climate surfaces for global land areas. International Journal of Climatology 25: 1965-1978.\n28 Weather station data from multiple sources, see Hijmans, R.J., S.E. Cameron, J.L. Parra, P.G. Jones and A. Jarvis, 2005. Very high resolution interpolated climate surfaces for global land areas. International Journal of Climatology 25: 1965-1978.\n29 Weather station data from multiple sources, see Hijmans, R.J., S.E. Cameron, J.L. Parra, P.G. Jones and A. Jarvis, 2005. Very high resolution interpolated climate surfaces for global land areas. International Journal of Climatology 25: 1965-1978.\n30 Weather station data from multiple sources, see Hijmans, R.J., S.E. Cameron, J.L. Parra, P.G. Jones and A. Jarvis, 2005. Very high resolution interpolated climate surfaces for global land areas. International Journal of Climatology 25: 1965-1978.\n31 Weather station data from multiple sources, see Hijmans, R.J., S.E. Cameron, J.L. Parra, P.G. Jones and A. Jarvis, 2005. Very high resolution interpolated climate surfaces for global land areas. International Journal of Climatology 25: 1965-1978.\n32 Weather station data from multiple sources, see Hijmans, R.J., S.E. Cameron, J.L. Parra, P.G. Jones and A. Jarvis, 2005. Very high resolution interpolated climate surfaces for global land areas. International Journal of Climatology 25: 1965-1978.\n33 Weather station data from multiple sources, see Hijmans, R.J., S.E. Cameron, J.L. Parra, P.G. Jones and A. Jarvis, 2005. Very high resolution interpolated climate surfaces for global land areas. International Journal of Climatology 25: 1965-1978.\n34 Weather station data from multiple sources, see Hijmans, R.J., S.E. Cameron, J.L. Parra, P.G. Jones and A. Jarvis, 2005. Very high resolution interpolated climate surfaces for global land areas. International Journal of Climatology 25: 1965-1978.\n35 Weather station data from multiple sources, see Hijmans, R.J., S.E. Cameron, J.L. Parra, P.G. Jones and A. Jarvis, 2005. Very high resolution interpolated climate surfaces for global land areas. International Journal of Climatology 25: 1965-1978.\n36 Weather station data from multiple sources, see Hijmans, R.J., S.E. Cameron, J.L. Parra, P.G. Jones and A. Jarvis, 2005. Very high resolution interpolated climate surfaces for global land areas. International Journal of Climatology 25: 1965-1978.\n37 Weather station data from multiple sources, see Hijmans, R.J., S.E. Cameron, J.L. Parra, P.G. Jones and A. Jarvis, 2005. Very high resolution interpolated climate surfaces for global land areas. International Journal of Climatology 25: 1965-1978.\n38 Weather station data from multiple sources, see Hijmans, R.J., S.E. Cameron, J.L. Parra, P.G. Jones and A. Jarvis, 2005. Very high resolution interpolated climate surfaces for global land areas. International Journal of Climatology 25: 1965-1978.\n39 Weather station data from multiple sources, see Hijmans, R.J., S.E. Cameron, J.L. Parra, P.G. Jones and A. Jarvis, 2005. Very high resolution interpolated climate surfaces for global land areas. International Journal of Climatology 25: 1965-1978.\n40 Weather station data from multiple sources, see Hijmans, R.J., S.E. Cameron, J.L. Parra, P.G. Jones and A. Jarvis, 2005. Very high resolution interpolated climate surfaces for global land areas. International Journal of Climatology 25: 1965-1978.\n41 Weather station data from multiple sources, see Hijmans, R.J., S.E. Cameron, J.L. Parra, P.G. Jones and A. Jarvis, 2005. Very high resolution interpolated climate surfaces for global land areas. International Journal of Climatology 25: 1965-1978.\n42 Weather station data from multiple sources, see Hijmans, R.J., S.E. Cameron, J.L. Parra, P.G. Jones and A. Jarvis, 2005. Very high resolution interpolated climate surfaces for global land areas. International Journal of Climatology 25: 1965-1978.\n43 Weather station data from multiple sources, see Hijmans, R.J., S.E. Cameron, J.L. Parra, P.G. Jones and A. Jarvis, 2005. Very high resolution interpolated climate surfaces for global land areas. International Journal of Climatology 25: 1965-1978.\n44 Weather station data from multiple sources, see Hijmans, R.J., S.E. Cameron, J.L. Parra, P.G. Jones and A. Jarvis, 2005. Very high resolution interpolated climate surfaces for global land areas. International Journal of Climatology 25: 1965-1978.\n45 Weather station data from multiple sources, see Hijmans, R.J., S.E. Cameron, J.L. Parra, P.G. Jones and A. Jarvis, 2005. Very high resolution interpolated climate surfaces for global land areas. International Journal of Climatology 25: 1965-1978.\n46 Weather station data from multiple sources, see Hijmans, R.J., S.E. Cameron, J.L. Parra, P.G. Jones and A. Jarvis, 2005. Very high resolution interpolated climate surfaces for global land areas. International Journal of Climatology 25: 1965-1978.\n47 Weather station data from multiple sources, see Hijmans, R.J., S.E. Cameron, J.L. Parra, P.G. Jones and A. Jarvis, 2005. Very high resolution interpolated climate surfaces for global land areas. International Journal of Climatology 25: 1965-1978.\n48 Weather station data from multiple sources, see Hijmans, R.J., S.E. Cameron, J.L. Parra, P.G. Jones and A. Jarvis, 2005. Very high resolution interpolated climate surfaces for global land areas. International Journal of Climatology 25: 1965-1978.\n49 Weather station data from multiple sources, see Hijmans, R.J., S.E. Cameron, J.L. Parra, P.G. Jones and A. Jarvis, 2005. Very high resolution interpolated climate surfaces for global land areas. International Journal of Climatology 25: 1965-1978.\n50 Weather station data from multiple sources, see Hijmans, R.J., S.E. Cameron, J.L. Parra, P.G. Jones and A. Jarvis, 2005. Very high resolution interpolated climate surfaces for global land areas. International Journal of Climatology 25: 1965-1978.\n51 Weather station data from multiple sources, see Hijmans, R.J., S.E. Cameron, J.L. Parra, P.G. Jones and A. Jarvis, 2005. Very high resolution interpolated climate surfaces for global land areas. International Journal of Climatology 25: 1965-1978.\n52 Weather station data from multiple sources, see Hijmans, R.J., S.E. Cameron, J.L. Parra, P.G. Jones and A. Jarvis, 2005. Very high resolution interpolated climate surfaces for global land areas. International Journal of Climatology 25: 1965-1978.\n53 Weather station data from multiple sources, see Hijmans, R.J., S.E. Cameron, J.L. Parra, P.G. Jones and A. Jarvis, 2005. Very high resolution interpolated climate surfaces for global land areas. International Journal of Climatology 25: 1965-1978.\n54 Weather station data from multiple sources, see Hijmans, R.J., S.E. Cameron, J.L. Parra, P.G. Jones and A. Jarvis, 2005. Very high resolution interpolated climate surfaces for global land areas. International Journal of Climatology 25: 1965-1978.\n55 Weather station data from multiple sources, see Hijmans, R.J., S.E. Cameron, J.L. Parra, P.G. Jones and A. Jarvis, 2005. Very high resolution interpolated climate surfaces for global land areas. International Journal of Climatology 25: 1965-1978.\n56 Weather station data from multiple sources, see Hijmans, R.J., S.E. Cameron, J.L. Parra, P.G. Jones and A. Jarvis, 2005. Very high resolution interpolated climate surfaces for global land areas. International Journal of Climatology 25: 1965-1978.\n57 Weather station data from multiple sources, see Hijmans, R.J., S.E. Cameron, J.L. Parra, P.G. Jones and A. Jarvis, 2005. Very high resolution interpolated climate surfaces for global land areas. International Journal of Climatology 25: 1965-1978.\n58 Weather station data from multiple sources, see Hijmans, R.J., S.E. Cameron, J.L. Parra, P.G. Jones and A. Jarvis, 2005. Very high resolution interpolated climate surfaces for global land areas. International Journal of Climatology 25: 1965-1978.\n59 Weather station data from multiple sources, see Hijmans, R.J., S.E. Cameron, J.L. Parra, P.G. Jones and A. Jarvis, 2005. Very high resolution interpolated climate surfaces for global land areas. International Journal of Climatology 25: 1965-1978.\n60 Weather station data from multiple sources, see Hijmans, R.J., S.E. Cameron, J.L. Parra, P.G. Jones and A. Jarvis, 2005. Very high resolution interpolated climate surfaces for global land areas. International Journal of Climatology 25: 1965-1978.\n61 Weather station data from multiple sources, see Hijmans, R.J., S.E. Cameron, J.L. Parra, P.G. Jones and A. Jarvis, 2005. Very high resolution interpolated climate surfaces for global land areas. International Journal of Climatology 25: 1965-1978.\n62 Weather station data from multiple sources, see Hijmans, R.J., S.E. Cameron, J.L. Parra, P.G. Jones and A. Jarvis, 2005. Very high resolution interpolated climate surfaces for global land areas. International Journal of Climatology 25: 1965-1978.\n63 Weather station data from multiple sources, see Hijmans, R.J., S.E. Cameron, J.L. Parra, P.G. Jones and A. Jarvis, 2005. Very high resolution interpolated climate surfaces for global land areas. International Journal of Climatology 25: 1965-1978.\n64 Weather station data from multiple sources, see Hijmans, R.J., S.E. Cameron, J.L. Parra, P.G. Jones and A. Jarvis, 2005. Very high resolution interpolated climate surfaces for global land areas. International Journal of Climatology 25: 1965-1978.\n65 Weather station data from multiple sources, see Hijmans, R.J., S.E. Cameron, J.L. Parra, P.G. Jones and A. Jarvis, 2005. Very high resolution interpolated climate surfaces for global land areas. International Journal of Climatology 25: 1965-1978.\n66 Weather station data from multiple sources, see Hijmans, R.J., S.E. Cameron, J.L. Parra, P.G. Jones and A. Jarvis, 2005. Very high resolution interpolated climate surfaces for global land areas. International Journal of Climatology 25: 1965-1978.\n67 Weather station data from multiple sources, see Hijmans, R.J., S.E. Cameron, J.L. Parra, P.G. Jones and A. Jarvis, 2005. Very high resolution interpolated climate surfaces for global land areas. International Journal of Climatology 25: 1965-1978.\n68 Weather station data from multiple sources, see Hijmans, R.J., S.E. Cameron, J.L. Parra, P.G. Jones and A. Jarvis, 2005. Very high resolution interpolated climate surfaces for global land areas. International Journal of Climatology 25: 1965-1978.\n   start_year start_month start_day end_year end_month end_day\n1        1950           1         1     2000         1       1\n2        1950           1         1     2000         1       1\n3        1950           1         1     2000         1       1\n4        1950           1         1     2000         1       1\n5        1950           1         1     2000         1       1\n6        1950           1         1     2000         1       1\n7        1950           1         1     2000         1       1\n8        1950           1         1     2000         1       1\n9        1950           1         1     2000         1       1\n10       1950           1         1     2000         1       1\n11       1950           1         1     2000         1       1\n12       1950           1         1     2000         1       1\n13       1950           1         1     2000         1       1\n14       1950           1         1     2000         1       1\n15       1950           1         1     2000         1       1\n16       1950           1         1     2000         1       1\n17       1950           1         1     2000         1       1\n18       1950           1         1     2000         1       1\n19       1950           1         1     2000         1       1\n20       1950           1         1     2000         1       1\n21       1950           1         1     2000         1       1\n22       1950           1         1     2000         1       1\n23       1950           1         1     2000         1       1\n24       1950           1         1     2000         1       1\n25       1950           1         1     2000         1       1\n26       1950           1         1     2000         1       1\n27       1950           1         1     2000         1       1\n28       1950           1         1     2000         1       1\n29       1950           1         1     2000         1       1\n30       1950           1         1     2000         1       1\n31       1950           1         1     2000         1       1\n32       1950           1         1     2000         1       1\n33       1950           1         1     2000         1       1\n34       1950           1         1     2000         1       1\n35       1950           1         1     2000         1       1\n36       1950           1         1     2000         1       1\n37       1950           1         1     2000         1       1\n38       1950           1         1     2000         1       1\n39       1950           1         1     2000         1       1\n40       1950           1         1     2000         1       1\n41       1950           1         1     2000         1       1\n42       1950           1         1     2000         1       1\n43       1950           1         1     2000         1       1\n44       1950           1         1     2000         1       1\n45       1950           1         1     2000         1       1\n46       1950           1         1     2000         1       1\n47       1950           1         1     2000         1       1\n48       1950           1         1     2000         1       1\n49       1950           1         1     2000         1       1\n50       1950           1         1     2000         1       1\n51       1950           1         1     2000         1       1\n52       1950           1         1     2000         1       1\n53       1950           1         1     2000         1       1\n54       1950           1         1     2000         1       1\n55       1950           1         1     2000         1       1\n56       1950           1         1     2000         1       1\n57       1950           1         1     2000         1       1\n58       1950           1         1     2000         1       1\n59       1950           1         1     2000         1       1\n60       1950           1         1     2000         1       1\n61       1950           1         1     2000         1       1\n62       1950           1         1     2000         1       1\n63       1950           1         1     2000         1       1\n64       1950           1         1     2000         1       1\n65       1950           1         1     2000         1       1\n66       1950           1         1     2000         1       1\n67       1950           1         1     2000         1       1\n68       1950           1         1     2000         1       1\n                                         derivation month is_surface version\n1                                                ''    NA       TRUE      10\n2                mean, thin-plate smoothing splines    NA       TRUE      10\n3          mean range, thin-plate smoothing splines    NA       TRUE      10\n4                                                ''    NA       TRUE      10\n5  standard deviation, thin-plate smoothing splines    NA       TRUE      10\n6             maximum, thin-plate smoothing splines    NA       TRUE      10\n7             minimum, thin-plate smoothing splines    NA       TRUE      10\n8               range, thin-plate smoothing splines    NA       TRUE      10\n9                mean, thin-plate smoothing splines    NA       TRUE      10\n10               mean, thin-plate smoothing splines    NA       TRUE      10\n11               mean, thin-plate smoothing splines    NA       TRUE      10\n12               mean, thin-plate smoothing splines    NA       TRUE      10\n13                                               ''    NA       TRUE      10\n14            maximum, thin-plate smoothing splines    NA       TRUE      10\n15            minimum, thin-plate smoothing splines    NA       TRUE      10\n16                                               ''    NA       TRUE      10\n17            maximum, thin-plate smoothing splines    NA       TRUE      10\n18            minimum, thin-plate smoothing splines    NA       TRUE      10\n19                                               ''    NA       TRUE      10\n20                                               ''    NA       TRUE      10\n21                                               ''     1       TRUE      10\n22                                               ''     2       TRUE      10\n23                                               ''     3       TRUE      10\n24                                               ''     4       TRUE      10\n25                                               ''     5       TRUE      10\n26                                               ''     6       TRUE      10\n27                                               ''     7       TRUE      10\n28                                               ''     8       TRUE      10\n29                                               ''     9       TRUE      10\n30                                               ''    10       TRUE      10\n31                                               ''    11       TRUE      10\n32                                               ''    12       TRUE      10\n33            maximum, thin-plate smoothing splines     1       TRUE      10\n34            maximum, thin-plate smoothing splines     2       TRUE      10\n35            maximum, thin-plate smoothing splines     3       TRUE      10\n36            maximum, thin-plate smoothing splines     4       TRUE      10\n37            maximum, thin-plate smoothing splines     5       TRUE      10\n38            maximum, thin-plate smoothing splines     6       TRUE      10\n39            maximum, thin-plate smoothing splines     7       TRUE      10\n40            maximum, thin-plate smoothing splines     8       TRUE      10\n41            maximum, thin-plate smoothing splines     9       TRUE      10\n42            maximum, thin-plate smoothing splines    10       TRUE      10\n43            maximum, thin-plate smoothing splines    11       TRUE      10\n44            maximum, thin-plate smoothing splines    12       TRUE      10\n45               mean, thin-plate smoothing splines     1       TRUE      10\n46               mean, thin-plate smoothing splines     2       TRUE      10\n47               mean, thin-plate smoothing splines     3       TRUE      10\n48               mean, thin-plate smoothing splines     4       TRUE      10\n49               mean, thin-plate smoothing splines     5       TRUE      10\n50               mean, thin-plate smoothing splines     6       TRUE      10\n51               mean, thin-plate smoothing splines     7       TRUE      10\n52               mean, thin-plate smoothing splines     8       TRUE      10\n53               mean, thin-plate smoothing splines     9       TRUE      10\n54               mean, thin-plate smoothing splines    10       TRUE      10\n55               mean, thin-plate smoothing splines    11       TRUE      10\n56               mean, thin-plate smoothing splines    12       TRUE      10\n57            minimum, thin-plate smoothing splines     1       TRUE      10\n58            minimum, thin-plate smoothing splines     2       TRUE      10\n59            minimum, thin-plate smoothing splines     3       TRUE      10\n60            minimum, thin-plate smoothing splines     4       TRUE      10\n61            minimum, thin-plate smoothing splines     5       TRUE      10\n62            minimum, thin-plate smoothing splines     6       TRUE      10\n63            minimum, thin-plate smoothing splines     7       TRUE      10\n64            minimum, thin-plate smoothing splines     8       TRUE      10\n65            minimum, thin-plate smoothing splines     9       TRUE      10\n66            minimum, thin-plate smoothing splines    10       TRUE      10\n67            minimum, thin-plate smoothing splines    11       TRUE      10\n68            minimum, thin-plate smoothing splines    12       TRUE      10\n                                                      layer_url\n1      https://www.lifewatch.be/sdmpredictors/WC_alt_lonlat.tif\n2     https://www.lifewatch.be/sdmpredictors/WC_bio1_lonlat.tif\n3     https://www.lifewatch.be/sdmpredictors/WC_bio2_lonlat.tif\n4     https://www.lifewatch.be/sdmpredictors/WC_bio3_lonlat.tif\n5     https://www.lifewatch.be/sdmpredictors/WC_bio4_lonlat.tif\n6     https://www.lifewatch.be/sdmpredictors/WC_bio5_lonlat.tif\n7     https://www.lifewatch.be/sdmpredictors/WC_bio6_lonlat.tif\n8     https://www.lifewatch.be/sdmpredictors/WC_bio7_lonlat.tif\n9     https://www.lifewatch.be/sdmpredictors/WC_bio8_lonlat.tif\n10    https://www.lifewatch.be/sdmpredictors/WC_bio9_lonlat.tif\n11   https://www.lifewatch.be/sdmpredictors/WC_bio10_lonlat.tif\n12   https://www.lifewatch.be/sdmpredictors/WC_bio11_lonlat.tif\n13   https://www.lifewatch.be/sdmpredictors/WC_bio12_lonlat.tif\n14   https://www.lifewatch.be/sdmpredictors/WC_bio13_lonlat.tif\n15   https://www.lifewatch.be/sdmpredictors/WC_bio14_lonlat.tif\n16   https://www.lifewatch.be/sdmpredictors/WC_bio15_lonlat.tif\n17   https://www.lifewatch.be/sdmpredictors/WC_bio16_lonlat.tif\n18   https://www.lifewatch.be/sdmpredictors/WC_bio17_lonlat.tif\n19   https://www.lifewatch.be/sdmpredictors/WC_bio18_lonlat.tif\n20   https://www.lifewatch.be/sdmpredictors/WC_bio19_lonlat.tif\n21   https://www.lifewatch.be/sdmpredictors/WC_prec1_lonlat.tif\n22   https://www.lifewatch.be/sdmpredictors/WC_prec2_lonlat.tif\n23   https://www.lifewatch.be/sdmpredictors/WC_prec3_lonlat.tif\n24   https://www.lifewatch.be/sdmpredictors/WC_prec4_lonlat.tif\n25   https://www.lifewatch.be/sdmpredictors/WC_prec5_lonlat.tif\n26   https://www.lifewatch.be/sdmpredictors/WC_prec6_lonlat.tif\n27   https://www.lifewatch.be/sdmpredictors/WC_prec7_lonlat.tif\n28   https://www.lifewatch.be/sdmpredictors/WC_prec8_lonlat.tif\n29   https://www.lifewatch.be/sdmpredictors/WC_prec9_lonlat.tif\n30  https://www.lifewatch.be/sdmpredictors/WC_prec10_lonlat.tif\n31  https://www.lifewatch.be/sdmpredictors/WC_prec11_lonlat.tif\n32  https://www.lifewatch.be/sdmpredictors/WC_prec12_lonlat.tif\n33   https://www.lifewatch.be/sdmpredictors/WC_tmax1_lonlat.tif\n34   https://www.lifewatch.be/sdmpredictors/WC_tmax2_lonlat.tif\n35   https://www.lifewatch.be/sdmpredictors/WC_tmax3_lonlat.tif\n36   https://www.lifewatch.be/sdmpredictors/WC_tmax4_lonlat.tif\n37   https://www.lifewatch.be/sdmpredictors/WC_tmax5_lonlat.tif\n38   https://www.lifewatch.be/sdmpredictors/WC_tmax6_lonlat.tif\n39   https://www.lifewatch.be/sdmpredictors/WC_tmax7_lonlat.tif\n40   https://www.lifewatch.be/sdmpredictors/WC_tmax8_lonlat.tif\n41   https://www.lifewatch.be/sdmpredictors/WC_tmax9_lonlat.tif\n42  https://www.lifewatch.be/sdmpredictors/WC_tmax10_lonlat.tif\n43  https://www.lifewatch.be/sdmpredictors/WC_tmax11_lonlat.tif\n44  https://www.lifewatch.be/sdmpredictors/WC_tmax12_lonlat.tif\n45  https://www.lifewatch.be/sdmpredictors/WC_tmean1_lonlat.tif\n46  https://www.lifewatch.be/sdmpredictors/WC_tmean2_lonlat.tif\n47  https://www.lifewatch.be/sdmpredictors/WC_tmean3_lonlat.tif\n48  https://www.lifewatch.be/sdmpredictors/WC_tmean4_lonlat.tif\n49  https://www.lifewatch.be/sdmpredictors/WC_tmean5_lonlat.tif\n50  https://www.lifewatch.be/sdmpredictors/WC_tmean6_lonlat.tif\n51  https://www.lifewatch.be/sdmpredictors/WC_tmean7_lonlat.tif\n52  https://www.lifewatch.be/sdmpredictors/WC_tmean8_lonlat.tif\n53  https://www.lifewatch.be/sdmpredictors/WC_tmean9_lonlat.tif\n54 https://www.lifewatch.be/sdmpredictors/WC_tmean10_lonlat.tif\n55 https://www.lifewatch.be/sdmpredictors/WC_tmean11_lonlat.tif\n56 https://www.lifewatch.be/sdmpredictors/WC_tmean12_lonlat.tif\n57   https://www.lifewatch.be/sdmpredictors/WC_tmin1_lonlat.tif\n58   https://www.lifewatch.be/sdmpredictors/WC_tmin2_lonlat.tif\n59   https://www.lifewatch.be/sdmpredictors/WC_tmin3_lonlat.tif\n60   https://www.lifewatch.be/sdmpredictors/WC_tmin4_lonlat.tif\n61   https://www.lifewatch.be/sdmpredictors/WC_tmin5_lonlat.tif\n62   https://www.lifewatch.be/sdmpredictors/WC_tmin6_lonlat.tif\n63   https://www.lifewatch.be/sdmpredictors/WC_tmin7_lonlat.tif\n64   https://www.lifewatch.be/sdmpredictors/WC_tmin8_lonlat.tif\n65   https://www.lifewatch.be/sdmpredictors/WC_tmin9_lonlat.tif\n66  https://www.lifewatch.be/sdmpredictors/WC_tmin10_lonlat.tif\n67  https://www.lifewatch.be/sdmpredictors/WC_tmin11_lonlat.tif\n68  https://www.lifewatch.be/sdmpredictors/WC_tmin12_lonlat.tif\n\n# Explore environmental layers\nlayers &lt;- as.data.frame(sdmpredictors::list_layers(\"WorldClim\"))\nwrite.csv(layers, \"./data/WorldClim.csv\")\n\n# Download specific layers to the datadir\n# Bio01 (annual mean temperature), Bio05 (temperature in hottest month), Bio15 (rainfall seasonality) and Bio19 (rainfall in coldest quarter)\nWC &lt;- load_layers(c(\"WC_bio1\", \"WC_bio5\", \"WC_bio15\", \"WC_bio19\"))\nplot(WC)\n\n\n\n# Crop rasters to study area and align CRS\n# get Murray-Darling Basin polygon\nmdb &lt;- st_read(\"data/spatial_data/MDB_polygon/MDB.shp\")\n\nReading layer `MDB' from data source \n  `C:\\repositories\\dartR_workshop\\kioloa\\data\\spatial_data\\MDB_polygon\\MDB.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 1 feature and 18 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 138.57 ymin: -37.68 xmax: 152.49 ymax: -24.585\nGeodetic CRS:  GDA94\n\n# set CRS\nmdb &lt;- st_transform(mdb, 4326)\n\n# convert to sf format\nmdb &lt;- as(mdb, \"Spatial\")\n\n# crop WorldClim rasters to MDB extent, then mask pixels outside of the MDB\nENV &lt;- crop(WC, extent(mdb))\nENV &lt;- mask(ENV, mdb)\n\n\n# get sampling sites, format as sf\nsites &lt;- read.csv(\"data/Mf_xy.csv\", header = TRUE)\nsites_sf &lt;- st_as_sf(sites, coords = c(\"X\", \"Y\"), crs = 4326)\n\n\n# Generate a nice color ramp and plot the rasters \nmy.colors = colorRampPalette(c(\"#5E85B8\",\"#EDF0C0\",\"#C13127\"))\n\n# include other spatial data that you might want to show\nrivers &lt;- st_read(\"data/spatial_data/Mf_streams/Mf_streams.shp\")\n\nReading layer `Mf_streams' from data source \n  `C:\\repositories\\dartR_workshop\\kioloa\\data\\spatial_data\\Mf_streams\\Mf_streams.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 2826 features and 31 fields\nGeometry type: LINESTRING\nDimension:     XY\nBounding box:  xmin: 138.7888 ymin: -36.52625 xmax: 152.2712 ymax: -26.75375\nGeodetic CRS:  GDA94\n\nrivers &lt;- st_transform(rivers, 4326)\nrivers &lt;- as(rivers, \"Spatial\")\n\n# plot a layer\nplot(ENV$WC_bio1, col=my.colors(100), main=names(ENV$WC_bio1))\nlines(rivers, col=\"blue\", lwd=0.3)\ntext(st_coordinates(sites_sf)[,1], st_coordinates(sites_sf)[,2], labels=sites_sf$site, cex=0.5)\n\n\n\n\n\nSave PDF\n\n# format nicely and export as pdf\n{pdf(\"./images/env_rasters.pdf\")\nfor(i in 1:nlayers(ENV)) {\n  rasterLayer &lt;- ENV[[i]]\n  \n  # skew the colour ramp to improve visualisation (not necessary, but nice for data like this)\n  p95 &lt;- quantile(values(rasterLayer), probs = 0.05, na.rm = TRUE)\n  breaks &lt;- c(minValue(rasterLayer), seq(p95, maxValue(rasterLayer), length.out = 50))\n  breaks &lt;- unique(c(seq(minValue(rasterLayer), p95, length.out = 10), breaks))\n  color.palette &lt;- my.colors(length(breaks) - 1)\n  layerColors &lt;- if(i &lt; 4) color.palette else rev(color.palette)\n  \n  # tidy up the values displayed in the legend\n  simplifiedBreaks &lt;- c(min(breaks), quantile(breaks, probs = c(0.25, 0.5, 0.75)), max(breaks))\n  \n  # plot the rasters\n  plot(rasterLayer, breaks=breaks, col=layerColors, main=names(rasterLayer),\n       axis.args=list(at=simplifiedBreaks, labels=as.character(round(simplifiedBreaks))),\n       legend.args=list(text='', side=3, line=2, at=simplifiedBreaks))\n  lines(rivers, col=\"blue\", lwd=0.3, labels(rivers$Name))\n  text(st_coordinates(sites_sf)[,1], st_coordinates(sites_sf)[,2], labels=sites_sf$site, cex=0.5)\n}\ndev.off()}\n\n\n\n\nExtract site environmental data\n\n# and finally extract the environmental data for your sample sites\nenv.site &lt;- data.frame(site = sites_sf$site,\n                       X = st_coordinates(sites_sf)[,1],\n                       Y = st_coordinates(sites_sf)[,2],\n                       omegaX = sites_sf$omegaX,\n                       omegaY = sites_sf$omegaY)\n\nenv.dat &lt;- as.data.frame(raster::extract(ENV,st_coordinates(sites_sf)))\nenv.site &lt;- cbind(env.site, env.dat)\n\n\n\nNo missing data\n\n# we now have our SNP data with no missing genotypes\n# to get a feel for the data we can run quick PCA using the rda function\npc &lt;- rda(AF)\nplot(pc)\n\n\n\n# set some plotting variables to make it easier to interpret\n# set colours, markers and labels for plotting and add to env.site df\n\nenv.site$cols &lt;- c('darkturquoise', 'darkturquoise', 'darkturquoise', 'limegreen', 'limegreen', 'darkorange1', 'slategrey', 'slategrey', 'slategrey',\n                   'slategrey', 'slategrey', 'dodgerblue3', 'gold', 'gold')\n\nenv.site$pch &lt;- c(15, 16, 17, 17, 15, 15, 16, 15, 18, 16, 16, 8, 16, 16)\n\n# generate labels for each axis\nx.lab &lt;- paste0(\"PC1 (\", paste(round((pc$CA$eig[1]/pc$tot.chi*100),2)),\"%)\")\ny.lab &lt;- paste0(\"PC2 (\", paste(round((pc$CA$eig[2]/pc$tot.chi*100),2)),\"%)\")\n\n\n\nPlot PCA\n\n# plot PCA\n\n{pdf(file = \"./images/Mf_PCA.pdf\", height = 6, width = 6)\npcaplot &lt;- plot(pc, choices = c(1, 2), type = \"n\", xlab=x.lab, ylab=y.lab, cex.lab=1)\nwith(env.site, points(pc, display = \"sites\", col = env.site$cols, pch = env.site$pch, cex=1.5, bg = env.site$cols))\nlegend(\"topleft\", legend = env.site$site, col=env.site$cols, pch=env.site$pch, pt.cex=1, cex=0.50, xpd=1, box.lty = 0, bg= \"transparent\")\ndev.off()\n}\n\n ## 2. Variable filtering\n\n# extract predictor variables to matrix\nenv_var &lt;- env.site[ , c(\"WC_bio1\", \"WC_bio5\", \"WC_bio15\", \"WC_bio19\")]\n\n# check for obvious correlations between variables\npairs.panels(env_var, scale=T, lm = TRUE)\n\n\n\n## reduce variance associated with correlated environmental PCs using VIF analyses\n# run procedure to remove variables with the highest VIF one at a time until all remaining variables are below 10\nkeep.env &lt;-vif_func(in_frame=env_var,thresh=2,trace=T)\n\n var      vif             \n WC_bio1  21.5371434397055\n WC_bio5  10.4639698247348\n WC_bio15 7.69781293748316\n WC_bio19 3.97039440920372\n\nremoved:  WC_bio1 21.53714 \n\nkeep.env  # the retained environmental variables\n\n[1] \"WC_bio5\"  \"WC_bio15\" \"WC_bio19\"\n\nreduced.env &lt;- subset(as.data.frame(env_var), select=c(keep.env))\nscaled.env &lt;- as.data.frame(scale(reduced.env))\n\n# lets have another look\npairs.panels(reduced.env, scale=T, lm = TRUE)"
  },
  {
    "objectID": "session07.html#run-analysis",
    "href": "session07.html#run-analysis",
    "title": "7  Natural Selection",
    "section": "3. Run analysis",
    "text": "3. Run analysis\nSo we have formatted genotypes, environmental data\nWhat about controlling for spatial population structure in the model?\n\n\n\n\n\n\nDecision time:\n\n\n\nDecision time: 1. do I need to control for spatial structure?\n No? Great!\n\nYes? How do I do that?\n \n\nsimple xy coordinates (or some transformation, MDS, polynomial…)\nPrincipal Coordinates of Neighbourhood Matrix (PCNM; R package vegan)\nMoran’s Eigenvector Maps (R package memgene)\nFst, admixture Q values\npopulation allele frequency covariance matrix (BayPass omega)\n\n\n\nWe are going to use the scaled allelic covariance (Ω) estimated by BayPass to control for spatial structure in the data, see BayPass and Gates et al. 2023\n\n# format spatial coordinates as matrix\nxy &lt;- as.matrix(cbind(env.site$omegaX, env.site$omegaY))\n\n################################################################################\n\n\n# reduced RDA model using the retained environmental PCs \n# conditioned on the retained spatial variables\nMf.RDA &lt;- rda(AF ~ WC_bio5 + WC_bio15 + WC_bio19 + Condition(xy), data = scaled.env)\nMf.RDA\n\nCall: rda(formula = AF ~ WC_bio5 + WC_bio15 + WC_bio19 + Condition(xy),\ndata = scaled.env)\n\n                Inertia Proportion Rank\nTotal         202.83442    1.00000     \nConditional     9.32930    0.04599    2\nConstrained   102.05924    0.50317    3\nUnconstrained  91.44588    0.45084    8\nInertia is variance \n\nEigenvalues for constrained axes:\n RDA1  RDA2  RDA3 \n85.00 12.97  4.09 \n\nEigenvalues for unconstrained axes:\n  PC1   PC2   PC3   PC4   PC5   PC6   PC7   PC8 \n66.70  6.36  5.17  3.75  3.10  2.86  2.41  1.10 \n\n# So how much genetic variation can be explained by our environmental model?\nRsquareAdj(Mf.RDA)$r.squared\n\n[1] 0.5031653\n\n# how much inertia is associated with each axis\nscreeplot(Mf.RDA)\n\n\n\n# calculate significance of the reduced model, marginal effect of each term and significance of each axis\n#   (this can take several hours, depending on your computer)\nmod_perm &lt;- anova.cca(Mf.RDA, nperm=1000) #test significance of the model\nmod_perm\n\nPermutation test for rda under reduced model\nPermutation: free\nNumber of permutations: 999\n\nModel: rda(formula = AF ~ WC_bio5 + WC_bio15 + WC_bio19 + Condition(xy), data = scaled.env)\n         Df Variance      F Pr(&gt;F)  \nModel     3  102.059 2.9762   0.04 *\nResidual  8   91.446                \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n#generate x and y labels (% constrained variation)\nx.lab &lt;- paste0(\"RDA1 (\", paste(round((Mf.RDA$CCA$eig[1]/Mf.RDA$CCA$tot.chi*100),2)),\"%)\")\ny.lab &lt;- paste0(\"RDA2 (\", paste(round((Mf.RDA$CCA$eig[2]/Mf.RDA$CCA$tot.chi*100),2)),\"%)\")\n\n\nPlot RDA\n\n#plot RDA1, RDA2\n{pdf(file = \"./images/Mf_RDA.pdf\", height = 6, width = 6)\npRDAplot &lt;- plot(Mf.RDA, choices = c(1, 2), type=\"n\", cex.lab=1, xlab=x.lab, ylab=y.lab)\nwith(env.site, points(Mf.RDA, display = \"sites\", col = env.site$cols, pch = env.site$pch, cex=1.5, bg = env.site$cols))\ntext(Mf.RDA, \"bp\",choices = c(1, 2), labels = c(\"WC_bio5\", \"WC_bio15\", \"WC_bio19\"), col=\"blue\", cex=0.6)\nlegend(\"topleft\", legend = env.site$site, col=env.site$cols, pch=env.site$pch, pt.cex=1, cex=0.50, xpd=1, box.lty = 0, bg= \"transparent\")\ndev.off()}"
  },
  {
    "objectID": "session07.html#identify-candidate-loci",
    "href": "session07.html#identify-candidate-loci",
    "title": "7  Natural Selection",
    "section": "4. Identify candidate loci",
    "text": "4. Identify candidate loci\nEstimate p values following: https://kjschmidlab.gitlab.io/b1k-gbs/GenomeEnvAssociation.html#RDA_approaches and the R function rdadapt (see https://github.com/Capblancq/RDA-genome-scan)\n\nk = 2 # number of RDA axes to retain\nrda.q &lt;- rdadapt(Mf.RDA, K = k)\nsum(rda.q$q.values &lt;= 0.01)\n\n[1] 373\n\ncandidate.loci &lt;- colnames(AF)[which(rda.q[,2] &lt; 0.01)]\n\n\n# check the distribution of candidates and q-values\nggplot() +\n  geom_point(aes(x=c(1:length(rda.q[,2])), \n                 y=-log10(rda.q[,2])), col=\"gray83\") +\n  geom_point(aes(x=c(1:length(rda.q[,2]))[which(rda.q[,2] &lt; 0.01)], \n                 y=-log10(rda.q[which(rda.q[,2] &lt; 0.01),2])), col=\"orange\") +\n  xlab(\"SNPs\") + ylab(\"-log10(q.values\") +\n  theme_bw()\n\n\n\n# check correlations between candidate loci and environmental predictors\nnpred &lt;- 3\nenv_mat &lt;- matrix(nrow=(sum(rda.q$q.values &lt; 0.01)), \n                  ncol=npred)  # n columns for n predictors\ncolnames(env_mat) &lt;- colnames(reduced.env)\n\n\n# calculate correlation between candidate snps and environmental variables\nfor (i in 1:length(candidate.loci)) {\n  nam &lt;- candidate.loci[i]\n  snp.gen &lt;- AF[,nam]\n  env_mat[i,] &lt;- apply(reduced.env,2,function(x) cor(x,snp.gen))\n}\n\ncand &lt;- cbind.data.frame(as.data.frame(candidate.loci),env_mat)  \n\nfor (i in 1:length(cand$candidate.loci)) {\n  bar &lt;- cand[i,]\n  cand[i,npred+2] &lt;- names(which.max(abs(bar[,2:4]))) # gives the variable\n  cand[i,npred+3] &lt;- max(abs(bar[,2:4]))              # gives the correlation\n}\n\ncolnames(cand)[npred+2] &lt;- \"predictor\"\ncolnames(cand)[npred+3] &lt;- \"correlation\"\n\ntable(cand$predictor) \n\n\nWC_bio15 WC_bio19  WC_bio5 \n     216       47      110 \n\nwrite.csv(cand, \"./data/RDA_candidates.csv\", row.names = FALSE)\n\n\nIndividual level\nNow let’s have a look at an individual level biplot first expand environmental data from population to individual dataframe.\n\nenv.ind &lt;- expand_pop2ind(Mf5000_gl, env.site)\n\n# now subset our genotype objects to the candidate loci\ncandidate.gl &lt;- gl.keep.loc(gi2gl(imputed.sorted.gi), loc.list=candidate.loci)\n\nStarting gl.keep.loc \nStarting gi2gl \nStarting gl.compliance.check \n  Processing genlight object with SNP data\n  The slot loc.all, which stores allele name for each locus, is empty. Creating a dummy variable (A/C) to insert in this slot. \n  Checking coding of SNPs\n    SNP data scored NA, 0, 1 or 2 confirmed\n  Checking for population assignments\n    Population assignments confirmed\n  Checking locus metrics and flags\n  Recalculating locus metrics\n  Checking for monomorphic loci\n    No monomorphic loci detected\n  Checking for loci with all missing data\n    No loci with all missing data detected\n  Checking whether individual names are unique.\n  Checking for individual metrics\n  Warning: Creating a slot for individual metrics\n  Spelling of coordinates checked and changed if necessary to \n            lat/lon\nCompleted: gl.compliance.check \nCompleted: gi2gl \n  Processing genlight object with SNP data\n  List of loci to keep has been specified\n  Deleting all but the specified loci\nCompleted: gl.keep.loc \n\ncandidate.gi &lt;- gl2gi(candidate.gl)\n\nStarting gl2gi \n  Processing genlight object with SNP data\nMatrix converted.. Prepare genind object...\nCompleted: gl2gi \n\n# get genotypes (counts of reference allele) and clean up locus names\ncandidate.alleles &lt;- candidate.gi@tab\ncandidate.snps &lt;- candidate.alleles[,seq(1,ncol(candidate.alleles),2)]\ncolnames(candidate.snps) &lt;- locNames(candidate.gi)\n\n# finally run the individual based RDA\n# no need to control for pop structure this time\nMfcandidate.RDA &lt;- rda(candidate.snps ~ WC_bio5 + WC_bio15 + WC_bio19, data = env.ind)\nMfcandidate.RDA\n\nCall: rda(formula = candidate.snps ~ WC_bio5 + WC_bio15 + WC_bio19,\ndata = env.ind)\n\n               Inertia Proportion Rank\nTotal         207.1000     1.0000     \nConstrained    59.6948     0.2882    3\nUnconstrained 147.4052     0.7118  245\nInertia is variance \n\nEigenvalues for constrained axes:\n RDA1  RDA2  RDA3 \n44.71 12.02  2.97 \n\nEigenvalues for unconstrained axes:\n   PC1    PC2    PC3    PC4    PC5    PC6    PC7    PC8 \n16.227  7.584  5.579  4.597  3.536  3.373  3.075  2.695 \n(Showing 8 of 245 unconstrained eigenvalues)\n\nind.mod_perm &lt;- anova.cca(Mfcandidate.RDA, nperm=1000, \n                          parallel=4) #test significance of the model\nind.mod_perm\n\nPermutation test for rda under reduced model\nPermutation: free\nNumber of permutations: 999\n\nModel: rda(formula = candidate.snps ~ WC_bio5 + WC_bio15 + WC_bio19, data = env.ind)\n          Df Variance      F Pr(&gt;F)    \nModel      3   59.695 33.073  0.001 ***\nResidual 245  147.405                  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nx.lab &lt;- paste0(\"RDA1 (\",\n                paste(round((Mfcandidate.RDA$CA$eig[1]/Mfcandidate.RDA$tot.chi*100),2)),\"%)\")\ny.lab &lt;- paste0(\"RDA2 (\",\n                paste(round((Mfcandidate.RDA$CA$eig[2]/Mfcandidate.RDA$tot.chi*100),2)),\"%)\")\n\n\n\nPlot RDA\n\n#plot RDA1, RDA2\n{pdf(file = \"Mfcandidate_RDA.pdf\", height = 6, width = 6)\npRDAplot &lt;- plot(Mfcandidate.RDA, choices = c(1, 2), \n                 type=\"n\", cex.lab=1, xlab=x.lab, ylab=y.lab)\npoints(Mfcandidate.RDA, display = \"sites\", col = env.ind$cols,\n       pch = env.ind$pch, cex=0.8, bg = env.ind$cols)\ntext(Mfcandidate.RDA, \"bp\",choices = c(1, 2), \n     labels = c(\"WC_bio5\", \"WC_bio15\", \"WC_bio19\"), col=\"blue\", cex=0.6)\nlegend(\"topleft\", legend = env.site$site, col=env.site$cols, pch=env.site$pch,\n       pt.cex=1, cex=0.50, xpd=1, box.lty = 0, bg= \"transparent\")\ndev.off()\n}"
  },
  {
    "objectID": "session13.html#geneflow-between-karyotypes",
    "href": "session13.html#geneflow-between-karyotypes",
    "title": "13  Combining Genomic Resources",
    "section": "Geneflow between Karyotypes",
    "text": "Geneflow between Karyotypes\n\n# setup -----------------------\n## load ---\nvac.glch2 &lt;- readRDS(\"./data/spiny_gl1.rds\")\n\n# missing karyotype MM in East population \nvac.glch2@other$ind.metrics$karyo[grep(\"AA095619\", vac.glch2@ind.names)] &lt;- \"MM\"\n\n\n## overview --------------------------------------------------------------------\nvac.glch2\n\n /// GENLIGHT OBJECT /////////\n\n // 233 genotypes,  301,738 binary SNPs, size: 302 Mb\n 19405083 (27.6 %) missing data\n\n // Basic content\n   @gen: list of 233 SNPbin\n   @ploidy: ploidy of each individual  (range: 2-2)\n\n // Optional content\n   @ind.names:  233 individual labels\n   @loc.names:  301738 locus labels\n   @loc.all:  301738 alleles\n   @pop: population of each individual (group size range: 1-36)\n   @other: a list containing: loc.metrics  ind.metrics  latlon  loc.metrics.flags  history  verbose \n\npop(vac.glch2) %&gt;% table\n\n.\n      b baritji      bb       c     cbb      dr      dw      ea    East    ekim \n      4      15       1       1      15       1       4       5      10       4 \n     gd     kim      mi      nb   North       q      rg      sd   South  storri \n      3      30       4       1       9       1       9       8       9       5 \n     vd      wa     wam    West      wm \n      3      36      32      21       2 \n\n#gl.smearplot(vac.glch2, group.pop = FALSE)\n## filtering -------------------------------------------------------------------\nvac.pops &lt;-gl.keep.pop(vac.glch2, pop.list = c(\"North\",\"South\",\"East\",\"West\"))\n\nStarting gl.keep.pop \n  Processing genlight object with SNP data\n  Checking for presence of nominated populations\n  Retaining only populations North, South, East, West \n  Warning: Resultant dataset may contain monomorphic loci\n  Locus metrics not recalculated\nCompleted: gl.keep.pop \n\n#gl.smearplot(vac.pops, group.pop = TRUE)\n\n\n## start ----------\n\nvac.gl1 &lt;- gl.filter.callrate(vac.pops, method = \"loc\", threshold = 0.80)\n\nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Warning: data include loci that are scored NA across all individuals.\n  Consider filtering using gl &lt;- gl.filter.allna(gl)\n  Warning: Data may include monomorphic loci in call rate \n                    calculations for filtering\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 0.8 \n\n\n\n\n\nCompleted: gl.filter.callrate \n\nvac.gl1 &lt;- gl.filter.callrate(vac.gl1, method = \"ind\", threshold = 0.75) \n\nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Warning: Data may include monomorphic loci in call rate \n                    calculations for filtering\n  Recalculating Call Rate\n  Removing individuals based on Call Rate, threshold = 0.75 \n\n\n\n\n\n  Note: Locus metrics not recalculated\n  Note: Resultant monomorphic loci not deleted\nCompleted: gl.filter.callrate \n\nvac.gl1 &lt;- gl.filter.reproducibility(vac.gl1, t = 0.99)\n\nStarting gl.filter.reproducibility \n  Processing genlight object with SNP data\n  Removing loci with repeatability less than 0.99 \n\n\n\n\n\nCompleted: gl.filter.reproducibility \n\nvac.gl1 &lt;- gl.filter.monomorphs(vac.gl1, v = 0)\n\n## colours -----------------------------------\npopcolors &lt;- c(East = \"#0571b0\", North = \"#404040\", \n               South = \"#5e3c99\", West = \"#e66101\")\n\nkaryocolors &lt;- c(\"MM\" = \"red\", \"MA\" = \"black\", \"AA\" = \"blue\")\n\n\n## pcoa ------------------------------------------------------------------------\npc &lt;- gl.pcoa(vac.gl1, nfactors = 5)\n\nStarting gl.pcoa \n  Processing genlight object with SNP data\n  Performing a PCA, individuals as entities, loci as attributes, SNP genotype as state\nStarting gl.colors \nSelected color type 2 \nCompleted: gl.colors \n\n\n\n\n\nCompleted: gl.pcoa \n\n## ibd data --------------------------------------------------------------------\n# pop\nindexXY &lt;- complete.cases(vac.gl1@other$latlon) # missing locations\nvac.gl17 &lt;- gl.keep.ind(vac.gl1,ind.list = indNames(vac.gl1)[indexXY])\n\nStarting gl.keep.ind \n  Processing genlight object with SNP data\n  Deleting all but the listed individuals ABTC11930_aca, ABTC11932_aca, ABTC72881_aca, ABTC8929_aca, ABTC8938_aca, AA095616, AA093614, AA095550, AA095620, AA095553, AA095548, AA095617, AA093615, AA095626, AA095636, AA095546, AA096028, AA095562, AA095623, AA095635, AA095547, AA096030, AA095629, AA095624, AA095637, AA095545, AA095568, AA095625, AA095542, AA095570, AA095549, AA095551, AA095543, AA096029, AA095627, AA095540, AA095544, AA095634, AA095569, AA095539a \n  Warning: Resultant dataset may contain monomorphic loci\n  Locus metrics not recalculated\nCompleted: gl.keep.ind \n\nlatAdjust &lt;- runif(nInd(vac.gl17))/10000 # unique individual locations\nvac.gl17@other$latlon$lat &lt;- vac.gl17@other$latlon$lat+ latAdjust\n\n# karyo\nvac.gl18 &lt;- gl.drop.pop(vac.gl17, as.pop = \"karyo\", pop.list = \"\")\n\nStarting gl.drop.pop \n  Processing genlight object with SNP data\n  Temporarily assigning karyo as population\n  Checking for presence of nominated populations, deleting them\n  Warning: Resultant dataset may contain monomorphic loci\n  Locus metrics not recalculated\n  Restoring population assignments to initial state\nCompleted: gl.drop.pop \n\npop(vac.gl18) &lt;- vac.gl18@other$ind.metrics$karyo\n\n# figure 3 ---------------------------------------------------------------------\npopi &lt;- levels(vac.gl1@pop)\nvac.edit &lt;- vac.gl1\n# all East population assumed to be MM\nvac.edit@other$ind.metrics$karyo[pop(vac.gl1)==\"East\"] &lt;- \"MM\"\n\n\nfor(i in 1:4){\n  #pcoa\n  vac.popi &lt;- gl.keep.pop(vac.edit, pop.list = popi[i], as.pop = \"pop\")\n  vacp &lt;- gl.filter.monomorphs(vac.popi, verbose = 0)\n  pop(vacp) &lt;- vacp@other$ind.metrics$karyo\n  vacpK &lt;- gl.keep.pop(vacp, as.pop = \"karyo\", pop.list = names(karyocolors), verbose = 0)\n  pca &lt;- gl.pcoa(vacpK, nfactors = 5)\n gl.pcoa.plot(pca, vacpK)#plot.pcoa(pca, vacpK, xpc = 1, ypc = 2, popColors = karyocolors)\n  \n  plotfiles &lt;- list.files(tempdir())[grep(\"Plot\", list.files(tempdir()))]\n  unlink(paste0(tempdir(), \"/\", plotfiles))\n  \n  #ibd \n   gl.ibd(vacpK, distance = \"propShared\", paircols = \"pop\",\n                     Dgeo_trans = \"Dgeo\")\n\n  \n}\n\nStarting gl.keep.pop \n  Processing genlight object with SNP data\n  Temporarily assigning pop as population\n  Checking for presence of nominated populations\n  Retaining only populations East \n  Locus metrics not recalculated\n  Resetting population assignments to initial state\nCompleted: gl.keep.pop \n  Warning: Listed population MA not present in the dataset -- ignored\n  Warning: Listed population AA not present in the dataset -- ignored\nStarting gl.pcoa \n  Processing genlight object with SNP data\n  Performing a PCA, individuals as entities, loci as attributes, SNP genotype as state\nStarting gl.colors \nSelected color type 2 \nCompleted: gl.colors \n\n\n\n\n\nCompleted: gl.pcoa \nStarting gl.pcoa.plot \n  Processing an ordination file (glPca)\n  Processing genlight object with SNP data\n  Plotting populations in a space defined by the SNPs\n  Preparing plot .... please wait\n\n\n\n\n\nCompleted: gl.pcoa.plot \nStarting gl.ibd \nAnalysis performed on the genlight object.\nCoordinates transformed to Mercator (google) projection to calculate distances in meters.\n\n\nWarning: Removed 9 rows containing non-finite outside the scale range\n(`stat_smooth()`).\n\n\nWarning: Removed 9 rows containing missing values or values outside the scale range\n(`geom_point()`).\nRemoved 9 rows containing missing values or values outside the scale range\n(`geom_point()`).\nRemoved 9 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n  Coordinates used from: x@other$latlon (Mercator transformed) \n  Transformation of Dgeo: Dgeo \n  Genetic distance: propShared \n  Tranformation of Dgen:  Dgen \n\nMantel statistic based on Pearson's product-moment correlation \n\nCall:\nvegan::mantel(xdis = Dgen, ydis = Dgeo, permutations = permutations,      na.rm = TRUE) \n\nMantel statistic r: 0.6174 \n      Significance: 0.004 \n\nUpper quantiles of permutations (null model):\n  90%   95% 97.5%   99% \n0.281 0.373 0.439 0.534 \nPermutation: free\nNumber of permutations: 999\n\n\nCompleted: gl.ibd \n\nStarting gl.keep.pop \n  Processing genlight object with SNP data\n  Temporarily assigning pop as population\n  Checking for presence of nominated populations\n  Retaining only populations North \n  Locus metrics not recalculated\n  Resetting population assignments to initial state\nCompleted: gl.keep.pop \n  Warning: Listed population MM not present in the dataset -- ignored\nStarting gl.pcoa \n  Processing genlight object with SNP data\n  Warning: data include loci that are scored NA across all individuals.\n  Consider filtering using gl &lt;- gl.filter.allna(gl)\n  Performing a PCA, individuals as entities, loci as attributes, SNP genotype as state\nStarting gl.colors \nSelected color type 2 \nCompleted: gl.colors \n\n\n\n\n\nCompleted: gl.pcoa \nStarting gl.pcoa.plot \n  Processing an ordination file (glPca)\n  Processing genlight object with SNP data\n  Warning: data include loci that are scored NA across all individuals.\n  Consider filtering using gl &lt;- gl.filter.allna(gl)\n  Plotting populations in a space defined by the SNPs\n  Preparing plot .... please wait\n\n\n\n\n\nCompleted: gl.pcoa.plot \nStarting gl.ibd \nAnalysis performed on the genlight object.\nCoordinates transformed to Mercator (google) projection to calculate distances in meters.\n\n\n\n\n\n  Coordinates used from: x@other$latlon (Mercator transformed) \n  Transformation of Dgeo: Dgeo \n  Genetic distance: propShared \n  Tranformation of Dgen:  Dgen \n\nMantel statistic based on Pearson's product-moment correlation \n\nCall:\nvegan::mantel(xdis = Dgen, ydis = Dgeo, permutations = permutations,      na.rm = TRUE) \n\nMantel statistic r: 0.3604 \n      Significance: 0.023 \n\nUpper quantiles of permutations (null model):\n  90%   95% 97.5%   99% \n0.200 0.275 0.338 0.389 \nPermutation: free\nNumber of permutations: 999\n\n\nCompleted: gl.ibd \n\nStarting gl.keep.pop \n  Processing genlight object with SNP data\n  Temporarily assigning pop as population\n  Checking for presence of nominated populations\n  Retaining only populations South \n  Locus metrics not recalculated\n  Resetting population assignments to initial state\nCompleted: gl.keep.pop \n  Warning: Listed population AA not present in the dataset -- ignored\nStarting gl.pcoa \n  Processing genlight object with SNP data\n  Performing a PCA, individuals as entities, loci as attributes, SNP genotype as state\nStarting gl.colors \nSelected color type 2 \nCompleted: gl.colors \n\n\n\n\n\nCompleted: gl.pcoa \nStarting gl.pcoa.plot \n  Processing an ordination file (glPca)\n  Processing genlight object with SNP data\n  Plotting populations in a space defined by the SNPs\n  Preparing plot .... please wait\n\n\n\n\n\nCompleted: gl.pcoa.plot \nStarting gl.ibd \nAnalysis performed on the genlight object.\nCoordinates transformed to Mercator (google) projection to calculate distances in meters.\n\n\n\n\n\n  Coordinates used from: x@other$latlon (Mercator transformed) \n  Transformation of Dgeo: Dgeo \n  Genetic distance: propShared \n  Tranformation of Dgen:  Dgen \n\nMantel statistic based on Pearson's product-moment correlation \n\nCall:\nvegan::mantel(xdis = Dgen, ydis = Dgeo, permutations = permutations,      na.rm = TRUE) \n\nMantel statistic r: 0.643 \n      Significance: 0.005 \n\nUpper quantiles of permutations (null model):\n  90%   95% 97.5%   99% \n0.307 0.375 0.380 0.637 \nPermutation: free\nNumber of permutations: 999\n\n\nCompleted: gl.ibd \n\nStarting gl.keep.pop \n  Processing genlight object with SNP data\n  Temporarily assigning pop as population\n  Checking for presence of nominated populations\n  Retaining only populations West \n  Locus metrics not recalculated\n  Resetting population assignments to initial state\nCompleted: gl.keep.pop \nStarting gl.pcoa \n  Processing genlight object with SNP data\n  Performing a PCA, individuals as entities, loci as attributes, SNP genotype as state\nStarting gl.colors \nSelected color type 2 \nCompleted: gl.colors \n\n\n\n\n\nCompleted: gl.pcoa \nStarting gl.pcoa.plot \n  Processing an ordination file (glPca)\n  Processing genlight object with SNP data\n  Plotting populations in a space defined by the SNPs\n  Preparing plot .... please wait\n\n\n\n\n\nCompleted: gl.pcoa.plot \nStarting gl.ibd \nAnalysis performed on the genlight object.\nCoordinates transformed to Mercator (google) projection to calculate distances in meters.\n\n\nWarning: Removed 36 rows containing non-finite outside the scale range\n(`stat_smooth()`).\n\n\nWarning: Removed 36 rows containing missing values or values outside the scale range\n(`geom_point()`).\nRemoved 36 rows containing missing values or values outside the scale range\n(`geom_point()`).\nRemoved 36 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n  Coordinates used from: x@other$latlon (Mercator transformed) \n  Transformation of Dgeo: Dgeo \n  Genetic distance: propShared \n  Tranformation of Dgen:  Dgen \n\nMantel statistic based on Pearson's product-moment correlation \n\nCall:\nvegan::mantel(xdis = Dgen, ydis = Dgeo, permutations = permutations,      na.rm = TRUE) \n\nMantel statistic r: 0.5041 \n      Significance: 0.01 \n\nUpper quantiles of permutations (null model):\n  90%   95% 97.5%   99% \n0.296 0.376 0.449 0.501 \nPermutation: free\nNumber of permutations: 999\n\n\nCompleted: gl.ibd \n\n\n\n# figure 4 ---------------------------------------------------------------------\n## pcoa figures ----------------------------------------------------------------\ngl.pcoa.plot(pc, vac.gl1, xaxis =  1, yaxis = 2,pt.colors = popcolors)\n\nStarting gl.pcoa.plot \n  Processing an ordination file (glPca)\n  Processing genlight object with SNP data\n  Plotting populations in a space defined by the SNPs\n  Preparing plot .... please wait\n\n\n\n\n\nCompleted: gl.pcoa.plot \n\n\n\n\ngl.pcoa.plot(pc, vac.gl1, xaxis = 3, yaxis = 4, pt.colors = popcolors)\n\nStarting gl.pcoa.plot \n  Processing an ordination file (glPca)\n  Processing genlight object with SNP data\n  Plotting populations in a space defined by the SNPs\n  Preparing plot .... please wait\n\n\n\n\n\nCompleted: gl.pcoa.plot \n\n\n\n\n## ibd figures -----------------------------------------------------------------\n\n# pop\ngl.ibd(vac.gl17, distance = \"propShared\",\n                 paircols = \"pop\", Dgeo_trans = \"Dgeo\")\n\nStarting gl.ibd \nAnalysis performed on the genlight object.\nCoordinates transformed to Mercator (google) projection to calculate distances in meters.\n\n\n\n\n\n  Coordinates used from: x@other$latlon (Mercator transformed) \n  Transformation of Dgeo: Dgeo \n  Genetic distance: propShared \n  Tranformation of Dgen:  Dgen \n\nMantel statistic based on Pearson's product-moment correlation \n\nCall:\nvegan::mantel(xdis = Dgen, ydis = Dgeo, permutations = permutations,      na.rm = TRUE) \n\nMantel statistic r: 0.5168 \n      Significance: 0.001 \n\nUpper quantiles of permutations (null model):\n   90%    95%  97.5%    99% \n0.0855 0.1238 0.1451 0.1612 \nPermutation: free\nNumber of permutations: 999\n\n\nCompleted: gl.ibd \n\n\n$Dgen\n              ABTC11930_aca ABTC11932_aca ABTC72881_aca ABTC8929_aca\nABTC11932_aca    0.08454080                                         \nABTC72881_aca    0.09019160    0.09276463                           \nABTC8929_aca     0.09041666    0.09189282    0.09039321             \nABTC8938_aca     0.08500393    0.08827010    0.08764128   0.08227897\nAA095616         0.14224510    0.14444736    0.13983353   0.14064384\nAA093614         0.13119301    0.13448232    0.13044816   0.13082531\nAA095550         0.12975810    0.13164186    0.12685137   0.12859441\nAA095620         0.09165329    0.09182624    0.09206501   0.08888659\nAA095553         0.31563647    0.31520435    0.31885137   0.32395215\nAA095548         0.31082402    0.31180427    0.31435175   0.32007863\nAA095617         0.14237363    0.14541258    0.14028226   0.14107857\nAA093615         0.13113039    0.13273985    0.13040335   0.13007040\nAA095626         0.13033422    0.13312409    0.13003856   0.13026280\nAA095636         0.09487763    0.09645876    0.09775272   0.09232150\nAA095546         0.30893456    0.30981928    0.31402059   0.31772570\nAA096028         0.14419338    0.14585513    0.14119674   0.14266633\nAA095562         0.12966304    0.13319552    0.12914342   0.13094168\nAA095623         0.13126143    0.13356033    0.12987764   0.13087248\nAA095635         0.09249621    0.09352207    0.09418239   0.08801618\nAA095547         0.30606513    0.30645016    0.31142805   0.31474297\nAA096030         0.14322856    0.14503143    0.14134988   0.14173929\nAA095629         0.12968866    0.13258012    0.12829711   0.12909769\nAA095624         0.12983838    0.13278626    0.12911250   0.13000746\nAA095637         0.09294763    0.09432971    0.09540032   0.08963028\nAA095545         0.31091314    0.31031033    0.31445160   0.32056864\nAA095568         0.12862718    0.13168002    0.12706821   0.12927880\nAA095625         0.13053987    0.13229771    0.12933121   0.13076769\nAA095542         0.31102069    0.31275665    0.31571472   0.31905866\nAA095570         0.14390257    0.14625238    0.14182635   0.14276606\nAA095549         0.13034483    0.13305645    0.12854411   0.12953764\nAA095551         0.14404059    0.14530848    0.14083547   0.14210848\nAA095543         0.31407635    0.31277976    0.31812137   0.32117153\nAA096029         0.14515080    0.14674154    0.14195874   0.14332123\nAA095627         0.14235573    0.14473684    0.14041481   0.14077953\nAA095540         0.13115636    0.13349027    0.13001218   0.13025591\nAA095544         0.31095217    0.31076378    0.31572589   0.31948844\nAA095634         0.14348749    0.14623684    0.14175393   0.14237073\nAA095569         0.13041644    0.13422845    0.12986408   0.13103968\nAA095539a        0.31163857    0.31154875    0.31704579   0.31969287\n              ABTC8938_aca   AA095616   AA093614   AA095550   AA095620\nABTC11932_aca                                                         \nABTC72881_aca                                                         \nABTC8929_aca                                                          \nABTC8938_aca                                                          \nAA095616        0.14080744                                            \nAA093614        0.13065543 0.08678606                                 \nAA095550        0.12737336 0.08626468 0.06292768                      \nAA095620        0.08508519 0.14121521 0.12965296 0.12677222           \nAA095553        0.32049149 0.32998325 0.31788160 0.31575779 0.31824280\nAA095548        0.31601644 0.32376396 0.31340504 0.31138502 0.31375667\nAA095617        0.14068990 0.04621888 0.08742573 0.08650916 0.14140623\nAA093615        0.12977855 0.08841884 0.06305928 0.06167350 0.12855024\nAA095626        0.12955431 0.08667520 0.06343646 0.06060468 0.12962919\nAA095636        0.08637781 0.14572803 0.13587765 0.13223899 0.08789149\nAA095546        0.31362790 0.32429397 0.31249170 0.31110395 0.31095495\nAA096028        0.14251904 0.05059806 0.08862362 0.08521521 0.14207077\nAA095562        0.12937856 0.08782714 0.05961851 0.06241020 0.12924603\nAA095623        0.12932203 0.08756431 0.06422775 0.06061574 0.12932390\nAA095635        0.08542981 0.14254812 0.13117772 0.12801478 0.08521251\nAA095547        0.31254715 0.32151812 0.30977227 0.30868648 0.31000947\nAA096030        0.14189850 0.05053547 0.08806557 0.08551761 0.14125691\nAA095629        0.12882123 0.08619119 0.06437394 0.05970354 0.12853692\nAA095624        0.12833686 0.08627574 0.06229852 0.05984714 0.12816978\nAA095637        0.08614294 0.14745168 0.13509229 0.13170790 0.08641127\nAA095545        0.31602387 0.32495526 0.31336418 0.31270592 0.31432967\nAA095568        0.12759969 0.08611324 0.06378782 0.06009052 0.12735961\nAA095625        0.12938245 0.08696716 0.06325949 0.05972007 0.12873366\nAA095542        0.31661065 0.32540439 0.31401151 0.31246329 0.31431394\nAA095570        0.14327493 0.05170547 0.08973352 0.08717393 0.14286584\nAA095549        0.12892716 0.08774660 0.06116545 0.06216928 0.12857554\nAA095551        0.14228480 0.05154941 0.09015148 0.08739275 0.14229508\nAA095543        0.31918316 0.32754955 0.31557041 0.31386374 0.31621192\nAA096029        0.14301233 0.05329794 0.09180275 0.08879880 0.14311669\nAA095627        0.14095951 0.05025390 0.08603755 0.08504056 0.14005179\nAA095540        0.12939861 0.08779664 0.06551237 0.06225029 0.12987653\nAA095544        0.31579404 0.32453682 0.31230384 0.31102992 0.31394411\nAA095634        0.14254177 0.05200826 0.09017185 0.08735654 0.14213807\nAA095569        0.12921947 0.08781870 0.06429757 0.06114564 0.12912740\nAA095539a       0.31581439 0.32352226 0.31305452 0.31195574 0.31291427\n                AA095553   AA095548   AA095617   AA093615   AA095626   AA095636\nABTC11932_aca                                                                  \nABTC72881_aca                                                                  \nABTC8929_aca                                                                   \nABTC8938_aca                                                                   \nAA095616                                                                       \nAA093614                                                                       \nAA095550                                                                       \nAA095620                                                                       \nAA095553                                                                       \nAA095548      0.13256956                                                       \nAA095617      0.33089508 0.32464320                                            \nAA093615      0.31724608 0.31193351 0.08839889                                 \nAA095626      0.31527201 0.31075000 0.08694741 0.03364938                      \nAA095636      0.32506875 0.31822304 0.14628306 0.13415417 0.13457442           \nAA095546      0.13643491 0.13229662 0.32558840 0.31157869 0.30984602 0.31666481\nAA096028      0.32914573 0.32416224 0.04992833 0.08827145 0.08693631 0.14716467\nAA095562      0.31608899 0.31171344 0.08830582 0.06097394 0.06085567 0.13443139\nAA095623      0.31637475 0.31208733 0.08823392 0.03539683 0.02798696 0.13472416\nAA095635      0.32174888 0.31548405 0.14306562 0.12967495 0.12932462 0.08565490\nAA095547      0.13787410 0.13184008 0.32255030 0.31029298 0.30892445 0.31549152\nAA096030      0.32942168 0.32292085 0.05045667 0.08874684 0.08738178 0.14642960\nAA095629      0.31512170 0.31085470 0.08667726 0.05506653 0.03393092 0.13368724\nAA095624      0.31654082 0.31211803 0.08679105 0.03530623 0.03363794 0.13384089\nAA095637      0.32080777 0.31806665 0.14716351 0.13395858 0.13460763 0.08786402\nAA095545      0.13651325 0.13323251 0.32681564 0.31353957 0.31223785 0.31887713\nAA095568      0.31649923 0.31119569 0.08663958 0.05769056 0.05673038 0.13268005\nAA095625      0.31612087 0.31132771 0.08703557 0.03487633 0.02959312 0.13447549\nAA095542      0.13577795 0.13287985 0.32634633 0.31327768 0.31228976 0.31829619\nAA095570      0.32902223 0.32287158 0.05127300 0.08920974 0.08714534 0.14842900\nAA095549      0.31587783 0.31065472 0.08760149 0.06302146 0.06219534 0.13417333\nAA095551      0.32990947 0.32503217 0.05106563 0.09047166 0.08976934 0.14725102\nAA095543      0.13425109 0.12989502 0.32823199 0.31459298 0.31365191 0.32087072\nAA096029      0.33015877 0.32378540 0.05391313 0.09131175 0.08974954 0.14816340\nAA095627      0.32834276 0.32255565 0.04947125 0.08750058 0.08565806 0.14576422\nAA095540      0.31593782 0.31145889 0.08761641 0.06193108 0.06149244 0.13461171\nAA095544      0.13366468 0.13062818 0.32531973 0.31199330 0.31119519 0.31770948\nAA095634      0.32956274 0.32407482 0.05115303 0.08920753 0.08764361 0.14659825\nAA095569      0.31697344 0.31241060 0.08835102 0.06159852 0.06075713 0.13437068\nAA095539a     0.13431550 0.13100307 0.32520523 0.31298616 0.31202731 0.31858067\n                AA095546   AA096028   AA095562   AA095623   AA095635   AA095547\nABTC11932_aca                                                                  \nABTC72881_aca                                                                  \nABTC8929_aca                                                                   \nABTC8938_aca                                                                   \nAA095616                                                                       \nAA093614                                                                       \nAA095550                                                                       \nAA095620                                                                       \nAA095553                                                                       \nAA095548                                                                       \nAA095617                                                                       \nAA093615                                                                       \nAA095626                                                                       \nAA095636                                                                       \nAA095546                                                                       \nAA096028      0.32455743                                                       \nAA095562      0.31221677 0.08794511                                            \nAA095623      0.31131322 0.08768589 0.06094550                                 \nAA095635      0.31559237 0.14293665 0.13059436 0.12974316                      \nAA095547      0.12539362 0.32230058 0.30966075 0.31016163 0.31229070           \nAA096030      0.32430196 0.04735877 0.08836485 0.08805626 0.14282961 0.32162986\nAA095629      0.31084479 0.08632537 0.06115443 0.03355674 0.12888741 0.30909260\nAA095624      0.31132376 0.08571299 0.06056771 0.02962980 0.12919027 0.30952003\nAA095637      0.31642781 0.14721800 0.13503086 0.13427310 0.08341461 0.31333001\nAA095545      0.13144768 0.32619475 0.31298818 0.31334090 0.31617039 0.13084569\nAA095568      0.31064090 0.08705635 0.06192790 0.05737427 0.12791055 0.30863806\nAA095625      0.31109569 0.08699698 0.06102429 0.02986604 0.12892985 0.30944548\nAA095542      0.13114873 0.32483646 0.31323019 0.31356067 0.31613885 0.13276991\nAA095570      0.32395479 0.03821203 0.08823189 0.08878645 0.14385914 0.32119241\nAA095549      0.31028711 0.08847863 0.06390318 0.06296549 0.12945600 0.30884350\nAA095551      0.32557097 0.04906167 0.08891378 0.09039065 0.14326554 0.32177308\nAA095543      0.13007471 0.32706687 0.31516148 0.31501365 0.31947099 0.13114116\nAA096029      0.32422984 0.04767337 0.09102516 0.09082262 0.14430205 0.32133449\nAA095627      0.32341082 0.04464449 0.08719926 0.08698304 0.14114280 0.32044824\nAA095540      0.31200280 0.08709663 0.06370568 0.06143676 0.13069307 0.30879758\nAA095544      0.13178003 0.32475974 0.31232949 0.31233624 0.31651224 0.13071585\nAA095634      0.32484949 0.04598886 0.08874634 0.08904473 0.14308616 0.32237819\nAA095569      0.31258888 0.08840510 0.06335043 0.06078681 0.12983439 0.30915980\nAA095539a     0.13152827 0.32472480 0.31243759 0.31309883 0.31780010 0.12930911\n                AA096030   AA095629   AA095624   AA095637   AA095545   AA095568\nABTC11932_aca                                                                  \nABTC72881_aca                                                                  \nABTC8929_aca                                                                   \nABTC8938_aca                                                                   \nAA095616                                                                       \nAA093614                                                                       \nAA095550                                                                       \nAA095620                                                                       \nAA095553                                                                       \nAA095548                                                                       \nAA095617                                                                       \nAA093615                                                                       \nAA095626                                                                       \nAA095636                                                                       \nAA095546                                                                       \nAA096028                                                                       \nAA095562                                                                       \nAA095623                                                                       \nAA095635                                                                       \nAA095547                                                                       \nAA096030                                                                       \nAA095629      0.08696658                                                       \nAA095624      0.08626202 0.03330168                                            \nAA095637      0.14685931 0.13334048 0.13359050                                 \nAA095545      0.32514975 0.31263063 0.31367701 0.31855084                      \nAA095568      0.08733609 0.05725295 0.05578466 0.13267915 0.31208080           \nAA095625      0.08687419 0.03357051 0.02841547 0.13435548 0.31244552 0.05396822\nAA095542      0.32334546 0.31266621 0.31335517 0.31890594 0.13078863 0.31226555\nAA095570      0.04853950 0.08681556 0.08627419 0.14777161 0.32504723 0.08869328\nAA095549      0.08738697 0.06172205 0.06112322 0.13324189 0.31205608 0.06039514\nAA095551      0.04918395 0.08889146 0.08839442 0.14807163 0.32583802 0.08890859\nAA095543      0.32652951 0.31408346 0.31404784 0.31944097 0.12723080 0.31335272\nAA096029      0.05121461 0.08876394 0.08902335 0.14922636 0.32657999 0.09038502\nAA095627      0.04773444 0.08604834 0.08472028 0.14601258 0.32471395 0.08624569\nAA095540      0.08826607 0.06161968 0.06096895 0.13499545 0.31264790 0.06200474\nAA095544      0.32449216 0.31129795 0.31193242 0.31684114 0.12879307 0.31012859\nAA095634      0.04878956 0.08773148 0.08725959 0.14808463 0.32628736 0.08800230\nAA095569      0.08756439 0.06062960 0.06035364 0.13409335 0.31376765 0.06288358\nAA095539a     0.32405304 0.31162055 0.31274707 0.31735737 0.13268788 0.31195003\n                AA095625   AA095542   AA095570   AA095549   AA095551   AA095543\nABTC11932_aca                                                                  \nABTC72881_aca                                                                  \nABTC8929_aca                                                                   \nABTC8938_aca                                                                   \nAA095616                                                                       \nAA093614                                                                       \nAA095550                                                                       \nAA095620                                                                       \nAA095553                                                                       \nAA095548                                                                       \nAA095617                                                                       \nAA093615                                                                       \nAA095626                                                                       \nAA095636                                                                       \nAA095546                                                                       \nAA096028                                                                       \nAA095562                                                                       \nAA095623                                                                       \nAA095635                                                                       \nAA095547                                                                       \nAA096030                                                                       \nAA095629                                                                       \nAA095624                                                                       \nAA095637                                                                       \nAA095545                                                                       \nAA095568                                                                       \nAA095625                                                                       \nAA095542      0.31266575                                                       \nAA095570      0.08740318 0.32539532                                            \nAA095549      0.06197565 0.31191635 0.08966095                                 \nAA095551      0.08911189 0.32564075 0.04956806 0.09000905                      \nAA095543      0.31400658 0.12441947 0.32805086 0.31362910 0.32733366           \nAA096029      0.08937366 0.32582974 0.04907738 0.09083063 0.04942303 0.32839328\nAA095627      0.08559181 0.32409451 0.04110066 0.08718791 0.04936365 0.32652236\nAA095540      0.06140551 0.31208592 0.08758136 0.06438560 0.08926535 0.31476137\nAA095544      0.31165319 0.12388355 0.32464949 0.31040625 0.32560650 0.12329120\nAA095634      0.08772173 0.32616434 0.04782081 0.08963205 0.05024179 0.32772451\nAA095569      0.05967139 0.31391008 0.08853196 0.06395083 0.08950890 0.31518086\nAA095539a     0.31255259 0.13192559 0.32418748 0.31151328 0.32534540 0.13071839\n                AA096029   AA095627   AA095540   AA095544   AA095634   AA095569\nABTC11932_aca                                                                  \nABTC72881_aca                                                                  \nABTC8929_aca                                                                   \nABTC8938_aca                                                                   \nAA095616                                                                       \nAA093614                                                                       \nAA095550                                                                       \nAA095620                                                                       \nAA095553                                                                       \nAA095548                                                                       \nAA095617                                                                       \nAA093615                                                                       \nAA095626                                                                       \nAA095636                                                                       \nAA095546                                                                       \nAA096028                                                                       \nAA095562                                                                       \nAA095623                                                                       \nAA095635                                                                       \nAA095547                                                                       \nAA096030                                                                       \nAA095629                                                                       \nAA095624                                                                       \nAA095637                                                                       \nAA095545                                                                       \nAA095568                                                                       \nAA095625                                                                       \nAA095542                                                                       \nAA095570                                                                       \nAA095549                                                                       \nAA095551                                                                       \nAA095543                                                                       \nAA096029                                                                       \nAA095627      0.04966153                                                       \nAA095540      0.08978857 0.08732479                                            \nAA095544      0.32497694 0.32375252 0.31138196                                 \nAA095634      0.05006785 0.04752622 0.08864646 0.32527701                      \nAA095569      0.08998039 0.08654804 0.06300766 0.31173884 0.08800186           \nAA095539a     0.32503093 0.32269768 0.31156178 0.13118967 0.32574257 0.31221582\n\n$Dgeo\n              ABTC11930_aca ABTC11932_aca ABTC72881_aca ABTC8929_aca\nABTC11932_aca  6.877820e+00                                         \nABTC72881_aca  2.559379e+05  2.559401e+05                           \nABTC8929_aca   2.647194e+05  2.647138e+05  3.105114e+05             \nABTC8938_aca   1.806092e+05  1.806056e+05  1.979746e+05 1.206100e+05\nAA095616       7.732562e+05  7.732513e+05  1.008651e+06 7.735542e+05\nAA093614       4.288999e+05  4.289008e+05  6.680923e+05 6.395819e+05\nAA095550       4.315580e+05  4.315584e+05  6.759577e+05 6.314421e+05\nAA095620       1.745274e+05  1.745242e+05  1.842578e+05 1.353646e+05\nAA095553       4.648651e+05  4.648708e+05  5.853559e+05 7.294882e+05\nAA095548       4.647457e+05  4.647514e+05  5.844385e+05 7.293440e+05\nAA095617       7.466292e+05  7.466243e+05  9.820399e+05 7.480603e+05\nAA093615       4.288556e+05  4.288565e+05  6.680679e+05 6.395052e+05\nAA095626       4.288556e+05  4.288565e+05  6.680679e+05 6.395053e+05\nAA095636       1.815894e+05  1.815852e+05  2.155121e+05 1.059769e+05\nAA095546       4.648648e+05  4.648705e+05  5.853557e+05 7.294879e+05\nAA096028       6.002900e+05  6.002850e+05  8.345797e+05 6.060711e+05\nAA095562       4.288555e+05  4.288564e+05  6.680679e+05 6.395051e+05\nAA095623       4.288544e+05  4.288553e+05  6.680682e+05 6.395012e+05\nAA095635       1.815870e+05  1.815828e+05  2.155085e+05 1.059809e+05\nAA095547       4.648635e+05  4.648692e+05  5.853549e+05 7.294866e+05\nAA096030       6.002933e+05  6.002882e+05  8.345825e+05 6.060727e+05\nAA095629       4.288543e+05  4.288552e+05  6.680683e+05 6.395010e+05\nAA095624       4.288542e+05  4.288551e+05  6.680683e+05 6.395009e+05\nAA095637       1.745281e+05  1.745250e+05  1.842593e+05 1.353629e+05\nAA095545       4.917035e+05  4.917096e+05  5.912671e+05 7.550951e+05\nAA095568       4.447163e+05  4.447172e+05  6.839463e+05 6.542064e+05\nAA095625       4.288553e+05  4.288562e+05  6.680679e+05 6.395043e+05\nAA095542       4.759462e+05  4.759523e+05  5.794129e+05 7.395820e+05\nAA095570       6.002926e+05  6.002876e+05  8.345820e+05 6.060724e+05\nAA095549       4.447166e+05  4.447175e+05  6.839462e+05 6.542073e+05\nAA095551       6.009375e+05  6.009324e+05  8.349123e+05 6.057507e+05\nAA095543       4.759375e+05  4.759435e+05  5.793623e+05 7.395694e+05\nAA096029       6.003394e+05  6.003344e+05  8.346192e+05 6.060881e+05\nAA095627       6.002933e+05  6.002883e+05  8.345825e+05 6.060727e+05\nAA095540       4.409957e+05  4.409964e+05  6.824284e+05 6.465691e+05\nAA095544       4.757571e+05  4.757632e+05  5.792638e+05 7.393950e+05\nAA095634       6.003308e+05  6.003258e+05  8.346113e+05 6.060819e+05\nAA095569       4.324977e+05  4.324981e+05  6.766546e+05 6.328715e+05\nAA095539a      4.647490e+05  4.647547e+05  5.852493e+05 7.293721e+05\n              ABTC8938_aca     AA095616     AA093614     AA095550     AA095620\nABTC11932_aca                                                                 \nABTC72881_aca                                                                 \nABTC8929_aca                                                                  \nABTC8938_aca                                                                  \nAA095616      8.327226e+05                                                    \nAA093614      5.982907e+05 6.174925e+05                                       \nAA095550      5.963793e+05 5.835808e+05 3.392094e+04                          \nAA095620      1.481147e+04 8.419997e+05 5.960621e+05 5.949859e+05             \nAA095553      6.334259e+05 9.798672e+05 3.712205e+05 4.037586e+05 6.231736e+05\nAA095548      6.330781e+05 9.812672e+05 3.728255e+05 4.053372e+05 6.227938e+05\nAA095617      8.064157e+05 2.666398e+04 5.962918e+05 5.623712e+05 8.156344e+05\nAA093615      5.982326e+05 6.173817e+05 1.221171e+02 3.380902e+04 5.960067e+05\nAA095626      5.982327e+05 6.173818e+05 1.220032e+02 3.380913e+04 5.960067e+05\nAA095636      1.759073e+04 8.168970e+05 5.934934e+05 5.906272e+05 3.157834e+04\nAA095546      6.334257e+05 9.798668e+05 3.712201e+05 4.037583e+05 6.231733e+05\nAA096028      6.600283e+05 1.740910e+05 4.953345e+05 4.621541e+05 6.689821e+05\nAA095562      5.982325e+05 6.173814e+05 1.224622e+02 3.380867e+04 5.960066e+05\nAA095623      5.982303e+05 6.173725e+05 1.312137e+02 3.379981e+04 5.960045e+05\nAA095635      1.758728e+04 8.168991e+05 5.934923e+05 5.906263e+05 3.157452e+04\nAA095547      6.334244e+05 9.798653e+05 3.712187e+05 4.037568e+05 6.231721e+05\nAA096030      6.600306e+05 1.740882e+05 4.953390e+05 4.621585e+05 6.689845e+05\nAA095629      5.982301e+05 6.173719e+05 1.318624e+02 3.379916e+04 5.960044e+05\nAA095624      5.982300e+05 6.173716e+05 1.321122e+02 3.379891e+04 5.960043e+05\nAA095637      1.480982e+04 8.419988e+05 5.960625e+05 5.949862e+05 1.663905e+00\nAA095545      6.544708e+05 1.029991e+06 4.221089e+05 4.546274e+05 6.434676e+05\nAA095568      6.137979e+05 6.151368e+05 1.589262e+04 3.541141e+04 6.116490e+05\nAA095625      5.982321e+05 6.173796e+05 1.241760e+02 3.380693e+04 5.960062e+05\nAA095542      6.396218e+05 1.015150e+06 4.088043e+05 4.410922e+05 6.287389e+05\nAA095570      6.600302e+05 1.740887e+05 4.953381e+05 4.621577e+05 6.689841e+05\nAA095549      6.137984e+05 6.151389e+05 1.589269e+04 3.541345e+04 6.116495e+05\nAA095551      6.600843e+05 1.737390e+05 4.972845e+05 4.641193e+05 6.690773e+05\nAA095543      6.395996e+05 1.015216e+06 4.088824e+05 4.411688e+05 6.287152e+05\nAA096029      6.600586e+05 1.740504e+05 4.954150e+05 4.622347e+05 6.690138e+05\nAA095627      6.600306e+05 1.740882e+05 4.953390e+05 4.621586e+05 6.689845e+05\nAA095540      6.084042e+05 6.018572e+05 1.913480e+04 2.159542e+04 6.065682e+05\nAA095544      6.394413e+05 1.014985e+06 4.086613e+05 4.409459e+05 6.285596e+05\nAA095634      6.600513e+05 1.740584e+05 4.954065e+05 4.622263e+05 6.690063e+05\nAA095569      5.975484e+05 5.850909e+05 3.240410e+04 1.904008e+03 5.961175e+05\nAA095539a     6.333103e+05 9.797959e+05 3.711660e+05 4.037017e+05 6.230581e+05\n                  AA095553     AA095548     AA095617     AA093615     AA095626\nABTC11932_aca                                                                 \nABTC72881_aca                                                                 \nABTC8929_aca                                                                  \nABTC8938_aca                                                                  \nAA095616                                                                      \nAA093614                                                                      \nAA095550                                                                      \nAA095620                                                                      \nAA095553                                                                      \nAA095548      1.916149e+03                                                    \nAA095617      9.570227e+05 9.584041e+05                                       \nAA093615      3.713131e+05 3.729179e+05 5.961797e+05                          \nAA095626      3.713130e+05 3.729178e+05 5.961798e+05 1.172325e-01             \nAA095636      6.391663e+05 6.388679e+05 7.906327e+05 5.934323e+05 5.934324e+05\nAA095546      3.836682e-01 1.916340e+03 9.570223e+05 3.713127e+05 3.713126e+05\nAA096028      8.400456e+05 8.412875e+05 1.474640e+05 4.952150e+05 4.952151e+05\nAA095562      3.713134e+05 3.729182e+05 5.961793e+05 3.552371e-01 4.724696e-01\nAA095623      3.713214e+05 3.729262e+05 5.961705e+05 9.344127e+00 9.461360e+00\nAA095635      6.391632e+05 6.388647e+05 7.906349e+05 5.934312e+05 5.934312e+05\nAA095547      1.967685e+00 1.917129e+03 9.570208e+05 3.713113e+05 3.713112e+05\nAA096030      8.400500e+05 8.412919e+05 1.474612e+05 4.952195e+05 4.952196e+05\nAA095629      3.713220e+05 3.729268e+05 5.961698e+05 1.000915e+01 1.012638e+01\nAA095624      3.713222e+05 3.729270e+05 5.961696e+05 1.026525e+01 1.038248e+01\nAA095637      6.231748e+05 6.227950e+05 8.156335e+05 5.960071e+05 5.960071e+05\nAA095545      5.088908e+04 4.929108e+04 1.007021e+06 4.222015e+05 4.222014e+05\nAA095568      3.782351e+05 3.798787e+05 5.943637e+05 1.592585e+04 1.592584e+04\nAA095625      3.713150e+05 3.729198e+05 5.961776e+05 2.118217e+00 2.235450e+00\nAA095542      3.881339e+04 3.699575e+04 9.920796e+05 4.088949e+05 4.088948e+05\nAA095570      8.400492e+05 8.412911e+05 1.474617e+05 4.952187e+05 4.952188e+05\nAA095549      3.782333e+05 3.798769e+05 5.943658e+05 1.592593e+04 1.592593e+04\nAA095551      8.417289e+05 8.429683e+05 1.471336e+05 4.971649e+05 4.971650e+05\nAA095543      3.890359e+04 3.708531e+04 9.921446e+05 4.089730e+05 4.089729e+05\nAA096029      8.401220e+05 8.413638e+05 1.474239e+05 4.952955e+05 4.952956e+05\nAA095627      8.400501e+05 8.412920e+05 1.474611e+05 4.952195e+05 4.952196e+05\nAA095540      3.893786e+05 3.909999e+05 5.809637e+05 1.907315e+04 1.907323e+04\nAA095544      3.870644e+04 3.688622e+04 9.919136e+05 4.087519e+05 4.087518e+05\nAA095634      8.401129e+05 8.413548e+05 1.474319e+05 4.952870e+05 4.952872e+05\nAA095569      4.025872e+05 4.041698e+05 5.639134e+05 3.229395e+04 3.229406e+04\nAA095539a     1.161698e+02 1.909028e+03 9.569501e+05 3.712586e+05 3.712585e+05\n                  AA095636     AA095546     AA096028     AA095562     AA095623\nABTC11932_aca                                                                 \nABTC72881_aca                                                                 \nABTC8929_aca                                                                  \nABTC8938_aca                                                                  \nAA095616                                                                      \nAA093614                                                                      \nAA095550                                                                      \nAA095620                                                                      \nAA095553                                                                      \nAA095548                                                                      \nAA095617                                                                      \nAA093615                                                                      \nAA095626                                                                      \nAA095636                                                                      \nAA095546      6.391660e+05                                                    \nAA096028      6.444506e+05 8.400453e+05                                       \nAA095562      5.934322e+05 3.713131e+05 4.952147e+05                          \nAA095623      5.934297e+05 3.713211e+05 4.952057e+05 8.988890e+00             \nAA095635      4.046162e+00 6.391629e+05 6.444527e+05 5.934311e+05 5.934286e+05\nAA095547      6.391648e+05 1.584017e+00 8.400437e+05 3.713116e+05 3.713197e+05\nAA096030      6.444529e+05 8.400497e+05 4.479035e+00 4.952191e+05 4.952101e+05\nAA095629      5.934295e+05 3.713217e+05 4.952050e+05 9.653908e+00 6.650176e-01\nAA095624      5.934295e+05 3.713219e+05 4.952047e+05 9.910010e+00 9.211194e-01\nAA095637      3.157677e+04 6.231745e+05 6.689812e+05 5.960070e+05 5.960049e+05\nAA095545      6.613796e+05 5.088942e+04 8.888947e+05 4.222018e+05 4.222098e+05\nAA095568      6.088971e+05 3.782348e+05 4.965921e+05 1.592586e+04 1.592622e+04\nAA095625      5.934317e+05 3.713146e+05 4.952129e+05 1.762980e+00 7.225910e+00\nAA095542      6.463454e+05 3.881367e+04 8.733238e+05 4.088952e+05 4.089031e+05\nAA095570      6.444525e+05 8.400488e+05 3.644368e+00 4.952183e+05 4.952093e+05\nAA095549      6.088977e+05 3.782329e+05 4.965943e+05 1.592595e+04 1.592631e+04\nAA095551      6.444789e+05 8.417285e+05 2.212451e+03 4.971646e+05 4.971556e+05\nAA095543      6.463256e+05 3.890388e+04 8.733815e+05 4.089733e+05 4.089812e+05\nAA096029      6.444799e+05 8.401216e+05 8.123434e+01 4.952952e+05 4.952862e+05\nAA095627      6.444529e+05 8.400497e+05 4.520036e+00 4.952192e+05 4.952102e+05\nAA095540      6.031472e+05 3.893782e+05 4.826299e+05 1.907290e+04 1.906668e+04\nAA095544      6.461630e+05 3.870673e+04 8.731488e+05 4.087522e+05 4.087601e+05\nAA095634      6.444727e+05 8.401126e+05 7.348126e+01 4.952867e+05 4.952777e+05\nAA095569      5.918380e+05 4.025869e+05 4.638970e+05 3.229360e+04 3.228480e+04\nAA095539a     6.390504e+05 1.158561e+02 8.399644e+05 3.712590e+05 3.712670e+05\n                  AA095635     AA095547     AA096030     AA095629     AA095624\nABTC11932_aca                                                                 \nABTC72881_aca                                                                 \nABTC8929_aca                                                                  \nABTC8938_aca                                                                  \nAA095616                                                                      \nAA093614                                                                      \nAA095550                                                                      \nAA095620                                                                      \nAA095553                                                                      \nAA095548                                                                      \nAA095617                                                                      \nAA093615                                                                      \nAA095626                                                                      \nAA095636                                                                      \nAA095546                                                                      \nAA096028                                                                      \nAA095562                                                                      \nAA095623                                                                      \nAA095635                                                                      \nAA095547      6.391616e+05                                                    \nAA096030      6.444549e+05 8.400481e+05                                       \nAA095629      5.934284e+05 3.713202e+05 4.952095e+05                          \nAA095624      5.934283e+05 3.713205e+05 4.952092e+05 2.561018e-01             \nAA095637      3.157295e+04 6.231733e+05 6.689836e+05 5.960048e+05 5.960047e+05\nAA095545      6.613763e+05 5.089083e+04 8.888991e+05 4.222104e+05 4.222106e+05\nAA095568      6.088960e+05 3.782334e+05 4.965966e+05 1.592625e+04 1.592626e+04\nAA095625      5.934306e+05 3.713132e+05 4.952174e+05 7.890928e+00 8.147029e+00\nAA095542      6.463421e+05 3.881484e+04 8.733282e+05 4.089037e+05 4.089039e+05\nAA095570      6.444545e+05 8.400473e+05 8.346667e-01 4.952086e+05 4.952084e+05\nAA095549      6.088966e+05 3.782316e+05 4.965987e+05 1.592634e+04 1.592635e+04\nAA095551      6.444810e+05 8.417270e+05 2.208573e+03 4.971549e+05 4.971547e+05\nAA095543      6.463223e+05 3.890505e+04 8.733859e+05 4.089818e+05 4.089820e+05\nAA096029      6.444820e+05 8.401200e+05 7.681981e+01 4.952855e+05 4.952852e+05\nAA095627      6.444550e+05 8.400481e+05 4.100107e-02 4.952095e+05 4.952093e+05\nAA095540      6.031462e+05 3.893768e+05 4.826343e+05 1.906622e+04 1.906604e+04\nAA095544      6.461597e+05 3.870790e+04 8.731532e+05 4.087607e+05 4.087609e+05\nAA095634      6.444748e+05 8.401110e+05 6.912689e+01 4.952770e+05 4.952768e+05\nAA095569      5.918370e+05 4.025855e+05 4.639015e+05 3.228415e+04 3.228390e+04\nAA095539a     6.390472e+05 1.145654e+02 8.399688e+05 3.712676e+05 3.712678e+05\n                  AA095637     AA095545     AA095568     AA095625     AA095542\nABTC11932_aca                                                                 \nABTC72881_aca                                                                 \nABTC8929_aca                                                                  \nABTC8938_aca                                                                  \nAA095616                                                                      \nAA093614                                                                      \nAA095550                                                                      \nAA095620                                                                      \nAA095553                                                                      \nAA095548                                                                      \nAA095617                                                                      \nAA093615                                                                      \nAA095626                                                                      \nAA095636                                                                      \nAA095546                                                                      \nAA096028                                                                      \nAA095562                                                                      \nAA095623                                                                      \nAA095635                                                                      \nAA095547                                                                      \nAA096030                                                                      \nAA095629                                                                      \nAA095624                                                                      \nAA095637                                                                      \nAA095545      6.434689e+05                                                    \nAA095568      6.116494e+05 4.291000e+05                                       \nAA095625      5.960066e+05 4.222034e+05 1.592593e+04                          \nAA095542      6.287403e+05 1.668861e+04 4.161440e+05 4.088968e+05             \nAA095570      6.689832e+05 8.888982e+05 4.965958e+05 4.952165e+05 8.733274e+05\nAA095549      6.116498e+05 4.290981e+05 2.124382e+00 1.592602e+04 4.161422e+05\nAA095551      6.690764e+05 8.905540e+05 4.985744e+05 4.971628e+05 8.749731e+05\nAA095543      6.287165e+05 1.666419e+04 4.162241e+05 4.089748e+05 9.865292e+01\nAA096029      6.690129e+05 8.889705e+05 4.966730e+05 4.952934e+05 8.733995e+05\nAA095627      6.689836e+05 8.888991e+05 4.965967e+05 4.952174e+05 8.733282e+05\nAA095540      6.065686e+05 4.402651e+05 1.402377e+04 1.907168e+04 4.270999e+05\nAA095544      6.285609e+05 1.688315e+04 4.160056e+05 4.087537e+05 1.953037e+02\nAA095634      6.690055e+05 8.889615e+05 4.966646e+05 4.952849e+05 8.733904e+05\nAA095569      5.961178e+05 4.534608e+05 3.353684e+04 3.229187e+04 4.399587e+05\nAA095539a     6.230593e+05 5.094308e+04 3.781847e+05 3.712605e+05 3.883919e+04\n                  AA095570     AA095549     AA095551     AA095543     AA096029\nABTC11932_aca                                                                 \nABTC72881_aca                                                                 \nABTC8929_aca                                                                  \nABTC8938_aca                                                                  \nAA095616                                                                      \nAA093614                                                                      \nAA095550                                                                      \nAA095620                                                                      \nAA095553                                                                      \nAA095548                                                                      \nAA095617                                                                      \nAA093615                                                                      \nAA095626                                                                      \nAA095636                                                                      \nAA095546                                                                      \nAA096028                                                                      \nAA095562                                                                      \nAA095623                                                                      \nAA095635                                                                      \nAA095547                                                                      \nAA096030                                                                      \nAA095629                                                                      \nAA095624                                                                      \nAA095637                                                                      \nAA095545                                                                      \nAA095568                                                                      \nAA095625                                                                      \nAA095542                                                                      \nAA095570                                                                      \nAA095549      4.965979e+05                                                    \nAA095551      2.209296e+03 4.985766e+05                                       \nAA095543      8.733851e+05 4.162223e+05 8.750307e+05                          \nAA096029      7.764189e+01 4.966751e+05 2.136573e+03 8.734572e+05             \nAA095627      8.756678e-01 4.965988e+05 2.208538e+03 8.733859e+05 7.677943e+01\nAA095540      4.826335e+05 1.402587e+04 4.846095e+05 4.271788e+05 4.827106e+05\nAA095544      8.731524e+05 4.160038e+05 8.747980e+05 2.327601e+02 8.732245e+05\nAA095634      6.993713e+01 4.966667e+05 2.142239e+03 8.734481e+05 9.197319e+00\nAA095569      4.639007e+05 3.353889e+04 4.658639e+05 4.400355e+05 4.639777e+05\nAA095539a     8.399679e+05 3.781828e+05 8.416475e+05 3.892928e+04 8.400407e+05\n                  AA095627     AA095540     AA095544     AA095634     AA095569\nABTC11932_aca                                                                 \nABTC72881_aca                                                                 \nABTC8929_aca                                                                  \nABTC8938_aca                                                                  \nAA095616                                                                      \nAA093614                                                                      \nAA095550                                                                      \nAA095620                                                                      \nAA095553                                                                      \nAA095548                                                                      \nAA095617                                                                      \nAA093615                                                                      \nAA095626                                                                      \nAA095636                                                                      \nAA095546                                                                      \nAA096028                                                                      \nAA095562                                                                      \nAA095623                                                                      \nAA095635                                                                      \nAA095547                                                                      \nAA096030                                                                      \nAA095629                                                                      \nAA095624                                                                      \nAA095637                                                                      \nAA095545                                                                      \nAA095568                                                                      \nAA095625                                                                      \nAA095542                                                                      \nAA095570                                                                      \nAA095549                                                                      \nAA095551                                                                      \nAA095543                                                                      \nAA096029                                                                      \nAA095627                                                                      \nAA095540      4.826344e+05                                                    \nAA095544      8.731533e+05 4.269587e+05                                       \nAA095634      6.908711e+01 4.827023e+05 8.732154e+05                          \nAA095569      4.639015e+05 1.969882e+04 4.398130e+05 4.639693e+05             \nAA095539a     8.399688e+05 3.893258e+05 3.873177e+04 8.400317e+05 4.025307e+05\n\n$mantel\n\nMantel statistic based on Pearson's product-moment correlation \n\nCall:\nvegan::mantel(xdis = Dgen, ydis = Dgeo, permutations = permutations,      na.rm = TRUE) \n\nMantel statistic r: 0.5168 \n      Significance: 0.001 \n\nUpper quantiles of permutations (null model):\n   90%    95%  97.5%    99% \n0.0855 0.1238 0.1451 0.1612 \nPermutation: free\nNumber of permutations: 999\n\n# karyo\ngl.ibd(vac.gl18, distance = \"propShared\",\n                   paircols = \"pop\", Dgeo_trans = \"Dgeo\")\n\nStarting gl.ibd \nAnalysis performed on the genlight object.\nCoordinates transformed to Mercator (google) projection to calculate distances in meters.\n\n\n\n\n\n  Coordinates used from: x@other$latlon (Mercator transformed) \n  Transformation of Dgeo: Dgeo \n  Genetic distance: propShared \n  Tranformation of Dgen:  Dgen \n\nMantel statistic based on Pearson's product-moment correlation \n\nCall:\nvegan::mantel(xdis = Dgen, ydis = Dgeo, permutations = permutations,      na.rm = TRUE) \n\nMantel statistic r: 0.5604 \n      Significance: 0.001 \n\nUpper quantiles of permutations (null model):\n  90%   95% 97.5%   99% \n0.093 0.127 0.160 0.202 \nPermutation: free\nNumber of permutations: 999\n\n\nCompleted: gl.ibd \n\n\n$Dgen\n           AA095616   AA093614   AA095550   AA095620   AA095553   AA095548\nAA093614 0.08678606                                                       \nAA095550 0.08626468 0.06292768                                            \nAA095620 0.14121521 0.12965296 0.12677222                                 \nAA095553 0.32998325 0.31788160 0.31575779 0.31824280                      \nAA095548 0.32376396 0.31340504 0.31138502 0.31375667 0.13256956           \nAA095617 0.04621888 0.08742573 0.08650916 0.14140623 0.33089508 0.32464320\nAA093615 0.08841884 0.06305928 0.06167350 0.12855024 0.31724608 0.31193351\nAA095626 0.08667520 0.06343646 0.06060468 0.12962919 0.31527201 0.31075000\nAA095636 0.14572803 0.13587765 0.13223899 0.08789149 0.32506875 0.31822304\nAA095546 0.32429397 0.31249170 0.31110395 0.31095495 0.13643491 0.13229662\nAA096028 0.05059806 0.08862362 0.08521521 0.14207077 0.32914573 0.32416224\nAA095562 0.08782714 0.05961851 0.06241020 0.12924603 0.31608899 0.31171344\nAA095623 0.08756431 0.06422775 0.06061574 0.12932390 0.31637475 0.31208733\nAA095635 0.14254812 0.13117772 0.12801478 0.08521251 0.32174888 0.31548405\nAA095547 0.32151812 0.30977227 0.30868648 0.31000947 0.13787410 0.13184008\nAA096030 0.05053547 0.08806557 0.08551761 0.14125691 0.32942168 0.32292085\nAA095629 0.08619119 0.06437394 0.05970354 0.12853692 0.31512170 0.31085470\nAA095624 0.08627574 0.06229852 0.05984714 0.12816978 0.31654082 0.31211803\nAA095637 0.14745168 0.13509229 0.13170790 0.08641127 0.32080777 0.31806665\nAA095545 0.32495526 0.31336418 0.31270592 0.31432967 0.13651325 0.13323251\nAA095568 0.08611324 0.06378782 0.06009052 0.12735961 0.31649923 0.31119569\nAA095625 0.08696716 0.06325949 0.05972007 0.12873366 0.31612087 0.31132771\nAA095542 0.32540439 0.31401151 0.31246329 0.31431394 0.13577795 0.13287985\nAA095570 0.05170547 0.08973352 0.08717393 0.14286584 0.32902223 0.32287158\nAA095543 0.32754955 0.31557041 0.31386374 0.31621192 0.13425109 0.12989502\nAA096029 0.05329794 0.09180275 0.08879880 0.14311669 0.33015877 0.32378540\nAA095627 0.05025390 0.08603755 0.08504056 0.14005179 0.32834276 0.32255565\nAA095544 0.32453682 0.31230384 0.31102992 0.31394411 0.13366468 0.13062818\nAA095634 0.05200826 0.09017185 0.08735654 0.14213807 0.32956274 0.32407482\nAA095569 0.08781870 0.06429757 0.06114564 0.12912740 0.31697344 0.31241060\n           AA095617   AA093615   AA095626   AA095636   AA095546   AA096028\nAA093614                                                                  \nAA095550                                                                  \nAA095620                                                                  \nAA095553                                                                  \nAA095548                                                                  \nAA095617                                                                  \nAA093615 0.08839889                                                       \nAA095626 0.08694741 0.03364938                                            \nAA095636 0.14628306 0.13415417 0.13457442                                 \nAA095546 0.32558840 0.31157869 0.30984602 0.31666481                      \nAA096028 0.04992833 0.08827145 0.08693631 0.14716467 0.32455743           \nAA095562 0.08830582 0.06097394 0.06085567 0.13443139 0.31221677 0.08794511\nAA095623 0.08823392 0.03539683 0.02798696 0.13472416 0.31131322 0.08768589\nAA095635 0.14306562 0.12967495 0.12932462 0.08565490 0.31559237 0.14293665\nAA095547 0.32255030 0.31029298 0.30892445 0.31549152 0.12539362 0.32230058\nAA096030 0.05045667 0.08874684 0.08738178 0.14642960 0.32430196 0.04735877\nAA095629 0.08667726 0.05506653 0.03393092 0.13368724 0.31084479 0.08632537\nAA095624 0.08679105 0.03530623 0.03363794 0.13384089 0.31132376 0.08571299\nAA095637 0.14716351 0.13395858 0.13460763 0.08786402 0.31642781 0.14721800\nAA095545 0.32681564 0.31353957 0.31223785 0.31887713 0.13144768 0.32619475\nAA095568 0.08663958 0.05769056 0.05673038 0.13268005 0.31064090 0.08705635\nAA095625 0.08703557 0.03487633 0.02959312 0.13447549 0.31109569 0.08699698\nAA095542 0.32634633 0.31327768 0.31228976 0.31829619 0.13114873 0.32483646\nAA095570 0.05127300 0.08920974 0.08714534 0.14842900 0.32395479 0.03821203\nAA095543 0.32823199 0.31459298 0.31365191 0.32087072 0.13007471 0.32706687\nAA096029 0.05391313 0.09131175 0.08974954 0.14816340 0.32422984 0.04767337\nAA095627 0.04947125 0.08750058 0.08565806 0.14576422 0.32341082 0.04464449\nAA095544 0.32531973 0.31199330 0.31119519 0.31770948 0.13178003 0.32475974\nAA095634 0.05115303 0.08920753 0.08764361 0.14659825 0.32484949 0.04598886\nAA095569 0.08835102 0.06159852 0.06075713 0.13437068 0.31258888 0.08840510\n           AA095562   AA095623   AA095635   AA095547   AA096030   AA095629\nAA093614                                                                  \nAA095550                                                                  \nAA095620                                                                  \nAA095553                                                                  \nAA095548                                                                  \nAA095617                                                                  \nAA093615                                                                  \nAA095626                                                                  \nAA095636                                                                  \nAA095546                                                                  \nAA096028                                                                  \nAA095562                                                                  \nAA095623 0.06094550                                                       \nAA095635 0.13059436 0.12974316                                            \nAA095547 0.30966075 0.31016163 0.31229070                                 \nAA096030 0.08836485 0.08805626 0.14282961 0.32162986                      \nAA095629 0.06115443 0.03355674 0.12888741 0.30909260 0.08696658           \nAA095624 0.06056771 0.02962980 0.12919027 0.30952003 0.08626202 0.03330168\nAA095637 0.13503086 0.13427310 0.08341461 0.31333001 0.14685931 0.13334048\nAA095545 0.31298818 0.31334090 0.31617039 0.13084569 0.32514975 0.31263063\nAA095568 0.06192790 0.05737427 0.12791055 0.30863806 0.08733609 0.05725295\nAA095625 0.06102429 0.02986604 0.12892985 0.30944548 0.08687419 0.03357051\nAA095542 0.31323019 0.31356067 0.31613885 0.13276991 0.32334546 0.31266621\nAA095570 0.08823189 0.08878645 0.14385914 0.32119241 0.04853950 0.08681556\nAA095543 0.31516148 0.31501365 0.31947099 0.13114116 0.32652951 0.31408346\nAA096029 0.09102516 0.09082262 0.14430205 0.32133449 0.05121461 0.08876394\nAA095627 0.08719926 0.08698304 0.14114280 0.32044824 0.04773444 0.08604834\nAA095544 0.31232949 0.31233624 0.31651224 0.13071585 0.32449216 0.31129795\nAA095634 0.08874634 0.08904473 0.14308616 0.32237819 0.04878956 0.08773148\nAA095569 0.06335043 0.06078681 0.12983439 0.30915980 0.08756439 0.06062960\n           AA095624   AA095637   AA095545   AA095568   AA095625   AA095542\nAA093614                                                                  \nAA095550                                                                  \nAA095620                                                                  \nAA095553                                                                  \nAA095548                                                                  \nAA095617                                                                  \nAA093615                                                                  \nAA095626                                                                  \nAA095636                                                                  \nAA095546                                                                  \nAA096028                                                                  \nAA095562                                                                  \nAA095623                                                                  \nAA095635                                                                  \nAA095547                                                                  \nAA096030                                                                  \nAA095629                                                                  \nAA095624                                                                  \nAA095637 0.13359050                                                       \nAA095545 0.31367701 0.31855084                                            \nAA095568 0.05578466 0.13267915 0.31208080                                 \nAA095625 0.02841547 0.13435548 0.31244552 0.05396822                      \nAA095542 0.31335517 0.31890594 0.13078863 0.31226555 0.31266575           \nAA095570 0.08627419 0.14777161 0.32504723 0.08869328 0.08740318 0.32539532\nAA095543 0.31404784 0.31944097 0.12723080 0.31335272 0.31400658 0.12441947\nAA096029 0.08902335 0.14922636 0.32657999 0.09038502 0.08937366 0.32582974\nAA095627 0.08472028 0.14601258 0.32471395 0.08624569 0.08559181 0.32409451\nAA095544 0.31193242 0.31684114 0.12879307 0.31012859 0.31165319 0.12388355\nAA095634 0.08725959 0.14808463 0.32628736 0.08800230 0.08772173 0.32616434\nAA095569 0.06035364 0.13409335 0.31376765 0.06288358 0.05967139 0.31391008\n           AA095570   AA095543   AA096029   AA095627   AA095544   AA095634\nAA093614                                                                  \nAA095550                                                                  \nAA095620                                                                  \nAA095553                                                                  \nAA095548                                                                  \nAA095617                                                                  \nAA093615                                                                  \nAA095626                                                                  \nAA095636                                                                  \nAA095546                                                                  \nAA096028                                                                  \nAA095562                                                                  \nAA095623                                                                  \nAA095635                                                                  \nAA095547                                                                  \nAA096030                                                                  \nAA095629                                                                  \nAA095624                                                                  \nAA095637                                                                  \nAA095545                                                                  \nAA095568                                                                  \nAA095625                                                                  \nAA095542                                                                  \nAA095570                                                                  \nAA095543 0.32805086                                                       \nAA096029 0.04907738 0.32839328                                            \nAA095627 0.04110066 0.32652236 0.04966153                                 \nAA095544 0.32464949 0.12329120 0.32497694 0.32375252                      \nAA095634 0.04782081 0.32772451 0.05006785 0.04752622 0.32527701           \nAA095569 0.08853196 0.31518086 0.08998039 0.08654804 0.31173884 0.08800186\n\n$Dgeo\n             AA095616     AA093614     AA095550     AA095620     AA095553\nAA093614 6.174925e+05                                                    \nAA095550 5.835808e+05 3.392094e+04                                       \nAA095620 8.419997e+05 5.960621e+05 5.949859e+05                          \nAA095553 9.798672e+05 3.712205e+05 4.037586e+05 6.231736e+05             \nAA095548 9.812672e+05 3.728255e+05 4.053372e+05 6.227938e+05 1.916149e+03\nAA095617 2.666398e+04 5.962918e+05 5.623712e+05 8.156344e+05 9.570227e+05\nAA093615 6.173817e+05 1.221171e+02 3.380902e+04 5.960067e+05 3.713131e+05\nAA095626 6.173818e+05 1.220032e+02 3.380913e+04 5.960067e+05 3.713130e+05\nAA095636 8.168970e+05 5.934934e+05 5.906272e+05 3.157834e+04 6.391663e+05\nAA095546 9.798668e+05 3.712201e+05 4.037583e+05 6.231733e+05 3.836682e-01\nAA096028 1.740910e+05 4.953345e+05 4.621541e+05 6.689821e+05 8.400456e+05\nAA095562 6.173814e+05 1.224622e+02 3.380867e+04 5.960066e+05 3.713134e+05\nAA095623 6.173725e+05 1.312137e+02 3.379981e+04 5.960045e+05 3.713214e+05\nAA095635 8.168991e+05 5.934923e+05 5.906263e+05 3.157452e+04 6.391632e+05\nAA095547 9.798653e+05 3.712187e+05 4.037568e+05 6.231721e+05 1.967685e+00\nAA096030 1.740882e+05 4.953390e+05 4.621585e+05 6.689845e+05 8.400500e+05\nAA095629 6.173719e+05 1.318624e+02 3.379916e+04 5.960044e+05 3.713220e+05\nAA095624 6.173716e+05 1.321122e+02 3.379891e+04 5.960043e+05 3.713222e+05\nAA095637 8.419988e+05 5.960625e+05 5.949862e+05 1.663905e+00 6.231748e+05\nAA095545 1.029991e+06 4.221089e+05 4.546274e+05 6.434676e+05 5.088908e+04\nAA095568 6.151368e+05 1.589262e+04 3.541141e+04 6.116490e+05 3.782351e+05\nAA095625 6.173796e+05 1.241760e+02 3.380693e+04 5.960062e+05 3.713150e+05\nAA095542 1.015150e+06 4.088043e+05 4.410922e+05 6.287389e+05 3.881339e+04\nAA095570 1.740887e+05 4.953381e+05 4.621577e+05 6.689841e+05 8.400492e+05\nAA095543 1.015216e+06 4.088824e+05 4.411688e+05 6.287152e+05 3.890359e+04\nAA096029 1.740504e+05 4.954150e+05 4.622347e+05 6.690138e+05 8.401220e+05\nAA095627 1.740882e+05 4.953390e+05 4.621586e+05 6.689845e+05 8.400501e+05\nAA095544 1.014985e+06 4.086613e+05 4.409459e+05 6.285596e+05 3.870644e+04\nAA095634 1.740584e+05 4.954065e+05 4.622263e+05 6.690063e+05 8.401129e+05\nAA095569 5.850909e+05 3.240410e+04 1.904008e+03 5.961175e+05 4.025872e+05\n             AA095548     AA095617     AA093615     AA095626     AA095636\nAA093614                                                                 \nAA095550                                                                 \nAA095620                                                                 \nAA095553                                                                 \nAA095548                                                                 \nAA095617 9.584041e+05                                                    \nAA093615 3.729179e+05 5.961797e+05                                       \nAA095626 3.729178e+05 5.961798e+05 1.172325e-01                          \nAA095636 6.388679e+05 7.906327e+05 5.934323e+05 5.934324e+05             \nAA095546 1.916340e+03 9.570223e+05 3.713127e+05 3.713126e+05 6.391660e+05\nAA096028 8.412875e+05 1.474640e+05 4.952150e+05 4.952151e+05 6.444506e+05\nAA095562 3.729182e+05 5.961793e+05 3.552371e-01 4.724696e-01 5.934322e+05\nAA095623 3.729262e+05 5.961705e+05 9.344127e+00 9.461360e+00 5.934297e+05\nAA095635 6.388647e+05 7.906349e+05 5.934312e+05 5.934312e+05 4.046162e+00\nAA095547 1.917129e+03 9.570208e+05 3.713113e+05 3.713112e+05 6.391648e+05\nAA096030 8.412919e+05 1.474612e+05 4.952195e+05 4.952196e+05 6.444529e+05\nAA095629 3.729268e+05 5.961698e+05 1.000915e+01 1.012638e+01 5.934295e+05\nAA095624 3.729270e+05 5.961696e+05 1.026525e+01 1.038248e+01 5.934295e+05\nAA095637 6.227950e+05 8.156335e+05 5.960071e+05 5.960071e+05 3.157677e+04\nAA095545 4.929108e+04 1.007021e+06 4.222015e+05 4.222014e+05 6.613796e+05\nAA095568 3.798787e+05 5.943637e+05 1.592585e+04 1.592584e+04 6.088971e+05\nAA095625 3.729198e+05 5.961776e+05 2.118217e+00 2.235450e+00 5.934317e+05\nAA095542 3.699575e+04 9.920796e+05 4.088949e+05 4.088948e+05 6.463454e+05\nAA095570 8.412911e+05 1.474617e+05 4.952187e+05 4.952188e+05 6.444525e+05\nAA095543 3.708531e+04 9.921446e+05 4.089730e+05 4.089729e+05 6.463256e+05\nAA096029 8.413638e+05 1.474239e+05 4.952955e+05 4.952956e+05 6.444799e+05\nAA095627 8.412920e+05 1.474611e+05 4.952195e+05 4.952196e+05 6.444529e+05\nAA095544 3.688622e+04 9.919136e+05 4.087519e+05 4.087518e+05 6.461630e+05\nAA095634 8.413548e+05 1.474319e+05 4.952870e+05 4.952872e+05 6.444727e+05\nAA095569 4.041698e+05 5.639134e+05 3.229395e+04 3.229406e+04 5.918380e+05\n             AA095546     AA096028     AA095562     AA095623     AA095635\nAA093614                                                                 \nAA095550                                                                 \nAA095620                                                                 \nAA095553                                                                 \nAA095548                                                                 \nAA095617                                                                 \nAA093615                                                                 \nAA095626                                                                 \nAA095636                                                                 \nAA095546                                                                 \nAA096028 8.400453e+05                                                    \nAA095562 3.713131e+05 4.952147e+05                                       \nAA095623 3.713211e+05 4.952057e+05 8.988890e+00                          \nAA095635 6.391629e+05 6.444527e+05 5.934311e+05 5.934286e+05             \nAA095547 1.584017e+00 8.400437e+05 3.713116e+05 3.713197e+05 6.391616e+05\nAA096030 8.400497e+05 4.479035e+00 4.952191e+05 4.952101e+05 6.444549e+05\nAA095629 3.713217e+05 4.952050e+05 9.653908e+00 6.650176e-01 5.934284e+05\nAA095624 3.713219e+05 4.952047e+05 9.910010e+00 9.211194e-01 5.934283e+05\nAA095637 6.231745e+05 6.689812e+05 5.960070e+05 5.960049e+05 3.157295e+04\nAA095545 5.088942e+04 8.888947e+05 4.222018e+05 4.222098e+05 6.613763e+05\nAA095568 3.782348e+05 4.965921e+05 1.592586e+04 1.592622e+04 6.088960e+05\nAA095625 3.713146e+05 4.952129e+05 1.762980e+00 7.225910e+00 5.934306e+05\nAA095542 3.881367e+04 8.733238e+05 4.088952e+05 4.089031e+05 6.463421e+05\nAA095570 8.400488e+05 3.644368e+00 4.952183e+05 4.952093e+05 6.444545e+05\nAA095543 3.890388e+04 8.733815e+05 4.089733e+05 4.089812e+05 6.463223e+05\nAA096029 8.401216e+05 8.123434e+01 4.952952e+05 4.952862e+05 6.444820e+05\nAA095627 8.400497e+05 4.520036e+00 4.952192e+05 4.952102e+05 6.444550e+05\nAA095544 3.870673e+04 8.731488e+05 4.087522e+05 4.087601e+05 6.461597e+05\nAA095634 8.401126e+05 7.348126e+01 4.952867e+05 4.952777e+05 6.444748e+05\nAA095569 4.025869e+05 4.638970e+05 3.229360e+04 3.228480e+04 5.918370e+05\n             AA095547     AA096030     AA095629     AA095624     AA095637\nAA093614                                                                 \nAA095550                                                                 \nAA095620                                                                 \nAA095553                                                                 \nAA095548                                                                 \nAA095617                                                                 \nAA093615                                                                 \nAA095626                                                                 \nAA095636                                                                 \nAA095546                                                                 \nAA096028                                                                 \nAA095562                                                                 \nAA095623                                                                 \nAA095635                                                                 \nAA095547                                                                 \nAA096030 8.400481e+05                                                    \nAA095629 3.713202e+05 4.952095e+05                                       \nAA095624 3.713205e+05 4.952092e+05 2.561018e-01                          \nAA095637 6.231733e+05 6.689836e+05 5.960048e+05 5.960047e+05             \nAA095545 5.089083e+04 8.888991e+05 4.222104e+05 4.222106e+05 6.434689e+05\nAA095568 3.782334e+05 4.965966e+05 1.592625e+04 1.592626e+04 6.116494e+05\nAA095625 3.713132e+05 4.952174e+05 7.890928e+00 8.147029e+00 5.960066e+05\nAA095542 3.881484e+04 8.733282e+05 4.089037e+05 4.089039e+05 6.287403e+05\nAA095570 8.400473e+05 8.346667e-01 4.952086e+05 4.952084e+05 6.689832e+05\nAA095543 3.890505e+04 8.733859e+05 4.089818e+05 4.089820e+05 6.287165e+05\nAA096029 8.401200e+05 7.681981e+01 4.952855e+05 4.952852e+05 6.690129e+05\nAA095627 8.400481e+05 4.100107e-02 4.952095e+05 4.952093e+05 6.689836e+05\nAA095544 3.870790e+04 8.731532e+05 4.087607e+05 4.087609e+05 6.285609e+05\nAA095634 8.401110e+05 6.912689e+01 4.952770e+05 4.952768e+05 6.690055e+05\nAA095569 4.025855e+05 4.639015e+05 3.228415e+04 3.228390e+04 5.961178e+05\n             AA095545     AA095568     AA095625     AA095542     AA095570\nAA093614                                                                 \nAA095550                                                                 \nAA095620                                                                 \nAA095553                                                                 \nAA095548                                                                 \nAA095617                                                                 \nAA093615                                                                 \nAA095626                                                                 \nAA095636                                                                 \nAA095546                                                                 \nAA096028                                                                 \nAA095562                                                                 \nAA095623                                                                 \nAA095635                                                                 \nAA095547                                                                 \nAA096030                                                                 \nAA095629                                                                 \nAA095624                                                                 \nAA095637                                                                 \nAA095545                                                                 \nAA095568 4.291000e+05                                                    \nAA095625 4.222034e+05 1.592593e+04                                       \nAA095542 1.668861e+04 4.161440e+05 4.088968e+05                          \nAA095570 8.888982e+05 4.965958e+05 4.952165e+05 8.733274e+05             \nAA095543 1.666419e+04 4.162241e+05 4.089748e+05 9.865292e+01 8.733851e+05\nAA096029 8.889705e+05 4.966730e+05 4.952934e+05 8.733995e+05 7.764189e+01\nAA095627 8.888991e+05 4.965967e+05 4.952174e+05 8.733282e+05 8.756678e-01\nAA095544 1.688315e+04 4.160056e+05 4.087537e+05 1.953037e+02 8.731524e+05\nAA095634 8.889615e+05 4.966646e+05 4.952849e+05 8.733904e+05 6.993713e+01\nAA095569 4.534608e+05 3.353684e+04 3.229187e+04 4.399587e+05 4.639007e+05\n             AA095543     AA096029     AA095627     AA095544     AA095634\nAA093614                                                                 \nAA095550                                                                 \nAA095620                                                                 \nAA095553                                                                 \nAA095548                                                                 \nAA095617                                                                 \nAA093615                                                                 \nAA095626                                                                 \nAA095636                                                                 \nAA095546                                                                 \nAA096028                                                                 \nAA095562                                                                 \nAA095623                                                                 \nAA095635                                                                 \nAA095547                                                                 \nAA096030                                                                 \nAA095629                                                                 \nAA095624                                                                 \nAA095637                                                                 \nAA095545                                                                 \nAA095568                                                                 \nAA095625                                                                 \nAA095542                                                                 \nAA095570                                                                 \nAA095543                                                                 \nAA096029 8.734572e+05                                                    \nAA095627 8.733859e+05 7.677943e+01                                       \nAA095544 2.327601e+02 8.732245e+05 8.731533e+05                          \nAA095634 8.734481e+05 9.197319e+00 6.908711e+01 8.732154e+05             \nAA095569 4.400355e+05 4.639777e+05 4.639015e+05 4.398130e+05 4.639693e+05\n\n$mantel\n\nMantel statistic based on Pearson's product-moment correlation \n\nCall:\nvegan::mantel(xdis = Dgen, ydis = Dgeo, permutations = permutations,      na.rm = TRUE) \n\nMantel statistic r: 0.5604 \n      Significance: 0.001 \n\nUpper quantiles of permutations (null model):\n  90%   95% 97.5%   99% \n0.093 0.127 0.160 0.202 \nPermutation: free\nNumber of permutations: 999\n\n\n\n## reviewer figures -------------------------------------------------------------\n# reviewer ibd karyo\nreview.analysis &lt;- function(gl, analysis = \"between\"){\n  \n  if(analysis == \"within\"){ ndist &lt;- 51; diffCol = \"#FFC33B\"}\n  if(analysis == \"between\"){ ndist &lt;- 1050; diffCol = \"#FF5AAF\"}\n  \n  karyoibd &lt;- gl.ibd(gl, distance = \"propShared\",\n                     paircols = \"pop\", Dgeo_trans = \"Dgeo\")\n  \n  \n  mat &lt;- karyoibd$Dgeo/1000\n  prop &lt;- karyoibd$Dgen\n  \n  dfDist &lt;- matrixConvert(mat, c(\"id1\", \"id2\", \"geo\"))\n  dfGen &lt;- matrixConvert(prop, c(\"id1\", \"id2\", \"gen\"))\n  jason2 &lt;- gl\n  dfkaryo &lt;- jason2@other$ind.metrics[,c(\"id\", \"karyo\")]\n  dfpop &lt;- jason2@other$ind.metrics[,c(\"id\", \"pop\")]\n  \n  \n  \n  df &lt;- left_join(dfGen, dfDist) %&gt;% \n    left_join(dfkaryo, by = c(\"id1\" = \"id\")) %&gt;% \n    left_join(dfkaryo, by = c(\"id2\" = \"id\")) %&gt;% \n    left_join(dfpop, by = c(\"id1\" = \"id\")) %&gt;% \n    left_join(dfpop, by = c(\"id2\" = \"id\")) %&gt;% \n    mutate(pair = paste(karyo.x,\"-\", karyo.y)) %&gt;% \n    filter(geo &lt;= ndist) %&gt;%        # change based on question between or within\n  rowwise() %&gt;% \n    mutate(karyo = ifelse(karyo.x == karyo.y, \"same\", \"different\"),\n           diffpop = pop.x == pop.y) \n\n  indexPost &lt;- c(df$id1, df$id2)\n  \n\n  m &lt;- lm(gen ~ geo, data = df)\n  summary(m)\n  \n  m2 &lt;- lm(gen ~  geo + karyo, data = df)\n  summary(m2)\n  \n # tab_model(m, m2, show.aic = TRUE, file = \"temp.html\")\n #  webshot(\"temp.html\",file = paste0(\"model_karyo_ibd_\", ndist, \".png\") , \n #  vwidth = 441, vheight = 351)\n  \n  aic &lt;- AIC(m, m2)\n  aic$delta &lt;- aic$AIC - min(aic$AIC)\n  \n  x &lt;- 1:ndist\n  \n  y1 &lt;- predict(m, newdata = data.frame(geo = x), interval = 'confidence')\n  y2 &lt;- predict(m2, newdata = data.frame(geo = x, karyo = \"same\"))\n  y3 &lt;- predict(m2, newdata = data.frame(geo = x, karyo = \"different\"))\n  \n  predmodel &lt;- data.frame(geo = rep(x,2), gen = c(y2, y3), \n                          karyo = rep(c(\"same\", \"different\"), each = ndist))\n  \n  sm &lt;- summary(m2)\n  \n  b0 &lt;- round(m2$coefficients[1],3)\n  b1 &lt;- signif(m2$coefficients[2], 1)\n  b2 &lt;- round(m2$coefficients[3], 3)\n  \n  r2 &lt;- round(sm$r.squared,2)\n  tb2 &lt;- round(sm$coefficients[3,3], 2)\n  \n  mExpress &lt;- paste0(b0 ,\n                     \" + \", b1, \" + \", b2)\n  pval &lt;- round(sm$coefficients[3,4],2)\n  \n  grob_m &lt;- grobTree(textGrob(bquote(paste(italic(\"y = \"), \"β\"[0], \n                                           \" + \",  \"β\"[1], italic(\" x\"),\"  + \",  \n                                           \"β\"[2],italic(\" same karyo\"))),\n                              x= 0.30,  \n                              y= 0.12,\n                              hjust=0, rot = 0,\n                              gp=gpar(col=\"black\", fontsize=10, fontface=\"italic\",\n                                      backgroun = \"white\")))\n  \n  \n  grob_m2 &lt;- grobTree(textGrob(bquote(paste(\"β\"[2],\" = \", .(b2), \" (\", italic(\"t = \"),.(tb2),\n                                            italic(\", p = \"), .(pval), \")\")),\n                               x= 0.30,  \n                               y= 0.05,\n                               hjust=0, rot = 0,\n                               gp=gpar(col=\"black\", fontsize=8, fontface=\"italic\",\n                                       backgroun = \"white\")))\n  \n  \n  \n  reviewerPlot &lt;-ggplot(df, aes(geo, gen, fill = karyo)) +\n    geom_point(alpha = 0.7, size = 4, pch = 21) +\n    theme_classic() +\n    geom_line(data = filter(predmodel, geo &lt; ndist), \n              aes(x = geo, y = gen, colour = karyo), linewidth = 1, lty = 5)+\n    xlab(\"Distance (km)\")+\n    ylab(\"1-(Proportion of Shared Alleles)\")+\n    scale_fill_manual(values = c(different = diffCol, same = \"black\"))+\n    scale_colour_manual(values = c(different = diffCol, same = \"black\"))+\n    # theme(legend.position = \"none\") +\n    geom_text(aes(x = 39, y = 0.05, label = c(\"\")), cex = 5)+\n    theme(legend.position = \"bottom\")+\n    labs(fill = \"Karyotype\", colour = \"Karyotype\")+\n    annotation_custom(grob_m)+\n    annotation_custom(grob_m2)\n  \n  \n  return(reviewerPlot)\n  \n}\n\n\nreview.analysis(gl = vac.gl18, analysis = \"between\")\n\nStarting gl.ibd \nAnalysis performed on the genlight object.\nCoordinates transformed to Mercator (google) projection to calculate distances in meters.\n\n\n  Coordinates used from: x@other$latlon (Mercator transformed) \n  Transformation of Dgeo: Dgeo \n  Genetic distance: propShared \n  Tranformation of Dgen:  Dgen \n\nMantel statistic based on Pearson's product-moment correlation \n\nCall:\nvegan::mantel(xdis = Dgen, ydis = Dgeo, permutations = permutations,      na.rm = TRUE) \n\nMantel statistic r: 0.5604 \n      Significance: 0.001 \n\nUpper quantiles of permutations (null model):\n   90%    95%  97.5%    99% \n0.0923 0.1326 0.1814 0.2106 \nPermutation: free\nNumber of permutations: 999\n\n\nCompleted: gl.ibd \n\n\nJoining with `by = join_by(id1, id2)`\n\n\n\n\n\n\n\nreview.analysis(gl = vac.gl18, analysis = \"within\")\n\nStarting gl.ibd \nAnalysis performed on the genlight object.\nCoordinates transformed to Mercator (google) projection to calculate distances in meters.\n\n\n  Coordinates used from: x@other$latlon (Mercator transformed) \n  Transformation of Dgeo: Dgeo \n  Genetic distance: propShared \n  Tranformation of Dgen:  Dgen \n\nMantel statistic based on Pearson's product-moment correlation \n\nCall:\nvegan::mantel(xdis = Dgen, ydis = Dgeo, permutations = permutations,      na.rm = TRUE) \n\nMantel statistic r: 0.5604 \n      Significance: 0.001 \n\nUpper quantiles of permutations (null model):\n   90%    95%  97.5%    99% \n0.0842 0.1116 0.1366 0.1819 \nPermutation: free\nNumber of permutations: 999\n\n\nCompleted: gl.ibd \n\n\nJoining with `by = join_by(id1, id2)`"
  },
  {
    "objectID": "session13.html#whole-genome",
    "href": "session13.html#whole-genome",
    "title": "13  Combining Genomic Resources",
    "section": "Whole Genome",
    "text": "Whole Genome\n\nvac.gl &lt;- gl.load(\"./data/varanus_MBE.rds\")\n\nStarting gl.load \n  Processing genlight object with SNP data\n  Warning: data include loci that are scored NA across all individuals.\n  Consider filtering using gl &lt;- gl.filter.allna(gl)\n  Loaded object of type SNP from ./data/varanus_MBE.rds \nCompleted: gl.load \n\nclass(vac.gl) &lt;- \"dartR\"\n\n####Add position for loci metadata\nvac.gl@position &lt;- as.integer(runif(nLoc(vac.gl), 2, 49))\n\n# subset SNPs that align to inferred chromosome pool scaffolds -----------------\n\ntable(vac.gl@other$loc.metrics$Chrom_Varanus_JD_vac_aligned_chr6_7 != \"\")\n\n\n FALSE   TRUE \n283593  17974 \n\nindex6 &lt;-\n  vac.gl@other$loc.metrics$Chrom_Varanus_JD_vac_aligned_chr6_7 != \"\"\n\n# assign alleles aligned to chromosome 6_7 scaffolds to a new genlight object --\n\nvac.gl6 &lt;- vac.gl[, index6]\nvac.gl6x &lt;- gl.filter.allna(vac.gl6)\n\nStarting gl.filter.allna \n  Processing genlight object with SNP data\n  Warning: data include loci that are scored NA across all individuals.\n  Consider filtering using gl &lt;- gl.filter.allna(gl)\n  Identifying and removing loci and individuals scored all \n                missing (NA)\n  Deleting loci that are scored as all missing (NA)\n  Deleted\n  Deleting individuals that are scored as all missing (NA)\nCompleted: gl.filter.allna \n\n# report private alleles and fixed alleles per pair of populations for vac.gl6\ngl.report.pa(vac.gl6x)\n\nStarting gl.report.pa \n  Processing genlight object with SNP data\n  p1 p2 pop1 pop2 N1 N2 fixed priv1 priv2 Chao1 Chao2 totalpriv   AFD asym\n1  1  2   AA   MA  5  7    36   298  1213    72   121      1511 0.037   NA\n2  1  3   AA   MM  5 22    97   274  3973    72   697      4247 0.078   NA\n3  2  3   MA   MM  7 22    35   310  3346   121   697      3656 0.063   NA\n  asym.sig\n1       NA\n2       NA\n3       NA\n  Table of private alleles and fixed differences returned\nCompleted: gl.report.pa \n\n\n  p1 p2 pop1 pop2 N1 N2 fixed priv1 priv2 Chao1 Chao2 totalpriv   AFD asym\n1  1  2   AA   MA  5  7    36   298  1213    72   121      1511 0.037   NA\n2  1  3   AA   MM  5 22    97   274  3973    72   697      4247 0.078   NA\n3  2  3   MA   MM  7 22    35   310  3346   121   697      3656 0.063   NA\n  asym.sig\n1       NA\n2       NA\n3       NA\n\npop(vac.gl6) &lt;- vac.gl6@other$ind.metrics$pop\n\n### Check the genlight object for dartR requirements\n\n\nvac.gl6 &lt;- gl.compliance.check(vac.gl6)\n\nStarting gl.compliance.check \n  Processing genlight object with SNP data\n  Warning: data include loci that are scored NA across all individuals.\n  Consider filtering using gl &lt;- gl.filter.allna(gl)\n  Checking coding of SNPs\n    SNP data scored NA, 0, 1 or 2 confirmed\n  Checking for population assignments\n    Population assignments confirmed\n  Checking locus metrics and flags\n  Recalculating locus metrics\n  Checking for monomorphic loci\n    Dataset contains monomorphic loci\n  Checking for loci with all missing data\n    Dataset contains loci with all missing dat\n  Checking whether individual names are unique.\n  Checking for individual metrics\n    Individual metrics confirmed\n  Spelling of coordinates checked and changed if necessary to \n            lat/lon\nCompleted: gl.compliance.check \n\nvac.gl6@loc.names %&gt;% duplicated %&gt;% table\n\n.\nFALSE \n17974 \n\n# Subset the western population ------------------------------------------------\n\nvac.gl6@other$ind.metrics$ind\n\n [1] SW1  bh1  BH9  MI1  CC1  CC10 SW2  bh2  BHA  MI2a CC2  BHF  RR1  BH3  BHB \n[16] MI5  CC3  RR2a bh4  BHC  MI4a BH5  BHD  CC6  RR3  MI3  CC7  BHJ  RR4  RR5 \n[31] CC8  BHK  RR6  BH8 \n65 Levels:  bh1 bh2 BH3 bh4 BH5 BH6 BH7 BH8 BH9 BHA BHB BHC BHD BHE BHF ... zoo2\n\nwest &lt;- gl.keep.pop(vac.gl6, c(\"bh\"))\n\nStarting gl.keep.pop \n  Processing genlight object with SNP data\n  Warning: data include loci that are scored NA across all individuals.\n  Consider filtering using gl &lt;- gl.filter.allna(gl)\n  Checking for presence of nominated populations\n  Retaining only populations bh \n  Warning: Resultant dataset may contain monomorphic loci\n  Locus metrics not recalculated\nCompleted: gl.keep.pop \n\n# Group individuals of the western population by karyotype\n\npop(west) &lt;- west@other$ind.metrics$karyo\n\n# Reassign karyotype to a new genlight object ----------------------------------\n\nwest &lt;- gl.keep.pop(west, c(\"AA\", \"MA\", \"MM\"))\n\nStarting gl.keep.pop \n  Processing genlight object with SNP data\n  Warning: data include loci that are scored NA across all individuals.\n  Consider filtering using gl &lt;- gl.filter.allna(gl)\n  Checking for presence of nominated populations\n  Retaining only populations AA, MA, MM \n  Warning: Resultant dataset may contain monomorphic loci\n  Locus metrics not recalculated\nCompleted: gl.keep.pop \n\n# Report private and fixed alleles for each karyotype\n\ngl.report.pa(west)\n\nStarting gl.report.pa \n  Processing genlight object with SNP data\n  Warning: data include loci that are scored NA across all individuals.\n  Consider filtering using gl &lt;- gl.filter.allna(gl)\n  p1 p2 pop1 pop2 N1 N2 fixed priv1 priv2 Chao1 Chao2 totalpriv   AFD asym\n1  1  2   AA   MA  5  4    36   416   649     1     2      1065 0.027   NA\n2  1  3   AA   MM  5  5   146   560   916     1     3      1476 0.043   NA\n3  2  3   MA   MM  4  5    28   429   599     2     3      1028 0.030   NA\n  asym.sig\n1       NA\n2       NA\n3       NA\n  Table of private alleles and fixed differences returned\nCompleted: gl.report.pa \n\n\n  p1 p2 pop1 pop2 N1 N2 fixed priv1 priv2 Chao1 Chao2 totalpriv   AFD asym\n1  1  2   AA   MA  5  4    36   416   649     1     2      1065 0.027   NA\n2  1  3   AA   MM  5  5   146   560   916     1     3      1476 0.043   NA\n3  2  3   MA   MM  4  5    28   429   599     2     3      1028 0.030   NA\n  asym.sig\n1       NA\n2       NA\n3       NA\n\n# Add individual metadata to specimen IDs --------------------------------------\n\npop(west) &lt;-\n  paste(\n    west@other$ind.metrics$karyo,\n    west@other$ind.metrics$id,\n    west@other$ind.metrics$pop\n  )\n\n# Fixed difference analysis ----------------------------------------------------\n\nfp6 &lt;- gl.fixed.diff(west)\n\nStarting gl.fixed.diff \n  Processing genlight object with SNP data\n  Warning: data include loci that are scored NA across all individuals.\n  Consider filtering using gl &lt;- gl.filter.allna(gl)\n  Comparing populations for absolute fixed differences\n  Warning: Monomorphic loci retained, used in calculations\n  Comparing populations pairwise -- this may take time. Please be patient\nCompleted: gl.fixed.diff \n\nfp6$df\n\nNULL\n\ntable(pop(west))\n\n\nAA AA095569 bh AA AA095623 bh AA AA095625 bh AA AA095626 bh AA AA095629 bh \n             1              1              1              1              1 \nMA AA093615 bh MA AA095559 bh MA AA095562 bh MA AA095624 bh MM AA093614 bh \n             1              1              1              1              1 \nMM AA095550 bh MM AA095554 bh MM AA095558 bh MM AA095568 bh \n             1              1              1              1 \n\nfp6 &lt;- (gl.fixed.diff(west))\n\nStarting gl.fixed.diff \n  Processing genlight object with SNP data\n  Warning: data include loci that are scored NA across all individuals.\n  Consider filtering using gl &lt;- gl.filter.allna(gl)\n  Comparing populations for absolute fixed differences\n  Warning: Monomorphic loci retained, used in calculations\n  Comparing populations pairwise -- this may take time. Please be patient\nCompleted: gl.fixed.diff \n\n# Figure 2 ---------------------------------------------------------------------\n\nres &lt;- as.matrix(gl.fixed.diff(west)$fd)\n\nStarting gl.fixed.diff \n  Processing genlight object with SNP data\n  Warning: data include loci that are scored NA across all individuals.\n  Consider filtering using gl &lt;- gl.filter.allna(gl)\n  Comparing populations for absolute fixed differences\n  Warning: Monomorphic loci retained, used in calculations\n  Comparing populations pairwise -- this may take time. Please be patient\nCompleted: gl.fixed.diff \n\ngl.plot.heatmap(res, margins = c(10, 10))\n\nStarting gl.plot.heatmap \n  Processing a data matrix\nStarting gl.colors \nSelected color type div \nCompleted: gl.colors \n\n\n\n\n\nCompleted: gl.plot.heatmap \n\n# Table of SNPs per scaffold that align to chromosome 6 ------------------------\n\ntable(vac.gl6@other$loc.metrics[\"Chrom_Varanus_JD_vac_aligned_chr6_7\"])\n\nChrom_Varanus_JD_vac_aligned_chr6_7\n             scaf_162   scaf_174   scaf_178    scaf_18   scaf_185 scaf_44936 \n         0      10084        448       4056        584       1183        849 \nscaf_44937 \n       770 \n\n# Fixed allele analysis for all individuals after probe was tested--------------\n\npop(vac.gl6) &lt;- vac.gl6@other$ind.metrics$karyo\nvac.karyo &lt;- gl.keep.pop(vac.gl6, c(\"AA\", \"MA\", \"MM\"))\n\nStarting gl.keep.pop \n  Processing genlight object with SNP data\n  Warning: data include loci that are scored NA across all individuals.\n  Consider filtering using gl &lt;- gl.filter.allna(gl)\n  Checking for presence of nominated populations\n  Retaining only populations AA, MA, MM \n  Warning: Resultant dataset may contain monomorphic loci\n  Locus metrics not recalculated\nCompleted: gl.keep.pop \n\npop(vac.karyo) &lt;- vac.karyo@other$ind.metrics$karyo\n\ngl.fixed.diff(vac.karyo)\n\nStarting gl.fixed.diff \n  Processing genlight object with SNP data\n  Warning: data include loci that are scored NA across all individuals.\n  Consider filtering using gl &lt;- gl.filter.allna(gl)\n  Comparing populations for absolute fixed differences\n  Warning: Monomorphic loci retained, used in calculations\n  Comparing populations pairwise -- this may take time. Please be patient\nCompleted: gl.fixed.diff \n\n\n$gl\n ********************\n *** DARTR OBJECT ***\n ********************\n\n ** 34 genotypes,  17,974 SNPs , size: 97.4 Mb\n\n    missing data: 122942 (=20.12 %) scored as NA\n\n ** Genetic data\n   @gen: list of 34 SNPbin\n   @ploidy: ploidy of each individual  (range: 2-2)\n\n ** Additional data\n   @ind.names:  34 individual labels\n   @loc.names:  17974 locus labels\n   @loc.all:  17974 allele labels\n   @position: integer storing positions of the SNPs [within 69 base sequence]\n   @pop: population of each individual (group size range: 5-22)\n   @other: a list containing: loc.metrics, ind.metrics, latlon, loc.metrics.flags, history, verbose \n    @other$ind.metrics: X, id, species, ind, pop, sex, lat, lon, e, n, karyo, PCR1 \n    @other$loc.metrics: AlleleID, CloneID, AlleleSequence, TrimmedSequence, Chrom_Komodo_dragon_NCBIv1, ChromPos_Komodo_dragon_NCBIv1, AlnCnt_Komodo_dragon_NCBIv1, AlnEvalue_Komodo_dragon_NCBIv1, Chrom_Varanus_JD_infer_z, ChromPos_Varanus_JD_infer_z, AlnCnt_Varanus_JD_infer_z, AlnEvalue_Varanus_JD_infer_z, Chrom_Varanus_JD_vac_aligned_chr6_7, ChromPos_Varanus_JD_vac_aligned_chr6_7, AlnCnt_Varanus_JD_vac_aligned_chr6_7, AlnEvalue_Varanus_JD_vac_aligned_chr6_7, Chrom_Varanus_JD_infer_w, ChromPos_Varanus_JD_infer_w, AlnCnt_Varanus_JD_infer_w, AlnEvalue_Varanus_JD_infer_w, SNP, SnpPosition, CallRate, OneRatioRef, OneRatioSnp, FreqHomRef, FreqHomSnp, FreqHets, PICRef, PICSnp, AvgPIC, AvgCountRef, AvgCountSnp, RepAvg, clone, uid, rdepth, maf, monomorphs, OneRatio, PIC \n   @other$latlon[g]: coordinates for all individuals are attached\n\n$fd\n   AA MA\nMA 36   \nMM 97 35\n\n$pcfd\n   AA MA\nMA  0   \nMM  1  0\n\n$nobs\n     AA   MA   MM\nAA   NA 10.8 21.7\nMA 10.8   NA 23.3\nMM 21.7 23.3   NA\n\n$nloc\n      AA    MA    MM\nAA    NA 16319 16368\nMA 16319    NA 17402\nMM 16368 17402    NA\n\n$expfpos\n     [,1] [,2] [,3]\n[1,]   NA   NA   NA\n[2,]   NA   NA   NA\n[3,]   NA   NA   NA\n\n$sdfpos\n     [,1] [,2] [,3]\n[1,]   NA   NA   NA\n[2,]   NA   NA   NA\n[3,]   NA   NA   NA\n\n$pval\n     [,1] [,2] [,3]\n[1,]   NA   NA   NA\n[2,]   NA   NA   NA\n[3,]   NA   NA   NA\n\nattr(,\"class\")\n[1] \"fd\"\n\nfpk6.1 &lt;- gl.fixed.diff(vac.karyo)\n\nStarting gl.fixed.diff \n  Processing genlight object with SNP data\n  Warning: data include loci that are scored NA across all individuals.\n  Consider filtering using gl &lt;- gl.filter.allna(gl)\n  Comparing populations for absolute fixed differences\n  Warning: Monomorphic loci retained, used in calculations\n  Comparing populations pairwise -- this may take time. Please be patient\nCompleted: gl.fixed.diff \n\nfpk6.1$fd\n\n   AA MA\nMA 36   \nMM 97 35\n\ntable(pop(vac.karyo))\n\n\nAA MA MM \n 5  7 22 \n\n# group individuals by karyotype\npops &lt;- seppop(vac.karyo)\n\n# Identify those loci that are fixed for one allele in AA and opposite allele in\n# MM and MA are heterozygotes\n\nthemany &lt;- which(((abs(\n    colMeans(as.matrix(pops$AA), na.rm = TRUE) - colMeans(as.matrix(pops$MM),\n                                                          na.rm = TRUE)\n  )) == 2) & colMeans(as.matrix(pops$MA) == 1, na.rm = T))\n\nthemany\n\n47530186-62-T/G 47510325-33-C/T 47506537-50-C/T 58564194-10-C/T 47530853-13-C/A \n           2475            2697            2943            3166            3178 \n58568357-53-C/T 47555226-11-T/A 47526162-36-G/T  58574714-5-C/G 47570599-32-G/C \n           4530            4876            5019            5086            5407 \n58564685-25-G/A 58568357-43-C/G 47571057-27-A/G  58568730-8-C/T 47534249-44-C/T \n           5800            5980            6197            6330            6429 \n58564990-43-G/C 58568170-47-G/A 47572514-30-T/C 47567360-61-C/G 47562299-15-T/A \n           7015            7392            7575            8894            8990 \n47490392-36-G/T 47557237-34-A/G 47539268-39-G/C 47584615-15-C/T 58581892-46-T/C \n           9300            9569            9614            9880           10097 \n58581176-56-T/C 58582604-32-G/A 47495246-42-A/G 58555628-11-A/C 58534605-26-C/T \n          10554           10746           13050           13395           14239 \n47572698-68-C/T 58548074-61-A/G 58548705-34-G/C 47553573-52-C/T 58552886-50-G/A \n          14309           14506           14826           14837           15026 \n58544938-37-C/T 47555650-59-C/T 47553573-53-G/T 47537859-68-G/T  58552335-7-G/A \n          15518           15526           15564           15699           16020 \n47553754-35-C/T 58554983-38-A/G 58526779-49-T/C 47495750-16-T/G 58529930-35-G/C \n          16725           16778           17129           17471           17788 \n\n# Supplemenarty Table 5 of SNPs sorted for fixed differences--------------------\n\n\nvac.karyo@other$loc.metrics$TrimmedSequence[themany]\n\n [1] TGCAGCTTTAAGTGTGCAATTGCCACACACTCCAATGCTTGTGTGAACTGACCTTCTCACACTCCACTG\n [2] TGCAGATGCTGGGGGTGAATCTGGGCCCTCTTGCCTGCTCCCCAACTTTGCAAGGATGTGGTAGGGATT\n [3] TGCAGAACCTCAGACCCACCAGGGAGCCCCAGATGGACACTCACCTCCCCCAAAGCTTCATGCCTTTCT\n [4] TGCAGAAAATCGTCATTACCATAGAGGGGGAAAGGCAGCTAAAGGTGAGACAGGAAGGGCCCCGAAAGC\n [5] TGCAGGCAAAAATCAAAAATTTCAAGCAAAACAATGAACTGTTTCACACATAATGGCAGGGAAGTGCAG\n [6] TGCAGAGAGGGACATGGGGGAAGAATTCCAGCAGCCAGCCAAGCCTGGTATGACTCCTGATCCCATGAT\n [7] TGCAGCGGAAATCTTTCAGCAAGGGCCACCCCATTCAATGGCAAAAGCCATGTGACAGACCATTAAACT\n [8] TGCAGAAGTGGCGAGGACCAAAATACGGCGATCTTCGTGCCCATACACGCATTTTTAATACCTCAGCTG\n [9] TGCAGCGAATGGTCCCTCAGATAAGAGCCTTAAGATGTTCCTGCAAAAGAACATGTGAGCATGAGCGGT\n[10] TGCAGAATGAGAAGACCTGGTCTAGTAAATGTGTCATCAAATTCCAGAAAAGTGAAATGAACCATAGTG\n[11] TGCAGCAGTGTCAGTAGATTCCACCGGTGCTTCCAACGCATAAAAAAGACAGAAATCACAGGCTATCCT\n[12] TGCAGAGAGGGACATGGGGGAAGAATTCCAGCAGCCAGCCAAGCCTGGTATGACTCCTGATCCCATGAT\n[13] TGCAGATTTTAAGAAGGAGGGGTTATGAAAGTGGAATGTATCATACAAGTTCTTCTAAGTAAGAGAAAT\n[14] TGCAGCGTCGATCCTCCCGGGCATCCCACTCGCCCCGCCAGGCCATTTTGCCACTTCACTCGCCAGCAA\n[15] TGCAGTTGCAGTACTAGCGGTAGTTTTTCAATGGGAGATTAAAGCAAGCTTGTTCATTCACATACCGTA\n[16] TGCAGCAAACATCATTAACATAGTGCCTGCGGGCTGCTTTAGTGTCTGCTATCGATAGCAGAGACTAAA\n[17] TGCAGAAATATGTAGAAATAAAGAAAACCGTATAAAATGATTCTAAAGGTACGATCCTGTACAAGATTA\n[18] TGCAGGTGATTACAGCAACCCACCGTAAAATCAGTCTCGGGTTCAGGGAAGGCAACTACTTGGCATGGG\n[19] TGCAGGTCCTAACTTCCTGCACTGACACTCTTGCAAAGACCAAGAAAATCCTGATATTCCCCATCCTCT\n[20] TGCAGATGAGTTCTGTGATTATGCTCTTTATAGAATGCTCGTTTTCACCATATCAATGCTTCTAGGAGT\n[21] TGCAGAAGAAGGTTGCTGGTTTGCACAACAGTAATTGCCTGAGAGTTGGTGGGCTTCCTCTCCGCTCAG\n[22] TGCAGTACCTCCACCTGGCATGTATCTTTCTGTCACAATGACTGACAATAGATTGCGGACTGAACGAAG\n[23] TGCAGACTTGCTACCCTGTTGAAGTGAATACCTCCCACAGACTCATTGCAAAGACATGGCGACATGCCA\n[24] TGCAGACAGAAACTTCCCCTTAGTCACTCTTCGGTCATCGTTTCCCAAGGAGGACCGTTTCCTACCCCT\n[25] TGCAGGCGTCTTACACTCCAACAAAGTACTGGGTCCGACGCGATGCTTGATGTCTCGCACGGGCAACTC\n[26] TGCAGTTACCATTTCCCCATCCTTATTAACCTCTAGATCAGTTACTGCTTAGGCACTACCCCCCAGTTC\n[27] TGCAGACAGAAACTTTCCCTTAGTCACTCTTCGGTCATCGTTTCCCAAGGAGGACCGTTTCCTACCCCT\n[28] TGCAGCTGCCTCTATAACCTGTCTAGGCAGCCCTCACAAGACAGACTGGATTCTGCGGAAGAGGCCAAG\n[29] TGCAGTCCTGGATTTTAAGTGCCTTTCTTTCTGCTTGAACAGGGAAGGCTTCTGAACCTGGTGAGATCC\n[30] TGCAGAGGAGGGTAGGACAGGTTCCACTGGAACCATGCTCAGAGAACCAAGGTTCAATCTGGATGCCAG\n[31] TGCAGTATGACACAGTAGAGCAGGAGTCCTTAAACTTTTTCTAAAGGGGGCCAGTTGACAGGTGCCAGC\n[32] TGCAGCAGAAAATGCACTAAGAAATGCCACCAGCCAGCCATGCCTCCTCCCAGAACACTCCATTCCACG\n[33] TGCAGGTGAGGAACAGGTGAAGAATGGTGGGCAAGTGCTCTTCCAGGGTAGCTTGTCCACATTTACTGA\n[34] TGCAGACTGCCACAGAGGAGTTGCAGCTCAACACAAGTGGGATTAGTTTGCACGGCATGAGCGGTTCAG\n[35] TGCAGGAGAGTTGCTTGCTTGCTTGTTTTCTGTACCACTCAATAGCCAAGGCTCTCTCGGACTGCTTTA\n[36] TGCAGTTACAAGCAAACTGAACAACCAGAAAAGAAAACGTTGACCTAGATGTTTGCTACTCTTACTCAT\n[37] TGCAGCTTGCAACCTCTAAAGGGCCGGGTGGTGTGCTCAGGCAGAAGTCCATTCCTTAACGTGAGAATA\n[38] TGCAGACTGCCACAGAGGAGTTGCAGCTCAACACAAGTGGGATTAGTTTGCACGGCATGAGCGGTTCAG\n[39] TGCAGAACCCTGGGCACTGTCAGCCCAGCCATTGATCTGAACTGTGGTGGCAATGGCCAATTATTCAGG\n[40] TGCAGGTGTATTCAGAGTACAGTAGGCTCTCTGTTAACCGGAATTCAAACAACTGGCAAAAATAAAGAA\n[41] TGCAGAGCCTGGCCTTAAGATAAACACCTCTGCTTCTCTCATCTCAACCTCTGGAATTGGGCCACATTC\n[42] TGCAGCGTCTGCCTGCTGGGTCTCTTGGATTCCTCTGGATAGCTCCAGAGAGCCTCCATCTCTCCCTTC\n[43] TGCAGCGCTGTTGTTAGCAAGCAAAACTAGGACAGCTTATGAGTATACGTTAGGCATGAGCGGTTCAGC\n[44] TGCAGGAAAGACGGGCTCAATCTCAGCCATTCCCCTGCTAACCAGCATGATCACAGCCATCTCCCCACC\n[45] TGCAGAGGGGCTCTAATCTTGATCTGCGCATATCAGGGTTTTTAAAAACAAATATACACTTCGTTGCAT\n183938 Levels: TGCAGAAAAAAATCATTAAATTATTCCTGGACTGTACCATTTCCGGGCACAAGTAGAGGGATAAAGGTC ...\n\nhits &lt;- vac.karyo@other$loc.metrics[themany, ]\nhits\n\n                         AlleleID  CloneID\n39780  47530186|F|0-62:T&gt;G-62:T&gt;G 47530186\n43463  47510325|F|0-33:C&gt;T-33:C&gt;T 47510325\n46899  47506537|F|0-50:C&gt;T-50:C&gt;T 47506537\n50141  58564194|F|0-10:C&gt;T-10:C&gt;T 58564194\n50274  47530853|F|0-13:C&gt;A-13:C&gt;A 47530853\n70972  58568357|F|0-53:C&gt;T-53:C&gt;T 58568357\n76139  47555226|F|0-11:T&gt;A-11:T&gt;A 47555226\n78208  47526162|F|0-36:G&gt;T-36:G&gt;T 47526162\n79343    58574714|F|0-5:C&gt;G-5:C&gt;G 58574714\n84162  47570599|F|0-32:G&gt;C-32:G&gt;C 47570599\n90579  58564685|F|0-25:G&gt;A-25:G&gt;A 58564685\n92968  58568357|F|0-43:C&gt;G-43:C&gt;G 58568357\n95906  47571057|F|0-27:A&gt;G-27:A&gt;G 47571057\n97972    58568730|F|0-8:C&gt;T-8:C&gt;T 58568730\n99146  47534249|F|0-44:C&gt;T-44:C&gt;T 47534249\n109333 58564990|F|0-43:G&gt;C-43:G&gt;C 58564990\n115084 58568170|F|0-47:G&gt;A-47:G&gt;A 58568170\n117389 47572514|F|0-30:T&gt;C-30:T&gt;C 47572514\n139763 47567360|F|0-61:C&gt;G-61:C&gt;G 47567360\n140882 47562299|F|0-15:T&gt;A-15:T&gt;A 47562299\n146039 47490392|F|0-36:G&gt;T-36:G&gt;T 47490392\n149807 47557237|F|0-34:A&gt;G-34:A&gt;G 47557237\n150336 47539268|F|0-39:G&gt;C-39:G&gt;C 47539268\n153551 47584615|F|0-15:C&gt;T-15:C&gt;T 47584615\n156726 58581892|F|0-46:T&gt;C-46:T&gt;C 58581892\n163050 58581176|F|0-56:T&gt;C-56:T&gt;C 58581176\n166096 58582604|F|0-32:G&gt;A-32:G&gt;A 58582604\n205464 47495246|F|0-42:A&gt;G-42:A&gt;G 47495246\n211014 58555628|F|0-11:A&gt;C-11:A&gt;C 58555628\n224380 58534605|F|0-26:C&gt;T-26:C&gt;T 58534605\n225655 47572698|F|0-68:C&gt;T-68:C&gt;T 47572698\n229644 58548074|F|0-61:A&gt;G-61:A&gt;G 58548074\n235514 58548705|F|0-34:G&gt;C-34:G&gt;C 58548705\n235706 47553573|F|0-52:C&gt;T-52:C&gt;T 47553573\n238914 58552886|F|0-50:G&gt;A-50:G&gt;A 58552886\n247070 58544938|F|0-37:C&gt;T-37:C&gt;T 58544938\n247268 47555650|F|0-59:C&gt;T-59:C&gt;T 47555650\n248073 47553573|F|0-53:G&gt;T-53:G&gt;T 47553573\n250541 47537859|F|0-68:G&gt;T-68:G&gt;T 47537859\n255750   58552335|F|0-7:G&gt;A-7:G&gt;A 58552335\n268769 47553754|F|0-35:C&gt;T-35:C&gt;T 47553754\n269844 58554983|F|0-38:A&gt;G-38:A&gt;G 58554983\n277181 58526779|F|0-49:T&gt;C-49:T&gt;C 58526779\n283756 47495750|F|0-16:T&gt;G-16:T&gt;G 47495750\n295061 58529930|F|0-35:G&gt;C-35:G&gt;C 58529930\n                                                              AlleleSequence\n39780  TGCAGCTTTAAGTGTGCAATTGCCACACACTCCAATGCTTGTGTGAACTGACCTTCTCACACTCCACTG\n43463  TGCAGATGCTGGGGGTGAATCTGGGCCCTCTTGCCTGCTCCCCAACTTTGCAAGGATGTGGTAGGGATT\n46899  TGCAGAACCTCAGACCCACCAGGGAGCCCCAGATGGACACTCACCTCCCCCAAAGCTTCATGCCTTTCT\n50141  TGCAGAAAATCGTCATTACCATAGAGGGGGAAAGGCAGCTAAAGGTGAGACAGGAAGGGCCCCGAAAGC\n50274  TGCAGGCAAAAATCAAAAATTTCAAGCAAAACAATGAACTGTTTCACACATAATGGCAGGGAAGTGCAG\n70972  TGCAGAGAGGGACATGGGGGAAGAATTCCAGCAGCCAGCCAAGCCTGGTATGACTCCTGATCCCATGAT\n76139  TGCAGCGGAAATCTTTCAGCAAGGGCCACCCCATTCAATGGCAAAAGCCATGTGACAGACCATTAAACT\n78208  TGCAGAAGTGGCGAGGACCAAAATACGGCGATCTTCGTGCCCATACACGCATTTTTAATACCTCAGCTG\n79343  TGCAGCGAATGGTCCCTCAGATAAGAGCCTTAAGATGTTCCTGCAAAAGAACATGTGAGCATGAGCGGT\n84162  TGCAGAATGAGAAGACCTGGTCTAGTAAATGTGTCATCAAATTCCAGAAAAGTGAAATGAACCATAGTG\n90579  TGCAGCAGTGTCAGTAGATTCCACCGGTGCTTCCAACGCATAAAAAAGACAGAAATCACAGGCTATCCT\n92968  TGCAGAGAGGGACATGGGGGAAGAATTCCAGCAGCCAGCCAAGCCTGGTATGACTCCTGATCCCATGAT\n95906  TGCAGATTTTAAGAAGGAGGGGTTATGAAAGTGGAATGTATCATACAAGTTCTTCTAAGTAAGAGAAAT\n97972  TGCAGCGTCGATCCTCCCGGGCATCCCACTCGCCCCGCCAGGCCATTTTGCCACTTCACTCGCCAGCAA\n99146  TGCAGTTGCAGTACTAGCGGTAGTTTTTCAATGGGAGATTAAAGCAAGCTTGTTCATTCACATACCGTA\n109333 TGCAGCAAACATCATTAACATAGTGCCTGCGGGCTGCTTTAGTGTCTGCTATCGATAGCAGAGACTAAA\n115084 TGCAGAAATATGTAGAAATAAAGAAAACCGTATAAAATGATTCTAAAGGTACGATCCTGTACAAGATTA\n117389 TGCAGGTGATTACAGCAACCCACCGTAAAATCAGTCTCGGGTTCAGGGAAGGCAACTACTTGGCATGGG\n139763 TGCAGGTCCTAACTTCCTGCACTGACACTCTTGCAAAGACCAAGAAAATCCTGATATTCCCCATCCTCT\n140882 TGCAGATGAGTTCTGTGATTATGCTCTTTATAGAATGCTCGTTTTCACCATATCAATGCTTCTAGGAGT\n146039 TGCAGAAGAAGGTTGCTGGTTTGCACAACAGTAATTGCCTGAGAGTTGGTGGGCTTCCTCTCCGCTCAG\n149807 TGCAGTACCTCCACCTGGCATGTATCTTTCTGTCACAATGACTGACAATAGATTGCGGACTGAACGAAG\n150336 TGCAGACTTGCTACCCTGTTGAAGTGAATACCTCCCACAGACTCATTGCAAAGACATGGCGACATGCCA\n153551 TGCAGACAGAAACTTCCCCTTAGTCACTCTTCGGTCATCGTTTCCCAAGGAGGACCGTTTCCTACCCCT\n156726 TGCAGGCGTCTTACACTCCAACAAAGTACTGGGTCCGACGCGATGCTTGATGTCTCGCACGGGCAACTC\n163050 TGCAGTTACCATTTCCCCATCCTTATTAACCTCTAGATCAGTTACTGCTTAGGCACTACCCCCCAGTTC\n166096 TGCAGACAGAAACTTTCCCTTAGTCACTCTTCGGTCATCGTTTCCCAAGGAGGACCGTTTCCTACCCCT\n205464 TGCAGCTGCCTCTATAACCTGTCTAGGCAGCCCTCACAAGACAGACTGGATTCTGCGGAAGAGGCCAAG\n211014 TGCAGTCCTGGATTTTAAGTGCCTTTCTTTCTGCTTGAACAGGGAAGGCTTCTGAACCTGGTGAGATCC\n224380 TGCAGAGGAGGGTAGGACAGGTTCCACTGGAACCATGCTCAGAGAACCAAGGTTCAATCTGGATGCCAG\n225655 TGCAGTATGACACAGTAGAGCAGGAGTCCTTAAACTTTTTCTAAAGGGGGCCAGTTGACAGGTGCCAGC\n229644 TGCAGCAGAAAATGCACTAAGAAATGCCACCAGCCAGCCATGCCTCCTCCCAGAACACTCCATTCCACG\n235514 TGCAGGTGAGGAACAGGTGAAGAATGGTGGGCAAGTGCTCTTCCAGGGTAGCTTGTCCACATTTACTGA\n235706 TGCAGACTGCCACAGAGGAGTTGCAGCTCAACACAAGTGGGATTAGTTTGCACGGCATGAGCGGTTCAG\n238914 TGCAGGAGAGTTGCTTGCTTGCTTGTTTTCTGTACCACTCAATAGCCAAGGCTCTCTCGGACTGCTTTA\n247070 TGCAGTTACAAGCAAACTGAACAACCAGAAAAGAAAACGTTGACCTAGATGTTTGCTACTCTTACTCAT\n247268 TGCAGCTTGCAACCTCTAAAGGGCCGGGTGGTGTGCTCAGGCAGAAGTCCATTCCTTAACGTGAGAATA\n248073 TGCAGACTGCCACAGAGGAGTTGCAGCTCAACACAAGTGGGATTAGTTTGCACGGCATGAGCGGTTCAG\n250541 TGCAGAACCCTGGGCACTGTCAGCCCAGCCATTGATCTGAACTGTGGTGGCAATGGCCAATTATTCAGG\n255750 TGCAGGTGTATTCAGAGTACAGTAGGCTCTCTGTTAACCGGAATTCAAACAACTGGCAAAAATAAAGAA\n268769 TGCAGAGCCTGGCCTTAAGATAAACACCTCTGCTTCTCTCATCTCAACCTCTGGAATTGGGCCACATTC\n269844 TGCAGCGTCTGCCTGCTGGGTCTCTTGGATTCCTCTGGATAGCTCCAGAGAGCCTCCATCTCTCCCTTC\n277181 TGCAGCGCTGTTGTTAGCAAGCAAAACTAGGACAGCTTATGAGTATACGTTAGGCATGAGCGGTTCAGC\n283756 TGCAGGAAAGACGGGCTCAATCTCAGCCATTCCCCTGCTAACCAGCATGATCACAGCCATCTCCCCACC\n295061 TGCAGAGGGGCTCTAATCTTGATCTGCGCATATCAGGGTTTTTAAAAACAAATATACACTTCGTTGCAT\n                                                             TrimmedSequence\n39780  TGCAGCTTTAAGTGTGCAATTGCCACACACTCCAATGCTTGTGTGAACTGACCTTCTCACACTCCACTG\n43463  TGCAGATGCTGGGGGTGAATCTGGGCCCTCTTGCCTGCTCCCCAACTTTGCAAGGATGTGGTAGGGATT\n46899  TGCAGAACCTCAGACCCACCAGGGAGCCCCAGATGGACACTCACCTCCCCCAAAGCTTCATGCCTTTCT\n50141  TGCAGAAAATCGTCATTACCATAGAGGGGGAAAGGCAGCTAAAGGTGAGACAGGAAGGGCCCCGAAAGC\n50274  TGCAGGCAAAAATCAAAAATTTCAAGCAAAACAATGAACTGTTTCACACATAATGGCAGGGAAGTGCAG\n70972  TGCAGAGAGGGACATGGGGGAAGAATTCCAGCAGCCAGCCAAGCCTGGTATGACTCCTGATCCCATGAT\n76139  TGCAGCGGAAATCTTTCAGCAAGGGCCACCCCATTCAATGGCAAAAGCCATGTGACAGACCATTAAACT\n78208  TGCAGAAGTGGCGAGGACCAAAATACGGCGATCTTCGTGCCCATACACGCATTTTTAATACCTCAGCTG\n79343  TGCAGCGAATGGTCCCTCAGATAAGAGCCTTAAGATGTTCCTGCAAAAGAACATGTGAGCATGAGCGGT\n84162  TGCAGAATGAGAAGACCTGGTCTAGTAAATGTGTCATCAAATTCCAGAAAAGTGAAATGAACCATAGTG\n90579  TGCAGCAGTGTCAGTAGATTCCACCGGTGCTTCCAACGCATAAAAAAGACAGAAATCACAGGCTATCCT\n92968  TGCAGAGAGGGACATGGGGGAAGAATTCCAGCAGCCAGCCAAGCCTGGTATGACTCCTGATCCCATGAT\n95906  TGCAGATTTTAAGAAGGAGGGGTTATGAAAGTGGAATGTATCATACAAGTTCTTCTAAGTAAGAGAAAT\n97972  TGCAGCGTCGATCCTCCCGGGCATCCCACTCGCCCCGCCAGGCCATTTTGCCACTTCACTCGCCAGCAA\n99146  TGCAGTTGCAGTACTAGCGGTAGTTTTTCAATGGGAGATTAAAGCAAGCTTGTTCATTCACATACCGTA\n109333 TGCAGCAAACATCATTAACATAGTGCCTGCGGGCTGCTTTAGTGTCTGCTATCGATAGCAGAGACTAAA\n115084 TGCAGAAATATGTAGAAATAAAGAAAACCGTATAAAATGATTCTAAAGGTACGATCCTGTACAAGATTA\n117389 TGCAGGTGATTACAGCAACCCACCGTAAAATCAGTCTCGGGTTCAGGGAAGGCAACTACTTGGCATGGG\n139763 TGCAGGTCCTAACTTCCTGCACTGACACTCTTGCAAAGACCAAGAAAATCCTGATATTCCCCATCCTCT\n140882 TGCAGATGAGTTCTGTGATTATGCTCTTTATAGAATGCTCGTTTTCACCATATCAATGCTTCTAGGAGT\n146039 TGCAGAAGAAGGTTGCTGGTTTGCACAACAGTAATTGCCTGAGAGTTGGTGGGCTTCCTCTCCGCTCAG\n149807 TGCAGTACCTCCACCTGGCATGTATCTTTCTGTCACAATGACTGACAATAGATTGCGGACTGAACGAAG\n150336 TGCAGACTTGCTACCCTGTTGAAGTGAATACCTCCCACAGACTCATTGCAAAGACATGGCGACATGCCA\n153551 TGCAGACAGAAACTTCCCCTTAGTCACTCTTCGGTCATCGTTTCCCAAGGAGGACCGTTTCCTACCCCT\n156726 TGCAGGCGTCTTACACTCCAACAAAGTACTGGGTCCGACGCGATGCTTGATGTCTCGCACGGGCAACTC\n163050 TGCAGTTACCATTTCCCCATCCTTATTAACCTCTAGATCAGTTACTGCTTAGGCACTACCCCCCAGTTC\n166096 TGCAGACAGAAACTTTCCCTTAGTCACTCTTCGGTCATCGTTTCCCAAGGAGGACCGTTTCCTACCCCT\n205464 TGCAGCTGCCTCTATAACCTGTCTAGGCAGCCCTCACAAGACAGACTGGATTCTGCGGAAGAGGCCAAG\n211014 TGCAGTCCTGGATTTTAAGTGCCTTTCTTTCTGCTTGAACAGGGAAGGCTTCTGAACCTGGTGAGATCC\n224380 TGCAGAGGAGGGTAGGACAGGTTCCACTGGAACCATGCTCAGAGAACCAAGGTTCAATCTGGATGCCAG\n225655 TGCAGTATGACACAGTAGAGCAGGAGTCCTTAAACTTTTTCTAAAGGGGGCCAGTTGACAGGTGCCAGC\n229644 TGCAGCAGAAAATGCACTAAGAAATGCCACCAGCCAGCCATGCCTCCTCCCAGAACACTCCATTCCACG\n235514 TGCAGGTGAGGAACAGGTGAAGAATGGTGGGCAAGTGCTCTTCCAGGGTAGCTTGTCCACATTTACTGA\n235706 TGCAGACTGCCACAGAGGAGTTGCAGCTCAACACAAGTGGGATTAGTTTGCACGGCATGAGCGGTTCAG\n238914 TGCAGGAGAGTTGCTTGCTTGCTTGTTTTCTGTACCACTCAATAGCCAAGGCTCTCTCGGACTGCTTTA\n247070 TGCAGTTACAAGCAAACTGAACAACCAGAAAAGAAAACGTTGACCTAGATGTTTGCTACTCTTACTCAT\n247268 TGCAGCTTGCAACCTCTAAAGGGCCGGGTGGTGTGCTCAGGCAGAAGTCCATTCCTTAACGTGAGAATA\n248073 TGCAGACTGCCACAGAGGAGTTGCAGCTCAACACAAGTGGGATTAGTTTGCACGGCATGAGCGGTTCAG\n250541 TGCAGAACCCTGGGCACTGTCAGCCCAGCCATTGATCTGAACTGTGGTGGCAATGGCCAATTATTCAGG\n255750 TGCAGGTGTATTCAGAGTACAGTAGGCTCTCTGTTAACCGGAATTCAAACAACTGGCAAAAATAAAGAA\n268769 TGCAGAGCCTGGCCTTAAGATAAACACCTCTGCTTCTCTCATCTCAACCTCTGGAATTGGGCCACATTC\n269844 TGCAGCGTCTGCCTGCTGGGTCTCTTGGATTCCTCTGGATAGCTCCAGAGAGCCTCCATCTCTCCCTTC\n277181 TGCAGCGCTGTTGTTAGCAAGCAAAACTAGGACAGCTTATGAGTATACGTTAGGCATGAGCGGTTCAGC\n283756 TGCAGGAAAGACGGGCTCAATCTCAGCCATTCCCCTGCTAACCAGCATGATCACAGCCATCTCCCCACC\n295061 TGCAGAGGGGCTCTAATCTTGATCTGCGCATATCAGGGTTTTTAAAAACAAATATACACTTCGTTGCAT\n        Chrom_Komodo_dragon_NCBIv1 ChromPos_Komodo_dragon_NCBIv1\n39780  SJPD01000043.1_scaffold34_1                       6324171\n43463    SJPD01000031.1_scaffold24                      16405804\n46899  SJPD01000043.1_scaffold34_1                        375374\n50141                                                          0\n50274    SJPD01000031.1_scaffold24                      11788603\n70972  SJPD01000043.1_scaffold34_1                       4580642\n76139  SJPD01000043.1_scaffold34_1                       7862835\n78208  SJPD01000043.1_scaffold34_1                       7938504\n79343    SJPD01000031.1_scaffold24                      10159958\n84162                                                          0\n90579                                                          0\n92968  SJPD01000043.1_scaffold34_1                       4580642\n95906                                                          0\n97972  SJPD01000043.1_scaffold34_1                       8699162\n99146    SJPD01000031.1_scaffold24                       7573219\n109333    SJPD01000011.1_scaffold8                      35951871\n115084                                                         0\n117389                                                         0\n139763   SJPD01000031.1_scaffold24                      10990793\n140882 SJPD01000043.1_scaffold34_1                       1337171\n146039   SJPD01000031.1_scaffold24                      10187800\n149807                                                         0\n150336   SJPD01000031.1_scaffold24                      16184650\n153551 SJPD01000043.1_scaffold34_1                       6564774\n156726                                                         0\n163050 SJPD01000043.1_scaffold34_1                       5237185\n166096                                                         0\n205464 SJPD01000043.1_scaffold34_1                       5621116\n211014                                                         0\n224380    SJPD01000001.1_scaffold1                     114327324\n225655   SJPD01000031.1_scaffold24                      12436780\n229644 SJPD01000043.1_scaffold34_1                       8251535\n235514   SJPD01000031.1_scaffold24                      17012576\n235706                                                         0\n238914   SJPD01000031.1_scaffold24                       8349203\n247070 SJPD01000043.1_scaffold34_1                       2154387\n247268    SJPD01000001.1_scaffold1                     113487419\n248073                                                         0\n250541   SJPD01000031.1_scaffold24                      17827486\n255750 SJPD01000043.1_scaffold34_1                       7881951\n268769   SJPD01000031.1_scaffold24                      16078793\n269844                                                         0\n277181   SJPD01000031.1_scaffold24                      12273432\n283756    SJPD01000003.1_scaffold3                      20807026\n295061                                                         0\n       AlnCnt_Komodo_dragon_NCBIv1 AlnEvalue_Komodo_dragon_NCBIv1\n39780                            1                       2.21e-21\n43463                            1                       1.32e-23\n46899                            1                       2.19e-26\n50141                            0                       9.99e+02\n50274                            1                       2.84e-25\n70972                            2                       1.32e-23\n76139                            1                       2.84e-25\n78208                            1                       2.84e-25\n79343                            1                       6.14e-22\n84162                            0                       9.99e+02\n90579                            0                       9.99e+02\n92968                            2                       1.32e-23\n95906                            0                       9.99e+02\n97972                            1                       3.67e-24\n99146                            1                       1.71e-22\n109333                          10                       1.33e-18\n115084                           0                       9.99e+02\n117389                           0                       9.99e+02\n139763                           1                       6.10e-27\n140882                           1                       2.84e-25\n146039                           1                       3.70e-19\n149807                           0                       9.99e+02\n150336                           1                       1.71e-22\n153551                           1                       6.14e-22\n156726                           0                       9.99e+02\n163050                           1                       6.14e-22\n166096                           0                       9.99e+02\n205464                           1                       1.33e-18\n211014                           0                       9.99e+02\n224380                           1                       4.78e-18\n225655                           1                       6.10e-27\n229644                           1                       3.72e-14\n235514                           1                       7.89e-26\n235706                           0                       9.99e+02\n238914                           1                       6.10e-27\n247070                           1                       6.10e-27\n247268                           1                       6.10e-27\n248073                           0                       9.99e+02\n250541                           1                       2.84e-25\n255750                           1                       6.10e-27\n268769                           1                       6.10e-27\n269844                           0                       9.99e+02\n277181                           1                       8.00e-16\n283756                           1                       6.14e-22\n295061                           0                       9.99e+02\n       Chrom_Varanus_JD_infer_z ChromPos_Varanus_JD_infer_z\n39780                                                     0\n43463                                                     0\n46899                                                     0\n50141                                                     0\n50274                                                     0\n70972                                                     0\n76139                                                     0\n78208                                                     0\n79343                                                     0\n84162                                                     0\n90579                                                     0\n92968                                                     0\n95906                                                     0\n97972                                                     0\n99146                                                     0\n109333                                                    0\n115084                                                    0\n117389                                                    0\n139763                                                    0\n140882                                                    0\n146039                                                    0\n149807                                                    0\n150336                                                    0\n153551                                                    0\n156726                                                    0\n163050                                                    0\n166096                                                    0\n205464                                                    0\n211014                                                    0\n224380                                                    0\n225655                                                    0\n229644                                                    0\n235514                                                    0\n235706                                                    0\n238914                                                    0\n247070                                                    0\n247268                                                    0\n248073                                                    0\n250541                                                    0\n255750                                                    0\n268769                                                    0\n269844                                                    0\n277181                                                    0\n283756                                                    0\n295061                                                    0\n       AlnCnt_Varanus_JD_infer_z AlnEvalue_Varanus_JD_infer_z\n39780                          0                          999\n43463                          0                          999\n46899                          0                          999\n50141                          0                          999\n50274                          0                          999\n70972                          0                          999\n76139                          0                          999\n78208                          0                          999\n79343                          0                          999\n84162                          0                          999\n90579                          0                          999\n92968                          0                          999\n95906                          0                          999\n97972                          0                          999\n99146                          0                          999\n109333                         0                          999\n115084                         0                          999\n117389                         0                          999\n139763                         0                          999\n140882                         0                          999\n146039                         0                          999\n149807                         0                          999\n150336                         0                          999\n153551                         0                          999\n156726                         0                          999\n163050                         0                          999\n166096                         0                          999\n205464                         0                          999\n211014                         0                          999\n224380                         0                          999\n225655                         0                          999\n229644                         0                          999\n235514                         0                          999\n235706                         0                          999\n238914                         0                          999\n247070                         0                          999\n247268                         0                          999\n248073                         0                          999\n250541                         0                          999\n255750                         0                          999\n268769                         0                          999\n269844                         0                          999\n277181                         0                          999\n283756                         0                          999\n295061                         0                          999\n       Chrom_Varanus_JD_vac_aligned_chr6_7\n39780                             scaf_185\n43463                           scaf_44937\n46899                             scaf_174\n50141                           scaf_44937\n50274                             scaf_178\n70972                           scaf_44936\n76139                             scaf_185\n78208                             scaf_185\n79343                             scaf_178\n84162                             scaf_178\n90579                             scaf_178\n92968                           scaf_44936\n95906                           scaf_44936\n97972                             scaf_185\n99146                             scaf_178\n109333                            scaf_178\n115084                            scaf_178\n117389                            scaf_185\n139763                            scaf_178\n140882                            scaf_174\n146039                            scaf_178\n149807                            scaf_178\n150336                          scaf_44937\n153551                            scaf_185\n156726                            scaf_185\n163050                          scaf_44936\n166096                            scaf_185\n205464                            scaf_185\n211014                            scaf_185\n224380                            scaf_178\n225655                            scaf_178\n229644                            scaf_185\n235514                          scaf_44937\n235706                            scaf_178\n238914                            scaf_178\n247070                            scaf_174\n247268                            scaf_178\n248073                            scaf_178\n250541                          scaf_44937\n255750                            scaf_185\n268769                          scaf_44937\n269844                            scaf_174\n277181                            scaf_178\n283756                            scaf_162\n295061                          scaf_44936\n       ChromPos_Varanus_JD_vac_aligned_chr6_7\n39780                                 4535602\n43463                                 1879053\n46899                                  422662\n50141                                 3057519\n50274                                17533506\n70972                                 2239338\n76139                                 3058006\n78208                                 2982377\n79343                                15921589\n84162                                 9531917\n90579                                 8627028\n92968                                 2239338\n95906                                  626638\n97972                                 2280435\n99146                                13361437\n109333                               16092795\n115084                                4799684\n117389                                3789392\n139763                               16744777\n140882                                1374442\n146039                               15947400\n149807                               12871115\n150336                                1656795\n153551                                4311211\n156726                                1611346\n163050                                2878581\n166096                                4311211\n205464                                5197021\n211014                                4008715\n224380                                 959068\n225655                               18176452\n229644                                2688663\n235514                                2488100\n235706                               14281639\n238914                               14121110\n247070                                2162400\n247268                                1932940\n248073                               14281639\n250541                                3299754\n255750                                3038917\n268769                                1552585\n269844                                2162466\n277181                               18014400\n283756                               27088034\n295061                                2382323\n       AlnCnt_Varanus_JD_vac_aligned_chr6_7\n39780                                     1\n43463                                     1\n46899                                     1\n50141                                     1\n50274                                     1\n70972                                     1\n76139                                     1\n78208                                     1\n79343                                     1\n84162                                     1\n90579                                     1\n92968                                     1\n95906                                     1\n97972                                     1\n99146                                     1\n109333                                    6\n115084                                    1\n117389                                    1\n139763                                    1\n140882                                    1\n146039                                    1\n149807                                    1\n150336                                    1\n153551                                    1\n156726                                    1\n163050                                    1\n166096                                    1\n205464                                    1\n211014                                    1\n224380                                    1\n225655                                    2\n229644                                    1\n235514                                    1\n235706                                    1\n238914                                    1\n247070                                    1\n247268                                    1\n248073                                    1\n250541                                    1\n255750                                    1\n268769                                    1\n269844                                    1\n277181                                    1\n283756                                    2\n295061                                    1\n       AlnEvalue_Varanus_JD_vac_aligned_chr6_7 Chrom_Varanus_JD_infer_w\n39780                                 7.96e-30                         \n43463                                 7.96e-30                         \n46899                                 7.96e-30                         \n50141                                 7.96e-30                         \n50274                                 7.96e-30                         \n70972                                 7.96e-30                         \n76139                                 7.96e-30                         \n78208                                 7.96e-30                         \n79343                                 2.88e-24                         \n84162                                 7.96e-30                         \n90579                                 7.96e-30                         \n92968                                 7.96e-30                         \n95906                                 7.96e-30                         \n97972                                 7.96e-30                         \n99146                                 3.70e-28                         \n109333                                3.70e-28                         \n115084                                3.70e-28                         \n117389                                3.70e-28                         \n139763                                7.96e-30                         \n140882                                7.96e-30                         \n146039                                7.96e-30                         \n149807                                3.70e-28                         \n150336                                7.96e-30                         \n153551                                7.96e-30                         \n156726                                7.96e-30                         \n163050                                8.02e-25                         \n166096                                3.70e-28                         \n205464                                3.70e-28                         \n211014                                3.70e-28                         \n224380                                7.96e-30                         \n225655                                7.96e-30                         \n229644                                7.96e-30                         \n235514                                7.96e-30                         \n235706                                2.88e-24                         \n238914                                7.96e-30                         \n247070                                7.96e-30                         \n247268                                7.96e-30                         \n248073                                2.88e-24                         \n250541                                7.96e-30                         \n255750                                7.96e-30                         \n268769                                7.96e-30                         \n269844                                3.70e-28                         \n277181                                2.25e-20                         \n283756                                2.93e-14                         \n295061                                2.25e-20                         \n       ChromPos_Varanus_JD_infer_w AlnCnt_Varanus_JD_infer_w\n39780                            0                         0\n43463                            0                         0\n46899                            0                         0\n50141                            0                         0\n50274                            0                         0\n70972                            0                         0\n76139                            0                         0\n78208                            0                         0\n79343                            0                         0\n84162                            0                         0\n90579                            0                         0\n92968                            0                         0\n95906                            0                         0\n97972                            0                         0\n99146                            0                         0\n109333                           0                         0\n115084                           0                         0\n117389                           0                         0\n139763                           0                         0\n140882                           0                         0\n146039                           0                         0\n149807                           0                         0\n150336                           0                         0\n153551                           0                         0\n156726                           0                         0\n163050                           0                         0\n166096                           0                         0\n205464                           0                         0\n211014                           0                         0\n224380                           0                         0\n225655                           0                         0\n229644                           0                         0\n235514                           0                         0\n235706                           0                         0\n238914                           0                         0\n247070                           0                         0\n247268                           0                         0\n248073                           0                         0\n250541                           0                         0\n255750                           0                         0\n268769                           0                         0\n269844                           0                         0\n277181                           0                         0\n283756                           0                         0\n295061                           0                         0\n       AlnEvalue_Varanus_JD_infer_w    SNP SnpPosition CallRate OneRatioRef\n39780                           999 62:T&gt;G          62 1.000000   0.8529412\n43463                           999 33:C&gt;T          33 0.970588   0.8484848\n46899                           999 50:C&gt;T          50 0.823529   0.7500000\n50141                           999 10:C&gt;T          10 0.852941   0.8275862\n50274                           999 13:C&gt;A          13 1.000000   0.8529412\n70972                           999 53:C&gt;T          53 0.823529   0.8571429\n76139                           999 11:T&gt;A          11 0.941176   0.8437500\n78208                           999 36:G&gt;T          36 0.794118   0.8148148\n79343                           999  5:C&gt;G           5 0.735294   0.8000000\n84162                           999 32:G&gt;C          32 0.941176   0.8437500\n90579                           999 25:G&gt;A          25 0.735294   0.8000000\n92968                           999 43:C&gt;G          43 0.823529   0.8571429\n95906                           999 27:A&gt;G          27 0.823529   0.8214286\n97972                           999  8:C&gt;T           8 0.941176   0.8437500\n99146                           999 44:C&gt;T          44 0.823529   0.4285714\n109333                          999 43:G&gt;C          43 0.823529   0.7857143\n115084                          999 47:G&gt;A          47 0.323529   0.3636364\n117389                          999 30:T&gt;C          30 0.588235   0.6000000\n139763                          999 61:C&gt;G          61 1.000000   0.8529412\n140882                          999 15:T&gt;A          15 1.000000   0.8529412\n146039                          999 36:G&gt;T          36 1.000000   0.8529412\n149807                          999 34:A&gt;G          34 0.735294   0.6400000\n150336                          999 39:G&gt;C          39 0.794118   0.8148148\n153551                          999 15:C&gt;T          15 0.764706   0.6153846\n156726                          999 46:T&gt;C          46 0.735294   0.6800000\n163050                          999 56:T&gt;C          56 0.558824   0.4210526\n166096                          999 32:G&gt;A          32 0.411765   0.8571429\n205464                          999 42:A&gt;G          42 0.970588   0.3333333\n211014                          999 11:A&gt;C          11 0.911765   0.2903226\n224380                          999 26:C&gt;T          26 0.794118   0.8148148\n225655                          999 68:C&gt;T          68 0.852941   0.7931034\n229644                          999 61:A&gt;G          61 0.941176   0.8125000\n235514                          999 34:G&gt;C          34 0.970588   0.7575758\n235706                          999 52:C&gt;T          52 0.911765   0.8709677\n238914                          999 50:G&gt;A          50 0.823529   0.8214286\n247070                          999 37:C&gt;T          37 0.823529   0.7857143\n247268                          999 59:C&gt;T          59 0.882353   0.8333333\n248073                          999 53:G&gt;T          53 0.941176   0.8437500\n250541                          999 68:G&gt;T          68 0.941176   0.8750000\n255750                          999  7:G&gt;A           7 0.823529   0.6428571\n268769                          999 35:C&gt;T          35 0.852941   0.9310345\n269844                          999 38:A&gt;G          38 0.735294   0.6800000\n277181                          999 49:T&gt;C          49 0.588235   0.4500000\n283756                          999 16:T&gt;G          16 0.352941   0.5000000\n295061                          999 35:G&gt;C          35 0.382353   0.8461538\n       OneRatioSnp FreqHomRef FreqHomSnp   FreqHets    PICRef    PICSnp\n39780    0.3529412  0.6470588 0.14705882 0.20588235 0.2508651 0.4567474\n43463    0.3636364  0.6363636 0.15151515 0.21212121 0.2571166 0.4628099\n46899    0.4285714  0.5714286 0.25000000 0.17857143 0.3750000 0.4897959\n50141    0.3103448  0.6896552 0.17241379 0.13793103 0.2853746 0.4280618\n50274    0.2647059  0.7352941 0.14705882 0.11764706 0.2508651 0.3892734\n70972    0.2142857  0.7857143 0.14285714 0.07142857 0.2448980 0.3367347\n76139    0.2500000  0.7500000 0.15625000 0.09375000 0.2636719 0.3750000\n78208    0.2962963  0.7037037 0.18518519 0.11111111 0.3017833 0.4170096\n79343    0.4000000  0.6000000 0.20000000 0.20000000 0.3200000 0.4800000\n84162    0.3750000  0.6250000 0.15625000 0.21875000 0.2636719 0.4687500\n90579    0.3600000  0.6400000 0.20000000 0.16000000 0.3200000 0.4608000\n92968    0.2500000  0.7500000 0.14285714 0.10714286 0.2448980 0.3750000\n95906    0.2857143  0.7142857 0.17857143 0.10714286 0.2933673 0.4081633\n97972    0.3125000  0.6875000 0.15625000 0.15625000 0.2636719 0.4296875\n99146    0.8214286  0.1785714 0.57142857 0.25000000 0.4897959 0.2933673\n109333   0.3214286  0.6785714 0.21428571 0.10714286 0.3367347 0.4362245\n115084   0.7272727  0.2727273 0.63636364 0.09090909 0.4628099 0.3966942\n117389   0.5500000  0.4500000 0.40000000 0.15000000 0.4800000 0.4950000\n139763   0.3235294  0.6764706 0.14705882 0.17647059 0.2508651 0.4377163\n140882   0.2058824  0.7941176 0.14705882 0.05882353 0.2508651 0.3269896\n146039   0.2941176  0.7058824 0.14705882 0.14705882 0.2508651 0.4152249\n149807   0.4800000  0.5200000 0.36000000 0.12000000 0.4608000 0.4992000\n150336   0.3333333  0.6666667 0.18518519 0.14814815 0.3017833 0.4444444\n153551   0.4615385  0.5384615 0.38461538 0.07692308 0.4733728 0.4970414\n156726   0.4400000  0.5600000 0.32000000 0.12000000 0.4352000 0.4928000\n163050   0.6315789  0.3684211 0.57894737 0.05263158 0.4875346 0.4653740\n166096   0.2142857  0.7857143 0.14285714 0.07142857 0.2448980 0.3367347\n205464   0.7878788  0.2121212 0.66666667 0.12121212 0.4444444 0.3342516\n211014   0.8064516  0.1935484 0.70967742 0.09677419 0.4120708 0.3121748\n224380   0.4074074  0.5925926 0.18518519 0.22222222 0.3017833 0.4828532\n225655   0.3793103  0.6206897 0.20689655 0.17241379 0.3281807 0.4708680\n229644   0.2812500  0.7187500 0.18750000 0.09375000 0.3046875 0.4042969\n235514   0.3636364  0.6363636 0.24242424 0.12121212 0.3673095 0.4628099\n235706   0.1612903  0.8387097 0.12903226 0.03225806 0.2247659 0.2705515\n238914   0.4285714  0.5714286 0.17857143 0.25000000 0.2933673 0.4897959\n247070   0.3928571  0.6071429 0.21428571 0.17857143 0.3367347 0.4770408\n247268   0.4000000  0.6000000 0.16666667 0.23333333 0.2777778 0.4800000\n248073   0.2812500  0.7187500 0.15625000 0.12500000 0.2636719 0.4042969\n250541   0.2500000  0.7500000 0.12500000 0.12500000 0.2187500 0.3750000\n255750   0.3928571  0.6071429 0.35714286 0.03571429 0.4591837 0.4770408\n268769   0.1724138  0.8275862 0.06896552 0.10344828 0.1284185 0.2853746\n269844   0.4000000  0.6000000 0.32000000 0.08000000 0.4352000 0.4800000\n277181   0.6500000  0.3500000 0.55000000 0.10000000 0.4950000 0.4550000\n283756   0.5833333  0.4166667 0.50000000 0.08333333 0.5000000 0.4861111\n295061   0.2307692  0.7692308 0.15384615 0.07692308 0.2603550 0.3550296\n          AvgPIC AvgCountRef AvgCountSnp   RepAvg    clone         uid rdepth\n39780  0.3538062     6.39256     5.26549 0.992308 47530186 47530186-62    7.3\n43463  0.3599633     6.98502     5.53659 0.992188 47510325 47510325-33    8.0\n46899  0.4323980     3.43028     3.11765 0.990741 47506537 47506537-50    3.6\n50141  0.3567182     4.65323     3.38182 0.963636 58564194 58564194-10    4.9\n50274  0.3200692     5.37970     3.55556 0.991379 47530853 47530853-13    5.5\n70972  0.2908163     3.15179     2.61290 0.970588 58568357 58568357-53    3.4\n76139  0.3193359     7.28685     6.76923 1.000000 47555226 47555226-11    7.6\n78208  0.3593964     9.28947     8.66000 0.991071 47526162 47526162-36    9.8\n79343  0.4000000    10.18595     9.39583 1.000000 58574714  58574714-5   11.0\n84162  0.3662109     7.08808     5.27273 0.982143 47570599 47570599-32    7.5\n90579  0.3904000     3.51101     3.31034 0.980392 58564685 58564685-25    3.7\n92968  0.3099490     3.15179     2.68421 0.989583 58568357 58568357-43    3.2\n95906  0.3507653     4.36697     3.50000 0.990385 47571057 47571057-27    4.5\n97972  0.3466797     3.17225     3.04878 0.959184 58568730  58568730-8    3.5\n99146  0.3915816     4.96226     6.76136 0.981818 47534249 47534249-44    7.4\n109333 0.3864796     3.43085     3.18182 1.000000 58564990 58564990-43    3.6\n115084 0.4297521     5.90370     4.81967 0.987500 58568170 58568170-47    5.9\n117389 0.4875000     4.94949     4.31683 1.000000 47572514 47572514-30    5.0\n139763 0.3442907    11.39085     9.09804 1.000000 47567360 47567360-61   12.3\n140882 0.2889273    12.79012     7.41053 0.992424 47562299 47562299-15   13.1\n146039 0.3330450     9.19712     7.79825 0.984127 47490392 47490392-36   10.2\n149807 0.4800000    13.12022     9.26087 0.991071 47557237 47557237-34   13.9\n150336 0.3731139    16.48000    15.55000 1.000000 47539268 47539268-39   18.1\n153551 0.4852071     5.48864     5.31343 0.979167 47584615 47584615-15    5.8\n156726 0.4640000     3.57059     3.45714 0.980769 58581892 58581892-46    4.0\n163050 0.4764543    14.11538    11.69748 1.000000 58581176 58581176-56   12.4\n166096 0.2908163     5.31343     5.20000 0.982143 58582604 58582604-32    5.5\n205464 0.3893480     6.20000     6.56981 0.991228 47495246 47495246-42    7.0\n211014 0.3621228     4.43333     4.13139 1.000000 58555628 58555628-11    4.3\n224380 0.3923182     4.41758     3.63768 0.975410 58534605 58534605-26    4.7\n225655 0.3995244     3.65238     2.97059 0.953704 47572698 47572698-68    4.0\n229644 0.3544922     3.46185     2.94872 0.956897 58548074 58548074-61    3.6\n235514 0.4150597     3.06186     2.65179 0.928571 58548705 58548705-34    3.5\n235706 0.2476587    13.40948     9.10769 0.981818 47553573 47553573-52   14.0\n238914 0.3915816     4.14583     3.35849 0.981481 58552886 58552886-50    4.5\n247070 0.4068878     4.12121     3.25210 0.937500 58544938 58544938-37    4.4\n247268 0.3788889     4.54237     3.67442 0.981132 47555650 47555650-59    4.9\n248073 0.3339844    13.40948    13.02439 0.990566 47553573 47553573-53   14.7\n250541 0.2968750     6.90000     5.63636 1.000000 47537859 47537859-68    7.1\n255750 0.4681122     3.20879     2.91304 0.976744 58552335  58552335-7    3.5\n268769 0.2068966     6.87374     6.16667 0.988372 47553754 47553754-35    7.0\n269844 0.4576000     3.95302     3.07229 0.980392 58554983 58554983-38    4.1\n277181 0.4750000    16.03704     9.48322 1.000000 58526779 58526779-49   10.6\n283756 0.4930556     6.35000     5.91228 0.983333 47495750 47495750-16    6.3\n295061 0.3076923     5.02151     4.66667 0.981481 58529930 58529930-35    5.1\n          maf monomorphs OneRatio PIC\n39780  0.2500         NA       NA  NA\n43463  0.2576         NA       NA  NA\n46899  0.3393         NA       NA  NA\n50141  0.2414         NA       NA  NA\n50274  0.2059         NA       NA  NA\n70972  0.1786         NA       NA  NA\n76139  0.2031         NA       NA  NA\n78208  0.2407         NA       NA  NA\n79343  0.3000         NA       NA  NA\n84162  0.2656         NA       NA  NA\n90579  0.2800         NA       NA  NA\n92968  0.1964         NA       NA  NA\n95906  0.2321         NA       NA  NA\n97972  0.2344         NA       NA  NA\n99146  0.3036         NA       NA  NA\n109333 0.2679         NA       NA  NA\n115084 0.3182         NA       NA  NA\n117389 0.4750         NA       NA  NA\n139763 0.2353         NA       NA  NA\n140882 0.1765         NA       NA  NA\n146039 0.2206         NA       NA  NA\n149807 0.4200         NA       NA  NA\n150336 0.2593         NA       NA  NA\n153551 0.4231         NA       NA  NA\n156726 0.3800         NA       NA  NA\n163050 0.3947         NA       NA  NA\n166096 0.1786         NA       NA  NA\n205464 0.2727         NA       NA  NA\n211014 0.2419         NA       NA  NA\n224380 0.2963         NA       NA  NA\n225655 0.2931         NA       NA  NA\n229644 0.2344         NA       NA  NA\n235514 0.3030         NA       NA  NA\n235706 0.1452         NA       NA  NA\n238914 0.3036         NA       NA  NA\n247070 0.3036         NA       NA  NA\n247268 0.2833         NA       NA  NA\n248073 0.2188         NA       NA  NA\n250541 0.1875         NA       NA  NA\n255750 0.3750         NA       NA  NA\n268769 0.1207         NA       NA  NA\n269844 0.3600         NA       NA  NA\n277181 0.4000         NA       NA  NA\n283756 0.4583         NA       NA  NA\n295061 0.1923         NA       NA  NA\n\nvac.pops &lt;- vac.karyo\n\n# create an index for only those loci on scaf_178-------------------------------\n\nindex_178 &lt;- which(vac.pops@other$loc.metrics$Chrom_Varanus_JD_vac_aligned_chr6_7 == \"scaf_178\")\n\n# check the index to verify genlight object\nindex_178\n\n   [1]     4    14    19    24    42    45    46    47    54    55    62    66\n  [13]    67    74    78    82    97   104   119   120   122   125   129   132\n  [25]   141   143   144   155   157   161   174   175   193   194   199   217\n  [37]   221   228   229   234   239   240   241   246   247   248   262   266\n  [49]   269   275   276   281   293   294   299   306   307   312   316   320\n  [61]   330   333   334   335   349   352   363   367   374   381   385   394\n  [73]   396   406   407   417   430   439   440   441   442   444   445   446\n  [85]   447   457   484   495   496   498   502   503   507   524   548   551\n  [97]   562   571   576   578   579   586   610   612   614   617   618   620\n [109]   627   628   645   653   661   663   664   665   666   670   671   672\n [121]   677   682   684   685   686   687   693   695   696   698   699   701\n [133]   702   704   707   708   709   710   711   720   721   722   723   728\n [145]   731   732   734   738   743   746   748   750   751   754   757   760\n [157]   765   766   768   770   771   776   778   782   784   787   794   799\n [169]   827   828   835   839   850   863   864   865   867   868   869   870\n [181]   872   879   881   882   883   886   892   893   897   898   900   915\n [193]   920   924   929   930   936   937   938   951   952   953   955   959\n [205]   963   969   970   971   973   974   975   977   981   990   991   992\n [217]   993  1012  1014  1015  1016  1021  1022  1036  1040  1041  1044  1045\n [229]  1046  1047  1049  1051  1053  1055  1057  1059  1061  1063  1075  1081\n [241]  1082  1089  1092  1105  1108  1111  1121  1129  1139  1140  1141  1146\n [253]  1155  1157  1162  1176  1177  1178  1180  1183  1184  1194  1201  1204\n [265]  1205  1211  1212  1215  1230  1239  1240  1243  1244  1252  1254  1263\n [277]  1265  1266  1268  1269  1270  1283  1290  1291  1292  1294  1295  1297\n [289]  1301  1305  1306  1307  1310  1314  1315  1323  1327  1328  1329  1335\n [301]  1336  1337  1349  1350  1354  1364  1365  1366  1367  1368  1369  1371\n [313]  1375  1379  1383  1393  1395  1402  1404  1406  1411  1413  1414  1418\n [325]  1428  1429  1441  1444  1445  1446  1448  1452  1453  1463  1469  1472\n [337]  1473  1475  1477  1479  1488  1492  1493  1501  1505  1507  1508  1509\n [349]  1511  1515  1531  1536  1537  1545  1546  1549  1561  1562  1579  1580\n [361]  1586  1589  1594  1595  1597  1601  1604  1605  1606  1607  1608  1609\n [373]  1611  1616  1645  1649  1652  1653  1675  1677  1681  1682  1683  1684\n [385]  1691  1696  1698  1705  1717  1718  1719  1720  1743  1748  1750  1763\n [397]  1766  1767  1774  1778  1782  1788  1790  1796  1799  1801  1803  1819\n [409]  1820  1821  1823  1825  1826  1828  1831  1836  1837  1838  1839  1840\n [421]  1848  1857  1858  1862  1863  1866  1874  1876  1882  1883  1884  1891\n [433]  1892  1893  1909  1911  1912  1917  1922  1926  1927  1934  1935  1937\n [445]  1938  1949  1950  1951  1952  1953  1955  1957  1958  1961  1967  1970\n [457]  1974  1979  1980  1981  1982  1994  2003  2005  2017  2021  2022  2024\n [469]  2025  2028  2037  2040  2041  2042  2075  2077  2081  2087  2089  2092\n [481]  2094  2097  2099  2101  2103  2104  2107  2111  2117  2119  2120  2121\n [493]  2125  2126  2130  2133  2147  2148  2165  2175  2182  2186  2195  2198\n [505]  2199  2201  2202  2204  2214  2218  2219  2221  2227  2230  2231  2232\n [517]  2233  2235  2238  2240  2243  2254  2255  2256  2264  2268  2275  2284\n [529]  2292  2295  2312  2315  2316  2317  2326  2333  2334  2340  2341  2342\n [541]  2343  2344  2346  2348  2358  2367  2375  2378  2380  2382  2394  2397\n [553]  2406  2413  2414  2421  2424  2425  2434  2436  2446  2447  2450  2451\n [565]  2452  2454  2457  2458  2459  2467  2468  2470  2474  2476  2478  2484\n [577]  2490  2491  2494  2499  2500  2503  2505  2511  2525  2527  2528  2529\n [589]  2530  2539  2540  2559  2569  2572  2573  2574  2575  2576  2582  2583\n [601]  2586  2587  2589  2590  2593  2596  2597  2599  2602  2609  2618  2626\n [613]  2628  2632  2633  2643  2647  2648  2649  2670  2675  2676  2685  2687\n [625]  2702  2712  2716  2724  2726  2732  2733  2747  2752  2760  2761  2762\n [637]  2763  2764  2766  2798  2802  2806  2808  2812  2813  2828  2832  2837\n [649]  2841  2848  2850  2852  2858  2859  2866  2871  2872  2879  2885  2886\n [661]  2887  2888  2917  2920  2922  2925  2926  2941  2942  2950  2956  2957\n [673]  2963  2986  2996  2999  3002  3006  3016  3025  3028  3029  3030  3031\n [685]  3035  3041  3049  3050  3052  3054  3055  3056  3058  3068  3076  3078\n [697]  3082  3086  3100  3108  3109  3125  3126  3129  3130  3131  3141  3142\n [709]  3143  3144  3147  3154  3159  3161  3167  3168  3171  3172  3175  3176\n [721]  3178  3180  3184  3186  3188  3193  3196  3198  3203  3207  3208  3211\n [733]  3212  3213  3221  3223  3229  3232  3236  3237  3241  3242  3244  3250\n [745]  3257  3263  3267  3273  3275  3276  3293  3299  3301  3307  3315  3317\n [757]  3339  3345  3348  3349  3350  3353  3354  3386  3387  3400  3402  3406\n [769]  3412  3416  3427  3430  3432  3434  3436  3440  3447  3450  3464  3467\n [781]  3473  3495  3498  3499  3512  3514  3515  3522  3524  3528  3533  3537\n [793]  3538  3541  3543  3549  3557  3558  3561  3562  3566  3581  3585  3596\n [805]  3597  3613  3617  3626  3628  3630  3637  3638  3640  3644  3648  3652\n [817]  3653  3654  3655  3657  3659  3665  3670  3677  3686  3689  3691  3695\n [829]  3724  3730  3731  3734  3742  3746  3761  3763  3766  3767  3781  3784\n [841]  3791  3793  3794  3796  3797  3801  3810  3811  3816  3819  3820  3824\n [853]  3828  3829  3833  3834  3837  3839  3843  3847  3851  3852  3854  3863\n [865]  3865  3877  3885  3894  3898  3909  3910  3911  3918  3922  3925  3927\n [877]  3932  3938  3941  3942  3947  3950  3954  3955  3956  3957  3958  3959\n [889]  3967  3973  3980  3981  3983  3985  3986  3987  3992  3994  3999  4000\n [901]  4016  4017  4018  4021  4026  4032  4035  4038  4044  4047  4048  4049\n [913]  4051  4055  4057  4058  4059  4060  4071  4073  4076  4084  4089  4100\n [925]  4101  4103  4107  4111  4113  4124  4125  4127  4128  4133  4136  4137\n [937]  4144  4145  4157  4160  4161  4164  4165  4167  4171  4176  4181  4185\n [949]  4192  4193  4194  4198  4201  4204  4214  4220  4223  4226  4227  4235\n [961]  4239  4248  4249  4250  4255  4261  4267  4274  4281  4283  4284  4292\n [973]  4298  4302  4305  4331  4336  4337  4349  4351  4356  4359  4364  4369\n [985]  4372  4375  4386  4387  4389  4390  4394  4395  4403  4425  4428  4430\n [997]  4439  4440  4442  4445  4450  4455  4457  4459  4460  4461  4466  4467\n[1009]  4472  4476  4479  4481  4482  4485  4491  4495  4505  4507  4519  4520\n[1021]  4523  4540  4543  4551  4560  4561  4569  4570  4572  4577  4579  4582\n[1033]  4583  4589  4590  4591  4593  4595  4606  4611  4616  4626  4629  4639\n[1045]  4642  4648  4650  4651  4656  4657  4666  4667  4673  4674  4678  4679\n[1057]  4680  4693  4719  4722  4728  4738  4755  4758  4763  4767  4779  4784\n[1069]  4790  4793  4795  4800  4808  4812  4813  4837  4838  4840  4841  4846\n[1081]  4852  4853  4854  4862  4864  4874  4878  4885  4891  4906  4915  4930\n[1093]  4936  4940  4943  4954  4955  4956  4962  4966  4972  4980  4982  5002\n[1105]  5003  5004  5005  5007  5009  5015  5020  5027  5029  5036  5044  5046\n[1117]  5056  5059  5068  5069  5086  5087  5088  5092  5101  5109  5117  5119\n[1129]  5132  5136  5138  5141  5143  5151  5152  5159  5160  5181  5188  5194\n[1141]  5204  5215  5218  5226  5228  5240  5242  5244  5255  5269  5270  5271\n[1153]  5273  5274  5279  5281  5282  5284  5291  5314  5315  5316  5335  5337\n[1165]  5343  5351  5353  5354  5358  5360  5367  5368  5388  5389  5390  5391\n[1177]  5397  5405  5406  5407  5413  5414  5419  5437  5440  5441  5446  5450\n[1189]  5456  5457  5458  5459  5460  5462  5464  5465  5468  5475  5480  5481\n[1201]  5486  5488  5489  5493  5494  5495  5503  5511  5515  5516  5522  5529\n[1213]  5534  5536  5538  5541  5551  5552  5553  5568  5574  5578  5579  5581\n[1225]  5583  5585  5594  5596  5614  5623  5625  5627  5628  5631  5633  5642\n[1237]  5647  5649  5651  5652  5653  5655  5657  5662  5664  5669  5670  5673\n[1249]  5675  5679  5689  5691  5698  5703  5704  5717  5718  5724  5727  5728\n[1261]  5730  5732  5743  5745  5747  5752  5758  5764  5765  5768  5770  5777\n[1273]  5781  5782  5787  5793  5794  5796  5800  5804  5808  5810  5817  5818\n[1285]  5826  5831  5833  5834  5835  5836  5843  5844  5847  5850  5854  5860\n[1297]  5861  5865  5871  5872  5880  5881  5888  5890  5895  5903  5904  5906\n[1309]  5920  5923  5924  5928  5934  5935  5936  5942  5946  5947  5949  5950\n[1321]  5952  5953  5960  5961  5972  5979  5983  5986  5988  5989  5990  5992\n[1333]  6009  6010  6020  6022  6025  6034  6035  6037  6044  6045  6046  6047\n[1345]  6052  6053  6059  6060  6068  6069  6072  6081  6082  6083  6088  6094\n[1357]  6105  6107  6108  6115  6119  6122  6130  6132  6136  6140  6159  6160\n[1369]  6161  6170  6186  6188  6190  6195  6199  6214  6218  6223  6227  6228\n[1381]  6231  6250  6252  6253  6259  6272  6274  6276  6285  6286  6287  6303\n[1393]  6316  6319  6320  6323  6324  6329  6335  6340  6344  6347  6355  6359\n[1405]  6363  6364  6370  6385  6397  6399  6401  6403  6406  6417  6423  6428\n[1417]  6429  6437  6438  6446  6449  6451  6454  6460  6469  6474  6479  6482\n[1429]  6490  6491  6496  6497  6498  6499  6506  6511  6515  6518  6526  6539\n[1441]  6542  6544  6545  6550  6561  6577  6580  6582  6586  6589  6590  6600\n[1453]  6604  6610  6611  6612  6621  6625  6626  6629  6634  6635  6644  6658\n[1465]  6659  6662  6666  6670  6674  6677  6689  6690  6712  6718  6723  6726\n[1477]  6727  6728  6732  6735  6738  6739  6742  6748  6749  6754  6756  6760\n[1489]  6763  6765  6771  6787  6801  6804  6815  6816  6817  6820  6824  6829\n[1501]  6830  6835  6847  6852  6856  6857  6858  6862  6864  6865  6871  6876\n[1513]  6881  6886  6894  6895  6913  6918  6921  6925  6935  6941  6942  6944\n[1525]  6947  6949  6953  6956  6960  6963  6964  6965  6974  6986  6992  6993\n[1537]  6994  6996  6997  6999  7002  7004  7015  7018  7021  7025  7028  7029\n[1549]  7030  7038  7056  7057  7058  7066  7071  7072  7077  7083  7101  7102\n[1561]  7105  7107  7108  7109  7116  7133  7147  7153  7155  7160  7167  7173\n[1573]  7176  7177  7181  7185  7200  7205  7209  7210  7218  7232  7235  7252\n[1585]  7263  7266  7267  7272  7273  7276  7278  7279  7283  7292  7302  7307\n[1597]  7309  7312  7315  7318  7319  7322  7326  7328  7331  7351  7354  7355\n[1609]  7357  7361  7370  7371  7373  7374  7378  7382  7386  7392  7396  7401\n[1621]  7402  7403  7416  7417  7424  7425  7428  7431  7439  7440  7441  7446\n[1633]  7458  7459  7465  7470  7471  7482  7485  7491  7494  7498  7500  7504\n[1645]  7510  7511  7514  7519  7520  7523  7532  7535  7536  7539  7546  7547\n[1657]  7548  7550  7552  7565  7569  7577  7583  7588  7595  7599  7601  7602\n[1669]  7607  7609  7611  7622  7623  7624  7626  7636  7637  7642  7645  7646\n[1681]  7648  7662  7668  7669  7670  7671  7677  7679  7685  7686  7689  7692\n[1693]  7693  7708  7709  7713  7721  7726  7728  7734  7736  7739  7748  7751\n[1705]  7752  7755  7757  7767  7773  7785  7793  7796  7797  7800  7802  7805\n[1717]  7806  7808  7812  7814  7818  7824  7828  7835  7837  7839  7851  7858\n[1729]  7859  7862  7865  7866  7868  7869  7872  7875  7883  7886  7891  7894\n[1741]  7898  7906  7911  7922  7928  7933  7942  7944  7948  7949  7950  7953\n[1753]  7960  7961  7971  7972  7973  7990  7993  7994  7997  7999  8001  8005\n[1765]  8008  8015  8016  8017  8021  8023  8025  8026  8027  8039  8044  8049\n[1777]  8053  8058  8069  8070  8072  8080  8083  8088  8090  8093  8097  8108\n[1789]  8123  8124  8137  8139  8140  8142  8144  8146  8151  8154  8157  8159\n[1801]  8161  8170  8175  8178  8183  8192  8194  8208  8219  8228  8240  8241\n[1813]  8245  8257  8262  8268  8272  8273  8274  8277  8293  8295  8296  8299\n[1825]  8317  8319  8321  8325  8327  8329  8339  8342  8345  8347  8350  8351\n[1837]  8352  8357  8358  8359  8363  8381  8387  8388  8394  8402  8406  8409\n[1849]  8411  8415  8428  8445  8447  8451  8455  8461  8462  8464  8466  8467\n[1861]  8469  8471  8479  8485  8490  8495  8499  8501  8502  8503  8505  8506\n[1873]  8517  8523  8525  8527  8532  8533  8534  8540  8543  8546  8551  8552\n[1885]  8561  8563  8568  8575  8589  8590  8595  8598  8607  8609  8612  8613\n[1897]  8616  8623  8626  8631  8636  8637  8643  8645  8646  8649  8650  8654\n[1909]  8656  8663  8664  8669  8674  8680  8686  8688  8690  8696  8697  8701\n[1921]  8702  8706  8710  8713  8715  8719  8733  8736  8739  8740  8741  8744\n[1933]  8745  8751  8753  8755  8778  8779  8784  8785  8788  8793  8801  8802\n[1945]  8803  8806  8808  8811  8812  8815  8816  8817  8821  8827  8831  8836\n[1957]  8842  8845  8846  8854  8861  8865  8867  8871  8872  8881  8883  8884\n[1969]  8894  8897  8899  8900  8904  8905  8911  8912  8914  8915  8916  8927\n[1981]  8931  8932  8933  8934  8943  8947  8948  8949  8950  8954  8955  8956\n[1993]  8965  8968  8973  8974  8975  8977  8979  8980  8987  8988  8994  8999\n[2005]  9007  9008  9009  9019  9021  9026  9036  9039  9046  9047  9048  9051\n[2017]  9052  9053  9054  9056  9057  9068  9070  9072  9073  9074  9077  9078\n[2029]  9079  9088  9089  9091  9094  9112  9113  9116  9117  9124  9125  9138\n[2041]  9139  9143  9152  9154  9155  9157  9158  9159  9160  9166  9175  9177\n[2053]  9178  9190  9195  9196  9197  9198  9199  9209  9210  9212  9213  9216\n[2065]  9220  9221  9226  9228  9233  9240  9241  9244  9249  9251  9255  9258\n[2077]  9261  9265  9273  9283  9286  9288  9298  9300  9309  9319  9330  9331\n[2089]  9336  9342  9343  9344  9354  9361  9366  9368  9369  9376  9381  9387\n[2101]  9388  9394  9395  9400  9405  9416  9420  9441  9449  9453  9468  9470\n[2113]  9482  9486  9488  9491  9492  9495  9502  9507  9516  9526  9531  9533\n[2125]  9541  9544  9545  9546  9551  9552  9553  9556  9557  9558  9561  9564\n[2137]  9567  9569  9584  9586  9589  9590  9594  9608  9609  9610  9624  9632\n[2149]  9637  9645  9648  9661  9666  9667  9671  9679  9680  9682  9684  9690\n[2161]  9691  9695  9696  9698  9703  9704  9713  9715  9716  9717  9719  9721\n[2173]  9726  9730  9734  9735  9737  9738  9743  9751  9757  9758  9761  9772\n[2185]  9773  9778  9789  9792  9797  9800  9801  9808  9817  9821  9823  9831\n[2197]  9838  9839  9850  9853  9857  9867  9878  9882  9889  9895  9901  9904\n[2209]  9909  9925  9926  9931  9939  9943  9946  9949  9952  9956  9957  9960\n[2221]  9966  9968  9969  9971  9973  9981  9991  9992 10004 10006 10008 10015\n[2233] 10024 10025 10026 10030 10033 10037 10040 10048 10052 10077 10080 10081\n[2245] 10104 10107 10109 10111 10121 10125 10142 10143 10148 10151 10153 10154\n[2257] 10162 10170 10174 10175 10179 10187 10197 10206 10210 10211 10212 10215\n[2269] 10223 10224 10225 10230 10240 10241 10245 10250 10251 10253 10255 10256\n[2281] 10257 10261 10262 10264 10265 10269 10276 10283 10284 10286 10295 10299\n[2293] 10300 10306 10318 10324 10333 10334 10347 10350 10351 10353 10386 10390\n[2305] 10394 10398 10401 10415 10416 10423 10424 10426 10429 10431 10437 10439\n[2317] 10442 10450 10458 10466 10470 10474 10475 10476 10477 10481 10482 10490\n[2329] 10494 10499 10501 10506 10508 10509 10513 10517 10518 10519 10521 10524\n[2341] 10537 10541 10550 10567 10568 10581 10589 10600 10601 10603 10609 10632\n[2353] 10634 10636 10660 10663 10670 10675 10677 10679 10681 10682 10684 10689\n[2365] 10691 10692 10695 10697 10701 10702 10703 10707 10708 10719 10720 10721\n[2377] 10722 10729 10732 10733 10737 10740 10743 10744 10745 10748 10757 10762\n[2389] 10763 10770 10781 10783 10788 10797 10798 10799 10801 10802 10803 10804\n[2401] 10806 10812 10813 10814 10816 10819 10836 10842 10846 10852 10863 10866\n[2413] 10869 10873 10874 10877 10878 10880 10891 10901 10912 10913 10916 10920\n[2425] 10923 10928 10929 10931 10934 10936 10937 10939 10945 10948 10954 10956\n[2437] 10958 10961 10962 10964 10966 10968 10971 10975 10976 10978 10981 10986\n[2449] 10987 10993 10994 10995 11001 11005 11006 11007 11009 11011 11014 11018\n[2461] 11022 11026 11028 11032 11033 11040 11044 11050 11056 11058 11059 11066\n[2473] 11075 11076 11077 11083 11085 11088 11089 11099 11103 11104 11117 11119\n[2485] 11120 11121 11122 11123 11131 11134 11137 11138 11142 11143 11144 11147\n[2497] 11176 11177 11179 11184 11185 11194 11196 11198 11202 11208 11212 11213\n[2509] 11214 11215 11218 11223 11229 11233 11235 11241 11243 11249 11256 11258\n[2521] 11260 11262 11267 11278 11291 11307 11312 11316 11317 11318 11319 11321\n[2533] 11327 11328 11331 11332 11333 11335 11337 11340 11343 11354 11356 11358\n[2545] 11359 11360 11362 11366 11367 11382 11388 11392 11393 11394 11397 11398\n[2557] 11399 11404 11406 11409 11413 11415 11424 11425 11429 11432 11435 11436\n[2569] 11438 11439 11440 11445 11448 11450 11453 11455 11458 11463 11468 11470\n[2581] 11478 11480 11482 11483 11489 11490 11497 11499 11510 11513 11518 11519\n[2593] 11529 11530 11531 11534 11536 11544 11545 11546 11555 11567 11569 11571\n[2605] 11572 11573 11575 11576 11579 11583 11584 11593 11601 11603 11605 11612\n[2617] 11615 11620 11640 11643 11649 11656 11664 11670 11675 11681 11690 11691\n[2629] 11692 11696 11716 11719 11723 11724 11728 11732 11736 11740 11741 11743\n[2641] 11746 11747 11748 11754 11760 11762 11766 11768 11769 11771 11773 11778\n[2653] 11782 11789 11797 11801 11804 11805 11807 11808 11809 11813 11817 11820\n[2665] 11834 11835 11836 11845 11847 11855 11859 11864 11866 11879 11886 11895\n[2677] 11897 11898 11900 11903 11913 11917 11922 11923 11924 11925 11926 11929\n[2689] 11931 11939 11942 11944 11950 11951 11962 11972 11973 11974 11975 11976\n[2701] 11980 11981 11982 11983 11987 11988 11989 11996 12001 12003 12011 12012\n[2713] 12026 12031 12037 12041 12047 12056 12061 12065 12071 12078 12090 12091\n[2725] 12094 12098 12099 12100 12111 12119 12124 12128 12140 12141 12149 12150\n[2737] 12151 12153 12158 12168 12173 12176 12178 12179 12180 12181 12184 12185\n[2749] 12187 12190 12193 12199 12201 12203 12209 12212 12213 12229 12230 12233\n[2761] 12238 12247 12248 12249 12256 12264 12265 12267 12274 12275 12276 12283\n[2773] 12290 12291 12296 12300 12301 12320 12326 12334 12335 12345 12347 12357\n[2785] 12360 12361 12364 12370 12371 12372 12377 12382 12386 12395 12396 12400\n[2797] 12401 12404 12408 12410 12418 12426 12427 12430 12442 12443 12446 12449\n[2809] 12450 12451 12452 12456 12457 12460 12463 12479 12480 12482 12496 12502\n[2821] 12513 12520 12540 12545 12549 12564 12567 12584 12587 12588 12596 12597\n[2833] 12600 12604 12629 12633 12634 12635 12641 12646 12653 12655 12656 12658\n[2845] 12659 12660 12676 12681 12682 12688 12693 12700 12701 12707 12727 12731\n[2857] 12741 12745 12747 12751 12755 12764 12766 12782 12783 12785 12790 12794\n[2869] 12806 12807 12812 12813 12815 12816 12818 12839 12842 12845 12847 12850\n[2881] 12856 12857 12858 12862 12864 12865 12867 12875 12880 12887 12894 12912\n[2893] 12916 12924 12931 12939 12945 12961 12964 12965 12967 12968 12969 12972\n[2905] 12973 12975 12988 12991 13001 13003 13005 13007 13010 13014 13019 13020\n[2917] 13023 13036 13037 13049 13055 13057 13061 13065 13066 13071 13075 13076\n[2929] 13079 13092 13105 13107 13108 13117 13125 13129 13130 13132 13135 13142\n[2941] 13144 13147 13156 13157 13158 13160 13166 13168 13181 13182 13183 13191\n[2953] 13193 13196 13200 13201 13202 13205 13209 13212 13216 13218 13223 13242\n[2965] 13246 13247 13250 13270 13273 13274 13278 13287 13292 13294 13297 13299\n[2977] 13307 13310 13311 13321 13323 13325 13331 13334 13339 13344 13348 13349\n[2989] 13351 13352 13353 13355 13359 13360 13369 13372 13373 13378 13381 13382\n[3001] 13388 13392 13400 13403 13407 13413 13415 13416 13423 13425 13429 13431\n[3013] 13432 13433 13436 13441 13442 13443 13448 13449 13465 13466 13470 13471\n[3025] 13479 13496 13498 13499 13500 13502 13510 13513 13522 13526 13530 13534\n[3037] 13546 13551 13558 13561 13563 13564 13569 13573 13574 13576 13581 13585\n[3049] 13586 13598 13606 13617 13623 13627 13629 13632 13633 13641 13647 13649\n[3061] 13650 13652 13656 13657 13661 13676 13677 13680 13688 13689 13690 13694\n[3073] 13695 13699 13700 13704 13709 13710 13719 13720 13728 13729 13730 13731\n[3085] 13736 13740 13752 13753 13754 13763 13764 13770 13785 13788 13796 13800\n[3097] 13801 13803 13809 13813 13816 13823 13824 13832 13833 13834 13836 13838\n[3109] 13842 13845 13846 13847 13848 13857 13865 13869 13870 13876 13878 13881\n[3121] 13893 13897 13904 13914 13915 13918 13922 13932 13934 13937 13941 13947\n[3133] 13960 13962 13967 13969 13970 13973 13974 13976 13978 13981 13982 13989\n[3145] 13992 13999 14001 14002 14013 14016 14017 14019 14025 14030 14032 14042\n[3157] 14044 14045 14052 14060 14064 14069 14078 14080 14081 14082 14083 14086\n[3169] 14094 14100 14102 14107 14109 14117 14120 14125 14127 14131 14132 14134\n[3181] 14137 14140 14141 14143 14144 14156 14157 14161 14163 14170 14176 14177\n[3193] 14182 14186 14187 14192 14194 14197 14198 14204 14206 14210 14214 14216\n[3205] 14218 14219 14220 14225 14226 14236 14238 14239 14244 14247 14264 14268\n[3217] 14272 14274 14278 14279 14280 14287 14292 14309 14311 14318 14328 14330\n[3229] 14331 14335 14336 14337 14354 14367 14369 14372 14378 14382 14385 14387\n[3241] 14392 14393 14394 14399 14400 14404 14413 14419 14420 14422 14430 14436\n[3253] 14445 14447 14450 14461 14464 14465 14473 14476 14481 14486 14493 14496\n[3265] 14497 14499 14501 14505 14509 14512 14514 14519 14524 14525 14526 14528\n[3277] 14529 14531 14533 14542 14544 14548 14549 14552 14556 14559 14570 14580\n[3289] 14583 14587 14589 14591 14610 14613 14623 14625 14639 14646 14665 14668\n[3301] 14672 14673 14674 14675 14678 14683 14685 14686 14689 14692 14698 14699\n[3313] 14701 14705 14706 14718 14727 14731 14735 14736 14738 14740 14742 14744\n[3325] 14745 14756 14761 14770 14773 14783 14787 14788 14791 14800 14801 14809\n[3337] 14812 14815 14816 14823 14837 14842 14848 14853 14857 14860 14865 14866\n[3349] 14867 14871 14879 14880 14882 14896 14900 14903 14924 14926 14928 14929\n[3361] 14933 14936 14947 14954 14958 14959 14963 14976 14990 14992 14993 15000\n[3373] 15007 15009 15010 15013 15026 15028 15030 15032 15038 15042 15050 15055\n[3385] 15063 15067 15070 15072 15079 15081 15092 15093 15096 15100 15114 15115\n[3397] 15116 15121 15126 15137 15141 15143 15151 15152 15159 15160 15163 15171\n[3409] 15174 15176 15177 15184 15189 15191 15195 15202 15203 15205 15206 15210\n[3421] 15213 15221 15229 15232 15233 15239 15240 15256 15262 15263 15265 15269\n[3433] 15278 15282 15295 15311 15314 15315 15318 15322 15324 15326 15328 15332\n[3445] 15335 15337 15345 15347 15348 15351 15363 15365 15369 15370 15386 15388\n[3457] 15397 15408 15410 15419 15423 15427 15432 15436 15437 15452 15456 15463\n[3469] 15467 15469 15475 15478 15487 15490 15491 15496 15505 15512 15513 15519\n[3481] 15523 15526 15527 15530 15532 15535 15536 15544 15546 15547 15549 15554\n[3493] 15560 15564 15565 15569 15570 15571 15572 15574 15576 15577 15584 15590\n[3505] 15591 15596 15599 15600 15617 15619 15621 15622 15625 15632 15635 15643\n[3517] 15648 15650 15651 15659 15660 15674 15676 15679 15693 15700 15701 15702\n[3529] 15703 15707 15713 15727 15729 15739 15741 15748 15753 15758 15759 15761\n[3541] 15762 15768 15769 15772 15774 15779 15784 15785 15788 15794 15798 15802\n[3553] 15803 15806 15811 15812 15825 15826 15830 15835 15838 15840 15842 15843\n[3565] 15846 15851 15852 15855 15860 15863 15879 15887 15892 15893 15906 15908\n[3577] 15910 15911 15922 15933 15934 15935 15938 15939 15940 15943 15958 15959\n[3589] 15963 15967 15968 15977 15980 15981 15984 15990 16006 16008 16021 16023\n[3601] 16024 16029 16031 16034 16036 16037 16043 16045 16049 16053 16057 16058\n[3613] 16060 16068 16070 16071 16076 16078 16081 16088 16094 16105 16115 16122\n[3625] 16125 16126 16128 16130 16132 16133 16134 16135 16137 16140 16143 16145\n[3637] 16146 16150 16158 16169 16172 16178 16181 16192 16199 16207 16211 16212\n[3649] 16213 16218 16226 16235 16238 16239 16251 16253 16264 16274 16276 16278\n[3661] 16287 16292 16295 16302 16308 16309 16311 16314 16315 16324 16328 16329\n[3673] 16330 16331 16334 16338 16340 16341 16349 16350 16355 16359 16362 16363\n[3685] 16366 16368 16369 16370 16386 16387 16388 16391 16392 16405 16414 16426\n[3697] 16431 16438 16440 16441 16447 16451 16455 16457 16459 16460 16478 16480\n[3709] 16485 16486 16490 16493 16501 16503 16506 16507 16509 16510 16516 16519\n[3721] 16522 16526 16527 16528 16543 16546 16548 16551 16553 16554 16555 16557\n[3733] 16560 16562 16563 16570 16571 16583 16586 16589 16591 16595 16602 16604\n[3745] 16613 16617 16631 16633 16636 16637 16641 16649 16650 16652 16653 16656\n[3757] 16660 16667 16674 16677 16681 16688 16694 16695 16699 16700 16701 16704\n[3769] 16709 16714 16722 16723 16724 16731 16732 16739 16744 16752 16753 16762\n[3781] 16765 16770 16772 16783 16784 16787 16789 16793 16795 16797 16806 16807\n[3793] 16809 16813 16814 16815 16816 16821 16830 16832 16835 16838 16840 16841\n[3805] 16848 16859 16869 16873 16885 16886 16893 16898 16902 16904 16907 16909\n[3817] 16919 16921 16928 16934 16936 16946 16948 16967 16971 16973 16975 16976\n[3829] 16980 16987 16995 16996 17000 17004 17009 17014 17019 17020 17021 17025\n[3841] 17030 17031 17032 17037 17052 17055 17057 17059 17064 17067 17083 17094\n[3853] 17098 17103 17106 17121 17123 17129 17140 17145 17146 17148 17149 17156\n[3865] 17159 17160 17164 17165 17169 17170 17172 17174 17177 17182 17184 17189\n[3877] 17191 17193 17194 17200 17201 17210 17219 17220 17226 17229 17233 17239\n[3889] 17252 17258 17270 17280 17283 17293 17296 17306 17309 17311 17312 17324\n[3901] 17325 17331 17341 17342 17352 17353 17356 17359 17363 17367 17370 17375\n[3913] 17376 17377 17378 17379 17381 17390 17394 17401 17412 17415 17416 17421\n[3925] 17423 17440 17445 17447 17448 17452 17462 17464 17466 17473 17478 17487\n[3937] 17493 17496 17498 17499 17501 17504 17506 17515 17516 17518 17524 17526\n[3949] 17528 17530 17535 17541 17542 17543 17545 17547 17548 17549 17554 17559\n[3961] 17560 17570 17572 17575 17576 17579 17582 17586 17591 17597 17613 17614\n[3973] 17616 17617 17618 17619 17620 17623 17625 17628 17635 17645 17650 17652\n[3985] 17653 17662 17665 17666 17667 17668 17671 17674 17676 17680 17683 17685\n[3997] 17692 17693 17695 17696 17701 17702 17708 17712 17714 17719 17725 17729\n[4009] 17744 17754 17755 17756 17758 17761 17771 17772 17780 17783 17790 17792\n[4021] 17793 17805 17806 17811 17823 17824 17825 17827 17838 17839 17842 17852\n[4033] 17856 17869 17871 17877 17879 17881 17888 17899 17917 17924 17926 17932\n[4045] 17934 17938 17939 17947 17950 17953 17955 17956 17957 17968 17969 17972\n\n# combine the indexed loci with loci names\n\nindex_178names &lt;- locNames(vac.pops)[index_178]\n\n\n# make a new genlight object with only those indexed loci\n\nvac.gl_178 &lt;- gl.keep.loc(vac.pops, loc.list = index_178names)\n\nStarting gl.keep.loc \n  Processing genlight object with SNP data\n  Warning: data include loci that are scored NA across all individuals.\n  Consider filtering using gl &lt;- gl.filter.allna(gl)\n  List of loci to keep has been specified\n  Deleting all but the specified loci\nCompleted: gl.keep.loc \n\nvac.gl_178 &lt;- gl.compliance.check(vac.gl_178)\n\nStarting gl.compliance.check \n  Processing genlight object with SNP data\n  Warning: data include loci that are scored NA across all individuals.\n  Consider filtering using gl &lt;- gl.filter.allna(gl)\n  Checking coding of SNPs\n    SNP data scored NA, 0, 1 or 2 confirmed\n  Checking for population assignments\n    Population assignments confirmed\n  Checking locus metrics and flags\n  Recalculating locus metrics\n  Checking for monomorphic loci\n    Dataset contains monomorphic loci\n  Checking for loci with all missing data\n    Dataset contains loci with all missing dat\n  Checking whether individual names are unique.\n  Checking for individual metrics\n    Individual metrics confirmed\n  Spelling of coordinates checked and changed if necessary to \n            lat/lon\nCompleted: gl.compliance.check \n\nvac.gl_178\n\n ********************\n *** DARTR OBJECT ***\n ********************\n\n ** 34 genotypes,  4,056 SNPs , size: 91.2 Mb\n\n    missing data: 27488 (=19.93 %) scored as NA\n\n ** Genetic data\n   @gen: list of 34 SNPbin\n   @ploidy: ploidy of each individual  (range: 2-2)\n\n ** Additional data\n   @ind.names:  34 individual labels\n   @loc.names:  4056 locus labels\n   @loc.all:  4056 allele labels\n   @position: integer storing positions of the SNPs [within 69 base sequence]\n   @pop: population of each individual (group size range: 5-22)\n   @other: a list containing: loc.metrics, ind.metrics, latlon, loc.metrics.flags, history, verbose \n    @other$ind.metrics: X, id, species, ind, pop, sex, lat, lon, e, n, karyo, PCR1 \n    @other$loc.metrics: AlleleID, CloneID, AlleleSequence, TrimmedSequence, Chrom_Komodo_dragon_NCBIv1, ChromPos_Komodo_dragon_NCBIv1, AlnCnt_Komodo_dragon_NCBIv1, AlnEvalue_Komodo_dragon_NCBIv1, Chrom_Varanus_JD_infer_z, ChromPos_Varanus_JD_infer_z, AlnCnt_Varanus_JD_infer_z, AlnEvalue_Varanus_JD_infer_z, Chrom_Varanus_JD_vac_aligned_chr6_7, ChromPos_Varanus_JD_vac_aligned_chr6_7, AlnCnt_Varanus_JD_vac_aligned_chr6_7, AlnEvalue_Varanus_JD_vac_aligned_chr6_7, Chrom_Varanus_JD_infer_w, ChromPos_Varanus_JD_infer_w, AlnCnt_Varanus_JD_infer_w, AlnEvalue_Varanus_JD_infer_w, SNP, SnpPosition, CallRate, OneRatioRef, OneRatioSnp, FreqHomRef, FreqHomSnp, FreqHets, PICRef, PICSnp, AvgPIC, AvgCountRef, AvgCountSnp, RepAvg, clone, uid, rdepth, maf, monomorphs, OneRatio, PIC \n   @other$latlon[g]: coordinates for all individuals are attached\n\nvac.gl_178 &lt;- gl.keep.pop(vac.gl_178, c(\"AA\", \"MA\", \"MM\"))\n\nStarting gl.keep.pop \n  Processing genlight object with SNP data\n  Warning: data include loci that are scored NA across all individuals.\n  Consider filtering using gl &lt;- gl.filter.allna(gl)\n  Checking for presence of nominated populations\n  Retaining only populations AA, MA, MM \n  Warning: Resultant dataset may contain monomorphic loci\n  Locus metrics not recalculated\nCompleted: gl.keep.pop \n\ntable(vac.gl_178$pop)\n\n\nAA MA MM \n 5  7 22 \n\n# Concantenate the SNPs for scaf_178 for phylogenetic inference----------------- \n# The .FASTA file was used as input sequences for Genieous Prime\n\nfasta &lt;-\n  gl2fasta(\n    vac.gl_178,\n    method = 3,\n    outfile = \"./data/vac.gl_178_concat.fasta\",\n    outpath = getwd(),\n    verbose = 3\n  )\n\nStarting gl2fasta \n  Processing genlight object with SNP data\n  Warning: data include loci that are scored NA across all individuals.\n  Consider filtering using gl &lt;- gl.filter.allna(gl)\n  Warning: Dataset contains monomorphic loci which will be included in the output fasta file\n  Assigning ambiguity codes to heterozygote SNPs, concatenating SNPs\n  Removing loci for which SNP position is outside the length of the trimmed sequences\nGenerating haplotypes ... This may take some time\nCompleted: gl2fasta \n\n# Supplementary Figure 4--------------------------------------------------------\n\nvac.pops_temp &lt;- gl.filter.callrate(vac.gl_178, threshold = 1)\n\nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Warning: data include loci that are scored NA across all individuals.\n  Consider filtering using gl &lt;- gl.filter.allna(gl)\n  Warning: Data may include monomorphic loci in call rate \n                    calculations for filtering\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 1 \n\n\n\n\n\nCompleted: gl.filter.callrate \n\ngl.smearplot(\n  vac.pops_temp,\n  ind.labels =  T,\n  plot.colors = c('royalblue', \n                  'yellow', 'red'),\n  label.size  = 6,\n  group.pop = T\n)\n\n  Processing genlight object with SNP data\nStarting gl.smearplot \n\n\n\n\n\nCompleted: gl.smearplot \n\nvac.pops_temp\n\n ********************\n *** DARTR OBJECT ***\n ********************\n\n ** 34 genotypes,  874 SNPs , size: 89.8 Mb\n\n    missing data: 0 (=0 %) scored as NA\n\n ** Genetic data\n   @gen: list of 34 SNPbin\n   @ploidy: ploidy of each individual  (range: 2-2)\n\n ** Additional data\n   @ind.names:  34 individual labels\n   @loc.names:  874 locus labels\n   @loc.all:  874 allele labels\n   @position: integer storing positions of the SNPs [within 69 base sequence]\n   @pop: population of each individual (group size range: 5-22)\n   @other: a list containing: loc.metrics, ind.metrics, latlon, loc.metrics.flags, history, verbose \n    @other$ind.metrics: X, id, species, ind, pop, sex, lat, lon, e, n, karyo, PCR1 \n    @other$loc.metrics: AlleleID, CloneID, AlleleSequence, TrimmedSequence, Chrom_Komodo_dragon_NCBIv1, ChromPos_Komodo_dragon_NCBIv1, AlnCnt_Komodo_dragon_NCBIv1, AlnEvalue_Komodo_dragon_NCBIv1, Chrom_Varanus_JD_infer_z, ChromPos_Varanus_JD_infer_z, AlnCnt_Varanus_JD_infer_z, AlnEvalue_Varanus_JD_infer_z, Chrom_Varanus_JD_vac_aligned_chr6_7, ChromPos_Varanus_JD_vac_aligned_chr6_7, AlnCnt_Varanus_JD_vac_aligned_chr6_7, AlnEvalue_Varanus_JD_vac_aligned_chr6_7, Chrom_Varanus_JD_infer_w, ChromPos_Varanus_JD_infer_w, AlnCnt_Varanus_JD_infer_w, AlnEvalue_Varanus_JD_infer_w, SNP, SnpPosition, CallRate, OneRatioRef, OneRatioSnp, FreqHomRef, FreqHomSnp, FreqHets, PICRef, PICSnp, AvgPIC, AvgCountRef, AvgCountSnp, RepAvg, clone, uid, rdepth, maf, monomorphs, OneRatio, PIC \n   @other$latlon[g]: coordinates for all individuals are attached"
  },
  {
    "objectID": "session05.html#new-dartr.popgen-functionalities",
    "href": "session05.html#new-dartr.popgen-functionalities",
    "title": "5  Effective Population Size",
    "section": "New dartR.popgen functionalities",
    "text": "New dartR.popgen functionalities\nThe method implemented in NeEstimator assumes that the loci are independent and that the linkage detected depends on the finite Ne of a population. Waples et al (2016) demonstrated that, in the genomic era when thousands of SNPs are available and when an annotated genome is available, the Ne can be improved (i.e. reduced downward bias) by considering linkage of only pairs of loci on different chromosomes. This option can now be easily accessed via gl.LDNe function using the argument pairing (and making sure information on Chromosomes were provided in the @chromosome slot.\n\n# Run as it was classically run SNP data (use two populations and only\n# the first 100 SNPs)\npops &lt;- possums.gl[1:60, 1:100]\nnes &lt;- gl.LDNe(pops, outfile = \"popsLD.txt\", neest.path = \"./binaries\", critical = c(0,\n    0.05), singleton.rm = TRUE, mating = \"random\")\n\nStarting gl.LDNe \n  Processing genlight object with SNP data\nStarting gl2genepop \n  Processing genlight object with SNP data\n  The genepop file is saved as:  C:\\Users\\ejstr\\AppData\\Local\\Temp\\RtmpI7v835/dummy.gen/\nCompleted: gl2genepop \n  Processing genlight object with SNP data\n\n\n\n\n\n$A\n                    Statistic Frequency 1 Frequency 2 Frequency 3\n Lowest Allele Frequency Used       0.050          0+       No S*\n    Harmonic Mean Sample Size          30          30          30\n      Independent Comparisons        3321        3916        3741\n                  OverAll r^2    0.056847    0.055101    0.055956\n          Expected r^2 Sample    0.036878    0.036878    0.036878\n                Estimated Ne^        13.5          15        14.2\n            CI low Parametric        11.5        12.9        12.2\n           CI high Parametric        15.9        17.5        16.6\n             CI low JackKnife         8.3         9.9         9.4\n            CI high JackKnife          23        23.9        22.6\n\n$B\n                    Statistic Frequency 1 Frequency 2 Frequency 3\n Lowest Allele Frequency Used       0.050          0+       No S*\n    Harmonic Mean Sample Size          30          30          30\n      Independent Comparisons        4560        4950        4560\n                  OverAll r^2    0.054024    0.052873    0.054024\n          Expected r^2 Sample    0.036878    0.036878    0.036878\n                Estimated Ne^        16.1        17.4        16.1\n            CI low Parametric        13.9        15.1        13.9\n           CI high Parametric        18.7        20.2        18.7\n             CI low JackKnife          11        11.7          11\n            CI high JackKnife        24.7        27.6        24.8\n\n  The results are saved in: C:\\Users\\ejstr\\AppData\\Local\\Temp\\RtmpI7v835/popsLD.txt \nCompleted: gl.LDNe \n\n# Using only pairs of loci on different chromosomes made up some\n# chromosome location\npops@chromosome &lt;- as.factor(sample(1:10, size = nLoc(pops), replace = TRUE))\n# Note the use of the argument 'pairing'\nnessep &lt;- gl.LDNe(pops, outfile = \"popsLD.txt\", pairing = \"separate\", neest.path = \"./binaries\",\n    critical = c(0, 0.05), singleton.rm = TRUE, mating = \"random\")\n\nStarting gl.LDNe \n  Processing genlight object with SNP data\nStarting gl2genepop \n  Processing genlight object with SNP data\n  The genepop file is saved as:  C:\\Users\\ejstr\\AppData\\Local\\Temp\\RtmpI7v835/dummy.gen/\nCompleted: gl2genepop \n  Processing genlight object with SNP data\n\n\n\n\n\n$A\n                    Statistic Frequency 1 Frequency 2 Frequency 3\n Lowest Allele Frequency Used       0.050          0+       No S*\n    Harmonic Mean Sample Size          30          30          30\n      Independent Comparisons        2997        3534        3382\n                  OverAll r^2    0.056989    0.055071     0.05601\n          Expected r^2 Sample    0.036878    0.036878    0.036878\n                Estimated Ne^        13.4          15        14.2\n            CI low Parametric        11.3        12.8        12.1\n           CI high Parametric        15.9        17.7        16.7\n             CI low JackKnife         8.2         9.9         9.3\n            CI high JackKnife        23.1          24        22.7\n\n$B\n                    Statistic Frequency 1 Frequency 2 Frequency 3\n Lowest Allele Frequency Used       0.050          0+       No S*\n    Harmonic Mean Sample Size          30          30          30\n      Independent Comparisons        4126        4475        4126\n                  OverAll r^2    0.054054    0.052856    0.054054\n          Expected r^2 Sample    0.036878    0.036878    0.036878\n                Estimated Ne^          16        17.4          16\n            CI low Parametric        13.8          15        13.8\n           CI high Parametric        18.8        20.4        18.8\n             CI low JackKnife          11        11.8          11\n            CI high JackKnife        24.5        27.4        24.5\n\n  The results are saved in: C:\\Users\\ejstr\\AppData\\Local\\Temp\\RtmpI7v835/popsLD.txt \nCompleted: gl.LDNe \n\n\nIf the loci are not mapped, but the number of chromosomes or the genome length is known, it is possible to apply a correction (eq 1a or 1b of Waples et al (2016)) using the arguments Waples.correction and Waples.correction.value.\n\n# Correct estimates based on the number of chromosomes\nnes &lt;- gl.LDNe(pops, outfile = \"popsLD.txt\", neest.path = \"./binaries\", critical = c(0,\n    0.05), singleton.rm = TRUE, mating = \"random\", Waples.correction = \"nChromosomes\",\n    Waples.correction.value = 22)\n\nStarting gl.LDNe \n  Processing genlight object with SNP data\nStarting gl2genepop \n  Processing genlight object with SNP data\n  The genepop file is saved as:  C:\\Users\\ejstr\\AppData\\Local\\Temp\\RtmpI7v835/dummy.gen/\nCompleted: gl2genepop \n  Processing genlight object with SNP data\n\n\n\n\n\n$A\n                            Statistic Frequency 1 Frequency 2 Frequency 3\n         Lowest Allele Frequency Used       0.050          0+       No S*\n            Harmonic Mean Sample Size          30          30          30\n              Independent Comparisons        3321        3916        3741\n                          OverAll r^2    0.056847    0.055101    0.055956\n                  Expected r^2 Sample    0.036878    0.036878    0.036878\n                        Estimated Ne^        13.5          15        14.2\n                    CI low Parametric        11.5        12.9        12.2\n                   CI high Parametric        15.9        17.5        16.6\n                     CI low JackKnife         8.3         9.9         9.4\n                    CI high JackKnife          23        23.9        22.6\n                 Waples' corrected Ne        17.4        19.4        18.3\n  Waples' corrected CI low Parametric        14.8        16.6        15.7\n Waples' corrected CI high Parametric        20.5        22.6        21.4\n   Waples' corrected CI low JackKnife        10.7        12.8        12.1\n  Waples' corrected CI high JackKnife        29.7        30.8        29.2\n\n$B\n                            Statistic Frequency 1 Frequency 2 Frequency 3\n         Lowest Allele Frequency Used       0.050          0+       No S*\n            Harmonic Mean Sample Size          30          30          30\n              Independent Comparisons        4560        4950        4560\n                          OverAll r^2    0.054024    0.052873    0.054024\n                  Expected r^2 Sample    0.036878    0.036878    0.036878\n                        Estimated Ne^        16.1        17.4        16.1\n                    CI low Parametric        13.9        15.1        13.9\n                   CI high Parametric        18.7        20.2        18.7\n                     CI low JackKnife          11        11.7          11\n                    CI high JackKnife        24.7        27.6        24.8\n                 Waples' corrected Ne        20.8        22.5        20.8\n  Waples' corrected CI low Parametric        17.9        19.5        17.9\n Waples' corrected CI high Parametric        24.1        26.1        24.1\n   Waples' corrected CI low JackKnife        14.2        15.1        14.2\n  Waples' corrected CI high JackKnife        31.9        35.6          32\n\n  The results are saved in: C:\\Users\\ejstr\\AppData\\Local\\Temp\\RtmpI7v835/popsLD.txt \nCompleted: gl.LDNe"
  },
  {
    "objectID": "session05.html#the-infinite-problem",
    "href": "session05.html#the-infinite-problem",
    "title": "5  Effective Population Size",
    "section": "The infinite problem",
    "text": "The infinite problem\nSometimes, Ne estimates are \\(Inf\\). This is usually taken to mean that the population in question is very large. Indeed, in an infinitely large population no linkage should occur (between independent loci). However, it is sometimes useful to be able to understand the origin of this estimate.\nThe original formula to calculate Ne for species with random mating systems is (eq 7 Waples 2006):\n\\[\n1/3(\\hat{r}^{2} - 1/S)\n\\]\nwhile for species with monogamy is (eq 8 Waples 2006):\n\\[\n2/3(\\hat{r}^{2} - 1/S)\n\\]\nwhere \\(\\hat{r}^{2}\\) is the estimate inter-locus correlation based on Burrows’ \\(\\Delta\\). However, NeEstimator also applies an empirical correction that was demonstrated by Waples 2006 to reduce the bias of \\(N_e\\) estimations. For example, for species with random mating and with a sample size \\(S\\ge30\\) this becomes:\n\\[\nN_e = \\frac{1/3 + \\sqrt{(1/9 - 2.76 \\hat{r}^{2}\\prime)}}{2 \\hat{r}^{2}\\prime}\n\\]\nNote that when \\(\\hat{r}^{2}\\prime &gt; \\frac{1}{9*2.76}\\) –&gt; \\(\\hat{r}^{2}\\prime &gt; 0.04025765\\) the term within the square root is negative, so it becomes undefined.\nThe observed inter-locus correlation is a combination of \\(\\hat{r}^{2}_{drift} + E(\\hat{r}^{2}_{sample})\\). Because we are really after only \\(\\hat{r}^{2}_{drift}\\), we estimate it by subtracting \\(E(\\hat{r}^{2}_{sample})\\), i.e.:\n\\[\n\\hat{r}^{2}\\prime = \\hat{r}^{2} - E(\\hat{r}^{2}_{sample})\n\\]\nFor small sample sizes, \\(E(\\hat{r}^{2}_{sample})\\) can be relatively large and our \\(N_e\\) estimate can become negative. Let’s have a look at possible values of \\(E(\\hat{r}^{2}_{sample})\\) for different sample size (again in a species with random mating and with a sample size \\(S\\ge30\\)):\n\nr_sample &lt;- function(S) (1/S) + (3.16/S^2)\n\nr_sample(seq(10, 50, by = 5))\n\n[1] 0.13160000 0.08071111 0.05790000 0.04505600 0.03684444 0.03115102 0.02697500\n[8] 0.02378272 0.02126400\n\n\nit is easy then to imagine that for small sample sizes, we may ‘overcorrect’ and the denominator may become negative, which is a non sense-result. Generally, the interpretation is that the linkage detected is a result of simple sampling error. A test of whether the detected linkage is statistically significant may help to interpret the results.\ngl.LDNe gained the argument naive, which calculates \\(N_e\\) without the empirical correction. This is mostly to aid the diagnostic of where the \\(Inf\\) estimate (if it occurs) is coming from.\n\n# Correct estimates based on the number of chromosomes\nnes &lt;- gl.LDNe(pops, outfile = \"popsLD.txt\", neest.path = \"./binaries\", critical = c(0,\n    0.05), singleton.rm = TRUE, mating = \"random\", naive = TRUE)\n\nStarting gl.LDNe \n  Processing genlight object with SNP data\nStarting gl2genepop \n  Processing genlight object with SNP data\n  The genepop file is saved as:  C:\\Users\\ejstr\\AppData\\Local\\Temp\\RtmpI7v835/dummy.gen/\nCompleted: gl2genepop \n  Processing genlight object with SNP data\n\n\n\n\n\n[[1]]\n                    Statistic Frequency 1 Frequency 2 Frequency 3\n Lowest Allele Frequency Used       0.050          0+       No S*\n    Harmonic Mean Sample Size          30          30          30\n      Independent Comparisons        3321        3916        3741\n                  OverAll r^2    0.056847    0.055101    0.055956\n          Expected r^2 Sample    0.036878    0.036878    0.036878\n                Estimated Ne^        13.5          15        14.2\n            CI low Parametric        11.5        12.9        12.2\n           CI high Parametric        15.9        17.5        16.6\n             CI low JackKnife         8.3         9.9         9.4\n            CI high JackKnife          23        23.9        22.6\n          Naive Estimated Ne^        14.2        15.3        14.7\n\n[[2]]\n                    Statistic Frequency 1 Frequency 2 Frequency 3\n Lowest Allele Frequency Used       0.050          0+       No S*\n    Harmonic Mean Sample Size          30          30          30\n      Independent Comparisons        4560        4950        4560\n                  OverAll r^2    0.054024    0.052873    0.054024\n          Expected r^2 Sample    0.036878    0.036878    0.036878\n                Estimated Ne^        16.1        17.4        16.1\n            CI low Parametric        13.9        15.1        13.9\n           CI high Parametric        18.7        20.2        18.7\n             CI low JackKnife          11        11.7          11\n            CI high JackKnife        24.7        27.6        24.8\n          Naive Estimated Ne^        16.1        17.1        16.1\n\n  The results are saved in: C:\\Users\\ejstr\\AppData\\Local\\Temp\\RtmpI7v835/popsLD.txt \nCompleted: gl.LDNe \n\n\nOther sources of problems are potentially coming from the loci selection that you have. If all sampled individuals are homozygous for the same allele (in one population) or are heterozygous, the estimation of \\(N_e\\) fails. That is because the inter-locus correlation based on Burrows’ \\(\\Delta\\) cannot be computed. NeEstimator removes all monomorphic loci (if you haven’t done that before), so often this is not a problem, but (I think) it still may happen when all individuals are heterozygous."
  },
  {
    "objectID": "session08.html#isolation-by-distance",
    "href": "session08.html#isolation-by-distance",
    "title": "8  Landscape Genetics",
    "section": "2. Isolation-by-distance",
    "text": "2. Isolation-by-distance\nAn isolation-by-distance model describes a genetic pattern where gene flow (i.e. dispersal/migration) is spatially limited, such that geographic distance alone explains genetic differentiation.\nMantel test… something about individuals vs pops (genetic distance vs. FST)\nLet’s take a look at IBD in our simulated data set:\n\ngl.ibd(simdat, distance = \"euclidean\", coordinates = \"latlon\")\n\n\n\n\nWe find significant IBD across all individuals, but it’s not very pronounced. Can we still see the signal of male-biased dispersal? Let’s create separate IBD plots for females and males.\n\ngl.ibd(simdat[simdat@pop == \"F\"], distance = \"euclidean\", coordinates = \"latlon\")\n\n\n\ngl.ibd(simdat[simdat@pop == \"M\"], distance = \"euclidean\", coordinates = \"latlon\")\n\n\n\n\nYes - we see significant IBD in females, since dispersal is more restricted. Males show no pattern of IBD, since many individuals can disperse right up to the scale we are sampling…. However, we lose some of the nuance from the previous analysis.\n\n\n\n\n\n\nWhat can we learn from each analysis?\n\n\n\nBy binning samples in the analysis above we learn about fine-scale patterns of structure, the extent of spatial genetic structure/dispersal, etc…\nMantel tests show us the broad trends… and is a simple model for describing… can use individuals or populations.\n\n\nWe expect a continuous linear relationship - when there are discontinuities, this can be an indication that something else is happening. We can explore this idea using a real example?\n\nLesser hairy-footed dunnartsin the Pilbara\n\n\n\nSminthopsis youngsonii\n\n\n\n\nLoad the data\n\nSy.gl &lt;- readRDS(\"./data/sy.gl.rds\")  # genetic data\n\nSomething about the species… S. youngsonii is a sandy specialist.\nLet’s take a look at a map …\n\nleaflet(Sy.gl@other$latlong) %&gt;%\n    addTiles() %&gt;%\n    addCircleMarkers(lng = ~lon, lat = ~lat, popup = ~htmlEscape(lon))\n\n\n\n\n\nIs there isolation by distance? …\n\ngl.ibd(Sy.gl, distance = \"euclidean\")\n\n\n\n\nYes! The pattern is very strong. But… some of the points don’t seem to follow the same slope? Why might this be?\nThere seems to be a big gap in sampling. This might be due to sampling bias, or the species may not occur here, suggesting there might be something going on with the habitat.\n\n\n\n\n\n\nGiven what we know about the species, what would be a reasonable hypothesis?\n\n\n\nCould substrate be driving this sampling gap and the strange IBD pattern? Or could it be the Ashbuton river?\n\n\nLet’s separate the individuals into two populations on either side of this break, we’ll use longitude to separate them. You can click on the points in the map above to choose the correct location.\n\nlon.break &lt;- 114.87\n\nSy.gl@pop &lt;- as.factor(ifelse(Sy.gl@other$latlong$lon &lt; lon.break, \"West\",\n    \"East\"))\n\nLet’s take another look at IBD, including some information about the break\n\ngl.ibd(Sy.gl, distance = \"euclidean\", paircols = \"pop\")\n\n\n\n\nIt looks like there are two slopes describing IBD within each ‘population’. Discontinuities like this can sometimes suggest a barrier to gene flow. Let’s take a look at the substrate.\n\n# Load a soil shapefile\nsoil &lt;- st_read(\"data/Soil.shp\")  # spatial data\n\n# Create a colour palette for the two populations\npop.pal &lt;- colorFactor(palette = c(\"#F8766D\", \"#00BFC4\"), domain = Sy.gl@pop)\n\n# Create a palette\nsoil.pal &lt;- colorFactor(palette = c(\"#9C640C\", \"#85929E\", \"#873600\", \"#C0392B\",\n    \"#F4D03F\", \"#85929E\", \"#A9CCE3\"), domain = soil$Type)\n\n\n# Generate another map\nleaflet(cbind(pop = Sy.gl@pop, Sy.gl@other$latlong)) %&gt;%\n    addTiles() %&gt;%\n    addPolygons(data = soil, weight = 0, fillOpacity = 0.7, color = ~soil.pal(Type)) %&gt;%\n    addCircleMarkers(lng = ~lon, lat = ~lat, color = ~pop.pal(pop)) %&gt;%\n    addLegendFactor(pal = soil.pal, shape = \"rect\", fillOpacity = 0.7, opacity = 0,\n        values = ~soil$Type, title = \"Soil type\", position = \"topright\",\n        data = gadmCHE, group = \"Polygons\")\n\n\n\n\n\nIt looks like clay could be acting as a barrier. This is a good theory, but it would be useful to be able to visualise these patterns of isolation by distance spatially to get an indication of where exactly gene flow is being restricted. We can achieve this by estimating effective migration surfaces…."
  },
  {
    "objectID": "session08.html#eems",
    "href": "session08.html#eems",
    "title": "8  Landscape Genetics",
    "section": "3. EEMS",
    "text": "3. EEMS\nVisualise the effect of landscape features on gene flow (dispersal) using EEMS\nEEMS (Estimated Effective Migration Surfaces) is a fairly new method introduced to visualize and infer patterns of historical gene flow across geographical spaces Petkova, Novembre, and Stephens (2016). This method offers a novel approach to understanding how populations have migrated, mixed, and been isolated from each other over time, based on genetic data. EEMS lays a triangular mesh over the study area and estimates the effective migration rate between each pair of vertices. The effective migration rate is a measure of the rate of gene flow between two populations, and is a function of the geographic distance between them, as well as the resistance to gene flow imposed by the landscape. The effective migration rate is estimated by comparing the genetic differentiation between populations to the geographic distance between them, and is used to infer the strength of gene flow between populations. The EEMS method is based on a Bayesian model, and the effective migration rate is estimated using a Markov Chain Monte Carlo (MCMC) algorithm. The run the EEMS method you need to have the reemsplot2 package installed, which is only provided via github:\n\ndevtools::install_github(\"dipetkov/reemsplots2\")\n\nIn addition you need to provide the path to the EEMS executable (binaries for Windows and Linux are available in the binaries folder). Good news all is set up within the rstudio cloud\nSo a typical run of EEMS would look like this (please be aware the suggested number of interations are numMCMCIter = 8000000, so this is just to show how to run EEMS):\n\n# eems.path &lt;- 'd:/downloads/eems'\neems.path &lt;- \"./binaries/\"\neems &lt;- gl.run.eems(Sy.gl, buffer = 1000, eems.path = eems.path, nDemes = 50,\n    diploid = TRUE, numMCMCIter = 10000, numThinIter = 99, numBurnIter = 5000,\n    add_demes = TRUE, add_grid = TRUE, out.dir = tempdir())\n\nStarting gl.run.eems \n\n\n\n\n\nWarning: `as_data_frame()` was deprecated in tibble 2.0.0.\nℹ Please use `as_tibble()` (with slightly different semantics) to convert to a\n  tibble, or `as.data.frame()` to convert to a data frame.\nℹ The deprecated feature was likely used in the reemsplots2 package.\n  Please report the issue at &lt;https://github.com/dipetkov/eems/issues&gt;.\n\n\nWarning: The `x` argument of `as_tibble.matrix()` must have unique column names if\n`.name_repair` is omitted as of tibble 2.0.0.\nℹ Using compatibility `.name_repair`.\nℹ The deprecated feature was likely used in the tibble package.\n  Please report the issue at &lt;https://github.com/tidyverse/tibble/issues&gt;.\n\n\nWarning: `data_frame()` was deprecated in tibble 1.1.0.\nℹ Please use `tibble()` instead.\nℹ The deprecated feature was likely used in the reemsplots2 package.\n  Please report the issue at &lt;https://github.com/dipetkov/eems/issues&gt;.\n\n\nJoining with `by = join_by(id)`\nNew names:\nGenerate effective migration surface (posterior mean of m rates). See\nplots$mrates01 and plots$mrates02.\nGenerate effective diversity surface (posterior mean of q rates). See\nplots$qrates01 and plots$qrates02.\nGenerate average dissimilarities within and between demes. See plots$rdist01,\nplots$rdist02 and plots$rdist03.\nGenerate posterior probability trace. See plots$pilog01.\n\n\n\n\n\nggplot object saved as RDS binary to C:\\Users\\ejstr\\AppData\\Local\\Temp\\Rtmp0gB9Fw/eems.RDS using saveRDS()\n\n\nLooking at the input parameters you might find the nDemes parameter to have to be explained. The nDemes is the number of demes (or vertices) in the triangular mesh that is laid over the study area. The number of demes is a critical parameter, as it determines the resolution of the EEMS plot. A higher number of demes will result in a finer resolution, but will also require more computational time. The number of demes should be chosen based on the size of the study area, the number of populations, and the amount of genetic data available. Unfortunately the EEMS method does not allow to check the grid and the placement of demes before it is finished. My approach is therefore to run the EEMS method with a low number of iterations, simply to check the demes and its placement. Once the demes seems to be set appropriately I run the full method.\n\nChecking the demes\n\neems &lt;- gl.run.eems(Sy.gl, eems.path = eems.path, nDemes = 200, diploid = TRUE,\n    numMCMCIter = 10000, numThinIter = 99, numBurnIter = 5000, add_demes = TRUE,\n    add_grid = TRUE)\n\nStarting gl.run.eems \n\n\n\n\n\nJoining with `by = join_by(id)`\nNew names:\nGenerate effective migration surface (posterior mean of m rates). See\nplots$mrates01 and plots$mrates02.\nGenerate effective diversity surface (posterior mean of q rates). See\nplots$qrates01 and plots$qrates02.\nGenerate average dissimilarities within and between demes. See plots$rdist01,\nplots$rdist02 and plots$rdist03.\nGenerate posterior probability trace. See plots$pilog01.\n\n\n\n\n\nggplot object saved as RDS binary to C:\\Users\\ejstr\\AppData\\Local\\Temp\\Rtmp0gB9Fw/eems.RDS using saveRDS()\n\n\nIn case you are wondering, the gl.run.eems functions reprojects your points to a planar coordinate system (Mercator as used by google maps), so you don’t have to worry about the projection of your data and distances are in meters. But this has the “trouble” that you no longer have latlongs as your coordinate system. The benefit is that we can simply use leaflet package to visualise the data afterwards. We simply hack our genlight object in the sense that we add the Mercator data to a new xy slot.\n\nSy.gl@other$xy &lt;- data.frame(dismo::Mercator(Sy.gl@other$latlong[, 2:1]))\n\nThen we can plot the demes and the grid to check if the demes are set appropriately.\n\neems[[1]] + coord_equal() + geom_point(data = Sy.gl@other$xy, aes(x = x,\n    y = y), pch = 16)\n\nCoordinate system already present. Adding new coordinate system, which will\nreplace the existing one.\n\n\nWarning: The `guide` argument in `scale_*()` cannot be `FALSE`. This was deprecated in\nggplot2 3.3.4.\nℹ Please use \"none\" instead.\nℹ The deprecated feature was likely used in the reemsplots2 package.\n  Please report the issue at &lt;https://github.com/dipetkov/eems/issues&gt;.\n\n\nWarning: Removed 14 rows containing missing values or values outside the scale range\n(`geom_tile()`).\n\n\n\n\n\nThe bigger open circles are the demes that EEMS will use to estimate the migration rates and the smaller black dots are you genetic samples.\n\n\n\n\n\n\nExercise\n\n\n\n Change the number of ndemes and see how this affects the grid placement and number of demes.\n\neems &lt;- gl.run.eems(Sy.gl, eems.path = eems.path, nDemes = 200, diploid = TRUE,\n    numMCMCIter = 10000, numThinIter = 99, numBurnIter = 5000, add_demes = TRUE,\n    add_grid = TRUE)\neems[[1]] + coord_equal() + geom_point(data = Sy.gl@other$xy, aes(x = x,\n    y = y), pch = 16)\n\n\n\nThen I run the full method. Petkova, Novembre, and Stephens (2016) also recommends to run it with 8 Mio iterations and the burnin to be 2 Mio interations. Finally it recommends to run the whole procedure 3 times with different seed settings (If you do not specify the seed, then a random seed is chosen.)\n\neems &lt;- gl.run.eems(Sy.gl, eems.path = eems.path, nDemes = 50, diploid = TRUE,\n    numMCMCIter = 10000, numThinIter = 99, numBurnIter = 5000, add_demes = TRUE,\n    add_grid = TRUE, out.dir = tempdir())\n\n\n\nPlot the EEMS results on a map\nBefore we go into the evaluation andinterpretation of our EEMS runs we want to be able to create a map that shows the results within a landscape context.\n\nr &lt;- raster::rasterFromXYZ(eems[[1]]$data)  #create a raster from the EEMS results map 1\n# define Mercator projection\ncrs(r) &lt;- \"+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\"\n\ngl.map.interactive(Sy.gl, provider = \"Esri.WorldShadedRelief\") %&gt;%\n    addRasterImage(r, opacity = 0.5)\n\nStarting gl.map.interactive \n  Processing genlight object with SNP data\nCompleted: gl.map.interactive \n\n\n\n\n\n# in case you are interested you can also add the soil polygons a bit\n# hard to see but the clay overlaps quite well with the high resistance\n# areas\ngl.map.interactive(Sy.gl, provider = \"Esri.WorldShadedRelief\") %&gt;%\n    addPolygons(data = soil, weight = 0, fillOpacity = 0.7, color = ~soil.pal(Type)) %&gt;%\n    addRasterImage(r, opacity = 0.5)\n\nStarting gl.map.interactive \n  Processing genlight object with SNP data\nCompleted: gl.map.interactive \n\n\n\n\n\n\n\n\nEvaluation of the EEMS results\nTo avoid a long waiting time we simply load a longer EEMS run (default settings) using the same data.\n\neems.comp &lt;- readRDS(\"data/eems_comp.rds\")\n\nWe have not looked at all of the output. There are actually 8 figures that are produced by the EEMS method. You can access the using the notation eems.comp[[1]] or eems.comp$mrates01.\n\n\n\n\n\n\n\nPlot\nDescription\n\n\n\n\nmrates01\nEffective migration surface. This contour plot visualizes the estimated effective migration rates (m), on the log10 scale after mean centering.\n\n\nmrates02\nPosterior probability contours (\\(P(\\log(m) &gt; 0) = p\\)) and (\\(P(\\log(m) &lt; 0) = p\\)) for the given probability level (p). Since migration rates are visualized on the log10 scale after mean centering, 0 corresponds to the overall mean migration rate. This contour plot emphasizes regions with effective migration that is significantly higher/lower than the overall average.\n\n\nqrates01\nEffective diversity surface. This contour plot visualizes the estimated effective diversity rates (q), on the log10 scale after mean centering.\n\n\nqrates02\nPosterior probability contours (\\(P(\\log(q) &gt; 0) = p\\)) and (\\(P(\\log(q) &lt; 0) = p\\)). Similar to mrates02 but applied to the effective diversity rates.\n\n\nrdist01\nScatter plot of the observed vs the fitted between-deme component of genetic dissimilarity, where one point represents a pair of sampled demes.\n\n\nrdist02\nScatter plot of the observed vs the fitted within-deme component of genetic dissimilarity, where one point represents a sampled deme.\n\n\nrdist03\nScatter plot of observed genetic dissimilarities between demes vs observed geographic distances between demes.\n\n\npilogl01\nPosterior probability trace.\n\n\n\n\n\n\n\n\n\nExercise\n\n\n\n Have a look at all the plot and try to understand what they are showing.\n\n\nThe plot that are most often shown (and probably most interesting) are the mrates plots as they demonstrate the migration pattern across the landscape. The simply differ in the way how they threshold the migration rates (basically how they color them) Plot 3 and 4 are about the second important feature, which is the “diversity” across the landscape. Plot 5 and 6 demontrate the relationship between observerd and fitted between and within demes dissimilarity. In short they should show a linear relationship (the more linear the better is the model fit). Plot 7 shows the relationship between genetic and geographic distance. If the genetic distance increases with geographic distance, then there is a pattern of isolation by distance (IBD). Plot 8 shows the convergence of MCMC chain (should stabilise towards similar valus if run multiple times)."
  },
  {
    "objectID": "session08.html#isolation-by-resistance",
    "href": "session08.html#isolation-by-resistance",
    "title": "8  Landscape Genetics",
    "section": "4. Isolation-by-resistance",
    "text": "4. Isolation-by-resistance\nUp to this point, we’ve tested for IBD - but have not tested for an effect of the landscape on gene flow. We can do that using the genleastcost function in the gdistance package. This function calculates the least cost path between all pairs of demes and then calculates the correlation between the genetic distance and the least cost path distance.\nTo be able to run an isolation-by-barrier analysis, we need to have a raster that represents the resistance to gene flow. This can be a resistance surface that is based on the landscape features (e.g. land cover, elevation, soil type, etc.). As we have a good indication that the soil type clay might be a barrier (and sand might be a facilitator) we will use the soil type raster as a resistance surface. To do so some GIS jumble is needed, namely we need to create a raster that covers the area, and code resistance values for the different soil types.\n\n# create a template raster\ntemplate = rast(vect(soil), res = 0.005)\n# convert soil (vector) to raster\nsoil_raster &lt;- rasterize(vect(soil), template, \"Type\")\nplot(soil_raster)\n\n\n\n\nThe next step is to convert the raster to the Mercator projection, then crop it to the extent of the study area, and finally resample it to a coarser resolution (to make the analysis faster).\n\n# project raster to Mercator (using r from above)\nsoil_raster.merc &lt;- project(soil_raster, crs(r))\n\nWarning: [project,SpatRaster] argument y (the crs) should be a character value\n\n# crop raster to extent of the study area\nsoil.raster.merc.crop &lt;- raster(crop(soil_raster.merc, extent(r)))\n\n# resample to 500 meters (to make it faster)\ntemplate2 &lt;- raster(extent(soil.raster.merc.crop), resolution = 1000)\nsoil.final &lt;- resample(soil.raster.merc.crop, template2, method = \"ngb\")\nplot(soil.final)\n\n\n\nsoil.final\n\nclass      : RasterLayer \ndimensions : 164, 197, 32308  (nrow, ncol, ncell)\nresolution : 1000, 1000  (x, y)\nextent     : 12715387, 12912387, -2626974, -2462974  (xmin, xmax, ymin, ymax)\ncrs        : NA \nsource     : memory\nnames      : Type \nvalues     : 0, 4  (min, max)\n\ntable(values(soil.final))\n\n\n    0     1     2     3     4 \n 5331  4416  4301 12027  1670 \n\n\nGreat the final step is the recoding of the resistance values. From the first plot and using our knowlegde on the terrain colors in R, we can see that the soil type “clay” is coded as 0, “loam” as 1, “rock” as 2, “sand” as 3, and “tidal” as 4. We have to recode those values to be able to use it as a resistance surface.\nThis is actually a step that has potentially a lot of effect and there is not really a good way to give advice as the recoding can be very specific. For a binary resistance surface (e.g. a river or road) it is fairly easy, but the absolute values to use is not really clear. E.g. linear structures like roads are fairly thin, hence they need a high resistance value to have an effect. in contrast layers such as the soil layer, lower values are more appropriate as individual cells are not barriers but the overall area is. Then there are contineous layers such as elevation and here a “mapping” function is needed. E.g. is the effect meant to be linear or is it more like a limiting curve (e.g. from a certain elevation the resistance becomes not much higher. Also step functions might be a good idea. As a general rule how to decide on the recoding it is important to think about the feature that is meant to be a barrier and how it expected to affect the migration of individuals.\n\n# convert resistance values clay =0, loam =1, rock = 2, sand =3, tidal\n# =4\n\n# clay only\nres.clay &lt;- soil.final\nres.clay[res.clay == 0] &lt;- 20\nres.clay[res.clay &lt; 20] &lt;- 1\nres.clay[is.nan(res.clay)] &lt;- 50\nnames(res.clay) &lt;- \"Clay20\"\n\n\nplot(res.clay)\n\n\n\n# exercise test if sand only is better sand only\n\nNow we can run the isolation-by-resistance analysis. We will use the leastcost function to calculate the least cost path between all pairs of demes. Then we will use the wassermann function to calculate the correlation between the genetic distance and the least cost path distance and correct for Euclidean distance (and vice versa).\n\n# takes about a minute to run\nsystem.time(glc.clay &lt;- gl.genleastcost(Sy.gl, fric.raster = res.clay, gen.distance = \"dist\",\n    NN = 8, pathtype = \"leastcost\"))\n\nStarting gl.genleastcost \n\n\n\n\n\nCompleted: gl.genleastcost \n\n\n   user  system elapsed \n  15.36    4.01   23.27 \n\nPopGenReport::wassermann(eucl.mat = glc.clay$eucl.mat, cost.mat = glc.clay$cost.mats,\n    gen.mat = glc.clay$gen.mat, plot = FALSE)\n\nRegistered S3 method overwritten by 'genetics':\n  method      from \n  [.haplotype pegas\n\n\n$mantel.tab\n                    model      r     p\n1 Gen ~Clay20 | Euclidean  0.159 0.004\n2 Gen ~Euclidean | Clay20 0.1002 0.074\n\n\nAnd voila the results is as we hoped (the effect of clay is a significanct when corrected by Euclidean distance and the effect of Eucledian distance when corrected for Clay is not).\nBe aware this is just a quick example, hence we only used 1000 loci and 30 individuals. A full analysis would require more loci and individuals. Also to have a valid resistance surface, we would need to check the correlation between the least cost distance matrix and the Euclidean distance matrix. If the leastcost matrix does correlate too closely with the Euclidean distance matrix (e.g. r&gt;0.7) then I would be very careful with my interpretation.\nLets check that quickly\n\nAlldis &lt;- list(GDis = glc.clay$gen.mat, Edis = glc.clay$eucl.mat, CD.clay = glc.clay$cost.mats[[1]])\ndf &lt;- data.frame(lapply(Alldis, lower))\n\nggpairs(df[, 3:1])  #reverse order so GDis is on the y-axis\n\n\n\n\nAs you can see the correlation between Edis and CD.clay is &gt;0.95, hence they are basically inseperable hence I would not trust the results. Nevertheless we test our next hypothesis, that sand is a facilitator of gene flow.\n\n# maybe best clay and sand clay only\nres.sand &lt;- soil.final\nres.sand[res.sand != 3] &lt;- 10\nres.sand[res.sand == 3] &lt;- 1\nres.sand[is.nan(res.sand)] &lt;- 50\n\n\n\n\n\nsystem.time(glc.sand &lt;- gl.genleastcost(Sy.gl, fric.raster = res.sand, \"propShared\",\n    NN = 8, pathtype = \"leastcost\"))\n\nStarting gl.genleastcost \n\n\n\n\n\nCompleted: gl.genleastcost \n\n\n   user  system elapsed \n  15.45    2.42   20.37 \n\nPopGenReport::wassermann(eucl.mat = glc.sand$eucl.mat, cost.mat = glc.sand$cost.mats,\n    gen.mat = glc.sand$gen.mat, plot = FALSE)\n\n$mantel.tab\n                  model       r     p\n2 Gen ~Euclidean | Type -0.3883     1\n1 Gen ~Type | Euclidean -0.0603 0.723\n\n\nFinally it would be great to have an approach to test both layers within on Framework. To do so Clarke et al. (2002) proposed a method to test the effect of multiple layers on the genetic distance [maximum likelihood population effects mixed effects model (MLPE)]. It allows to test different hypothesis by running the differnt models and compare them using AIC values.\n\n# clay and sand\n\nAlldis &lt;- list(GDis = glc.clay$gen.mat, Edis = glc.clay$eucl.mat, CD.clay = glc.clay$cost.mats[[1]],\n    CD.sand = glc.sand$cost.mats[[1]])\n\n\nids &lt;- To.From.ID(nInd(Sy.gl))\n\n\n\ndf &lt;- data.frame(lapply(Alldis, lower))\nnames(df)\n\n[1] \"GDis\"    \"Edis\"    \"CD.clay\" \"CD.sand\"\n\ndf &lt;- data.frame(scale(df))\n\ndf$pop &lt;- ids$pop1\n\nNow we can run the MLPE model and compare the AIC values to see which model is the best.\n\nmlpe.full &lt;- mlpe_rga(formula = GDis ~ Edis + CD.clay + CD.sand + (1 | pop),\n    data = df)\nsummary(mlpe.full)\n\nLinear mixed model fit by maximum likelihood  ['lmerMod']\n\n     AIC      BIC   logLik deviance df.resid \n   784.3    809.5   -386.1    772.3      490 \n\nScaled residuals: \n     Min       1Q   Median       3Q      Max \n-2.82358 -0.64041  0.07128  0.67799  2.58044 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n pop      (Intercept) 0.2081   0.4562  \n Residual             0.2232   0.4725  \nNumber of obs: 496, groups:  pop, 32\n\nFixed effects:\n              Estimate Std. Error t value\n(Intercept) -1.388e-15  1.627e-01   0.000\nEdis        -2.530e-01  9.452e-02  -2.677\nCD.clay      8.260e-01  1.304e-01   6.333\nCD.sand      2.946e-01  1.310e-01   2.248\n\nCorrelation of Fixed Effects:\n        (Intr) Edis   CD.cly\nEdis     0.000              \nCD.clay  0.000 -0.679       \nCD.sand  0.000 -0.027 -0.695\n\nAIC(mlpe.full)\n\n[1] 784.2613\n\nmlpe.clay &lt;- mlpe_rga(formula = GDis ~ Edis + CD.clay + (1 | pop), data = df)\nAIC(mlpe.clay)\n\n[1] 787.2475\n\nmlpe.sand &lt;- mlpe_rga(formula = GDis ~ Edis + CD.sand + (1 | pop), data = df)\nAIC(mlpe.sand)\n\n[1] 818.6331\n\nmlpe.euc &lt;- mlpe_rga(formula = GDis ~ Edis + (1 | pop), data = df)\nsummary(mlpe.euc)\n\nLinear mixed model fit by maximum likelihood  ['lmerMod']\n\n     AIC      BIC   logLik deviance df.resid \n   889.2    906.0   -440.6    881.2      492 \n\nScaled residuals: \n     Min       1Q   Median       3Q      Max \n-3.07547 -0.55389  0.09169  0.62069  2.88412 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n pop      (Intercept) 0.1603   0.4004  \n Residual             0.2870   0.5357  \nNumber of obs: 496, groups:  pop, 32\n\nFixed effects:\n             Estimate Std. Error t value\n(Intercept) 9.755e-16  1.436e-01    0.00\nEdis        7.569e-01  2.581e-02   29.33\n\nCorrelation of Fixed Effects:\n     (Intr)\nEdis 0.000 \n\nAIC(mlpe.full)\n\n[1] 784.2613\n\nAIC(mlpe.full, mlpe.clay, mlpe.sand, mlpe.euc)\n\n          df      AIC\nmlpe.full  6 784.2613\nmlpe.clay  5 787.2475\nmlpe.sand  5 818.6331\nmlpe.euc   4 889.2085\n\n\nIn this case the MPLE selects the mlpe.full as being the best [lowest AIC], but the difference is small (less than 4). hence the two models are not really separable."
  },
  {
    "objectID": "session08.html#antechinus-at-kiola",
    "href": "session08.html#antechinus-at-kiola",
    "title": "8  Landscape Genetics",
    "section": "5. Antechinus at Kiola",
    "text": "5. Antechinus at Kiola\n\n\n\n\n\n\nExercise\n\n\n\n Antechinus in Kioloa\n\n\nThe following data set is simulated based on the scenario of Antechinus in Kioloa.\nWe simulated 50 individuals and 20000 loci and let the individuals “live” for several generations on a resistance surface (actual a combination of two out of the three provided. The provided layers are elevation, roads and forest. Because this is a simulation there is obviously a “correct” answer, but we leave it to you to find it.\nMaybe the best way to start is to load the data and have a look at the provided layers. Then you could run a EEMS to get an idea which layers might be important. Then you can run a leastcost analysis and see if the EEMS results are supported. Finally you could run the MLPE model to see if you have found a good layer/combination of layers.\n\nLoad the data\n\n\n# load the data\nantechinus &lt;- readRDS(\"./data/antechinus.rds\")\ngl.map.interactive(antechinus, provider = \"OpenTopoMap\")\n\nStarting gl.map.interactive \n  Processing genlight object with SNP data\nCompleted: gl.map.interactive \n\n\n\n\n\n# load layers\n\nelevation &lt;- raster(\"./data/elevation.tif\")\nroads &lt;- raster(\"./data/roads.tif\")\nforest &lt;- raster(\"./data/forest.tif\")\n\n\nHave a look at the layers\nRun an EEMS\nRun a leastcost analysis (for several resistance layers)\n\nA bit mean is that we have not recoded the resistance layers, so you have to do that yourself. For example when you load the road layer roads are “coded” as 255, but you might want to recode them to another value. But be aware roads are small features and are only a barrier if you have moderately high resistance values. Also the layer starts at zero, and you need to have this coded to one, because zero resistance means an animal can run around without penalty. In case you do not like this step you can use the costmatrices which are added to the antechinus object, so you can use them directly and no need to recode your layers.\n\nnames(antechinus@other)\n\n[1] \"xy\"          \"Gdis\"        \"Edis\"        \"landscape\"   \"latlon\"     \n[6] \"CDelevation\" \"CDforest\"    \"CDroad\"     \n\n\n\nFinally run the MLPE model to see if you have found a good layer.\n\nHave fun and please ask as many questions as you like.\nRobyn & Bernd\n\n\n\n\nPetkova, Desislava, John Novembre, and Matthew Stephens. 2016. “Visualizing Spatial Population Structure with Estimated Effective Migration Surfaces.” Nature Genetics 48 (1): 94–100. https://doi.org/10.1038/ng.3464."
  }
]