[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Kioloa PopGen",
    "section": "",
    "text": "Welcome!\nWelcome, Fellow Magical Beings, to our 5-day spellbinding journey in the mystical realm of Population Genetics using the ancient art of R! We’re over the moon (and not just because we’ve mastered levitation spells) to have you join us at the enchanted Kioloa ANU Coastal Campus. Nestled among the spellbound forests of Murramarang Nation Park and the crystal-clear waters of southern New South Wales, our meeting lair couldn’t be more perfect. When you’re not weaving R spells, you’ll find yourself spoiled for choice with magical brews (a.k.a. coffee) and breathtaking sceneries.\nOur coven is as varied as the potions in a wizard’s pantry, bringing together sorcerers from all corners of the realm. Here, every sorcerer and sorceress will don both the student’s cloak and the teacher’s hat, expanding their arcane knowledge in genetics for the noble causes of biodiversity conservation and ecosystem restoration. Expect a cauldron bubbling with interaction, where being right is as celebrated as making mistakes, where sensitivity meets resilience, and where every voice conjures new spells of knowledge, perspective, and innovation.\nOur quest is to master key incantations in population genetics, with our wands pointed firmly at the R statistical grimoire. We’re ditching the dusty tomes for hands-on magic, aiming to empower you to conjure your own population genetics enchantments by the end of our gathering. And fear not, there will be ample time to apply these spells on your own datasets.\nOur magic words? Cooperation, flexibility, and dedication. We embark on this journey with a spirit of camaraderie, ready to share potions, carry scrolls, and lend a helping wand in times of need. The path may twist and turn, with unexpected dragons (breakdowns), storms (rain), and spells gone awry (tech hiccups), but our collective humour and knack for improvisation will see us through.\nWe are united by a deep-seated dedication to unravelling the mysteries of genetics, a passion that burns as bright within you as it does within us. We believe this adventure will be rewarding not just intellectually, but also aesthetically, socially, and culturally. We can’t wait to embark on this enchanting journey with you. May our time together be as fulfilling as finding the philosopher’s stone!"
  },
  {
    "objectID": "index.html#here-are-some-things-you-might-see-along-your-journey",
    "href": "index.html#here-are-some-things-you-might-see-along-your-journey",
    "title": "Kioloa PopGen",
    "section": "Here are some things you might see along your journey:",
    "text": "Here are some things you might see along your journey:\nBelow is an exercise box, this is encouraging you to give it a go yourself!\n\n\n\n\n\n\nExercise\n\n\n\n Give the code a go!\n\n\nBelow is a tip box, with added insights for your journey.\n\n\n\n\n\n\nTip\n\n\n\ntake a look…\nA variety of things to learn!\n\n\nBelow is a caution box, take note, this will keep you on your path.\n\n\n\n\n\n\nCaution\n\n\n\nTake CARE! It is easy to go astray, I am here to help.\n\n\nBelow is a warning box! Be careful and take head of what it says.\n\n\n\n\n\n\nWarning\n\n\n\nNOTICE! Thank you for noticing this warning!"
  },
  {
    "objectID": "index.html#a-big-thank-you-to-the-developers",
    "href": "index.html#a-big-thank-you-to-the-developers",
    "title": "Kioloa PopGen",
    "section": "A big thank you to the developers!",
    "text": "A big thank you to the developers!\nDartR published first by Gruber et al. (2018), and DartR V2 published by Mijangos et al. (2022)\n\n\n\n\nGruber, Bernd, Peter J. Unmack, Oliver F. Berry, and Arthur Georges. 2018. “DARTR : An R Package to Facilitate Analysis of SNP Data Generated from Reduced Representation Genome Sequencing.” Molecular Ecology Resources 18 (3): 691–99. https://doi.org/10.1111/1755-0998.12745.\n\n\nMijangos, Jose Luis, Bernd Gruber, Oliver Berry, Carlo Pacioni, and Arthur Georges. 2022. “dartR V2: An Accessible Genetic Analysis Platform for Conservation, Ecology and Agriculture.” Methods in Ecology and Evolution 13 (10): 2150–58. https://doi.org/10.1111/2041-210X.13918."
  },
  {
    "objectID": "schedule.html",
    "href": "schedule.html",
    "title": "Program",
    "section": "",
    "text": "for a more detailed program see the More Info section\n\n\n\n\n\n\n\n\n\n\n\n#\nDay\nTime\nTopic\nPresenters\n\n\n\n\n1\nMon\n2 pm - 4 pm\nWelcome, Intro dartR\nOliver Berry, Andrzej Killian, Arthur Georges, Bernd Gruber, Renee Catullo\n\n\n2\n\n5 pm – 7 pm\nPop Gen In Conservation & Restoration\nBill Sherwin, Carlo Pacioni, Renee Catullo\n\n\n3\nTue\n9 am – 11 am\nSequencing Technologies\nJason Carling, Andrew Kowalczyk, Renee Catullo\n\n\n4\n\n12 pm – 2 pm\nData Management, Reproducibility & Integrity\nJiajia Li\n\n\n5\n\n3 pm – 5 pm\nEffective Population Size\nBernd Gruber, Carlo Pacioni, Bill Sherwin\n\n\n6\nWed\n9 am – 11 am\nManagement Of Small Populations\nCatherine Grueber, Kate Farquharson\n\n\n7\n\n12 pm – 2 pm\nNatural Selection\nLuciano Beheregaray, Chris Brauer, Jonathan Sandoval\n\n\n8\n\n3 pm – 5 pm\nLandscape Genetics\nBernd Gruber, Robyn Shaw\n\n\n9\nThu\n9 am – 11 am\nLineage Divergence\nArthur Georges, Sally Potter, Craig Moritz\n\n\n10\n\n12 pm – 2 pm\nSex Linked Markers\nDiana Robledo, Floriaan Devloo-Delva\n\n\n11\n\n7 pm – 9 pm\nFrom Genes to Kin: Dissecting Relatedness & Kinship\nJinliang Wang, Luis Mijangos, Natasha Marosi\n\n\n12\nFri\n9 am – 11 am\nGenetic Structure\nArthur Georges, Bernd Gruber, Bill Sherwin\n\n\n13\n\n12 pm – 2 pm\nCombining Genomic Resources\nLuis Mijangos, Sally Potter"
  },
  {
    "objectID": "install.html#rationale",
    "href": "install.html#rationale",
    "title": "Install dartRverse",
    "section": "Rationale",
    "text": "Rationale\nWe have developed a new suit of packages called “dartRverse” packages, that will replace the previous dartR package, which soon will be no longer supported. The new suit of packages are meant to be a 1:1 replacement and only in some instance very minor changes will be needed to update previous code. For example we reworked on the “output” of all functions, now being able to save figures in specified folders, which can be easier recovered and manipulated for further tweaking. The main reasons for splitting dartR into several packages and developing the dartRverse suit of packages was difficulty to maintain dartR, because of limits imposed by CRAN, but also limits due the the long time to test new function, when compiling the package. Therefore we were forced to split the package into several smaller packages. This has several advantages and in the best of all cases no disadvantages.\n\neasier maintenance\nfaster development\nless dependencies on other packages\neasier to become a contributor\nhave your own package developed that can be branded as part of the dartRverse\n\nThe main paradigm was also that for our users nothing (or at as little as possible) needed to change and all existing code and scripts should still work. Also the installation process was meant to be straightforward and finally the coexistance between dartR and dartRverse packages should be possible (for the interim until dartR will be no longer supported)."
  },
  {
    "objectID": "install.html#installation",
    "href": "install.html#installation",
    "title": "Install dartRverse",
    "section": "Installation",
    "text": "Installation\n\ninstall dartRverse\n\n#installs the necessary bioconductor packages\ninstall.packages(\"devtools\")\ninstall.packages(\"BiocManager\")\nBiocManager::install(\"SNPRelate\")\n\n#install dartRverse (dartRverse) & core (dartR.base, dartR.data)\ninstall.packages(\"dartRverse\")\n\nThe dartRverse package is the first package to install and its only purpose is to support the installation of the other dartRverse packages. It will also be the first port of call to provide links to tutorials and other documentation.\nIf everything works well this should install two more packages with form the core version of dartRverse, nameley dartR.base and dartR.data. Those core packages have all the main function of old dartR package that deals with input, conversion, reporting and filtering of data. Also some base function to analysse data (e.g. PCoA, Fst) are included.\nOnce the dartRverse package has been installed we can load the package to check which part of the dartRverse has been installed.\n\nlibrary(dartRverse)\n\n\n\n\n\n\n\n\ninstall additional packages\nNow we can install the additional packages that are part of the dartRverse. Depending on your needs you can install all of them or only the one you are interested.\nFor example if you are interested in additional functions to analyse population structure (e.g. run STRUCTURE or faststructure) you can install the dartR.popgen package. If you are interested in functions that support the simulation of data you can install the dartR.sim package.\nYou can check which packages are avaialbel and which of them you have installed by typing:\n\ndartRverse::dartRverse_install()\n\n\n\n\n\n\nThe currently available packages are:\n\ndartR.sim (simulate SNP data)\ndartR.popgen (run population genetic analysis)\ndartR.spatial (run landscape genetic analysis)\ndartR.captive (estimate relatedness, support captive breeding)\ndartR.sexlinked (identify sexlinked markers, not ready yet)\n\nSo to install the dartR.sim simply type:\n\ninstall.packages(\"dartR.sim\")\ninstall.packages(\"dartR.popgen\")\ninstall.packages(\"dartR.spatial\")\ninstall.packages(\"dartR.captive\")\n# currently dartR.sexlinked requires a different installation process (see below)\n\n\n\nGithub repositories\nWe make all of our packages available via CRAN. The reason for this is that CRAN packages follow a stringent testing before they are allowed to be uploaded to CRAN and therefore are more likely to contain less errors then packages that are available on other repositories. Nevertheless we also make our packages available during development via github.\nYou can find the repositories under: https://github.com/green-striped-gecko/dartR.base [for the dartR.base package] and equivalent for the other packages.\nThe reason why you might want to install a package from github is that you want to use the latest version of the package. However, you should be aware that the packages on github are not tested and therefore might contain errors. Also the packages on github might be updated on a daily basis and therefore might change without notice.\nWe use different branches and they are reflecting different stages of development and majurity.\n\nmain (the main branch, which is equivalent to the current CRAN version)\ndev (development branch, which has the latest functions that might be in the next CRAN version, but have not been tested yet)\ndev_name (these are branches of our main developers and are used for testing and development of new functions. Installing functions from here might cause problems and should only be done if you know what you are doing)\n\ndartRverse supports the installation of github version of the packages using the following syntax:\ndartRverse_install(package = \"dartR.base\", repo = \"github\", branch = \"dev\")\nThis install the dev branch of dartR.base from CRAN. All main and dev branches are tested if they can be installed (and some additional error checks via): https://github.com/green-striped-gecko/dartRverse\nPlease note that you should provide the package repository (github/cran), the branch (main, dev,dev_name) and version number in case you want to report a bug. You can use the github methods to report issues or use our google group: https://groups.google.com/d/forum/dartr.\n\n\nInstalling dartR.sexlinked\ndartRverse_install(package = \"dartR.sexlinked\", repo = \"github\", branch = \"dev\")"
  },
  {
    "objectID": "install.html#using-dartrverse",
    "href": "install.html#using-dartrverse",
    "title": "Install dartRverse",
    "section": "Using dartRverse",
    "text": "Using dartRverse\nTo use dartRverse you can simply load the package and use it as before.\n\nlibrary(dartRverse)"
  },
  {
    "objectID": "install.html#using-legacy-dartr",
    "href": "install.html#using-legacy-dartr",
    "title": "Install dartRverse",
    "section": "Using legacy dartR",
    "text": "Using legacy dartR\nFor whatever reason you might want to use legacy dartR, instead of the dartRverse packages [e.g. for initial testing]. For a detailed explanation on how to do this see the dartR Tutorials section that has an in depth walk through of how to do this in the Installing R tutorial PDF."
  },
  {
    "objectID": "session01.html#required-packages",
    "href": "session01.html#required-packages",
    "title": "1  Intro to dartR",
    "section": "Required packages",
    "text": "Required packages\n\nlibrary(dartR.base)\nlibrary(dartR.data)\n\nmake sure you have the packages installed, see Install dartRverse"
  },
  {
    "objectID": "session01.html#dartrs-reach",
    "href": "session01.html#dartrs-reach",
    "title": "1  Intro to dartR",
    "section": "dartR’s Reach",
    "text": "dartR’s Reach"
  },
  {
    "objectID": "session01.html#diversity-arrays-technology-pty-ltd-dart",
    "href": "session01.html#diversity-arrays-technology-pty-ltd-dart",
    "title": "1  Intro to dartR",
    "section": "Diversity Arrays Technology Pty Ltd (DArT)",
    "text": "Diversity Arrays Technology Pty Ltd (DArT)\n\nDiversity Arrays Technology Pty Ltd (DArT) is a private company that specializes in genotyping by sequencing. Their approach is one of genome complexity reduction. Basically, DArTSeq is a method that extracts reproducible genomic variation across the genomes of many individuals at an affordable cost. The data are representational in the sense that they are generated for a random but reproducible selection of small fragments of sequence only, fragments that exhibit variation at the level of single base pairs (SNPs).\nFor more details check out the DArT website: https://www.diversityarrays.com/\nYou can also learn more about the methods by checking out the tutorial on Data Structure and Input found in the dartR Tutorials section.\n\nTheir mission:"
  },
  {
    "objectID": "session01.html#the-dartrverse",
    "href": "session01.html#the-dartrverse",
    "title": "1  Intro to dartR",
    "section": "The dartRverse",
    "text": "The dartRverse\n\nFrom 1 package to 7\n See the section Install dartRverse to learn about the reasoning behind how the dartRverse came to be…"
  },
  {
    "objectID": "session01.html#the-magical-world-of-rstudio-cloud",
    "href": "session01.html#the-magical-world-of-rstudio-cloud",
    "title": "1  Intro to dartR",
    "section": "The magical world of RStudio Cloud",
    "text": "The magical world of RStudio Cloud\n\nStep 1: Summoning the RStudio Cloud Portal\n\nEmbark on the Journey: Open your trusty steed (a.k.a. your web browser) and gallop over to Rstudio Cloud.\nForge Your Credentials: Spot the “Sign Up” beacon in the realm’s upper right corner and click it with courage. Click on the “Learn more” below the “Cloud Free” plan and then in the “Sign Up” button. A scroll will appear, asking for your name, your secret code (password), and your e-mail. Please use the same e-mail you provided when you registered to the workshop.\n\n\n\nProve Your Worth: After submitting your details, a pigeon (or was it an email?) will fly into your inbox carrying a secret message. Click the link within to prove you’re not a goblin in disguise.\n\n\n\nStep 2: Entering the Secret Workshop Chamber\n\nReturn to the Portal: With your email now verified, make your way back to the RStudio Cloud realm and use your newly forged credentials to enter.\nFinding the Secret Door: One day before the workshop, a link leading to the workshop’s chamber will be sent to your e-mail.\n\n\n\nStep 3: Joining the Fellowship of the Project\n\nLocate the Treasure Chest: Within the grand chamber (workshop space), seek the project “PopGenR” and click on it to reveal its secrets. As you open it for the first time, ancient RStudio Cloud spirits will work their magic to prepare your environment."
  },
  {
    "objectID": "session01.html#dartr-fundamentals",
    "href": "session01.html#dartr-fundamentals",
    "title": "1  Intro to dartR",
    "section": "dartR fundamentals",
    "text": "dartR fundamentals\n\nThe structure of a genlight object\n\n\n\n\n\nFor a detailed rundown of the genetic data used by the dartRverse, check out the tutorial on Data Structure and Input found in the dartR Tutorials section.\n\n\nthe Basics\nHere is a glimpse at the functions we will be using. Please follow along, or try running the code on your own.\n\ncodegenlight\n\n\n\ntestset.gl\n\ngl &lt;- testset.gl\nnInd(gl)\nnLoc(gl)\nnPop(gl)\npopNames(gl)\nindNames(gl)\nlocNames(gl)\ntable(pop(gl))\nas.matrix(gl)[1:7,1:5]\n\n\n\n\ntestset.gl\n\n /// GENLIGHT OBJECT /////////\n\n // 250 genotypes,  255 binary SNPs, size: 752 Kb\n 7868 (12.34 %) missing data\n\n // Basic content\n   @gen: list of 250 SNPbin\n   @ploidy: ploidy of each individual  (range: 2-2)\n\n // Optional content\n   @ind.names:  250 individual labels\n   @loc.names:  255 locus labels\n   @loc.all:  255 alleles\n   @position: integer storing positions of the SNPs\n   @pop: population of each individual (group size range: 1-11)\n   @other: a list containing: loc.metrics  latlong  ind.metrics  history  loc.metrics.flags \n\n\n\n\n\n\n\n\n\n\n\nQuiz!\n\n\n\nThis quiz is referring to the testset.gl data set you have interrogated above.\nType the correct number into the blank boxes below:\n\nnumber of SNPs \nnumber of individuals \nnumber of populations \n\nboxes will go green if you have the answer correct\n\n\n\nReporting and Filtering\n\ncodeloci callrateindividual callratereproducibilityfilter callrate\n\n\n\ngl.set.verbosity(3)\n\ngl.report.callrate(gl)               # loci callrate             \ngl.report.callrate(gl,method=\"ind\")  # individual callrate\ngl.report.reproducibility(gl)        # reproducibility\n\n# filter\ngl.filter.callrate(gl,method =\"ind\", threshold=0.8)\n\n\n\n\ngl.report.callrate(gl)\n\nStarting gl.report.callrate \n  Processing genlight object with SNP data\n  Reporting Call Rate by Locus\n  No. of loci = 255 \n  No. of individuals = 250 \n    Minimum      :  0.056 \n    1st quartile :  0.912 \n    Median       :  0.984 \n    Mean         :  0.8765804 \n    3r quartile  :  1 \n    Maximum      :  1 \n    Missing Rate Overall:  0.1234 \n\n\n\n\n\nCompleted: gl.report.callrate \n\n\n\n\n\ngl.report.callrate(gl,method=\"ind\")\n\nStarting gl.report.callrate \n  Processing genlight object with SNP data\n\n  Reporting Call Rate by Individual\n  No. of loci = 255 \n  No. of individuals = 250 \n    Minimum      :  0.7490196 \n    1st quartile :  0.8666667 \n    Median       :  0.8823529 \n    Mean         :  0.8765804 \n    3r quartile  :  0.8941176 \n    Maximum      :  0.9333333 \n    Missing Rate Overall:  0.1234 \n\nListing 30 populations and their average CallRates\n  Monitor again after filtering\n         Population CallRate  N\n1     EmmacBrisWive   0.8839 10\n2     EmmacBurdMist   0.8808 10\n3     EmmacBurnBara   0.8859 11\n4     EmmacClarJack   0.8596  5\n5     EmmacClarYate   0.8769  5\n6     EmmacCoopAvin   0.7682 10\n7    EmmacCoopCully   0.9122 10\n8     EmmacCoopEulb   0.8702 10\n9    EmmacFitzAllig   0.8973 10\n10    EmmacJohnWari   0.8929 10\n11    EmmacMaclGeor   0.8806 11\n12    EmmacMaryBoru   0.8843  6\n13    EmmacMaryPetr   0.8892  4\n14     EmmacMDBBowm   0.8824 10\n15     EmmacMDBCond   0.8855 10\n16     EmmacMDBCudg   0.8878 10\n17     EmmacMDBForb   0.8766 11\n18     EmmacMDBGwyd   0.9050  9\n19     EmmacMDBMaci   0.8773 10\n20 EmmacMDBMurrMung   0.8890 10\n21     EmmacMDBSanf   0.8914 10\n22    EmmacNormJack   0.8725  6\n23    EmmacNormLeic   0.8863  1\n24    EmmacNormSalt   0.8706  1\n25    EmmacRichCasi   0.8757 10\n26        EmmacRoss   0.8706 10\n27    EmmacRussEube   0.8612 10\n28     EmmacTweeUki   0.8773 10\n29    EmsubRopeMata   0.8345  5\n30    EmvicVictJasp   0.8361  5\n\nListing 20 individuals with the lowest CallRates\n  Use this list to see which individuals will be lost on filtering by individual\n  Set ind.to.list parameter to see more individuals\n   Individual  CallRate\n1    AA063722 0.7490196\n2    AA063726 0.7490196\n3    AA063732 0.7647059\n4    AA063720 0.7686275\n5    AA063712 0.7686275\n6    AA063708 0.7725490\n7    AA063718 0.7764706\n8    AA063710 0.7764706\n9    AA063714 0.7764706\n10   AA063716 0.7803922\n11   AA032760 0.7960784\n12   UC_00210 0.8196078\n13   UC_00259 0.8196078\n14   AA018494 0.8235294\n15   UC_00206 0.8235294\n16   AA019164 0.8274510\n17   UC_00209 0.8313725\n18   UC_00254 0.8313725\n19   AA019159 0.8352941\n20  UC_00126c 0.8352941\n\n)\n\n\n\n\n\nCompleted: gl.report.callrate \n\n\n\n\n\ngl.report.reproducibility(gl)\n\nStarting gl.report.reproducibility \n  Processing genlight object with SNP data\n  Reporting Repeatability by Locus\n  No. of loci = 255 \n  No. of individuals = 250 \n    Minimum      :  0.959459 \n    1st quartile :  1 \n    Median       :  1 \n    Mean         :  0.9981525 \n    3r quartile  :  1 \n    Maximum      :  1 \n    Missing Rate Overall:  0.12 \n\n\n\n\n\n   Quantile Threshold Retained Percent Filtered Percent\n1      100%  1.000000      214    83.9       41    16.1\n2       95%  1.000000      214    83.9       41    16.1\n3       90%  1.000000      214    83.9       41    16.1\n4       85%  1.000000      214    83.9       41    16.1\n5       80%  1.000000      214    83.9       41    16.1\n6       75%  1.000000      214    83.9       41    16.1\n7       70%  1.000000      214    83.9       41    16.1\n8       65%  1.000000      214    83.9       41    16.1\n9       60%  1.000000      214    83.9       41    16.1\n10      55%  1.000000      214    83.9       41    16.1\n11      50%  1.000000      214    83.9       41    16.1\n12      45%  1.000000      214    83.9       41    16.1\n13      40%  1.000000      214    83.9       41    16.1\n14      35%  1.000000      214    83.9       41    16.1\n15      30%  1.000000      214    83.9       41    16.1\n16      25%  1.000000      214    83.9       41    16.1\n17      20%  1.000000      214    83.9       41    16.1\n18      15%  0.997674      217    85.1       38    14.9\n19      10%  0.994536      230    90.2       25     9.8\n20       5%  0.984694      243    95.3       12     4.7\n21       0%  0.959459      255   100.0        0     0.0\nCompleted: gl.report.reproducibility \n\n\n\n\n\ngl.filter.callrate(gl,method =\"ind\", threshold=0.8)\n\nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Warning: Data may include monomorphic loci in call rate \n                    calculations for filtering\n  Recalculating Call Rate\n  Removing individuals based on Call Rate, threshold = 0.8 \n  Individuals deleted (CallRate &lt;=  0.8 ):\nAA032760[EmmacMDBMaci], AA063718[EmmacCoopAvin], AA063720[EmmacCoopAvin], AA063722[EmmacCoopAvin], AA063726[EmmacCoopAvin], AA063732[EmmacCoopAvin], AA063708[EmmacCoopAvin], AA063710[EmmacCoopAvin], AA063712[EmmacCoopAvin], AA063714[EmmacCoopAvin], AA063716[EmmacCoopAvin],\n  Summary of filtered dataset\n    Call Rate for individuals &gt; 0.8 \n    Original No. of loci : 255 \n    Original No. of individuals: 250 \n    No. of loci retained: 255 \n    No. of individuals retained: 239 \n    No. of populations:  29 \n\n\n\n\n\n  Note: Locus metrics not recalculated\n  Note: Resultant monomorphic loci not deleted\nCompleted: gl.filter.callrate \n\n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nRemember, you can always look up the help file for dartRverse functions by putting a question mark (?) before a function. For example: ?gl.filter.callrate\nMake sure you have the associated library loaded (eg. libary(dartR.base))\n\n\nNow, lets take a look at our genetic data before and after filtering using the gl.smearplot() function.\n\ncodeBeforeAfter\n\n\n\ngl &lt;- testset.gl\ngl.smearplot(gl) # Before Filtering\n\ngl &lt;- gl.filter.callrate(gl,verbose=0)\ngl &lt;- gl.filter.callrate(gl, method= \"ind\", \n                         threshold=0.80, verbose=0)\ngl.smearplot(gl) # After Filtering\n\n\n\n\n\n  Processing genlight object with SNP data\nStarting gl.smearplot \n\n\n\n\n\nCompleted: gl.smearplot \n\n\n\n\n\n\n  Processing genlight object with SNP data\nStarting gl.smearplot \n\n\n\n\n\nCompleted: gl.smearplot"
  },
  {
    "objectID": "session01.html#filtering-strategies",
    "href": "session01.html#filtering-strategies",
    "title": "1  Intro to dartR",
    "section": "Filtering strategies",
    "text": "Filtering strategies\nThere is no right filtering order. Your data set will need its own interrogation, so be iterative - test different options. In some cases you may even need to reuse a filter that you used earlier on in the filtering process.\nInstead of providing a recipe to follow, I recommend strategies to filtering.\nFirst, lets have a closer look at what some of these filters do (click across the tabs for more insight into each filter):\n\nFilterscallrate: loccallrate: indreproducibilityrdepthmafsecondaries\n\n\n\ngl.filter.callrate(method = loc) # Call rate by loci (SNPs)\ngl.filter.callrate(method = ind) # Call rate by individuals\ngl.filter.reproducibility()      # reproducibility \ngl.filter.rdepth()               # read depth \ngl.filter.maf()                  # minor allele frequency \ngl.filter.secondaries()          # secondaries \n\n\n\ngl.filter.callrate(gl, method = \"loc\", threshold = 0.95)\nWhat is it? Removes SNPs with too much missing data based on a specified threshold.\nWhy is it important? Missing loci can add “noise” and computation time to an analysis\nKey Considerations:\n\nTrade-off between strength of filter and number of loci\nCall rate filters matter for different metrics\n\n\n\n\ngl.filter.callrate(gl, method = \"ind\", threshold = 0.95)\nWhat is it? Removes individuals with too much missing data based on a specified threshold.\nWhy is it important? Deletes the key thing you need to do a study, and removes individuals that may be misleading as they are sequencing outliers\nKey Considerations:\n\nThe filtering step that costs you the very most amount of money\nGenerally not a first step – recommend filtering lightly here in the first go and seeing if other filters improve the individuals completeness\n\n\n\n\ngl.filter.reproducibility()\nWhat is it? Diversity Arrays duplicates individuals during library prep, to assess whether the same answer is found for every locus ~ a control.\nWhy is it important? Provides confidence in your base calls which is pretty fundamental\nKey Considerations:\n\nIf reproducibility is low, you need your SNPs re-assessed\nIf doing sequencing through AGRF or other facilities, make sure to include duplicated individuals (this is an additional cost but do it anyway)\n\n\n\ngl.filter.rdepth()\nWhat is it? The mean number of sequencing reads for a particular locus, across all individuals.\nWhy is it important? The number of reads in a stack tells you how confident you can be in your base calls and a low read depth means that your heterozygous sites have pretty low coverage.\nKey Considerations:\n\nIf your read depth is not high enough, there are questions you can’t confidently answer (e.g., heterozygosity)\nVery high read depth suggests paralogs (genes with multiple copies) being assembled in to one fragment\n\n\n\n\ngl.filter.maf()\nWhat is it? Minor allele frequency (maf) is the frequency of the second most common allele in a given population, so this filter removes SNPs based on their relative proportion.\nImportantly, in the literature, it is often set to 0.05 BUT…\nKey Considerations:\n\n0.05 can be high if you have lot of individuals\n\nIf you have 300 diploid individuals, then you delete SNPs with less than 30 copies of the minor allele\n\nOr singleton if you have a small number of individuals\nShould depend on your question\n\nRare alleles can be very important to certain questions\nMost SNPs are rare alleles, as are most heterozygous sites\nRare alleles are important in expansion processes\nNOT important in structure or phylogenetic analyses\n\n\n\n\n\ngl.filter.secondaries()\nWhat is it? When there are two SNPs on a single fragment, choosing to keep only one.\nWhy is it important? Loci that are very close together in the genome are not independently inherited as they are too close together for recombination to split, so they tend to be inherited together.\nKey Considerations:\n\nCan mislead structure and phylogenetic analyses\nCan improve representations of heterozygosity\n\n\n\n\n\n\nStrategies\nNow for some strategies,\nas a starting point I would get rid of loci I don’t believe in and then individuals that didn’t work properly at all:\n\ngl &lt;- platypus.gl # example data from dartR.data\n\ngl &lt;- gl.filter.callrate(gl, method = \"loc\", threshold = 0.7)\n# Get rid of really poorly sequenced loci, but don’t cut hard\n\ngl &lt;- gl.filter.callrate(gl, method = \"ind\", threshold = 0.25)\n# Very low filter – this is only to get rid of your really bad \n# individuals\n\ngl &lt;- gl.filter.monomorphs(gl)\n# Always run this after removing individuals – removes loci that are no\n# longer variable\n\ngl &lt;- gl.filter.reproducibility(gl)\n# Get rid of unreliable loci\n\ngl &lt;- gl.filter.rdepth(gl, lower = 5, upper = 500)\n# Get rid of low and super high read depth loci\n\nThen I would filter more strongly as appropriate for my question. For a population structure analysis I would,\n\ngl &lt;- gl.filter.callrate(gl, method = \"loc\", threshold = 0.95)\n# Structure dislikes missing data\n\ngl &lt;- gl.filter.maf(gl,  threshold = 1/(2*nInd(gl)))\n# I usually set up the threshold so it is just removing singletons to\n# improve computation time\n\ngl &lt;- gl.filter.secondaries(gl)\n# Always do this as the last loci filter so that you’ve cut for quality\n# before you cut because there are two SNPs\n\ngl &lt;- gl.filter.callrate(gl, method = \"ind\", threshold = .9)\n# Filter on individuals. You can usually be a bit flexible at this \n# point.\n\ngl &lt;- gl.filter.monomorphs(gl)\n# Always run this after removing individuals\n\n\n\n\n\n\n\nMore tips\n\n\n\nKeep these tips in mind when you go to filter your own data:\n\nBe flexible\nKnow what each filter is doing to your data\nThink carefully about whether the filter is appropriate to the test you want to run\nAnalyse your data many different ways\nDon’t over-interpret your PCoA"
  },
  {
    "objectID": "session01.html#exploring-functions",
    "href": "session01.html#exploring-functions",
    "title": "1  Intro to dartR",
    "section": "Exploring functions",
    "text": "Exploring functions\n\n\n\n\n\n\nExercise\n\n\n\n Try some of these report, subset, and filtering functions on your own.\n\nReporting\n\ngl.report.callrate()\ngl.report.reproducibility()\ngl.report.secondaries()\ngl.report.rdepth()\ngl.report.monomorphs()\ngl.report.overhang()\ngl.report.hamming()\ngl.report.overshoot()\n\n\n\nSubsetting\n\ngl.keep.ind()\ngl.drop.ind()\ngl.keep.loc()\ngl.drop.loc()\ngl.keep.pop()\ngl.drop.pop()\ngl.merge.pop()\ngl.subsample.ind()\ngl.subsample.loc()\n\n\n\nfiltering\n\ngl.filter.callrate()\ngl.filter.reproducibility()\ngl.filter.secondaries()\ngl.filter.rdepth()\ngl.filter.monomorphs()\ngl.filter.overhang()\ngl.filter.hamming()\ngl.filter.overshoot()"
  },
  {
    "objectID": "session01.html#further-study",
    "href": "session01.html#further-study",
    "title": "1  Intro to dartR",
    "section": "Further Study",
    "text": "Further Study\nFor more tuturials see the dartR Tutorials section.\nAnd check out this interesting paper, Jaya et al. (2022).\n\n\n\n\nJaya, Frederick R., Jessie C. Tanner, Michael R. Whitehead, Paul Doughty, J. Scott Keogh, Craig C. Moritz, and Renee A. Catullo. 2022. “Population Genomics and Sexual Signals Support Reproductive Character Displacement in Uperoleia (Anura: Myobatrachidae) in a Contact Zone.” Molecular Ecology 31 (17): 4527–43. https://doi.org/10.1111/mec.16597."
  },
  {
    "objectID": "session02.html#required-packages",
    "href": "session02.html#required-packages",
    "title": "2  Pop Gen In Conservation",
    "section": "Required packages",
    "text": "Required packages\n\n#BiocManager::install(\"LEA\")\n#devtools::install_github(\"tdhock/directlabels\")\n\nlibrary(dartRverse)\n\nlibrary(ggplot2)\nlibrary(data.table)\n\nlibrary(leaflet.minicharts)\nlibrary(LEA)\n\nmake sure you have the packages installed, see Install dartRverse"
  },
  {
    "objectID": "session02.html#session-content",
    "href": "session02.html#session-content",
    "title": "2  Pop Gen In Conservation",
    "section": "Session Content",
    "text": "Session Content"
  },
  {
    "objectID": "session02.html#exercise",
    "href": "session02.html#exercise",
    "title": "2  Pop Gen In Conservation",
    "section": "Exercise",
    "text": "Exercise\n\n\n\n\n\n\nTask\n\n\n\n You have been asked to evaluate the ‘genetic health’ of a population at a restoration site, which has been established two years earlier as a results of the drying of a wet land due to urban development. The corporate responsible for the restoration project claims that the area can now sustain a high density population of the species A, which previously only occurred in the forested areas west and east of the previously existing wet land. Species A is a long lived terrestrial animals.\nCompute genetic diversity metrics (e.g. \\(He\\), \\(Ho\\), \\(Fis\\)) with the data generated by the 100 samples collected and provide a recommendation on whether the restoration project was successful and whether the studied population is likely to required continued active management in the short term.\n\n\n\nLoad data\n\n# Load the data\nglsim &lt;- gl.load(\"./data/sess2_glsim.rds\")\n\n\n#check the population size and number of populations\ntable(pop(glsim))\n\n\npopA \n 100 \n\n#number of loci\nnLoc(glsim)\n\n[1] 2500"
  },
  {
    "objectID": "session02.html#further-study",
    "href": "session02.html#further-study",
    "title": "2  Pop Gen In Conservation",
    "section": "Further Study",
    "text": "Further Study\nAnother teaching app in R, covering only Shannon for genes and its change over time, produced by some Computer Science and Engineering third-years doing a project with Carlo Pacioni: https://evolutionaryecology.shinyapps.io/learningEE\n\n\n\n\nJaya, Frederick R., Jessie C. Tanner, Michael R. Whitehead, Paul Doughty, J. Scott Keogh, Craig C. Moritz, and Renee A. Catullo. 2022. “Population Genomics and Sexual Signals Support Reproductive Character Displacement in Uperoleia (Anura: Myobatrachidae) in a Contact Zone.” Molecular Ecology 31 (17): 4527–43. https://doi.org/10.1111/mec.16597."
  },
  {
    "objectID": "session03.html#required-packages",
    "href": "session03.html#required-packages",
    "title": "3  Sequencing Technologies",
    "section": "Required packages",
    "text": "Required packages\n\nlibrary(dartRverse)\nlibrary(ggplot2)\n\nmake sure you have the packages installed, see Install dartRverse"
  },
  {
    "objectID": "session03.html#session-content",
    "href": "session03.html#session-content",
    "title": "3  Sequencing Technologies",
    "section": "Session Content",
    "text": "Session Content"
  },
  {
    "objectID": "session03.html#exercise",
    "href": "session03.html#exercise",
    "title": "3  Sequencing Technologies",
    "section": "EXERCISE",
    "text": "EXERCISE\n\n\n\n\n\n\nExercise\n\n\n\n Still to come…"
  },
  {
    "objectID": "session03.html#further-study",
    "href": "session03.html#further-study",
    "title": "3  Sequencing Technologies",
    "section": "Further Study",
    "text": "Further Study\nstill to come…"
  },
  {
    "objectID": "session04.html#required-packages",
    "href": "session04.html#required-packages",
    "title": "4  Data Management, Reproducibility & Integrity",
    "section": "Required packages",
    "text": "Required packages\n\nlibrary(tidyverse)\nlibrary(palmerpenguins)\n\nmake sure you have the packages installed, see Install dartRverse"
  },
  {
    "objectID": "session04.html#session-content",
    "href": "session04.html#session-content",
    "title": "4  Data Management, Reproducibility & Integrity",
    "section": "Session Content",
    "text": "Session Content\n\nQuarto files\n\n\n\n\n\n\nExercise\n\n\n\n Download an example quarto file and try running it on your own.\n\n\n\n\n\n Download hello.qmd"
  },
  {
    "objectID": "session04.html#exercise",
    "href": "session04.html#exercise",
    "title": "4  Data Management, Reproducibility & Integrity",
    "section": "Exercise",
    "text": "Exercise\n Download an example quarto file and try running it on your own.\n\n\n\n\n\n Download hello.qmd"
  },
  {
    "objectID": "session04.html#further-study",
    "href": "session04.html#further-study",
    "title": "4  Data Management, Reproducibility & Integrity",
    "section": "Further Study",
    "text": "Further Study\nstill to come…"
  },
  {
    "objectID": "session05.html#required-packages",
    "href": "session05.html#required-packages",
    "title": "5  Effective Population Size",
    "section": "Required packages",
    "text": "Required packages\n\nlibrary(dartRverse)\nlibrary(ggplot2)\n# devtools::install_github('green-striped-gecko/geohippos')\nlibrary(geohippos)"
  },
  {
    "objectID": "session05.html#introduction",
    "href": "session05.html#introduction",
    "title": "5  Effective Population Size",
    "section": "Introduction",
    "text": "Introduction\nNe is important for conservation and management of populations. It is an indicator of the genetic diversity of a population and is used to estimate the probability of extinction.\nEffective population size (Ne) is a concept in population genetics that refers to the number of breeding individuals in an idealized population that would show the same amount of genetic drift or inbreeding or linkage disequilbrium or coalescent as the population under study. Unlike the actual census size (Nc), which counts all individuals within a population, Ne focuses on those contributing genes to the next generation, offering a more precise understanding of a population’s genetic health and potential for evolutionary change.\nThe 50/500 rule is a guideline in conservation biology that relates to the effective population size (Ne) and its implications for the conservation of species. This rule was first proposed by Franklin in 1980 and later expanded by Soule in 1986. It serves as a rule of thumb for determining the minimum viable population sizes needed to prevent inbreeding depression in the short term and maintain evolutionary potential over the long term.\nBe aware the 50/500 rule is a rule of thumb and should be used with caution. It is not a one-size-fits-all rule and should be used in conjunction with other information about the species and its habitat. It has been criticized for being too simplistic and not taking into account the specific needs of individual species."
  },
  {
    "objectID": "session05.html#current-effective-population-size",
    "href": "session05.html#current-effective-population-size",
    "title": "5  Effective Population Size",
    "section": "1. Current effective population size",
    "text": "1. Current effective population size\nCarlo"
  },
  {
    "objectID": "session05.html#historic-effective-population-size",
    "href": "session05.html#historic-effective-population-size",
    "title": "5  Effective Population Size",
    "section": "2. Historic effective population size",
    "text": "2. Historic effective population size\n\nBased on SFS\nThe Site Frequency Spectrum (SFS), sometimes referred to as the allele frequency spectrum, is a fundamental concept in population genetics that describes the distribution of allele frequencies at polymorphic sites within a sample of DNA sequences from a population. It provides a powerful summary of the genetic variation present in the population, capturing information about the history of mutations, demographic events (such as population expansions or bottlenecks). There are several methods to estimate historic, but we explore only two here: Epos Lynch et al. (2019) and Stairways2 Liu and Fu (2020)\n\n\nThe SFS\nIt is straight forward to create the sfs from a genlight/dartR object. But first you want to make sure you do not have missing data in your dataset, because the allele frequency spectrum is sensitive to missing data.\n\n# Load the data\ngl100 &lt;- readRDS(\"./data/slim_100.rds\")\n# check the population size and number of populations\ntable(pop(gl100))\n\n\n A \n50 \n\n# number of individuals\nnInd(gl100)\n\n[1] 50\n\n# number of loci\nnLoc(gl100)\n\n[1] 10645\n\n# create\nsfscon &lt;- gl.sfs(gl100, folded = TRUE)\n\nStarting gl.sfs \n  Processing genlight object with SNP data\n\n\n\n\n\nCompleted: gl.sfs \n\nsfscon\n\n  d0   d1   d2   d3   d4   d5   d6   d7   d8   d9  d10  d11  d12  d13  d14  d15 \n  10 1924 1188  676  557  408  400  260  249  254  238  200  179  186  195  170 \n d16  d17  d18  d19  d20  d21  d22  d23  d24  d25  d26  d27  d28  d29  d30  d31 \n 180  115  170  122  138  127  142   99  105  109  110   95  106  112   88   85 \n d32  d33  d34  d35  d36  d37  d38  d39  d40  d41  d42  d43  d44  d45  d46  d47 \n  89   80  100   91   60   96   97   88  111   81   72   86   85   57   91  110 \n d48  d49  d50 \n  90  114   50 \n\n\nAs you can see the is simply a table of the number of alleles at each frequency. Be aware the the sfs is folded by default, but you can change this with the argument folded = FALSE. In most of the cases we will use the folded=TRUE option as you need phased data to use the unfolded sfs (and also have an idea which state is the ancestral one. Often the genomic of an ancestral outgroup is used for this information).\n\n\n\n\n\n\nExercise 1: Parameter in gl.sfs\n\n\n\n Try different settings for the sfs and see what happens. There are three important parameters:\n\nminbinsize (default is 1)\nfolded (default is TRUE)\nsinglepop (default is TRUE) [if you have more than one population in your genlight object]\n\n\n\n\n# unfolded sfs\nun.sfs &lt;- gl.sfs(gl100, folded = FALSE)\n\nStarting gl.sfs \n  Processing genlight object with SNP data\n\n\n\n\n\nCompleted: gl.sfs \n\nun.sfs\n\n  d0   d1   d2   d3   d4   d5   d6   d7   d8   d9  d10  d11  d12  d13  d14  d15 \n   0 1913 1144  649  540  392  368  250  231  229  216  182  163  163  149  152 \n d16  d17  d18  d19  d20  d21  d22  d23  d24  d25  d26  d27  d28  d29  d30  d31 \n 141  103  138  106  108  102  110   81   83   82   88   74   83   86   60   63 \n d32  d33  d34  d35  d36  d37  d38  d39  d40  d41  d42  d43  d44  d45  d46  d47 \n  48   59   62   61   38   58   68   55   66   51   42   54   49   26   54   49 \n d48  d49  d50  d51  d52  d53  d54  d55  d56  d57  d58  d59  d60  d61  d62  d63 \n  54   65   50   49   36   61   37   31   36   32   30   30   45   33   29   38 \n d64  d65  d66  d67  d68  d69  d70  d71  d72  d73  d74  d75  d76  d77  d78  d79 \n  22   30   38   21   41   22   28   26   23   21   22   27   22   18   32   25 \n d80  d81  d82  d83  d84  d85  d86  d87  d88  d89  d90  d91  d92  d93  d94  d95 \n  30   16   32   12   39   18   46   23   16   18   22   25   18   10   32   16 \n d96  d97  d98  d99 d100 \n  17   27   44   11   10 \n\n\nIn addition it is possible to create multidimensional sfs, which is useful for example when you have multiple populations (in case you want to have that use: singlepop=FALSE). Be aware if you want to create and multidimensional sfs from more than say 3 populations a 30 individuals you create a huge array of dimensions (61 x 61 x 61), with mainly zeros. So often multidemensional sfs are not very useful.\nSo lets have a closer look at the folder sfs from the example. The simulated population had a constant (effective) population size Ne of 100 individuals. Hence we know from theory that we have to expect a sfs that follows an exponential distribution.\nWe now load two more data sets:\n\ngldec &lt;- readRDS(\"./data/slim_100_50_50yago.rds\")\nglinc &lt;- readRDS(\"./data/slim_100_200_50yago.rds\")\nglbottle &lt;- readRDS(\"./data/slim_100_10_50_50yago_10year.rds\")\n\ngldec is a population that experienced a decline from Ne=100 to Ne=50 50 years ago, while glinc is a population that experienced an increase from Ne=100 to Ne=200 50 years ago. And glbottle is a data set that experienced a bottleneck from Ne=100 to Ne=10 50 years ago and then an increase to Ne=50 after years.\n\n\n\n\n\n\nExercise 2: Compare SFS\n\n\n\n Create a SFS for the three new datasets and compare them to the SFS of the constant population. What do you expect?\n\n\nBelow is a plot that shows all four SFS.\n\nsfsdec &lt;- gl.sfs(gldec, folded = TRUE)\n\nStarting gl.sfs \n  Processing genlight object with SNP data\n\n\n\n\n\nCompleted: gl.sfs \n\nsfsinc &lt;- gl.sfs(glinc, folded = TRUE)\n\nStarting gl.sfs \n  Processing genlight object with SNP data\n\n\n\n\n\nCompleted: gl.sfs \n\nsfsbottle &lt;- gl.sfs(glbottle, folded = TRUE)\n\nStarting gl.sfs \n  Processing genlight object with SNP data\n\n\n\n\n\nCompleted: gl.sfs \n\n\n\n\nExamples for different sfs (simulated)\n\ndf &lt;- data.frame(x = 0:50, sfscon, sfsdec, sfsinc, sfsbottle)\n\ng1 &lt;- ggplot(df, aes(x = x, y = sfscon)) + geom_bar(stat = \"identity\")\ng2 &lt;- ggplot(df, aes(x = x, y = sfsdec)) + geom_bar(stat = \"identity\")\ng3 &lt;- ggplot(df, aes(x = x, y = sfsinc)) + geom_bar(stat = \"identity\")\ng4 &lt;- ggplot(df, aes(x = x, y = sfsbottle)) + geom_bar(stat = \"identity\")\n\ng1 + g2 + g3 + g4\n\n\n\n\nAs you can see it is not really possible to see the differences between the sfs, so lets check how good our methods are to recreate the historic population sizes.\n\n\nEpos\nLets start with the simple one and lets use Epos (as this is the fastest method). A typical epos run requires the genlight/dartR object, then the path to the epos binary.\nThere are two more important parameters l and mu. l is the total lenght of the “sampled” chromosome and we will have a discussion on that. mu is the mutation rate per site per generation. The important concept to keep in mind is that:\n\\[\\LARGE x = mu \\times L \\times 2 \\times Ne \\] , where x is the number of mutations in a generation.\nSo to be able to estimate the trajectory in an absolute sense we need to know L and mu. In a simulation that is easy because we know how long the chromosome(s) were we did our simulation on. Here L=5e8 and mu was set to a value of 1e-8.\nWe could provide the sfs, but the gl.epos function does take care of that in case none is provided (it call gl.sfs). Additional parameters in EPOS are the number of bootstraps that should be run for confidence intervalas (the more the more runs and the longer it takes) and the minimum bins size. Here we use minbinsize=1 (the default), because we have simulated data and also trust our low frequency bins. In a real data set you might want to change that to higer values, though if too high you might delete too much information from your data (the first bins have the highest number of entries and therefore should be the most informative ones).\n\nL &lt;- 5e+08\nmu = 1e-08\n\n# forgive me but you need to name 'L' as little l in the function call.\n# will be corrected in the ne\nNe_epos &lt;- gl.epos(gl100, epos.path = \"./binaries/\", l = L, u = mu, boot = 10,\n    minbinsize = 1)\n\n  Processing genlight object with SNP data\n\ncolnames(Ne_epos) &lt;- c(\"generation\", \"low\", \"Ne_median\", \"high\")\nggplot(Ne_epos, aes(x = generation, y = Ne_median)) + geom_line() + geom_ribbon(aes(ymin = low,\n    ymax = high), alpha = 0.2)\n\n\n\n\nAs you might remember the population size was constant at 100 individuals. So we expect the Ne to be 100 for all generations. And indeed the median is 100 for allmost all generations. The confidence intervals are very narrow, which is expected as we have simulated this data set. There is little bit disturbing ‘dip’ at really low population sizes. This hints to the known limitation that in very recent times there had not been enough mutations to estimate the population size correctly.\nBefore we go on with the other data sets (fairly easy to run, just replace the gl100 with the other data sets) we should discuss the parameter l and mu. The l parameter is the length of the chromosome that was sampled. In a real data set you might not know that, because this depends on your methods, the amount of filters etc. Hence the question is what happens if you set l wrong. Lets test set and set L to an often used value: number of loci times 69 (because in a dart analysis we get 69 bases of sequence hence that sounds like a reasonable idea).\n\nL &lt;- 69 * nLoc(gl100)  #734505\nmu = 1e-08\n\nNe_epos &lt;- gl.epos(gl100, epos.path = \"./binaries/\", l = L, u = mu, boot = 10,\n    minbinsize = 1)\n\n  Processing genlight object with SNP data\n\ncolnames(Ne_epos) &lt;- c(\"generation\", \"low\", \"Ne_median\", \"high\")\nggplot(Ne_epos, aes(x = generation, y = Ne_median)) + geom_line() + geom_ribbon(aes(ymin = low,\n    ymax = high), alpha = 0.2)\n\n\n\n\nAs you can see this is not a good idea the axis values are completely off. The reason is that the number of mutations is calculated as L * mu * Ne. So if you set L too low, you will get a too high Ne (and also the number of generations are off). If you set L too high, you will get a too low Ne. So you need to know the length of the chromosome that you are working with. The good news is that the trajectory is still correct, so we can rely on the shape of the curve, but the absolute values are wrong if L (or mu) are set incorrectly.\n\n\n\n\n\n\nExercise 3: Run Epos for different combinations of L and mu\n\n\n\n You can now run epos for different combinations of L and mu. What do you expect if you set L and mu in such a way that L * mu compensate each other?\n\n\n\n\n\n\n\n\nExercise 4: Run Epos for all data sets\n\n\n\n And now to the next exercise which is the more intersting one: run Epos for all four data sets data sets(glcon, glinc, gldec, glbottle) and compare the results to the simulated trajectories. Once finished you can have a look at the code below.\n\n\n\nL &lt;- 5e+08\nmu = 1e-08\n\n# constant\nNe_epos &lt;- gl.epos(gl100, epos.path = \"./binaries\", l = L, u = mu, boot = 10,\n    minbinsize = 1)\n\n  Processing genlight object with SNP data\n\ncolnames(Ne_epos) &lt;- c(\"generation\", \"low\", \"Ne_median\", \"high\")\npcon &lt;- ggplot(Ne_epos, aes(x = generation, y = Ne_median)) + geom_line() +\n    geom_ribbon(aes(ymin = low, ymax = high), alpha = 0.2)\n\n# constant\nNe_epos &lt;- gl.epos(glinc, epos.path = \"./binaries\", l = L, u = mu, boot = 10,\n    minbinsize = 1)\n\n  Processing genlight object with SNP data\n\ncolnames(Ne_epos) &lt;- c(\"generation\", \"low\", \"Ne_median\", \"high\")\npinc &lt;- ggplot(Ne_epos, aes(x = generation, y = Ne_median)) + geom_line() +\n    geom_ribbon(aes(ymin = low, ymax = high), alpha = 0.2)\n\n# constant\nNe_epos &lt;- gl.epos(gldec, epos.path = \"./binaries\", l = L, u = mu, boot = 10,\n    minbinsize = 1)\n\n  Processing genlight object with SNP data\n\ncolnames(Ne_epos) &lt;- c(\"generation\", \"low\", \"Ne_median\", \"high\")\npdec &lt;- ggplot(Ne_epos, aes(x = generation, y = Ne_median)) + geom_line() +\n    geom_ribbon(aes(ymin = low, ymax = high), alpha = 0.2) + ylim(c(0, 200))\n\n# constant\nNe_epos &lt;- gl.epos(glbottle, epos.path = \"./binaries\", l = L, u = mu, boot = 10,\n    minbinsize = 1)\n\n  Processing genlight object with SNP data\n\ncolnames(Ne_epos) &lt;- c(\"generation\", \"low\", \"Ne_median\", \"high\")\npbottle &lt;- ggplot(Ne_epos, aes(x = generation, y = Ne_median)) + geom_line() +\n    geom_ribbon(aes(ymin = low, ymax = high), alpha = 0.2)\n\nAnd now we can plot them next all in one go:\n\npcon + pinc + pdec + pbottle\n\n\n\n\nPretty good, or what do you think?\n\n\nStairways2\nStairways is the actually more popular mehtod to estimate the historic population sizes from SNPs. The reason is most likely that EPOS was implemented in a way that makes it really hard to run for a not initiated person (you need to compile c++ and run some commands in GO). The upshot in Epos is that is it much much faster and the results are not too different to stairways. Nevertheless, we will have a go with stairways below.\nThe good new is that stairways uses the identical input parameters: L, mu, minbinsize. Hence nothing new here an it “suffers” therefore from the same problem if we do not know mu of L the trajectory is okay, but the absolute values on the axis are off.\nThe main difference (and here I admit I have to resort to a general explanation as it is beyond my paygrade to understand). Epos uses a simple semi-analytical optimization method to find the best fitting trajectory, whereas stairways uses a machine learning approach that takes longer (but potentially explores the parameter space better). My current approach is to use both methods and see if the results are similar.\n\n\nExample run of Stairways2\n\nL &lt;- 5e+08\nmu = 1e-08\n# takes about 5 minutes so not run here Ne_sw &lt;- gl.stairway2(gl100,\n# stairway.path='./binaries', mu = mu, gentime = 1, run=TRUE, nreps =\n# 30, parallel=10, L=L, minbinsize =1)\n\nNe_sw &lt;- readRDS(\"./data/Ne_sw_gl100.rds\")\n\nggplot(Ne_sw, aes(x = year, y = Ne_median)) + geom_line() + geom_ribbon(aes(ymin = Ne_2.5.,\n    ymax = Ne_97.5.), alpha = 0.2)\n\n\n\n\n\n\n\n\n\n\nExercise\n\n\n\n Now that you have learned to run Epos and Stairways, perhaps try to run your own data sets or use the ones provided.\nFoxes in Australia (foxes.rds) Crocodiles in Australia (crocs.rds)\nYou can also try to run the simulator to explore how good the methods are for more complicated demographic histories. [slim simulator]"
  },
  {
    "objectID": "session05.html#gone",
    "href": "session05.html#gone",
    "title": "5  Effective Population Size",
    "section": "Gone",
    "text": "Gone\n[Needs more implementation and testing, but I will give a brief overview here.] [Be aware Gone is very data hungry and seems not to work too well with the number of SNPs we have at our disposal, but in simulations with Ne~1000 and lots of individuals it seems to work well].\nGone is a very different method to estimate the population size. It was developed by Santiago et al. (2020). The authors utilize LD patterns to infer the demographic history of populations. LD can be affected by various factors including recombination, mutation, genetic drift, and population structure. The method is based on the idea that the LD decay is a function of the population size and the recombination rate. So we need next to our SNP data also a so called linkage map. This can be achieved if you have a reference genome available and you can map the SNPs to the reference genome. Gone itself has not been tested to much for recent population sizes and is still very much under research about its usefullness for recent population sizes.\nBelow is an implementation to run Gone using the dartRverse, but be aware it has not been much tested. We certainly can run Gone using our simulated data (because we simulted 5 chromosomes and we have a full map of them on those chromosomes).\nTo see that we can check how many snps we have on the chromosomes in our data sets.\n\ntable(gl100@chromosome)\n\n\n   1    2    3    4    5 \n2252 2130 2132 2229 1902 \n\n\nSo lets run Gone (be aware it is not very userfriendly implemented yet in terms of the settings. Gone currently a script file that is hidden within the script_GONE.sh file and you need to edit it there to change it from the defaults.\nExplain the settings (important MAF)\n\n# take a bit long Ne_gone &lt;- gl.gone(gl100,gone.path = './binaries')\n# #runs parallel via InputParamters load it instead\nNe_gone &lt;- readRDS(\"./data/Ne_gone_100.rds\")\n\ncolnames(Ne_gone) &lt;- c(\"generation\", \"Ne_mean\")\n\nggplot(Ne_gone, aes(x = generation, y = Ne_mean)) + geom_line()\n\n\n\n\nPretty terrible I guess. My first findings indicate the Gone is much more data hungry and works better with much more SNPs, more chromosomes and more individuals. There is a data set I available using 5 chromosomes (but twice in length) and 100 indivduals (being stable all the time)\nThe plot is below:\n\nglgone100 &lt;- readRDS(\"./data/slimgone_100.rds\")\n\n# Ne_gone &lt;- gl.gone(gl100,gone.path =\n# 'd:/bernd/r/geohippos/binaries/gone/windows/') #runs parallel via\n# InputParamters takes too long\n\nNe_gone &lt;- readRDS(\"./data/Ne_gone_100.rds\")\n\ncolnames(Ne_gone) &lt;- c(\"generation\", \"Ne_mean\")\n\nggplot(Ne_gone, aes(x = generation, y = Ne_mean)) + geom_line()\n\n\n\n\nIt is certainly possible that gone is “saveable” but it is obvious that Gone is not very “good” in recent years. There seems to be a sweet spot where Gone works well &gt;100 Generations and &lt;300 generations, but that needs more testing.\n\n\n\n\n\n\nExercise\n\n\n\n Now that you have learned to run Gone perhaps try to run your own data sets or use the ones provided.\nYou can also try to run the simulator to explore how good the methods are for more complicated demographic histories. [slim simulator]\n\n\nWe hope you have fun runnig the code and please do not hesitate to ask questions or provide feedback.\nCheers, Carlo & Bernd\n\n\n\n\nLiu, Xiaoming, and Yun-Xin Fu. 2020. “Stairway Plot 2: Demographic History Inference with Folded SNP Frequency Spectra.” Genome Biology 21 (November). https://doi.org/10.1186/s13059-020-02196-9.\n\n\nLynch, Michael, Bernhard Haubold, Peter Pfaffelhuber, and Takahiro Maruki. 2019. “Inference of Historical Population-Size Changes with Allele-Frequency Data.” G3: GenesGenomesGenetics 10 (1): 211–23. https://doi.org/10.1534/g3.119.400854.\n\n\nSantiago, E., I. Novo, A. F. Pardiñas, M. Saura, J. Wang, and A. Caballero. 2020. “Recent Demographic History Inferred by High-Resolution Analysis of Linkage Disequilibrium.” Molecular Biology and Evolution 37 (12): 3642–53. https://doi.org/10.1093/molbev/msaa174."
  },
  {
    "objectID": "session06.html#required-packages",
    "href": "session06.html#required-packages",
    "title": "6  Management of Small Populations",
    "section": "Required packages",
    "text": "Required packages\n\nlibrary(dartRverse)\nlibrary(hierfstat)\n\nmake sure you have the packages installed, see Install dartRverse"
  },
  {
    "objectID": "session06.html#session-content",
    "href": "session06.html#session-content",
    "title": "6  Management of Small Populations",
    "section": "Session Content",
    "text": "Session Content\nStill to come…"
  },
  {
    "objectID": "session06.html#exercise",
    "href": "session06.html#exercise",
    "title": "6  Management of Small Populations",
    "section": "EXERCISE",
    "text": "EXERCISE\n\n\n\n\n\n\nExercise\n\n\n\n Still to come…"
  },
  {
    "objectID": "session06.html#further-study",
    "href": "session06.html#further-study",
    "title": "6  Management of Small Populations",
    "section": "Further Study",
    "text": "Further Study\nstill to come…"
  },
  {
    "objectID": "session07.html#required-packages",
    "href": "session07.html#required-packages",
    "title": "7  Natural Selection",
    "section": "Required packages",
    "text": "Required packages\n\nlibrary(dartR.base)\n\nmake sure you have the packages installed, see Install dartRverse"
  },
  {
    "objectID": "session07.html#session-content",
    "href": "session07.html#session-content",
    "title": "7  Natural Selection",
    "section": "Session Content",
    "text": "Session Content\nStill to come…"
  },
  {
    "objectID": "session07.html#exercise",
    "href": "session07.html#exercise",
    "title": "7  Natural Selection",
    "section": "EXERCISE",
    "text": "EXERCISE\n\n\n\n\n\n\nExercise\n\n\n\n Still to come…"
  },
  {
    "objectID": "session07.html#further-study",
    "href": "session07.html#further-study",
    "title": "7  Natural Selection",
    "section": "Further Study",
    "text": "Further Study\nstill to come…"
  },
  {
    "objectID": "session08.html#introduction",
    "href": "session08.html#introduction",
    "title": "8  Landscape Genetics",
    "section": "Introduction",
    "text": "Introduction\nLandscape genetics combines landscape ecology with population genetics to understand how the structure, composition and configuration of the landscape affects gene flow, genetic drift, and selection.\nIn this tutorial, we will dive into the first question - how does the landscape influence gene flow? There are many ways to tackle this question, for example, we can explore gene flow at the individual or population level, over different spatial scales, and/or across a meta-population.\nHere we’ll start with the basics, by looking at the spatial distribution of individuals, and build on this until we incorporate landscape features, to understand:\n\nDifferent dispersal strategies; and\nLimitations to gene flow, including:\na) Geographic distance (isolation-by-distance);\nb) Geographic barriers (isolation-by-barrier);\nc) Landscape attributes (isolation-by-resistance)."
  },
  {
    "objectID": "session08.html#dispersal-strategies",
    "href": "session08.html#dispersal-strategies",
    "title": "8  Landscape Genetics",
    "section": "1. Dispersal strategies",
    "text": "1. Dispersal strategies\nMany biological and demographic processes can shape patterns of genetic structure, for example, dispersal strategies, mating systems, and social behaviours. These processes often occur over a fine scale. As such, exploring patterns within populations over 10s-100s of metres can be very informative, especially in small and inconspicuous species.\nBefore diving into more complex and correlative analyses, it is useful to understand some of the baseline life-history and demographic traits in your species. One common question is: how far do individuals disperse and is this the same or different for males and females?\nWhen one sex disperses further than the other, this is known as sex-biased dispersal. This can be detected via genetic spatial autocorrelation analysis. We’ll describe this in more detail later on, but in short, increased philopatry by one sex results in greater genetic similarity among neighbouring individuals, while genetic similarity is reduced in the dispersing sex. You can also learn more about it in Banks & Peakall 2012 (and references therein).\n\n\n\n\n\n\nWhat is philopatry?\n\n\n\nNatal philopatry describes when an animal remains close or returns to the area where they were born.\n\n\nTo explore the genetic patterns that result from sex-biased dispersal, we’re going to simulate this process in a hypothetical animal population. First, we need to set up the dispersal kernels, using the custom function below.\n\n# Create a function, where: \n# x = minimum to maximum distance, \n# d0 = mean distance, \n# p= proportion  that go to mean\np2p &lt;- function(x, d0, p)\n{\n  return (exp(((x/d0)*log(p))))\n}\n\n# Dispersal kernels:\n# Females\ndispfemale &lt;- (p2p(x = 1:50, # range of distances\n                   d0 = 1, # mean dispersal distance\n                   p = 0.5)) # proportion that go to mean\npdispfemale &lt;- c(0, cumsum(dispfemale)/sum(dispfemale))\n\n# Males\ndispmale &lt;- (p2p(x = 1:50, # range of distances\n                 d0 = 20, # mean dispersal distance\n                 p = 0.5)) # proportion that go to mean\npdispmale &lt;- c(0, cumsum(dispmale)/sum(dispmale))\n\nLet’s look at the dispersal curves. In this case, males disperse further than females (i.e., there is male-biased dispersal):\n\n# Plot\nplot(dispfemale, type = \"l\", col = \"#E69F00\", lwd = 2, main = \"Female dispersal curve\",\n    xlab = \"Distance (m)\", ylab = \"\")\n\n\n\nplot(dispmale, type = \"l\", col = \"#5D3FD3\", lwd = 2, main = \"Male dispersal curve\",\n    xlab = \"Distance (m)\", ylab = \"\")\n\n\n\n\nNext we’ll create a function that generates a population using glSim, which simulates simple SNP data and returns a genlight object. In our hypothetical population, females randomly mate with the nearest male, produce two offspring at a 50:50 sex-ratio, and the offspring then disperse following the dispersal probabilities created above.\n\n# Create a function, where: Nind = number of individuals, Nsnp = number\n# of SNPs, pdispF = female dispersal probability (generated above)\n# pdispM = male dispersal probability (generated above) seed = set the\n# seed so simulation is repeatable\nSimDisp &lt;- function(Nind, Nsnp, pdispF, pdispM, seed) {\n\n    set.seed(seed)\n\n    # Simulate a genlight object\n    gg &lt;- glSim(n.ind = Nind, n.snp.nonstruc = Nsnp, grp.size = c(0.999,\n        0.001), ploidy = 2, k = 1, LD = FALSE, ind.names = paste(sprintf(\"ind%03d\",\n        1:Nind), sep = \"\"), snp.names = paste(sprintf(\"snp%03d\", 1:Nsnp),\n        sep = \"\"))\n\n    # Define pop\n    pop(gg) &lt;- rep(\"A\", Nind)\n\n    # Create all the other parameters\n    gg &lt;- gl.compliance.check(gg)\n\n    # Define sex using a sex ratio of 0.5\n    ds &lt;- c(rep(\"F\", 0.5 * Nind), rep(\"M\", (1 - 0.5) * Nind))\n    ds &lt;- ds[order(runif(length(ds)))]\n    gg@other$ind.metrics$sex &lt;- factor(ds)\n\n    # Set coordinates\n    xy &lt;- expand.grid(x = 1:100, y = 1:100)\n    # sample from the grid\n    xys &lt;- xy[sample(1:nrow(xy), Nind, replace = FALSE), ]\n    gg@other$ind.metrics$x &lt;- xys$x\n    gg@other$ind.metrics$y &lt;- xys$y\n\n    for (ii in 1:20) {\n        # Run for 20 generations\n\n        # Find mating pairs & reproduce\n        females &lt;- which(gg@other$ind.metrics$sex == \"F\")\n        males &lt;- which(gg@other$ind.metrics$sex == \"M\")\n\n        off &lt;- list()\n\n        for (i in 1:length(females)) {\n            mfemale &lt;- gg[females[i], ]\n            fxy &lt;- c(gg@other$ind.metrics$x[females[i]], gg@other$ind.metrics$y[females[i]])\n            mxy &lt;- cbind(gg@other$ind.metrics$x[males], gg@other$ind.metrics$y[males])\n            xxyy &lt;- rbind(fxy, mxy)\n\n            # Find closest mating male\n            chosenm &lt;- which.min(as.matrix(dist(xxyy))[1, -1])\n            mmale &lt;- gg[males[chosenm], ]\n\n            doff &lt;- gl.sim.offspring(mmale, mfemale, sexratio = 0.5, noffpermother = 2)  # 2 offspring\n            doff@other$ind.metrics &lt;- data.frame(sex = factor(c(\"F\", \"M\")),\n                x = mfemale@other$ind.metrics$x, y = mfemale@other$ind.metrics$y)\n\n            off[[i]] &lt;- doff\n\n        }\n\n        gg &lt;- do.call(rbind, off)\n\n        # Make all offspring adults\n        xx &lt;- (lapply(off, function(x) x@other$ind.metrics))\n        xx &lt;- do.call(rbind, xx)\n        gg@other$ind.metrics &lt;- xx\n\n        # Emigrate depending on dispersial distance\n\n        for (i in 1:nInd(gg)) {\n\n            # Use dispersal curves generated above to determine\n            # distance\n            if (gg@other$ind.metrics$sex[i] == \"M\")\n                dis &lt;- max(which(runif(1) &gt; pdispM)) else dis = max(which(runif(1) &gt; pdispF))\n\n            # Dispersal direction\n            dir &lt;- runif(1, 0, 2 * pi)\n\n            # Assign new coordinates\n            gg@other$ind.metrics$x[i] &lt;- gg@other$ind.metrics$x[i] + dis *\n                cos(dir)\n            gg@other$ind.metrics$y[i] &lt;- gg@other$ind.metrics$y[i] + dis *\n                sin(dir)\n        }\n\n        # Use torus to determine what to do with individuals that\n        # disperse outside of extent\n        gg@other$ind.metrics$x &lt;- gg@other$ind.metrics$x%%100\n        gg@other$ind.metrics$y &lt;- gg@other$ind.metrics$y%%100\n\n        # Plot\n        plot(gg@other$ind.metrics$x, gg@other$ind.metrics$y, pch = 16, cex = 1,\n            col = c(\"#E69F00\", \"#5D3FD3\")[as.numeric(gg@other$ind.metrics$sex)],\n            asp = 1, main = paste(\"Generation\", ii), xlab = \"x\", ylab = \"y\")\n        legend(\"bottomleft\", legend = c(\"Female\", \"Male\"), col = c(\"#E69F00\",\n            \"#5D3FD3\"), pch = 16, cex = 1)\n\n    }\n\n    # Output genlight object containing simulated data\n    return(gg)\n}\n\nNow run the function to simulate a population with 100 individuals, 1000 SNPs, and male-biased dispersal.\n\n\n\n\n\n\nNote\n\n\n\nThe simulation goes for 20 generations - you can see an animation below\n\n\n\nsimdat &lt;- SimDisp(Nind = 100, Nsnp = 1000, pdispF = pdispfemale, pdispM = pdispmale,\n    seed = 123)\n\n\n\n\nWhat does this mean for fine-scale genetic structure? Can we identify different dispersal patterns for males and females? Let’s run genetic spatial autocorrelation to find out. We’ll use the function gl.spatial.autoCorr. This is a multivariate approach that combines all loci into a single analysis (Smouse & Peakall 1999; Peakall et al. 2003; Banks & Peakall 2012). The autocorrelation coefficient “r” is calculated for each pair of individuals in each specified distance class (called “bins” in this function).\nWe’ll use evenly distributed bins and compare individuals at 10 m intervals up to 50 m.\n\n\n\n\n\n\nSignificance testing\n\n\n\nThere are two ways to test whether fine-scale genetic structure is significantly positive (i.e., individuals are genetically similar) or negative (i.e., individuals are genetically dissimilar).\nThe first approach is a one-tail permutation test, which provides 95% null hypothesis confidence regions. If the autocorrelation coefficient “r” falls outsdide of this range, significant fine-scale spatial genetic structure is present.\nThe second approach is to estimate 95% bootstrap confidence intervals (CIs) around the value for r. These are obtained by drawing (with replacement) from within the set of relevant pairwise comparisons for a given distance class. If bootstrap CIs do not overlap zero, fine-scale spatial genetic structure is present. Bootstrap CIs also allow you to test for significant differences between groups (e.g., between females and males). When CIs are non-overlapping, there is a significant difference.\nI tend to use 95% bootstrap CIs, since they are more conservative than permutational tests and allow for comparisons. The gl.spatial.autoCorr function below will output 95% bootstrap CIs. You can try a permutation test by adding permutation = TRUE (note that for this option to work, you will need to create separate plots for each sex by choosing plot.pops.together = FALSE).\n\n\n\n# Make 'sex' the population name\npop(simdat) &lt;- simdat@other$ind.metrics$sex\n\n# Add xy coordinates to the 'other' slot in genlight\nsimdat@other$latlon &lt;- data.frame(lon = simdat@other$ind.metrics$x, lat = simdat@other$ind.metrics$y)\nsimdat@other$latlon &lt;- Mercator(simdat@other$latlon, inverse = T)\n\n# Run genetic spatial autocorrelation\ngl.spatial.autoCorr(simdat, bins = seq(0, 50, 10), plot.pops.together = TRUE,\n    plot.colors.pop = c(\"#E69F00\", \"#5D3FD3\"))\n\n\n\n\nWe can see that:\n\nBoth females and males show significant positive spatial autocorrelation up to 30 m (where confidence intervals overlap zero). In other words, once you start comparing individuals that are 30 m apart, they are unlikely to be related/genetically similar (regardless of sex).\nFemales have significantly stronger fine-scale genetic structure than males up to 10 m (i.e., a greater “r” value and female and male bootstrap CIs are non-overlapping).\n\nThese results are not surprising, since we set our distance classes based on the known (simulated) dispersal capacity of males and females, and we had large sample sizes (both individuals and loci). In reality, this analysis is a careful balance between power (maximising the sample size in each bin), and ensuring you are looking at the right scale (i.e., the size of the distance class matches the extent of spatial-genetic structure).\n\nExercise\n\nWhat happens when you vary the dispersal distances? Can you pick up small differences between the sexes?\nWhat happens if you change the number of individuals or SNPs? Does this influence the sensitivity of the analysis? Which is more important - more individuals or more loci?\nWhat happens when you vary the size and number of distance classes? How does this interact with sample size? What do you think would happen if you used a single 50 m distance class - do we still see the signal of male-biased dispersal?\n\n\n\n\n\n\n\n\nRe-run the code from the beginning\n\n\n\nTry varying the following parameters:\n\nDispersal curves: “d0” and “p” when running the p2p function\nSample sizes: “Nind” (number of individuals) and “Nsnp” (number of loci) when running the SimDisp function\nDistance classes: “bins” when running the gl.spatial.autoCorr function"
  },
  {
    "objectID": "session08.html#a.-isolation-by-distance",
    "href": "session08.html#a.-isolation-by-distance",
    "title": "8  Landscape Genetics",
    "section": "2a. Isolation-by-distance",
    "text": "2a. Isolation-by-distance\nIsolation-by-distance (IBD) is a key concept in population genetics. It describes a simple idea: that geographic distance can influence gene flow because individuals or populations that are geographically distant from each other are less likely to share genetic material than those that are close (based on the “stepping-stone” model; Kimura & Weiss 1964).\nWe can test for IBD with Mantel tests of matrix correspondence (Mantel 1967), implemented using the function gl.ibd. This test compares pairwise geographic and genetic distance matrices, using permutations to test for significance. For the latter, you can use pairwise estimates of population differentiation or individual-by-individual genetic distances.\nIt’s easy enough to plot the relationship between geographic and genetic distance. However, we can’t use a standard regression to test this relationship because pairwise data are not independent. Mantel tests solve this problem by using permutation to test for significance (e.g., the data are randomly shuffled. The result will be similar to the shuffled outcome if there is no relationship present).\n\n\n\n\n\n\nPopulations vs. individuals\n\n\n\nIBD tests often use pairwise population metrics like FST. This is useful when there are lots of samples and populations are well defined. However, there are often situations where we don’t have multiple samples per location, populations are difficult to define and/or individuals are more continuously distributed. In this case, we can use the individual as the unit of analysis.\nWhere FST estimates represent evolutionary averages, pairwise individual genetic distances may represent more contemporary patterns of dispersal. Therefore, the approach you take depends on the species, your sampling, and the question you want to ask.\n\n\nLet’s test for IBD in our simulated data set:\n\ntotal.ibd &lt;- gl.ibd(simdat, distance = \"euclidean\", coordinates = \"latlon\")\n\n\n\n\n\n# Show Mantel statistics\ntotal.ibd$mantel\n\n\nMantel statistic based on Pearson's product-moment correlation \n\nCall:\nvegan::mantel(xdis = Dgen, ydis = Dgeo, permutations = permutations,      na.rm = TRUE) \n\nMantel statistic r: 0.08552 \n      Significance: 0.013 \n\nUpper quantiles of permutations (null model):\n   90%    95%  97.5%    99% \n0.0512 0.0634 0.0767 0.0866 \nPermutation: free\nNumber of permutations: 999\n\n\nThere is significant IBD across all individuals, but it’s not very pronounced. Can we still see the signal of male-biased dispersal? Let’s create separate IBD plots for females and males:\n\nf.ibd &lt;- gl.ibd(simdat[simdat@pop == \"F\"], distance = \"euclidean\", coordinates = \"latlon\")\n\n\n\nm.ibd &lt;- gl.ibd(simdat[simdat@pop == \"M\"], distance = \"euclidean\", coordinates = \"latlon\")\n\n\n\n\n\n# Show Mantel statistics for females\nf.ibd$mantel\n\n\nMantel statistic based on Pearson's product-moment correlation \n\nCall:\nvegan::mantel(xdis = Dgen, ydis = Dgeo, permutations = permutations,      na.rm = TRUE) \n\nMantel statistic r: 0.1438 \n      Significance: 0.014 \n\nUpper quantiles of permutations (null model):\n   90%    95%  97.5%    99% \n0.0828 0.1053 0.1302 0.1476 \nPermutation: free\nNumber of permutations: 999\n\n# Show Mantel statistics for males\nm.ibd$mantel\n\n\nMantel statistic based on Pearson's product-moment correlation \n\nCall:\nvegan::mantel(xdis = Dgen, ydis = Dgeo, permutations = permutations,      na.rm = TRUE) \n\nMantel statistic r: 0.02018 \n      Significance: 0.375 \n\nUpper quantiles of permutations (null model):\n   90%    95%  97.5%    99% \n0.0825 0.1027 0.1199 0.1514 \nPermutation: free\nNumber of permutations: 999\n\n\n\n\n\n\n\n\nMantel test statistics\n\n\n\nAlthough a regression line is useful for visualising the relationship between geographic and genetic distance, we don’t report the results of the regression (for reasons outlined above). Instead, we report the Mantel test statistic (and the p-value), which is the correlation between the two distance matrices. Values that approach -1 indicate a strong negative relationship, values close to 0 suggest there is no relationship, and values approaching +1 indicate a strong positive relationship (i.e., IBD).\n\n\nAbove we can see that there is significant IBD in females, since dispersal is more restricted. Males show no pattern of IBD, since many individuals can disperse right up to the spatial extent of our sampling. However, we lose some of the nuance from the previous analysis.\n\n\n\n\n\n\nWhat can we learn from each analysis?\n\n\n\nMantel tests show us the broad trend across our study. IBD often acts as our null hypothesis (along with panmixia - i.e., random mating and dispersal) against which to test further landscape genetic analyses. However, unless the signal of sex-biased dispersal is very strong across the whole dataset, a Mantel test is unlikely to detect it. Spatial autocorrelation analysis is usually more powerful in detecting fine-scale genetic patterns than Mantel tests, because samples are “binned” and genetic structure is explored across multiple distance classes.\n\n\n\n\n\n\n\n\nExercise\n\n\n\n\nWhat happens if you use the proportion of shared alleles instead of euclidean distance?\n\n\n\n\nWe expect a linear relationship between geographic distance (sometimes log-transformed) and genetic distance. A discontinuous relationship can be an indication that something else is going on. We will explore this idea below using a real example.\n\nLesser hairy-footed dunnarts in the Pilbara\n\n\n\nSminthopsis youngsonii\n\n\n\n\nLoad the data\n\nload(\"Data/Sy.gl.RData\")  # genetic data\n\nSminthopsis youngsonii (or the lesser hairy footed dunnart), is a small carnivorous dasyurid found across the Australian arid region. As the name suggests, their hind foot is covered in short, bristly hairs, which are thought to help them move on sandy soils. They are usually found on sand dunes, inter dune swale and red sand plains.\nThese samples were taken in the Pilbara region at the very western edge of their range. Let’s take a look at a map:\n\nleaflet(Sy.gl@other$latlong) %&gt;%\n    addTiles() %&gt;%\n    addCircleMarkers(lng = ~lon, lat = ~lat, popup = ~htmlEscape(lon))\n\n\n\n\n\nGiven this is the edge of their range, and the Pilbara is quite rocky and doesn’t harbour much of the ideal habitat for this species, we want to know a little more about dispersal and connectivity in this area. A good first step is to test for isolation by distance.\n\nSy.ibd &lt;- gl.ibd(Sy.gl, distance = \"euclidean\")\n\n\n\n\n\n# Show Mantel statistics\nSy.ibd$mantel\n\n\nMantel statistic based on Pearson's product-moment correlation \n\nCall:\nvegan::mantel(xdis = Dgen, ydis = Dgeo, permutations = permutations,      na.rm = TRUE) \n\nMantel statistic r: 0.6513 \n      Significance: 0.001 \n\nUpper quantiles of permutations (null model):\n   90%    95%  97.5%    99% \n0.0613 0.0897 0.1204 0.1594 \nPermutation: free\nNumber of permutations: 999\n\n\nYes - there is significant IBD! The pattern is very strong. But… some of the points don’t seem to follow the same slope? Why might this be?\nThere seems to be a big gap in sampling. This could be due to a sampling bias (e.g., the missing area is difficult to get to). Alternatively, the species may not occur here, suggesting there might be something going on with the habitat.\n\n\n\n\n\n\nGiven what we know about the species, what would be a reasonable hypothesis?\n\n\n\nCould substrate be driving this sampling gap and the strange IBD pattern?\n\n\nLet’s separate the individuals into two populations using longitude. You can click on the points in the map above to choose a location.\n\n# Choose a point that separates the samples into two populations\nlon.break &lt;- 114.87\n# Assign eastern and western populations based on this point\nSy.gl@pop &lt;- as.factor(ifelse(Sy.gl@other$latlong$lon &lt; lon.break, \"1.West\",\n    \"2.East\"))\n\nNow let’s take another look at IBD, but this time we’ll include the population information.\n\ngl.ibd(Sy.gl, distance = \"euclidean\", paircols = \"pop\")\n\n\n\n\nIt looks like the magnitude of genetic distance is different and there are two different slopes describing IBD within each ‘population’. The points with large geographic and genetic distances represent among population comparisons. Discontinuities like this can sometimes suggest a barrier to gene flow. Let’s take a look at the substrate.\n\n# Load a soil shapefile\nsoil &lt;- st_read(\"Data/Soil.shp\")  # spatial data\n\n# Create a colour palette for the two populations\npop.pal &lt;- colorFactor(palette = c(\"#F8766D\", \"#00BFC4\"), domain = Sy.gl@pop)\n\n# Create a palette\nsoil.pal &lt;- colorFactor(palette = c(\"#9C640C\", \"#5c3001\", \"#C0392B\", \"#EDC001\",\n    \"#FDEFB2\"), domain = soil$Type)\n\n\n# Generate another map\nleaflet(cbind(pop = Sy.gl@pop, Sy.gl@other$latlong)) %&gt;%\n    addTiles() %&gt;%\n    addPolygons(data = soil, weight = 0, fillOpacity = 0.7, color = ~soil.pal(Type)) %&gt;%\n    addCircleMarkers(lng = ~lon, lat = ~lat, color = ~pop.pal(pop)) %&gt;%\n    addLegendFactor(pal = soil.pal, shape = \"rect\", fillOpacity = 0.7, opacity = 0,\n        values = ~soil$Type, title = \"Soil type\", position = \"topright\",\n        data = gadmCHE, group = \"Polygons\")\n\n\n\n\n\nIt looks like clay could be acting as a barrier. This is a good theory, but it would be useful to be able to visualise these patterns of isolation by distance spatially to get an indication of where gene flow is being restricted. We’ll explore this idea in the next section."
  },
  {
    "objectID": "session08.html#b.-isolation-by-barrier",
    "href": "session08.html#b.-isolation-by-barrier",
    "title": "8  Landscape Genetics",
    "section": "2b. Isolation-by-barrier",
    "text": "2b. Isolation-by-barrier\nUp to this point, we’ve tested for IBD - but could be helpful to visually inspect patterns of IBD across the landscape. We can do this with EEMS…"
  },
  {
    "objectID": "session08.html#c.-isolation-by-resistance",
    "href": "session08.html#c.-isolation-by-resistance",
    "title": "8  Landscape Genetics",
    "section": "2c. Isolation-by-resistance",
    "text": "2c. Isolation-by-resistance\nUp to this point, we’ve only visually inspected the landscape, could be useful to explicitly test the correlation between gene flow and landscape features."
  },
  {
    "objectID": "session09.html#required-packages",
    "href": "session09.html#required-packages",
    "title": "9  Lineage Divergence",
    "section": "Required packages",
    "text": "Required packages\n\nlibrary(dartR.base)\n\nmake sure you have the packages installed, see Install dartRverse"
  },
  {
    "objectID": "session09.html#session-content",
    "href": "session09.html#session-content",
    "title": "9  Lineage Divergence",
    "section": "Session Content",
    "text": "Session Content\nStill to come…"
  },
  {
    "objectID": "session09.html#exercise",
    "href": "session09.html#exercise",
    "title": "9  Lineage Divergence",
    "section": "EXERCISE",
    "text": "EXERCISE\n\n\n\n\n\n\nExercise\n\n\n\n Still to come…"
  },
  {
    "objectID": "session09.html#further-study",
    "href": "session09.html#further-study",
    "title": "9  Lineage Divergence",
    "section": "Further Study",
    "text": "Further Study\nstill to come…"
  },
  {
    "objectID": "session10.html",
    "href": "session10.html",
    "title": "10  Sex Linked Markers",
    "section": "",
    "text": "11 Further study\nDevloo-Delva, F., Burridge, C. P., Kyne, P. M., Brunnschweiler, J. M., Chapman, D. D., Charvet, P., … & Feutry, P. (2023). From rivers to ocean basins: The role of ocean barriers and philopatry in the genetic structuring of a cosmopolitan coastal predator. Ecology and Evolution, 13(2), e9837. https://doi.org/10.1002/ece3.9837\nNikolic, N., Devloo-Delva, F., Bailleul, D., Noskova, E., Rougeux, C., Delord, C., … & Arnaud‐Haond, S. (2023). Stepping up to genome scan allows stock differentiation in the worldwide distributed blue shark Prionace glauca. Molecular Ecology, 32(5), 1000-1019. https://doi.org/10.1111/mec.16822\nRobledo-Ruiz, D. A., Austin, L., Amos, J. N., Castrejón-Figueroa, J., Harley, D. K. P., Magrath, M. J. L., Sunnucks, P., & Pavlova, A. (2023). Easy-to-use R functions to separate reduced-representation genomic datasets into sex-linked and autosomal loci, and conduct sex assignment. Molecular Ecology Resources, 00, 1–21. https://doi.org/10.1111/1755-0998.13844"
  },
  {
    "objectID": "session10.html#required-packages",
    "href": "session10.html#required-packages",
    "title": "10  Sex Linked Markers",
    "section": "Required packages",
    "text": "Required packages\n\nlibrary(dartR.base)\nlibrary(dartR.sexlinked)"
  },
  {
    "objectID": "session10.html#dataset-1---zwzz---the-yellow-tufted-honeyeater",
    "href": "session10.html#dataset-1---zwzz---the-yellow-tufted-honeyeater",
    "title": "10  Sex Linked Markers",
    "section": "Dataset 1 - ZW//ZZ - The Yellow Tufted Honeyeater",
    "text": "Dataset 1 - ZW//ZZ - The Yellow Tufted Honeyeater\n\n\n\nThe Yellow Tufted Honeyeater\n\n\n\nLoad data\n\ndata(\"YTH\")\nYTH  # Explore the dataset\n\n ********************\n *** DARTR OBJECT ***\n ********************\n\n ** 609 genotypes,  994 SNPs , size: 49.9 Mb\n\n    missing data: 139174 (=22.99 %) scored as NA\n\n ** Genetic data\n   @gen: list of 609 SNPbin\n   @ploidy: ploidy of each individual  (range: 2-2)\n\n ** Additional data\n   @ind.names:  609 individual labels\n   @loc.names:  994 locus labels\n   @loc.all:  994 allele labels\n   @position: integer storing positions of the SNPs [within 69 base sequence]\n   @pop: population of each individual (group size range: 12-516)\n   @other: a list containing: loc.metrics, ind.metrics, loc.metrics.flags, verbose, history \n    @other$ind.metrics: id, pop, sex, sex_original, service, plate_location \n    @other$loc.metrics: AlleleID, CloneID, AlleleSequence, TrimmedSequence, Chrom_Lichenostomus_HeHo_v1, ChromPos_Lichenostomus_HeHo_v1, AlnCnt_Lichenostomus_HeHo_v1, AlnEvalue_Lichenostomus_HeHo_v1, SNP, SnpPosition, CallRate, OneRatioRef, OneRatioSnp, FreqHomRef, FreqHomSnp, FreqHets, PICRef, PICSnp, AvgPIC, AvgCountRef, AvgCountSnp, RepAvg, clone, uid, rdepth, maf \n   @other$latlon[g]: no coordinates attached\n\nYTH@n.loc  # Number of SNPs\n\n[1] 994\n\nlength(YTH@ind.names)  # Number of individuals\n\n[1] 609\n\n\n\n\nRun filter.sex.linked\nThis function identifies sex-linked and autosomal loci present in a SNP dataset (i.e., genlight object) using individuals with known sex. It identifies five types of loci: w-linked or y-linked, sex-biased, z-linked or x-linked, gametologous and autosomal.\nThe genlight object must contain in gl@other$ind.metrics a column named “id”, and a column named “sex” in which individuals with known-sex are assigned ‘M’ for male, or ‘F’ for female. The function ignores individuals that are assigned anything else or nothing at all (unknown-sex).\n\n\n\nZW/ZZ sex chromosomes\n\n\n\n\n\n\n\n\nCaution\n\n\n\nNOTE\nSet ncores to more than 1 (default) if you have more than 50,000 SNPs, since it could actually slow down the analysis with smaller datasets.\n\n\n\nknitr::kable(head(YTH@other$ind.metrics))  # Check that ind.metrics has the necessary columns\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nid\npop\nsex\nsex_original\nservice\nplate_location\n\n\n\n\nANWC46839\nANWC46839\nMelanops\nF\nF\nDLich17-2918\n1-A1\n\n\nW49\nW49\nCassidix\nF\nF\nDLich17-2918\n1-A10\n\n\nW90\nW90\nCassidix\nF\nF\nDLich17-2918\n1-A12\n\n\nC25\nC25\nCassidix\nM\nM\nDLich17-2918\n1-A2\n\n\nC8\nC8\nCassidix\nM\nM\nDLich17-2918\n1-A3\n\n\nW70\nW70\nCassidix\nF\nF\nDLich17-2918\n1-A4\n\n\n\n\nres &lt;- dartR.sexlinked::filter.sex.linked(gl = YTH, system = \"zw\")\n\nDetected 276 females and 333 males.\n\n\nStarting phase 1. May take a while...\n\n\nBuilding call rate plots.\n\n\n\n\n\nDone. Starting phase 2.\n\n\nBuilding heterozygosity plots.\n\n\n\n\n\n\n\n\nDone building heterozygosity plots.\n\n\n**FINISHED** Total of analyzed loci: 994.\nFound 506 sex-linked loci:\n   52 W-linked loci\n   273 sex-biased loci\n   165 Z-linked loci\n   16 ZW gametologs.\nAnd 488 autosomal loci.\n\n\n\n\n\n\n\n\n\n\n\nExercise\n\n\n\n\nHow many males and females does the dataset contain?\nHow many sex-linked loci were found?\n\n\nNow check the output:\n\nres$w.linked  # Notice that it says 'w-linked'\n\n ********************\n *** DARTR OBJECT ***\n ********************\n\n ** 609 genotypes,  52 SNPs , size: 48.9 Mb\n\n    missing data: 17304 (=54.64 %) scored as NA\n\n ** Genetic data\n   @gen: list of 609 SNPbin\n   @ploidy: ploidy of each individual  (range: 2-2)\n\n ** Additional data\n   @ind.names:  609 individual labels\n   @loc.names:  52 locus labels\n   @loc.all:  52 allele labels\n   @position: integer storing positions of the SNPs [within 69 base sequence]\n   @pop: population of each individual (group size range: 12-516)\n   @other: a list containing: loc.metrics, ind.metrics, loc.metrics.flags, verbose, history \n    @other$ind.metrics: id, pop, sex, sex_original, service, plate_location \n    @other$loc.metrics: AlleleID, CloneID, AlleleSequence, TrimmedSequence, Chrom_Lichenostomus_HeHo_v1, ChromPos_Lichenostomus_HeHo_v1, AlnCnt_Lichenostomus_HeHo_v1, AlnEvalue_Lichenostomus_HeHo_v1, SNP, SnpPosition, CallRate, OneRatioRef, OneRatioSnp, FreqHomRef, FreqHomSnp, FreqHets, PICRef, PICSnp, AvgPIC, AvgCountRef, AvgCountSnp, RepAvg, clone, uid, rdepth, maf \n   @other$latlon[g]: no coordinates attached\n\nres$z.linked  # Notice that it says 'z-linked'\n\n ********************\n *** DARTR OBJECT ***\n ********************\n\n ** 609 genotypes,  165 SNPs , size: 48.9 Mb\n\n    missing data: 2990 (=2.98 %) scored as NA\n\n ** Genetic data\n   @gen: list of 609 SNPbin\n   @ploidy: ploidy of each individual  (range: 2-2)\n\n ** Additional data\n   @ind.names:  609 individual labels\n   @loc.names:  165 locus labels\n   @loc.all:  165 allele labels\n   @position: integer storing positions of the SNPs [within 69 base sequence]\n   @pop: population of each individual (group size range: 12-516)\n   @other: a list containing: loc.metrics, ind.metrics, loc.metrics.flags, verbose, history \n    @other$ind.metrics: id, pop, sex, sex_original, service, plate_location \n    @other$loc.metrics: AlleleID, CloneID, AlleleSequence, TrimmedSequence, Chrom_Lichenostomus_HeHo_v1, ChromPos_Lichenostomus_HeHo_v1, AlnCnt_Lichenostomus_HeHo_v1, AlnEvalue_Lichenostomus_HeHo_v1, SNP, SnpPosition, CallRate, OneRatioRef, OneRatioSnp, FreqHomRef, FreqHomSnp, FreqHets, PICRef, PICSnp, AvgPIC, AvgCountRef, AvgCountSnp, RepAvg, clone, uid, rdepth, maf \n   @other$latlon[g]: no coordinates attached\n\nres$gametolog\n\n ********************\n *** DARTR OBJECT ***\n ********************\n\n ** 609 genotypes,  16 SNPs , size: 48.8 Mb\n\n    missing data: 580 (=5.95 %) scored as NA\n\n ** Genetic data\n   @gen: list of 609 SNPbin\n   @ploidy: ploidy of each individual  (range: 2-2)\n\n ** Additional data\n   @ind.names:  609 individual labels\n   @loc.names:  16 locus labels\n   @loc.all:  16 allele labels\n   @position: integer storing positions of the SNPs [within 69 base sequence]\n   @pop: population of each individual (group size range: 12-516)\n   @other: a list containing: loc.metrics, ind.metrics, loc.metrics.flags, verbose, history \n    @other$ind.metrics: id, pop, sex, sex_original, service, plate_location \n    @other$loc.metrics: AlleleID, CloneID, AlleleSequence, TrimmedSequence, Chrom_Lichenostomus_HeHo_v1, ChromPos_Lichenostomus_HeHo_v1, AlnCnt_Lichenostomus_HeHo_v1, AlnEvalue_Lichenostomus_HeHo_v1, SNP, SnpPosition, CallRate, OneRatioRef, OneRatioSnp, FreqHomRef, FreqHomSnp, FreqHets, PICRef, PICSnp, AvgPIC, AvgCountRef, AvgCountSnp, RepAvg, clone, uid, rdepth, maf \n   @other$latlon[g]: no coordinates attached\n\nres$sex.biased\n\n ********************\n *** DARTR OBJECT ***\n ********************\n\n ** 609 genotypes,  273 SNPs , size: 49.2 Mb\n\n    missing data: 46048 (=27.7 %) scored as NA\n\n ** Genetic data\n   @gen: list of 609 SNPbin\n   @ploidy: ploidy of each individual  (range: 2-2)\n\n ** Additional data\n   @ind.names:  609 individual labels\n   @loc.names:  273 locus labels\n   @loc.all:  273 allele labels\n   @position: integer storing positions of the SNPs [within 69 base sequence]\n   @pop: population of each individual (group size range: 12-516)\n   @other: a list containing: loc.metrics, ind.metrics, loc.metrics.flags, verbose, history \n    @other$ind.metrics: id, pop, sex, sex_original, service, plate_location \n    @other$loc.metrics: AlleleID, CloneID, AlleleSequence, TrimmedSequence, Chrom_Lichenostomus_HeHo_v1, ChromPos_Lichenostomus_HeHo_v1, AlnCnt_Lichenostomus_HeHo_v1, AlnEvalue_Lichenostomus_HeHo_v1, SNP, SnpPosition, CallRate, OneRatioRef, OneRatioSnp, FreqHomRef, FreqHomSnp, FreqHets, PICRef, PICSnp, AvgPIC, AvgCountRef, AvgCountSnp, RepAvg, clone, uid, rdepth, maf \n   @other$latlon[g]: no coordinates attached\n\nres$autosomal\n\n ********************\n *** DARTR OBJECT ***\n ********************\n\n ** 609 genotypes,  488 SNPs , size: 49.4 Mb\n\n    missing data: 72252 (=24.31 %) scored as NA\n\n ** Genetic data\n   @gen: list of 609 SNPbin\n   @ploidy: ploidy of each individual  (range: 2-2)\n\n ** Additional data\n   @ind.names:  609 individual labels\n   @loc.names:  488 locus labels\n   @loc.all:  488 allele labels\n   @position: integer storing positions of the SNPs [within 69 base sequence]\n   @pop: population of each individual (group size range: 12-516)\n   @other: a list containing: loc.metrics, ind.metrics, loc.metrics.flags, verbose, history \n    @other$ind.metrics: id, pop, sex, sex_original, service, plate_location \n    @other$loc.metrics: AlleleID, CloneID, AlleleSequence, TrimmedSequence, Chrom_Lichenostomus_HeHo_v1, ChromPos_Lichenostomus_HeHo_v1, AlnCnt_Lichenostomus_HeHo_v1, AlnEvalue_Lichenostomus_HeHo_v1, SNP, SnpPosition, CallRate, OneRatioRef, OneRatioSnp, FreqHomRef, FreqHomSnp, FreqHets, PICRef, PICSnp, AvgPIC, AvgCountRef, AvgCountSnp, RepAvg, clone, uid, rdepth, maf \n   @other$latlon[g]: no coordinates attached\n\nknitr::kable(head(res$results.table))  # The output table\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nindex\ncount.F.miss\ncount.M.miss\ncount.F.scored\ncount.M.scored\nratio\np.value\np.adjusted\nscoringRate.F\nscoringRate.M\nw.linked\nsex.biased\ncount.F.het\ncount.M.het\ncount.F.hom\ncount.M.hom\nstat\nstat.p.value\nstat.p.adjusted\nheterozygosity.F\nheterozygosity.M\nz.linked\nzw.gametolog\n\n\n\n\n27382025-26-T/C\n1\n61\n25\n215\n308\n3.4882302\n0.0000003\n0.0000016\n0.7789855\n0.9249249\nFALSE\nTRUE\n0\n73\n215\n235\nNA\nNA\nNA\n0.0000000\n0.2370130\nFALSE\nFALSE\n\n\n27338005-34-A/G\n2\n12\n13\n264\n320\n1.1186728\n0.8390268\n1.0000000\n0.9565217\n0.9609610\nFALSE\nFALSE\n0\n144\n264\n176\n0.0046581\n0.0000000\n0.0000000\n0.0000000\n0.4500000\nTRUE\nFALSE\n\n\n27331627-16-T/G\n3\n108\n159\n168\n174\n0.7039235\n0.0334301\n0.0860868\n0.6086957\n0.5225225\nFALSE\nFALSE\n0\n2\n168\n172\n0.5128690\n1.0000000\n1.0000000\n0.0000000\n0.0114943\nFALSE\nFALSE\n\n\n53948461-35-G/A\n4\n46\n64\n230\n269\n0.8408645\n0.4593502\n0.7791707\n0.8333333\n0.8078078\nFALSE\nFALSE\n29\n27\n201\n242\n1.2924846\n0.3950852\n0.9051780\n0.1260870\n0.1003717\nFALSE\nFALSE\n\n\n27360874-8-A/G\n5\n41\n63\n235\n270\n0.7480768\n0.1956613\n0.4120495\n0.8514493\n0.8108108\nFALSE\nFALSE\n25\n38\n210\n232\n0.7272744\n0.2807852\n0.7009152\n0.1063830\n0.1407407\nFALSE\nFALSE\n\n\n27377678-32-C/A\n6\n30\n33\n246\n300\n1.1084581\n0.7894511\n1.0000000\n0.8913043\n0.9009009\nFALSE\nFALSE\n3\n6\n243\n294\n0.6054740\n0.5234966\n1.0000000\n0.0121951\n0.0200000\nFALSE\nFALSE\n\n\n\n\n\nThe output consists of a genlight object for each type of loci, plus a results table.\n\n\nRun infer.sex\nThis function uses the complete output of function filter.sex.linked (list of 6 objects) to infer the sex of all individuals in the dataset. Specifically, the function uses 3 types of sex-linked loci (W-/Y-linked, Z-/X-linked, and gametologs), assigns a preliminary genetic sex for each type of sex-linked loci available, and outputs an agreed sex.\n\nsexID &lt;- dartR.sexlinked::infer.sex(gl_sex_filtered = res, system = \"zw\",\n    seed = 124)\n\n***FINISHED***\n\nknitr::kable(head(sexID))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nid\nw.linked.sex\n#missing\n#called\nz.linked.sex\n#Hom.z\n#Het.z\ngametolog.sex\n#Hom.g\n#Het.g\nagreed.sex\n\n\n\n\nANWC46839\nANWC46839\nF\n51\n1\nF\n1\n141\nF\n5\n0\nF\n\n\nW49\nW49\nF\n52\n0\nF\n2\n156\nF\n5\n0\nF\n\n\nW90\nW90\nF\n48\n4\nF\n0\n162\nF\n5\n0\nF\n\n\nC25\nC25\nM\n0\n52\nM\n52\n113\nM\n0\n5\nM\n\n\nC8\nC8\nM\n0\n52\nM\n48\n116\nM\n0\n5\nM\n\n\nW70\nW70\nF\n49\n3\nF\n0\n152\nF\n5\n0\nF\n\n\n\n\n\n\n\n\n\n\n\nWarning\n\n\n\nIMPORTANT We created this function with the explicit intent that a human checks the evidence for the agreed sex that do NOT agree for all types of sex-linked loci (denoted as ‘*M’ or ‘*F’). This human can then use their criterion to validate these assignments.\n\n\n\n\n\n\n\n\nExercise\n\n\n\n\nCan you find individuals for which the agreed sex is uncertain (i.e., has an asterisk “*”)?"
  },
  {
    "objectID": "session10.html#dataset-2---xxxy---the-leadbeaters-possum",
    "href": "session10.html#dataset-2---xxxy---the-leadbeaters-possum",
    "title": "10  Sex Linked Markers",
    "section": "Dataset 2 - XX/XY - The Leadbeater’s possum",
    "text": "Dataset 2 - XX/XY - The Leadbeater’s possum\n\n\n\nThe Leadbeater’s possum\n\n\n\nLoad data\n\ndata(\"LBP\")\nLBP  # Explore the dataset\n\n ********************\n *** DARTR OBJECT ***\n ********************\n\n ** 376 genotypes,  1,000 SNPs , size: 5.2 Mb\n\n    missing data: 20670 (=5.5 %) scored as NA\n\n ** Genetic data\n   @gen: list of 376 SNPbin\n   @ploidy: ploidy of each individual  (range: 2-2)\n\n ** Additional data\n   @ind.names:  376 individual labels\n   @loc.names:  1000 locus labels\n   @loc.all:  1000 allele labels\n   @position: integer storing positions of the SNPs [within 69 base sequence]\n   @pop: population of each individual (group size range: 95-281)\n   @other: a list containing: loc.metrics, ind.metrics, loc.metrics.flags, verbose, history \n    @other$ind.metrics: id, sex, pop, Year.collected, service, plate_location \n    @other$loc.metrics: AlleleID, CloneID, AlleleSequence, TrimmedSequence, Chrom_Possum_v2, ChromPos_Possum_v2, AlnCnt_Possum_v2, AlnEvalue_Possum_v2, SNP, SnpPosition, CallRate, OneRatioRef, OneRatioSnp, FreqHomRef, FreqHomSnp, FreqHets, PICRef, PICSnp, AvgPIC, AvgCountRef, AvgCountSnp, RepAvg, clone, uid, rdepth, monomorphs, maf, OneRatio, PIC \n   @other$latlon[g]: no coordinates attached\n\nLBP@n.loc  # Number of SNPs\n\n[1] 1000\n\nlength(LBP@ind.names)  # Number of individuals\n\n[1] 376\n\n\n\n\nRun filter.sex.linked\nThis function identifies sex-linked and autosomal loci present in a SNP dataset (genlight object) using individuals with known sex. It identifies five types of loci: w-linked or y-linked, sex-biased, z-linked or x-linked, gametologous and autosomal.\nThe genlight object must contain in gl@other$ind.metrics a column named “id”, and a column named “sex” in which individuals with known-sex are assigned ‘M’ for male, or ‘F’ for female. The function ignores individuals that are assigned anything else or nothing at all (unknown-sex).\n\n\n\nXX/XY sex chromosomes\n\n\n\nknitr::kable(head(LBP@other$ind.metrics))  # Check that ind.metrics has the necessary columns\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nid\nsex\npop\nYear.collected\nservice\nplate_location\n\n\n\n\nY2\nY2\nF\nYellingbo\n1997\nDLpos17-2786\n1-A1\n\n\nY16\nY16\nM\nYellingbo\n2001\nDLpos17-2786\n1-A10\n\n\nY17\nY17\nF\nYellingbo\n1997\nDLpos17-2786\n1-A11\n\n\nY18\nY18\nF\nYellingbo\n1999\nDLpos17-2786\n1-A12\n\n\nY3\nY3\nF\nYellingbo\n1997\nDLpos17-2786\n1-A2\n\n\nY4\nY4\nM\nYellingbo\n1997\nDLpos17-2786\n1-A3\n\n\n\n\nres &lt;- dartR.sexlinked::filter.sex.linked(gl = LBP, system = \"xy\")\n\nDetected 162 females and 211 males.\n\n\nStarting phase 1. May take a while...\n\n\nBuilding call rate plots.\n\n\n\n\n\nDone. Starting phase 2.\n\n\nBuilding heterozygosity plots.\n\n\n\n\n\n\n\n\nDone building heterozygosity plots.\n\n\n**FINISHED** Total of analyzed loci: 1000.\nFound 77 sex-linked loci:\n   1 Y-linked loci\n   9 sex-biased loci\n   66 X-linked loci\n   1 XY gametologs.\nAnd 923 autosomal loci.\n\n\n\n\n\n\n\n\n\n\n\nExercise\n\n\n\n\nHow many males and females does the dataset contain?\nHow many sex-linked loci were found?\n\n\nNow check the output:\n\nres$y.linked  # Notice that it says 'y-linked'\n\n ********************\n *** DARTR OBJECT ***\n ********************\n\n ** 376 genotypes,  1 SNPs , size: 4.7 Mb\n\n    missing data: 164 (=43.62 %) scored as NA\n\n ** Genetic data\n   @gen: list of 376 SNPbin\n   @ploidy: ploidy of each individual  (range: 2-2)\n\n ** Additional data\n   @ind.names:  376 individual labels\n   @loc.names:  1 locus labels\n   @loc.all:  1 allele labels\n   @position: integer storing positions of the SNPs [within 69 base sequence]\n   @pop: population of each individual (group size range: 95-281)\n   @other: a list containing: loc.metrics, ind.metrics, loc.metrics.flags, verbose, history \n    @other$ind.metrics: id, sex, pop, Year.collected, service, plate_location \n    @other$loc.metrics: AlleleID, CloneID, AlleleSequence, TrimmedSequence, Chrom_Possum_v2, ChromPos_Possum_v2, AlnCnt_Possum_v2, AlnEvalue_Possum_v2, SNP, SnpPosition, CallRate, OneRatioRef, OneRatioSnp, FreqHomRef, FreqHomSnp, FreqHets, PICRef, PICSnp, AvgPIC, AvgCountRef, AvgCountSnp, RepAvg, clone, uid, rdepth, monomorphs, maf, OneRatio, PIC \n   @other$latlon[g]: no coordinates attached\n\nres$x.linked  # Notice that it says 'x-linked'\n\n ********************\n *** DARTR OBJECT ***\n ********************\n\n ** 376 genotypes,  66 SNPs , size: 4.7 Mb\n\n    missing data: 827 (=3.33 %) scored as NA\n\n ** Genetic data\n   @gen: list of 376 SNPbin\n   @ploidy: ploidy of each individual  (range: 2-2)\n\n ** Additional data\n   @ind.names:  376 individual labels\n   @loc.names:  66 locus labels\n   @loc.all:  66 allele labels\n   @position: integer storing positions of the SNPs [within 69 base sequence]\n   @pop: population of each individual (group size range: 95-281)\n   @other: a list containing: loc.metrics, ind.metrics, loc.metrics.flags, verbose, history \n    @other$ind.metrics: id, sex, pop, Year.collected, service, plate_location \n    @other$loc.metrics: AlleleID, CloneID, AlleleSequence, TrimmedSequence, Chrom_Possum_v2, ChromPos_Possum_v2, AlnCnt_Possum_v2, AlnEvalue_Possum_v2, SNP, SnpPosition, CallRate, OneRatioRef, OneRatioSnp, FreqHomRef, FreqHomSnp, FreqHets, PICRef, PICSnp, AvgPIC, AvgCountRef, AvgCountSnp, RepAvg, clone, uid, rdepth, monomorphs, maf, OneRatio, PIC \n   @other$latlon[g]: no coordinates attached\n\nres$gametolog\n\n ********************\n *** DARTR OBJECT ***\n ********************\n\n ** 376 genotypes,  1 SNPs , size: 4.7 Mb\n\n    missing data: 0 (=0 %) scored as NA\n\n ** Genetic data\n   @gen: list of 376 SNPbin\n   @ploidy: ploidy of each individual  (range: 2-2)\n\n ** Additional data\n   @ind.names:  376 individual labels\n   @loc.names:  1 locus labels\n   @loc.all:  1 allele labels\n   @position: integer storing positions of the SNPs [within 69 base sequence]\n   @pop: population of each individual (group size range: 95-281)\n   @other: a list containing: loc.metrics, ind.metrics, loc.metrics.flags, verbose, history \n    @other$ind.metrics: id, sex, pop, Year.collected, service, plate_location \n    @other$loc.metrics: AlleleID, CloneID, AlleleSequence, TrimmedSequence, Chrom_Possum_v2, ChromPos_Possum_v2, AlnCnt_Possum_v2, AlnEvalue_Possum_v2, SNP, SnpPosition, CallRate, OneRatioRef, OneRatioSnp, FreqHomRef, FreqHomSnp, FreqHets, PICRef, PICSnp, AvgPIC, AvgCountRef, AvgCountSnp, RepAvg, clone, uid, rdepth, monomorphs, maf, OneRatio, PIC \n   @other$latlon[g]: no coordinates attached\n\nres$sex.biased\n\n ********************\n *** DARTR OBJECT ***\n ********************\n\n ** 376 genotypes,  9 SNPs , size: 4.7 Mb\n\n    missing data: 853 (=25.21 %) scored as NA\n\n ** Genetic data\n   @gen: list of 376 SNPbin\n   @ploidy: ploidy of each individual  (range: 2-2)\n\n ** Additional data\n   @ind.names:  376 individual labels\n   @loc.names:  9 locus labels\n   @loc.all:  9 allele labels\n   @position: integer storing positions of the SNPs [within 69 base sequence]\n   @pop: population of each individual (group size range: 95-281)\n   @other: a list containing: loc.metrics, ind.metrics, loc.metrics.flags, verbose, history \n    @other$ind.metrics: id, sex, pop, Year.collected, service, plate_location \n    @other$loc.metrics: AlleleID, CloneID, AlleleSequence, TrimmedSequence, Chrom_Possum_v2, ChromPos_Possum_v2, AlnCnt_Possum_v2, AlnEvalue_Possum_v2, SNP, SnpPosition, CallRate, OneRatioRef, OneRatioSnp, FreqHomRef, FreqHomSnp, FreqHets, PICRef, PICSnp, AvgPIC, AvgCountRef, AvgCountSnp, RepAvg, clone, uid, rdepth, monomorphs, maf, OneRatio, PIC \n   @other$latlon[g]: no coordinates attached\n\nres$autosomal\n\n ********************\n *** DARTR OBJECT ***\n ********************\n\n ** 376 genotypes,  923 SNPs , size: 5.2 Mb\n\n    missing data: 18826 (=5.42 %) scored as NA\n\n ** Genetic data\n   @gen: list of 376 SNPbin\n   @ploidy: ploidy of each individual  (range: 2-2)\n\n ** Additional data\n   @ind.names:  376 individual labels\n   @loc.names:  923 locus labels\n   @loc.all:  923 allele labels\n   @position: integer storing positions of the SNPs [within 69 base sequence]\n   @pop: population of each individual (group size range: 95-281)\n   @other: a list containing: loc.metrics, ind.metrics, loc.metrics.flags, verbose, history \n    @other$ind.metrics: id, sex, pop, Year.collected, service, plate_location \n    @other$loc.metrics: AlleleID, CloneID, AlleleSequence, TrimmedSequence, Chrom_Possum_v2, ChromPos_Possum_v2, AlnCnt_Possum_v2, AlnEvalue_Possum_v2, SNP, SnpPosition, CallRate, OneRatioRef, OneRatioSnp, FreqHomRef, FreqHomSnp, FreqHets, PICRef, PICSnp, AvgPIC, AvgCountRef, AvgCountSnp, RepAvg, clone, uid, rdepth, monomorphs, maf, OneRatio, PIC \n   @other$latlon[g]: no coordinates attached\n\nknitr::kable(head(res$results.table))  # The output table\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nindex\ncount.F.miss\ncount.M.miss\ncount.F.scored\ncount.M.scored\nratio\np.value\np.adjusted\nscoringRate.F\nscoringRate.M\ny.linked\nsex.biased\ncount.F.het\ncount.M.het\ncount.F.hom\ncount.M.hom\nstat\nstat.p.value\nstat.p.adjusted\nheterozygosity.F\nheterozygosity.M\nx.linked\nxy.gametolog\n\n\n\n\n28681424-34-G/T\n1\n0\n1\n162\n210\n1.2953770\n1.0000000\n1\n1.0000000\n0.9952607\nFALSE\nFALSE\n1\n0\n161\n210\n1.303397\n1.0000000\n1.0000000\n0.0061728\n0.0000000\nFALSE\nFALSE\n\n\n28678947-56-C/T\n2\n12\n8\n150\n203\n2.0261283\n0.1638428\n1\n0.9259259\n0.9620853\nFALSE\nFALSE\n9\n7\n141\n196\n1.784196\n0.3044519\n0.9598961\n0.0600000\n0.0344828\nFALSE\nFALSE\n\n\n28680567-32-T/G\n3\n12\n12\n150\n199\n1.3256351\n0.5289429\n1\n0.9259259\n0.9431280\nFALSE\nFALSE\n9\n11\n141\n188\n1.090635\n1.0000000\n1.0000000\n0.0600000\n0.0552764\nFALSE\nFALSE\n\n\n28688313-7-C/G\n4\n0\n0\n162\n211\n1.3015303\n1.0000000\n1\n1.0000000\n1.0000000\nFALSE\nFALSE\n6\n0\n156\n211\n8.076192\n0.0459068\n0.3917911\n0.0370370\n0.0000000\nFALSE\nFALSE\n\n\n28681679-51-C/T\n5\n22\n30\n140\n181\n0.9482168\n0.8814171\n1\n0.8641975\n0.8578199\nFALSE\nFALSE\n1\n1\n139\n180\n1.293900\n1.0000000\n1.0000000\n0.0071429\n0.0055249\nFALSE\nFALSE\n\n\n28681994-14-G/A\n6\n0\n1\n162\n210\n1.2953770\n1.0000000\n1\n1.0000000\n0.9952607\nFALSE\nFALSE\n18\n19\n144\n191\n1.255791\n0.6007790\n1.0000000\n0.1111111\n0.0904762\nFALSE\nFALSE\n\n\n\n\n\nThe output consists of a genlight object for each type of loci, plus a results table.\n\n\nRun infer.sex\nThis function uses the output of function filter.sex.linked (list of 6 objects) to infer the sex of all individuals in the dataset. It uses 3 types of sex-linked loci (W-/Y-linked, Z-/X-linked, and gametologs), assigns a preliminary genetic sex for each type of sex-linked loci available, and outputs an agreed sex.\n\nsexID &lt;- dartR.sexlinked::infer.sex(gl_sex_filtered = res, system = \"xy\",\n    seed = 124)\n\nNot enough gametologs (need at least 5). Assigning NA...\n\n\n***FINISHED***\n\nknitr::kable(head(sexID))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nid\ny.linked.sex\n#called\n#missing\nx.linked.sex\n#Het.x\n#Hom.x\ngametolog.sex\n#Het.g\n#Hom.g\nagreed.sex\n\n\n\n\nY2\nY2\nF\n0\n1\nF\n19\n47\nNA\nNA\nNA\nF\n\n\nY16\nY16\nM\n1\n0\nM\n2\n56\nNA\nNA\nNA\nM\n\n\nY17\nY17\nF\n0\n1\nF\n27\n37\nNA\nNA\nNA\nF\n\n\nY18\nY18\nF\n0\n1\nM\n4\n62\nNA\nNA\nNA\n*F\n\n\nY3\nY3\nM\n1\n0\nM\n3\n63\nNA\nNA\nNA\nM\n\n\nY4\nY4\nM\n1\n0\nM\n1\n63\nNA\nNA\nNA\nM\n\n\n\n\n\nWhat did the function mention about gametologs? How did that impact the results table? How many types of sex-linked loci were used to infer an agreed sex?\n\n\n\n\n\n\nExercise\n\n\n\n\nCan you find individuals for which the agreed sex is uncertain (i.e., has an asterisk “*”)?"
  },
  {
    "objectID": "session10.html#exercises",
    "href": "session10.html#exercises",
    "title": "10  Sex Linked Markers",
    "section": "EXERCISES",
    "text": "EXERCISES\n\n\n\n\n\n\nExercise\n\n\n\n\nImagine you are analyzing the genetic data of a population and you want to look at its genetic structure and genetic diversity. You get to work by filtering your beautiful set of SNPs. Because you are a rigorous, you want to test whether using function filter.sex.linked to properly filter out sex-linked loci changes the results of the populations analyses. So you: (1) process your SNP dataset by applying standard filters and run analyses, and (2) process the dataset by filtering out sex-linked loci first, applying standard filters second, and then run analyses.\nChoose one of the following datasets (or your own data) and report:\n\nHow many sex-linked markers are present?\nHow many individuals had a wrong sexID?\nDo you see any changes in your PCA/structure analyses when you filtered out sex-linked markers versus when you did not?\nDo you see any differences in genetic diversity and fixation indices when you filtered out sex-linked markers versus when you did not?"
  },
  {
    "objectID": "session10.html#exercise-data-1---your-own-data",
    "href": "session10.html#exercise-data-1---your-own-data",
    "title": "10  Sex Linked Markers",
    "section": "Exercise data 1 - Your own data",
    "text": "Exercise data 1 - Your own data\n\nHINT\nYou can have a look at the exercise data below for inspiration.\n\n\n\n\n\n\n\nExercise - Your own data\n\n\n\n\nNumber of sex-linked markers?\nIndividuals with wrong sexID?\nChanges in PCA before and after removing the SLM?\nDifferences in genetic diversity and fixation indices between autosomal and SLM?"
  },
  {
    "objectID": "session10.html#exercise-data-2---the-eastern-yellow-robin",
    "href": "session10.html#exercise-data-2---the-eastern-yellow-robin",
    "title": "10  Sex Linked Markers",
    "section": "Exercise data 2 - The Eastern Yellow Robin",
    "text": "Exercise data 2 - The Eastern Yellow Robin\nData from Robledo-Ruiz et al. 2023.\n\n\n\nThe Eastern Yellow Robin\n\n\n\nLoad data\n\ndata(\"EYR\")\n\nEYR@n.loc\ntable(EYR@pop)\ntable(EYR@other$ind.metrics$pop)\ntable(EYR@other$ind.metrics$sex, useNA = \"ifany\")\n\n[1] 1000\n\n    Crusoe Muckleford      Timor     Wombat \n       238        421         52         71 \n\n    Crusoe Muckleford      Timor     Wombat \n       238        421         52         71 \n\n      F   M \n  1 352 429 \n\n\n\n\n1. Number of sex-linked markers?\n\nres &lt;- dartR.sexlinked::filter.sex.linked(gl = EYR, system = \"zw\")\n\nDetected 352 females and 429 males.\n\n\nStarting phase 1. May take a while...\n\n\nBuilding call rate plots.\n\n\n\n\n\nDone. Starting phase 2.\n\n\nBuilding heterozygosity plots.\n\n\n\n\n\n\n\n\nDone building heterozygosity plots.\n\n\n**FINISHED** Total of analyzed loci: 1000.\nFound 150 sex-linked loci:\n   16 W-linked loci\n   82 sex-biased loci\n   32 Z-linked loci\n   20 ZW gametologs.\nAnd 850 autosomal loci.\n\n\n\n\n\n\n\n2. Individuals with wrong sexID?\n\nsexID &lt;- dartR.sexlinked::infer.sex(gl_sex_filtered = res, system = \"zw\",\n    seed = 124)\n\n***FINISHED***\n\nknitr::kable(head(sexID))\n\nsum(EYR$other$ind.metrics$sex != sexID$agreed.sex, na.rm = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nid\nw.linked.sex\n#missing\n#called\nz.linked.sex\n#Hom.z\n#Het.z\ngametolog.sex\n#Hom.g\n#Het.g\nagreed.sex\n\n\n\n\n024-96401\n024-96401\nM\n0\n16\nM\n7\n25\nM\n0\n5\nM\n\n\n024-96401b\n024-96401b\nM\n0\n16\nM\n9\n21\nM\n0\n5\nM\n\n\n024-96402\n024-96402\nF\n15\n1\nF\n0\n32\nF\n5\n0\nF\n\n\n024-96403\n024-96403\nM\n1\n15\nM\n11\n21\nM\n0\n5\nM\n\n\n024-96404\n024-96404\nM\n0\n16\nM\n12\n20\nM\n0\n5\nM\n\n\n024-96405\n024-96405\nM\n0\n16\nM\n11\n21\nM\n0\n5\nM\n\n\n\n\n\n[1] 55\n\n\n\n\n\n\n\n\nExercise\n\n\n\n\nCan you tell which misidentified sexes are due to uncertain genetic sex (indicated with *)?\nHINT Try using grep(pattern = \"\\\\*\", x = sexID$agreed.sex)\n\n\n\nProcessing SNPs with two filtering regimes\n\nFiltering SNPs only with standard filters (sloppy)\n\n# Filter for read depth\ndartR.base::gl.report.rdepth(EYR)  # This is the initial dataset\n\nStarting :: \n Starting dartR.base \n Starting gl.report.rdepth \n  Processing genlight object with SNP data\n  Reporting Read Depth by Locus\n  No. of loci = 1000 \n  No. of individuals = 782 \n    Minimum      :  2.6 \n    1st quartile :  4.3 \n    Median       :  5.6 \n    Mean         :  5.9649 \n    3r quartile  :  7.325 \n    Maximum      :  13.2 \n    Missing Rate Overall:  0.19 \n\n\n\n\n\n   Quantile Threshold Retained Percent Filtered Percent\n1      100%      13.2        1     0.1      999    99.9\n2       95%       9.9       51     5.1      949    94.9\n3       90%       9.0      105    10.5      895    89.5\n4       85%       8.3      151    15.1      849    84.9\n5       80%       7.8      208    20.8      792    79.2\n6       75%       7.3      258    25.8      742    74.2\n7       70%       6.9      304    30.4      696    69.6\n8       65%       6.5      354    35.4      646    64.6\n9       60%       6.2      404    40.4      596    59.6\n10      55%       5.9      451    45.1      549    54.9\n11      50%       5.6      504    50.4      496    49.6\n12      45%       5.3      563    56.3      437    43.7\n13      40%       5.1      602    60.2      398    39.8\n14      35%       4.8      659    65.9      341    34.1\n15      30%       4.6      702    70.2      298    29.8\n16      25%       4.3      752    75.2      248    24.8\n17      20%       4.0      823    82.3      177    17.7\n18      15%       3.9      852    85.2      148    14.8\n19      10%       3.6      906    90.6       94     9.4\n20       5%       3.3      956    95.6       44     4.4\n21       0%       2.6     1000   100.0        0     0.0\nCompleted: :: \n Completed: dartR.base \n Completed: gl.report.rdepth \n\nEYR.sloppy &lt;- dartR.base::gl.filter.rdepth(EYR, lower = 3, upper = 11, verbose = 0)\n\n\n\n# Filter for loci call rate\ndartR.base::gl.report.callrate(EYR.sloppy, method = \"loc\")\n\nStarting :: \n Starting dartR.base \n Starting gl.report.callrate \n  Processing genlight object with SNP data\n  Reporting Call Rate by Locus\n  No. of loci = 958 \n  No. of individuals = 782 \n    Minimum      :  0.20844 \n    1st quartile :  0.7202688 \n    Median       :  0.895141 \n    Mean         :  0.8131871 \n    3r quartile  :  0.950128 \n    Maximum      :  0.988491 \n    Missing Rate Overall:  0.1868 \n\n\n\n\n\nCompleted: :: \n Completed: dartR.base \n Completed: gl.report.callrate \n\nEYR.sloppy &lt;- dartR.base::gl.filter.callrate(EYR.sloppy, method = \"loc\",\n    threshold = 0.75, verbose = 0, recalc = TRUE)\n\n# Filter for individual call rate\ndartR.base::gl.report.callrate(EYR.sloppy, method = \"ind\")\n\nStarting :: \n Starting dartR.base \n Starting gl.report.callrate \n  Processing genlight object with SNP data\n\n  Reporting Call Rate by Individual\n  No. of loci = 703 \n  No. of individuals = 782 \n    Minimum      :  0.03556188 \n    1st quartile :  0.9174964 \n    Median       :  0.9416785 \n    Mean         :  0.9108097 \n    3r quartile  :  0.9573257 \n    Maximum      :  0.9829303 \n    Missing Rate Overall:  0.0892 \n\nListing 4 populations and their average CallRates\n  Monitor again after filtering\n  Population CallRate   N\n1     Crusoe   0.9027 238\n2 Muckleford   0.9073 421\n3      Timor   0.9402  52\n4     Wombat   0.9371  71\n\nListing 20 individuals with the lowest CallRates\n  Use this list to see which individuals will be lost on filtering by individual\n  Set ind.to.list parameter to see more individuals\n   Individual   CallRate\n1    M18.29.1 0.03556188\n2    M18.18.1 0.03982930\n3    M18.47.2 0.06970128\n4    C18.16.1 0.07112376\n5   027-34168 0.07681366\n6    C18.15.2 0.08534851\n7    C18.21.2 0.08677098\n8    M18.47.3 0.14224751\n9    M18.35.2 0.17211949\n10   M18.20.3 0.24039829\n11   M20.70.2 0.39687055\n12   C18.28.1 0.39971550\n13   C18.17.2 0.46088193\n14  027-34065 0.50640114\n15   C18.14.1 0.50640114\n16   M20.70.3 0.50782361\n17  M20.110.1 0.52347084\n18   M19.12.1 0.53342817\n19    M19.8.1 0.54907539\n20   M20.64.3 0.56045519\n\n)\n\n\n\n\n\nCompleted: :: \n Completed: dartR.base \n Completed: gl.report.callrate \n\nEYR.sloppy &lt;- dartR.base::gl.filter.callrate(EYR.sloppy, method = \"ind\",\n    threshold = 0.65, verbose = 0, recalc = TRUE)\n# Filter for MAC (= 3)\ndartR.base::gl.report.maf(EYR.sloppy)\n\nStarting :: \n Starting dartR.base \n Starting gl.report.maf \n  Processing genlight object with SNP data\nStarting :: \n\n Starting dartR.base \n\n Starting gl.report.maf \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population Crusoe \n  No. of loci = 670 \n  No. of individuals = 231 \n    Minimum      :  0.0022 \n    1st quantile :  0.064825 \n    Median       :  0.1582 \n    Mean         :  0.1793525 \n    3r quantile  :  0.267475 \n    Maximum      :  0.4975 \n    Missing Rate Overall:  0.08 \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population Muckleford \n  No. of loci = 683 \n  No. of individuals = 401 \n    Minimum      :  0.0013 \n    1st quantile :  0.05875 \n    Median       :  0.1404 \n    Mean         :  0.172949 \n    3r quantile  :  0.2617 \n    Maximum      :  0.4985 \n    Missing Rate Overall:  0.07 \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population Timor \n  No. of loci = 589 \n  No. of individuals = 52 \n    Minimum      :  0.0096 \n    1st quantile :  0.0673 \n    Median       :  0.1667 \n    Mean         :  0.1914129 \n    3r quantile  :  0.2872 \n    Maximum      :  0.5 \n    Missing Rate Overall:  0.06 \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population Wombat \n  No. of loci = 627 \n  No. of individuals = 71 \n    Minimum      :  0.007 \n    1st quantile :  0.06385 \n    Median       :  0.1449 \n    Mean         :  0.1746703 \n    3r quantile  :  0.2542 \n    Maximum      :  0.5 \n    Missing Rate Overall:  0.06 \n\n  Reporting Minor Allele Frequency (MAF) by Locus OVERALL\n  No. of loci = 703 \n  No. of individuals = 755 \n    Minimum      :  3e-04 \n    1st quantile :  0.0627 \n    Median       :  0.13435 \n    Mean         :  0.1696497 \n    3r quantile  :  0.246025 \n    Maximum      :  0.4991 \n    Missing Rate Overall:  0.07 \n\n\n\n\n\n   Quantile Threshold Retained Percent Filtered Percent\n1      100%    0.4991        1     0.1      699    99.9\n2       95%    0.4343       36     5.1      664    94.9\n3       90%    0.3807       71    10.1      629    89.9\n4       85%    0.3331      105    15.0      595    85.0\n5       80%    0.2858      141    20.1      559    79.9\n6       75%    0.2460      176    25.1      524    74.9\n7       70%    0.2233      210    30.0      490    70.0\n8       65%    0.2003      246    35.1      454    64.9\n9       60%    0.1797      280    40.0      420    60.0\n10      55%    0.1562      315    45.0      385    55.0\n11      50%    0.1341      352    50.3      348    49.7\n12      45%    0.1214      386    55.1      314    44.9\n13      40%    0.1032      421    60.1      279    39.9\n14      35%    0.0904      455    65.0      245    35.0\n15      30%    0.0742      490    70.0      210    30.0\n16      25%    0.0627      526    75.1      174    24.9\n17      20%    0.0476      561    80.1      139    19.9\n18      15%    0.0359      595    85.0      105    15.0\n19      10%    0.0224      631    90.1       69     9.9\n20       5%    0.0059      666    95.1       34     4.9\n21       0%    0.0003      700   100.0        0     0.0\nCompleted: :: \n Completed: dartR.base \n Completed: gl.report.maf \n\nEYR.sloppy &lt;- dartR.base::gl.filter.maf(EYR.sloppy, threshold = 3, verbose = 0,\n    recalc = TRUE)\n\nStarting gl.select.colors \n  Warning: Number of required colors not specified, set to 9\n  Library: RColorBrewer\n  Palette: brewer.pal\n  Showing and returning 2 of 9 colors for library RColorBrewer : palette Blues \n\n\n\n\n\nCompleted: gl.select.colors \n\n\n\n\nFiltering SNPs with filter.sex.linked and standard filters (correct)\n\n# Filter for sex-linked loci\ncorrect &lt;- dartR.sexlinked::filter.sex.linked(EYR, system = \"zw\")  # This is the initial dataset\n\n\n\n\n\n\n\n\n\n\n\n\n# We will use correct$autosomal for the next filters\n\n# Filter for read depth\ndartR.base::gl.report.rdepth(correct$autosomal)  # This is the filtered dataset\n\nStarting :: \n Starting dartR.base \n Starting gl.report.rdepth \n  Processing genlight object with SNP data\n  Reporting Read Depth by Locus\n  No. of loci = 850 \n  No. of individuals = 782 \n    Minimum      :  2.6 \n    1st quartile :  4.3 \n    Median       :  5.6 \n    Mean         :  6.008941 \n    3r quartile  :  7.4 \n    Maximum      :  13.2 \n    Missing Rate Overall:  0.18 \n\n\n\n\n\n   Quantile Threshold Retained Percent Filtered Percent\n1      100%      13.2        1     0.1      849    99.9\n2       95%       9.9       45     5.3      805    94.7\n3       90%       9.1       88    10.4      762    89.6\n4       85%       8.4      129    15.2      721    84.8\n5       80%       7.9      173    20.4      677    79.6\n6       75%       7.4      220    25.9      630    74.1\n7       70%       6.9      264    31.1      586    68.9\n8       65%       6.5      305    35.9      545    64.1\n9       60%       6.2      350    41.2      500    58.8\n10      55%       5.9      391    46.0      459    54.0\n11      50%       5.6      435    51.2      415    48.8\n12      45%       5.4      472    55.5      378    44.5\n13      40%       5.1      519    61.1      331    38.9\n14      35%       4.9      555    65.3      295    34.7\n15      30%       4.6      603    70.9      247    29.1\n16      25%       4.3      645    75.9      205    24.1\n17      20%       4.0      705    82.9      145    17.1\n18      15%       3.9      730    85.9      120    14.1\n19      10%       3.6      774    91.1       76     8.9\n20       5%       3.3      812    95.5       38     4.5\n21       0%       2.6      850   100.0        0     0.0\nCompleted: :: \n Completed: dartR.base \n Completed: gl.report.rdepth \n\nEYR.correct &lt;- dartR.base::gl.filter.rdepth(correct$autosomal, lower = 3,\n    upper = 11, verbose = 0)\n\n\n\n# Filter for loci call rate\ndartR.base::gl.report.callrate(EYR.correct, method = \"loc\")\n\nStarting :: \n Starting dartR.base \n Starting gl.report.callrate \n  Processing genlight object with SNP data\n  Reporting Call Rate by Locus\n  No. of loci = 811 \n  No. of individuals = 782 \n    Minimum      :  0.20844 \n    1st quartile :  0.7436065 \n    Median       :  0.900256 \n    Mean         :  0.8192658 \n    3r quartile  :  0.951407 \n    Maximum      :  0.988491 \n    Missing Rate Overall:  0.1807 \n\n\n\n\n\nCompleted: :: \n Completed: dartR.base \n Completed: gl.report.callrate \n\nEYR.correct &lt;- dartR.base::gl.filter.callrate(EYR.correct, method = \"loc\",\n    threshold = 0.75, verbose = 0, recalc = TRUE)\n\n# Filter for individual call rate\ndartR.base::gl.report.callrate(EYR.correct, method = \"ind\")\n\nStarting :: \n Starting dartR.base \n Starting gl.report.callrate \n  Processing genlight object with SNP data\n\n  Reporting Call Rate by Individual\n  No. of loci = 605 \n  No. of individuals = 782 \n    Minimum      :  0.03801653 \n    1st quartile :  0.9173554 \n    Median       :  0.9438017 \n    Mean         :  0.9120479 \n    3r quartile  :  0.9586777 \n    Maximum      :  0.9818182 \n    Missing Rate Overall:  0.088 \n\nListing 4 populations and their average CallRates\n  Monitor again after filtering\n  Population CallRate   N\n1     Crusoe   0.9037 238\n2 Muckleford   0.9090 421\n3      Timor   0.9418  52\n4     Wombat   0.9365  71\n\nListing 20 individuals with the lowest CallRates\n  Use this list to see which individuals will be lost on filtering by individual\n  Set ind.to.list parameter to see more individuals\n   Individual   CallRate\n1    M18.29.1 0.03801653\n2    M18.18.1 0.04462810\n3    M18.47.2 0.06776860\n4    C18.16.1 0.07438017\n5   027-34168 0.08760331\n6    C18.15.2 0.08760331\n7    C18.21.2 0.08760331\n8    M18.47.3 0.13719008\n9    M18.35.2 0.18016529\n10   M18.20.3 0.24132231\n11   C18.28.1 0.41487603\n12   M20.70.2 0.42644628\n13   C18.17.2 0.44628099\n14  027-34065 0.49586777\n15   C18.14.1 0.49752066\n16  M20.110.1 0.53057851\n17   M20.70.3 0.53553719\n18   M19.12.1 0.54380165\n19    M19.8.1 0.56694215\n20   M19.33.2 0.57851240\n\n)\n\n\n\n\n\nCompleted: :: \n Completed: dartR.base \n Completed: gl.report.callrate \n\nEYR.correct &lt;- dartR.base::gl.filter.callrate(EYR.correct, method = \"ind\",\n    threshold = 0.65, verbose = 0, recalc = TRUE)\n# Filter for MAC (= 3)\ndartR.base::gl.report.maf(EYR.correct)\n\nStarting :: \n Starting dartR.base \n Starting gl.report.maf \n  Processing genlight object with SNP data\nStarting :: \n\n Starting dartR.base \n\n Starting gl.report.maf \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population Crusoe \n  No. of loci = 573 \n  No. of individuals = 231 \n    Minimum      :  0.0022 \n    1st quantile :  0.06 \n    Median       :  0.1488 \n    Mean         :  0.1741178 \n    3r quantile  :  0.2646 \n    Maximum      :  0.4975 \n    Missing Rate Overall:  0.08 \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population Muckleford \n  No. of loci = 585 \n  No. of individuals = 401 \n    Minimum      :  0.0013 \n    1st quantile :  0.055 \n    Median       :  0.129 \n    Mean         :  0.163993 \n    3r quantile  :  0.2474 \n    Maximum      :  0.4985 \n    Missing Rate Overall:  0.07 \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population Timor \n  No. of loci = 504 \n  No. of individuals = 52 \n    Minimum      :  0.0096 \n    1st quantile :  0.068275 \n    Median       :  0.1635 \n    Mean         :  0.1898613 \n    3r quantile  :  0.286075 \n    Maximum      :  0.5 \n    Missing Rate Overall:  0.06 \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population Wombat \n  No. of loci = 536 \n  No. of individuals = 71 \n    Minimum      :  0.007 \n    1st quantile :  0.062475 \n    Median       :  0.13805 \n    Mean         :  0.1706063 \n    3r quantile  :  0.2509 \n    Maximum      :  0.5 \n    Missing Rate Overall:  0.06 \n\n  Reporting Minor Allele Frequency (MAF) by Locus OVERALL\n  No. of loci = 605 \n  No. of individuals = 755 \n    Minimum      :  3e-04 \n    1st quantile :  0.058025 \n    Median       :  0.1306 \n    Mean         :  0.1628656 \n    3r quantile  :  0.23785 \n    Maximum      :  0.4991 \n    Missing Rate Overall:  0.07 \n\n\n\n\n\n   Quantile Threshold Retained Percent Filtered Percent\n1      100%    0.4991        1     0.2      601    99.8\n2       95%    0.4367       31     5.1      571    94.9\n3       90%    0.3771       61    10.1      541    89.9\n4       85%    0.3250       91    15.1      511    84.9\n5       80%    0.2747      121    20.1      481    79.9\n6       75%    0.2387      151    25.1      451    74.9\n7       70%    0.2132      181    30.1      421    69.9\n8       65%    0.1916      211    35.0      391    65.0\n9       60%    0.1720      241    40.0      361    60.0\n10      55%    0.1486      271    45.0      331    55.0\n11      50%    0.1306      302    50.2      300    49.8\n12      45%    0.1118      332    55.1      270    44.9\n13      40%    0.0975      362    60.1      240    39.9\n14      35%    0.0808      392    65.1      210    34.9\n15      30%    0.0700      422    70.1      180    29.9\n16      25%    0.0578      452    75.1      150    24.9\n17      20%    0.0445      482    80.1      120    19.9\n18      15%    0.0300      512    85.0       90    15.0\n19      10%    0.0174      542    90.0       60    10.0\n20       5%    0.0046      572    95.0       30     5.0\n21       0%    0.0003      602   100.0        0     0.0\nCompleted: :: \n Completed: dartR.base \n Completed: gl.report.maf \n\nEYR.correct &lt;- dartR.base::gl.filter.maf(EYR.correct, threshold = 3, verbose = 0,\n    recalc = TRUE)\n\nStarting gl.select.colors \n  Warning: Number of required colors not specified, set to 9\n  Library: RColorBrewer\n  Palette: brewer.pal\n  Showing and returning 2 of 9 colors for library RColorBrewer : palette Blues \n\n\n\n\n\nCompleted: gl.select.colors \n\n\n\n\n\n\n3. Changes in PCA before and after removing the SLM?\n\nPCA on sloppy dataset (only standard filters)\n\nPCA.sloppy &lt;- dartR.base::gl.pcoa(EYR.sloppy, verbose = 0)\ndartR.base::gl.pcoa.plot(PCA.sloppy, EYR.sloppy, xaxis = 1, yaxis = 2)\ndartR.base::gl.pcoa.plot(PCA.sloppy, EYR.sloppy, xaxis = 2, yaxis = 3)\n\nStarting gl.colors \nSelected color type 2 \nCompleted: gl.colors \nStarting :: \n Starting dartR.base \n Starting gl.pcoa.plot \n  Processing an ordination file (glPca)\n  Processing genlight object with SNP data\nPackage directlabels  needed for this function to work. Please install it.\n[1] -1\nStarting :: \n Starting dartR.base \n Starting gl.pcoa.plot \n  Processing an ordination file (glPca)\n  Processing genlight object with SNP data\nPackage directlabels  needed for this function to work. Please install it.\n[1] -1\n\n\n\n\nPCA on correct dataset (filter.sex.linked and standard filters)\n\nPCA.correct &lt;- dartR.base::gl.pcoa(EYR.correct, verbose = 0)\ndartR.base::gl.pcoa.plot(PCA.correct, EYR.correct, xaxis = 1, yaxis = 2)\ndartR.base::gl.pcoa.plot(PCA.correct, EYR.correct, xaxis = 2, yaxis = 3)\n\nStarting gl.colors \nSelected color type 2 \nCompleted: gl.colors \nStarting :: \n Starting dartR.base \n Starting gl.pcoa.plot \n  Processing an ordination file (glPca)\n  Processing genlight object with SNP data\nPackage directlabels  needed for this function to work. Please install it.\n[1] -1\nStarting :: \n Starting dartR.base \n Starting gl.pcoa.plot \n  Processing an ordination file (glPca)\n  Processing genlight object with SNP data\nPackage directlabels  needed for this function to work. Please install it.\n[1] -1\n\n\n\n\n\n4. Differences in genetic diversity and fixation indices between autosomal and SLM?\n\n# Basic stats\nbasic.sloppy &lt;- dartR.base::utils.basic.stats(EYR.sloppy)\nbasic.correct &lt;- dartR.base::utils.basic.stats(EYR.correct)\nbasic.sloppy$overall\n\n     Ho      Hs      Ht     Dst     Htp    Dstp     Fst    Fstp     Fis    Dest \n 0.1603  0.2376  0.2464  0.0087  0.2487  0.0148  0.0355  0.0596  0.3256  0.0259 \nGst_max   Gst_H \n 0.7141  0.0834 \n\nbasic.correct$overall\n\n     Ho      Hs      Ht     Dst     Htp    Dstp     Fst    Fstp     Fis    Dest \n 0.1579  0.2302  0.2375  0.0073  0.2398  0.0128  0.0307  0.0532  0.3139  0.0221 \nGst_max   Gst_H \n 0.7229  0.0737 \n\n# Genetic diversity per pop\ndivers.sloppy &lt;- dartR.base::gl.report.diversity(EYR.sloppy, pbar = FALSE,\n    table = FALSE, verbose = 0)\n\n  Processing genlight object with SNP data\n\n\n\n\ndivers.correct &lt;- dartR.base::gl.report.diversity(EYR.correct, pbar = FALSE,\n    table = FALSE, verbose = 0)\n\n  Processing genlight object with SNP data\n\n\n\n\ndivers.sloppy$one_H_alpha\n\n    Crusoe Muckleford      Timor     Wombat \n 0.3884366  0.3844244  0.3519361  0.3591638 \n\ndivers.correct$one_H_alpha\n\n    Crusoe Muckleford      Timor     Wombat \n 0.3766483  0.3689045  0.3468530  0.3503540 \n\ndivers.sloppy$one_H_beta\n\n                Crusoe Muckleford      Timor     Wombat\nCrusoe              NA 0.02660219 0.09367676 0.06237102\nMuckleford 0.006274769         NA 0.07326488 0.06577359\nTimor      0.022518949 0.02452504         NA 0.08763552\nWombat     0.018905085 0.02091118 0.03715536         NA\n\ndivers.correct$one_H_beta\n\n                Crusoe Muckleford      Timor     Wombat\nCrusoe              NA 0.02545762 0.08568969 0.05988791\nMuckleford 0.005778848         NA 0.06967786 0.06243346\nTimor      0.016804630 0.02067653         NA 0.08306746\nWombat     0.015054123 0.01892602 0.02995180         NA\n\n# Fixation indices\ndartR.base::gl.fst.pop(EYR.sloppy, verbose = 0)\n\n               Crusoe Muckleford      Timor Wombat\nCrusoe             NA         NA         NA     NA\nMuckleford 0.03160198         NA         NA     NA\nTimor      0.04023766 0.05408752         NA     NA\nWombat     0.05466955 0.02407235 0.08452847     NA\n\ndartR.base::gl.fst.pop(EYR.correct, verbose = 0)\n\n               Crusoe Muckleford      Timor Wombat\nCrusoe             NA         NA         NA     NA\nMuckleford 0.02777612         NA         NA     NA\nTimor      0.04008148 0.04786375         NA     NA\nWombat     0.04413257 0.02208816 0.07111737     NA\n\ndartR.base::gl.report.fstat(EYR.sloppy, verbose = 0)\n\n   Your plot was not shown in full because your 'Plots' pane\n    is too small. Increase the size of the 'Plots' pane and run the\n    function again. Alternatively, use the parameter 'plot.file' to\n    save the plot to a file.\n\n\n$Stat_matrices\n$Stat_matrices$Fst\n           Crusoe Muckleford  Timor Wombat\nCrusoe         NA     0.0148 0.0171 0.0255\nMuckleford 0.0148         NA 0.0249 0.0096\nTimor      0.0171     0.0249     NA 0.0387\nWombat     0.0255     0.0096 0.0387     NA\n\n$Stat_matrices$Fstp\n           Crusoe Muckleford  Timor Wombat\nCrusoe         NA     0.0356 0.0545 0.0669\nMuckleford 0.0356         NA 0.0681 0.0337\nTimor      0.0545     0.0681     NA 0.1046\nWombat     0.0669     0.0337 0.1046     NA\n\n$Stat_matrices$Dest\n           Crusoe Muckleford  Timor Wombat\nCrusoe         NA     0.0236 0.0351 0.0434\nMuckleford 0.0236         NA 0.0437 0.0213\nTimor      0.0351     0.0437     NA 0.0657\nWombat     0.0434     0.0213 0.0657     NA\n\n$Stat_matrices$Gst_H\n           Crusoe Muckleford  Timor Wombat\nCrusoe         NA     0.0566 0.0850 0.1047\nMuckleford 0.0566         NA 0.1059 0.0525\nTimor      0.0850     0.1059     NA 0.1603\nWombat     0.1047     0.0525 0.1603     NA\n\n\n[[2]]\n      Stat_tables.Crusoe_vs_Muckleford Stat_tables.Crusoe_vs_Timor\nFst                             0.0148                      0.0171\nFstp                            0.0356                      0.0545\nDest                            0.0236                      0.0351\nGst_H                           0.0566                      0.0850\n      Stat_tables.Crusoe_vs_Wombat Stat_tables.Muckleford_vs_Timor\nFst                         0.0255                          0.0249\nFstp                        0.0669                          0.0681\nDest                        0.0434                          0.0437\nGst_H                       0.1047                          0.1059\n      Stat_tables.Muckleford_vs_Wombat Stat_tables.Timor_vs_Wombat\nFst                             0.0096                      0.0387\nFstp                            0.0337                      0.1046\nDest                            0.0213                      0.0657\nGst_H                           0.0525                      0.1603\n\ndartR.base::gl.report.fstat(EYR.correct, verbose = 0)\n\n   Your plot was not shown in full because your 'Plots' pane\n    is too small. Increase the size of the 'Plots' pane and run the\n    function again. Alternatively, use the parameter 'plot.file' to\n    save the plot to a file.\n\n\n$Stat_matrices\n$Stat_matrices$Fst\n           Crusoe Muckleford  Timor Wombat\nCrusoe         NA     0.0128 0.0168 0.0199\nMuckleford 0.0128         NA 0.0212 0.0085\nTimor      0.0168     0.0212     NA 0.0313\nWombat     0.0199     0.0085 0.0313     NA\n\n$Stat_matrices$Fstp\n           Crusoe Muckleford  Timor Wombat\nCrusoe         NA     0.0317 0.0540 0.0556\nMuckleford 0.0317         NA 0.0608 0.0315\nTimor      0.0540     0.0608     NA 0.0903\nWombat     0.0556     0.0315 0.0903     NA\n\n$Stat_matrices$Dest\n           Crusoe Muckleford  Timor Wombat\nCrusoe         NA     0.0199 0.0337 0.0344\nMuckleford 0.0199         NA 0.0373 0.0189\nTimor      0.0337     0.0373     NA 0.0547\nWombat     0.0344     0.0189 0.0547     NA\n\n$Stat_matrices$Gst_H\n           Crusoe Muckleford  Timor Wombat\nCrusoe         NA     0.0492 0.0832 0.0856\nMuckleford 0.0492         NA 0.0930 0.0480\nTimor      0.0832     0.0930     NA 0.1368\nWombat     0.0856     0.0480 0.1368     NA\n\n\n[[2]]\n      Stat_tables.Crusoe_vs_Muckleford Stat_tables.Crusoe_vs_Timor\nFst                             0.0128                      0.0168\nFstp                            0.0317                      0.0540\nDest                            0.0199                      0.0337\nGst_H                           0.0492                      0.0832\n      Stat_tables.Crusoe_vs_Wombat Stat_tables.Muckleford_vs_Timor\nFst                         0.0199                          0.0212\nFstp                        0.0556                          0.0608\nDest                        0.0344                          0.0373\nGst_H                       0.0856                          0.0930\n      Stat_tables.Muckleford_vs_Wombat Stat_tables.Timor_vs_Wombat\nFst                             0.0085                      0.0313\nFstp                            0.0315                      0.0903\nDest                            0.0189                      0.0547\nGst_H                           0.0480                      0.1368"
  },
  {
    "objectID": "session10.html#exercise-data-3---bull-shark",
    "href": "session10.html#exercise-data-3---bull-shark",
    "title": "10  Sex Linked Markers",
    "section": "Exercise data 3 - Bull shark",
    "text": "Exercise data 3 - Bull shark\nData from Devloo-Delva et al. 2023.\n\n\n\nThe Bull Shark\n\n\n\nLoad data\n\nprint(load(\"data/Bull_shark_DArTseq_genlight_for_sex-linked_markers.Rdata\"))\n\n[1] \"data.gl\"\n\ndata.gl@n.loc\n\n[1] 93202\n\ntable(data.gl@pop)\n\n\nE-ATL  E-IO  Fiji Japan  N-IO W-ATL  W-IO W-PAC \n    2    36     8    14    20    36    40    26 \n\ntable(data.gl@other$ind.metrics$pop)\n\n\nE-ATL  E-IO  Fiji Japan  N-IO W-ATL  W-IO W-PAC \n    2    36     8    14    20    36    40    26 \n\ntable(data.gl@other$ind.metrics$sex, useNA = \"ifany\")\n\n\n   F    M &lt;NA&gt; \n  85   64   33 \n\n\n\n\n1. Number of sex-linked markers?\n\nres &lt;- dartR.sexlinked::filter.sex.linked(gl = data.gl, system = \"xy\", plots = TRUE,\n    ncores = 1)\n\nDetected 85 females and 64 males.\n\n\nStarting phase 1. May take a while...\n\n\nBuilding call rate plots.\n\n\n\n\n\nDone. Starting phase 2.\n\n\nBuilding heterozygosity plots.\n\n\n\n\n\n\n\n\nDone building heterozygosity plots.\n\n\n**FINISHED** Total of analyzed loci: 93202.\nFound 9 sex-linked loci:\n   2 Y-linked loci\n   2 sex-biased loci\n   4 X-linked loci\n   1 XY gametologs.\nAnd 93193 autosomal loci.\n\n\n\n\n\n\n\n2. Individuals with wrong sexID?\n\nsexID &lt;- dartR.sexlinked::infer.sex(gl_sex_filtered = res, system = \"xy\",\n    seed = 124)\n\nNot enough gametologs (need at least 5). Assigning NA...\n\n\n***FINISHED***\n\nknitr::kable(head(sexID))\n\nagreed.sex &lt;- sub(pattern = \"\\\\*\", replacement = \"\", x = sexID$agreed.sex)  # remove asterisk\nsum(data.gl$other$ind.metrics$sex != agreed.sex, na.rm = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nid\ny.linked.sex\n#called\n#missing\nx.linked.sex\n#Het.x\n#Hom.x\ngametolog.sex\n#Het.g\n#Hom.g\nagreed.sex\n\n\n\n\nCL-FIJ002-F\nCL-FIJ002-F\nF\n0\n2\nF\n4\n0\nNA\nNA\nNA\nF\n\n\nCL-FIJ003-M\nCL-FIJ003-M\nM\n2\n0\nM\n0\n4\nNA\nNA\nNA\nM\n\n\nCL-FIJ008-F\nCL-FIJ008-F\nF\n0\n2\nF\n2\n2\nNA\nNA\nNA\nF\n\n\nCL-FIJ010-F\nCL-FIJ010-F\nF\n0\n2\nF\n3\n1\nNA\nNA\nNA\nF\n\n\nCL-FIJ015-F\nCL-FIJ015-F\nF\n0\n2\nF\n4\n0\nNA\nNA\nNA\nF\n\n\nCL-FIJ018-F\nCL-FIJ018-F\nF\n0\n2\nF\n3\n1\nNA\nNA\nNA\nF\n\n\n\n\n\n[1] 8"
  },
  {
    "objectID": "session10.html#exercise-data-4---blue-shark",
    "href": "session10.html#exercise-data-4---blue-shark",
    "title": "10  Sex Linked Markers",
    "section": "Exercise data 4 - Blue shark",
    "text": "Exercise data 4 - Blue shark\nData from Nikolic et al. 2023.\n\n\n\nThe Blue Shark\n\n\n\nLoad data\n\nprint(load(\"data/Blue_shark_DArTseq_genlight_for_sex-linked_markers.Rdata\"))\n\n[1] \"data.gl\"\n\ndata.gl@n.loc\n\n[1] 172384\n\ntable(data.gl@pop)\n\n\n   EIO   MED1   MED2   NATL  NEATL    NIO   NPAC   SAF1   SAF2 SWPAC1 SWPAC2 \n     8     34     20     49     26     27      4     21     89     30     16 \nSWPAC3    WIO \n    11     29 \n\ntable(data.gl@other$ind.metrics$pop)\n\n\n   EIO   MED1   MED2   NATL  NEATL    NIO   NPAC   SAF1   SAF2 SWPAC1 SWPAC2 \n     8     34     20     49     26     27      4     21     89     30     16 \nSWPAC3    WIO \n    11     29 \n\ntable(data.gl@other$ind.metrics$sex, useNA = \"ifany\")\n\n\n   F    M &lt;NA&gt; \n 104  111  149 \n\n\n\n\n1. Number of sex-linked markers?\n\nres &lt;- dartR.sexlinked::filter.sex.linked(gl = data.gl, system = \"xy\", plots = TRUE,\n    ncores = 1)\n\nDetected 104 females and 111 males.\n\n\nStarting phase 1. May take a while...\n\n\nBuilding call rate plots.\n\n\n\n\n\nDone. Starting phase 2.\n\n\nBuilding heterozygosity plots.\n\n\n\n\n\n\n\n\nDone building heterozygosity plots.\n\n\n**FINISHED** Total of analyzed loci: 172384.\nFound 26 sex-linked loci:\n   2 Y-linked loci\n   2 sex-biased loci\n   22 X-linked loci\n   0 XY gametologs.\nAnd 172358 autosomal loci.\n\n\n\n\n\n\n\n2. Individuals with wrong sexID?\n\nsexID &lt;- dartR.sexlinked::infer.sex(gl_sex_filtered = res, system = \"xy\",\n    seed = 124)\n\nNot enough gametologs (need at least 5). Assigning NA...\n\n\n***FINISHED***\n\nknitr::kable(head(sexID))\n\nagreed.sex &lt;- sub(pattern = \"\\\\*\", replacement = \"\", x = sexID$agreed.sex)  # remove asterisk\nsum(data.gl$other$ind.metrics$sex != agreed.sex, na.rm = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nid\ny.linked.sex\n#called\n#missing\nx.linked.sex\n#Het.x\n#Hom.x\ngametolog.sex\n#Het.g\n#Hom.g\nagreed.sex\n\n\n\n\n60088\n60088\nM\n2\n0\nM\n0\n22\nNA\nNA\nNA\nM\n\n\n60160\n60160\nM\n2\n0\nM\n0\n21\nNA\nNA\nNA\nM\n\n\n60168\n60168\nM\n2\n0\nM\n0\n22\nNA\nNA\nNA\nM\n\n\n60176\n60176\nM\n2\n0\nM\n0\n21\nNA\nNA\nNA\nM\n\n\n60096\n60096\nM\n2\n0\nM\n0\n22\nNA\nNA\nNA\nM\n\n\n60104\n60104\nM\n2\n0\nM\n1\n19\nNA\nNA\nNA\nM\n\n\n\n\n\n[1] 22"
  },
  {
    "objectID": "session11.html#required-packages",
    "href": "session11.html#required-packages",
    "title": "11  From Genes to Kin: Dissecting Relatedness & Kinship",
    "section": "Required packages",
    "text": "Required packages\n\nlibrary(dartR.base)\n\nmake sure you have the packages installed, see Install dartRverse"
  },
  {
    "objectID": "session11.html#session-content",
    "href": "session11.html#session-content",
    "title": "11  From Genes to Kin: Dissecting Relatedness & Kinship",
    "section": "Session Content",
    "text": "Session Content\nStill to come…"
  },
  {
    "objectID": "session11.html#exercise",
    "href": "session11.html#exercise",
    "title": "11  From Genes to Kin: Dissecting Relatedness & Kinship",
    "section": "EXERCISE",
    "text": "EXERCISE\n\n\n\n\n\n\nExercise\n\n\n\n Still to come…"
  },
  {
    "objectID": "session11.html#further-study",
    "href": "session11.html#further-study",
    "title": "11  From Genes to Kin: Dissecting Relatedness & Kinship",
    "section": "Further Study",
    "text": "Further Study\nstill to come…"
  },
  {
    "objectID": "session12.html#required-packages",
    "href": "session12.html#required-packages",
    "title": "12  Genetic Structure",
    "section": "Required packages",
    "text": "Required packages\nAs always we need to have dartRverse installed and loaded. In addition you need to have dartR.popgen installend.\n\n#install.packages('gplots')\n#install.packages('iterpc')\n#install.packages('expm')\nlibrary(dartRverse)\nlibrary(dartR.popgen)\n\nmake sure you have the packages installed, see Install dartRverse"
  },
  {
    "objectID": "session12.html#session-content",
    "href": "session12.html#session-content",
    "title": "12  Genetic Structure",
    "section": "Session Content",
    "text": "Session Content"
  },
  {
    "objectID": "session12.html#exercise",
    "href": "session12.html#exercise",
    "title": "12  Genetic Structure",
    "section": "EXERCISE",
    "text": "EXERCISE\n\n\n\n\n\n\nExercise\n\n\n\n Still to come…"
  },
  {
    "objectID": "session12.html#further-study",
    "href": "session12.html#further-study",
    "title": "12  Genetic Structure",
    "section": "Further Study",
    "text": "Further Study\nstill to come…\n\n\n\n\nF. Archer, B. Schneiders, P. Adams. 2016. “strataG: An r Package for Manipulating, Summarizing and Analysing Population Genetic Data.” Molecular Ecology Resources. https://doi.org/10.1111/1755-0998.12559."
  },
  {
    "objectID": "session13.html#required-packages",
    "href": "session13.html#required-packages",
    "title": "13  Combining Genomic Resources",
    "section": "Required packages",
    "text": "Required packages\n\nlibrary(dartR.base)\n\nmake sure you have the packages installed, see Install dartRverse"
  },
  {
    "objectID": "session13.html#session-content",
    "href": "session13.html#session-content",
    "title": "13  Combining Genomic Resources",
    "section": "Session Content",
    "text": "Session Content\nStill to come…"
  },
  {
    "objectID": "session13.html#exercise",
    "href": "session13.html#exercise",
    "title": "13  Combining Genomic Resources",
    "section": "EXERCISE",
    "text": "EXERCISE\n\n\n\n\n\n\nExercise\n\n\n\n Still to come…"
  },
  {
    "objectID": "session13.html#further-study",
    "href": "session13.html#further-study",
    "title": "13  Combining Genomic Resources",
    "section": "Further Study",
    "text": "Further Study\nstill to come…"
  },
  {
    "objectID": "break.html",
    "href": "break.html",
    "title": "__________",
    "section": "",
    "text": "Everything beyond this point is for added learning, we hope you have fun exploring all the amazing things the dartRverse has to offer."
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Devloo‐Delva, Floriaan, Christopher P. Burridge, Peter M. Kyne, Juerg M.\nBrunnschweiler, Demian D. Chapman, Patricia Charvet, Xiao Chen, et al.\n2023. “From Rivers to Ocean Basins: The Role of Ocean\nBarriers and Philopatry in the Genetic Structuring of a Cosmopolitan\nCoastal Predator.” Ecology and Evolution 13 (2): e9837.\nhttps://doi.org/10.1002/ece3.9837.\n\n\nGruber, Bernd, Peter J. Unmack, Oliver F. Berry, and Arthur Georges.\n2018. “DARTR : An R Package\nto Facilitate Analysis of SNP Data Generated from Reduced\nRepresentation Genome Sequencing.” Molecular Ecology\nResources 18 (3): 691–99. https://doi.org/10.1111/1755-0998.12745.\n\n\nJaya, Frederick R., Jessie C. Tanner, Michael R. Whitehead, Paul\nDoughty, J. Scott Keogh, Craig C. Moritz, and Renee A. Catullo. 2022.\n“Population Genomics and Sexual Signals Support Reproductive\nCharacter Displacement in Uperoleia (Anura:\nMyobatrachidae) in a Contact Zone.” Molecular\nEcology 31 (17): 4527–43. https://doi.org/10.1111/mec.16597.\n\n\nLiu, Xiaoming, and Yun-Xin Fu. 2020. “Stairway Plot\n2: Demographic History Inference with Folded SNP Frequency\nSpectra.” Genome Biology 21 (November). https://doi.org/10.1186/s13059-020-02196-9.\n\n\nLynch, Michael, Bernhard Haubold, Peter Pfaffelhuber, and Takahiro\nMaruki. 2019. “Inference of Historical\nPopulation-Size Changes with\nAllele-Frequency Data.”\nG3: GenesGenomesGenetics 10 (1):\n211–23. https://doi.org/10.1534/g3.119.400854.\n\n\nMijangos, Jose Luis, Bernd Gruber, Oliver Berry, Carlo Pacioni, and\nArthur Georges. 2022. “dartR V2:\nAn Accessible Genetic Analysis Platform for Conservation,\nEcology and Agriculture.” Methods in Ecology and\nEvolution 13 (10): 2150–58. https://doi.org/10.1111/2041-210X.13918.\n\n\nNikolic, Natacha, Floriaan Devloo-Delva, Diane Bailleul, Ekaterina\nNoskova, Clément Rougeux, Chrystelle Delord, Philippe Borsa, et al.\n2023. “Stepping up to Genome Scan Allows Stock Differentiation in\nthe Worldwide Distributed Blue Shark Prionace\nGlauca.” Molecular Ecology 32 (5): 1000–1019. https://doi.org/10.1111/mec.16822.\n\n\nRobledo-Ruiz, Diana A., Lana Austin, J. Nevil Amos, Jesús\nCastrejón-Figueroa, Daniel K. P. Harley, Michael J. L. Magrath, Paul\nSunnucks, and Alexandra Pavlova. 2023. “Easy-to-Use R\nFunctions to Separate Reduced-Representation Genomic Datasets into\nSex-Linked and Autosomal Loci, and Conduct Sex Assignment.”\nMolecular Ecology Resources 0 (n/a). https://doi.org/10.1111/1755-0998.13844.\n\n\nSantiago, E., I. Novo, A. F. Pardiñas, M. Saura, J. Wang, and A.\nCaballero. 2020. “Recent Demographic History Inferred by\nHigh-Resolution Analysis of Linkage Disequilibrium.”\nMolecular Biology and Evolution 37 (12): 3642–53. https://doi.org/10.1093/molbev/msaa174."
  },
  {
    "objectID": "useful.html#detailed-program",
    "href": "useful.html#detailed-program",
    "title": "More info",
    "section": "Detailed program",
    "text": "Detailed program\nUnable to display PDF file. Download instead."
  },
  {
    "objectID": "tutorials.html#dartr-rstudio-refresher",
    "href": "tutorials.html#dartr-rstudio-refresher",
    "title": "dartR Tutorials",
    "section": "dartR RStudio Refresher",
    "text": "dartR RStudio Refresher\nUnable to display PDF file. Download instead."
  },
  {
    "objectID": "tutorials.html#dartr-installation",
    "href": "tutorials.html#dartr-installation",
    "title": "dartR Tutorials",
    "section": "dartR Installation",
    "text": "dartR Installation\nUnable to display PDF file. Download instead."
  },
  {
    "objectID": "tutorials.html#data-structure-and-input",
    "href": "tutorials.html#data-structure-and-input",
    "title": "dartR Tutorials",
    "section": "Data Structure and Input",
    "text": "Data Structure and Input\nUnable to display PDF file. Download instead."
  },
  {
    "objectID": "tutorials.html#data-manipulation",
    "href": "tutorials.html#data-manipulation",
    "title": "dartR Tutorials",
    "section": "Data Manipulation",
    "text": "Data Manipulation\nUnable to display PDF file. Download instead."
  },
  {
    "objectID": "tutorials.html#dartr-basic-filtering",
    "href": "tutorials.html#dartr-basic-filtering",
    "title": "dartR Tutorials",
    "section": "dartR Basic Filtering",
    "text": "dartR Basic Filtering\nUnable to display PDF file. Download instead."
  },
  {
    "objectID": "session06.html#load-data-and-explore",
    "href": "session06.html#load-data-and-explore",
    "title": "6  Management of Small Populations",
    "section": "Load data and explore",
    "text": "Load data and explore\nThe data is a subset of the genome-wide SNPs that are publicly available from the following study: Farquharson, K.A., McLennan, E.A., Cheng, Y., Alexander, L., Fox, S., Lee, A.V., Belov, K., Hogg, C.J. (2022). Restoring faith in conservation action: Maintaining wild genetic diversity through the Tasmanian devil insurance program. iScience. 25(7):104474.\nThe study aims were to investigate: 1) The current genetic diversity of Tasmanian devils across their entire range 2) Whether the genetic diversity of the insurance population is representative of the species\nQuestions: - How many SNPs are there? - How many individuals are in the dataset? - What is the distribution of individuals in populations?\n\nload(\"./data/session6_gl.Rdata\")\ngl\n\n /// GENLIGHT OBJECT /////////\n\n // 300 genotypes,  1,663 binary SNPs, size: 1 Mb\n 35182 (7.05 %) missing data\n\n // Basic content\n   @gen: list of 300 SNPbin\n   @ploidy: ploidy of each individual  (range: 2-2)\n\n // Optional content\n   @ind.names:  300 individual labels\n   @loc.names:  1663 locus labels\n   @loc.all:  1663 alleles\n   @pop: population of each individual (group size range: 20-20)\n   @other: a list containing: loc.metrics  loc.metrics.flags  verbose  history  ind.metrics \n\nsummary(gl@pop)\n\n           Bronte          Buckland        Fentonbury ForestierMurdunna \n               20                20                20                20 \n GranvilleHarbour                IP           Kempton       MariaIsland \n               20                20                20                20 \n       Narawntapu     RobbinsIsland      SilverPlains         StonyHead \n               20                20                20                20 \n  TasmanPeninsula         Woolnorth          wukalina \n               20                20                20 \n\n\n\nAllocate colours to populations\nAllocate colours based on site location: East / Central / West Tasmania and captive breeding program.\n\nlevels(gl@pop)\n\n [1] \"Bronte\"            \"Buckland\"          \"Fentonbury\"       \n [4] \"ForestierMurdunna\" \"GranvilleHarbour\"  \"IP\"               \n [7] \"Kempton\"           \"MariaIsland\"       \"Narawntapu\"       \n[10] \"RobbinsIsland\"     \"SilverPlains\"      \"StonyHead\"        \n[13] \"TasmanPeninsula\"   \"Woolnorth\"         \"wukalina\"         \n\n#west = yellow; central = blue; east = green; insurance population/Maria Island = orange\ntascols &lt;- c(\"skyblue\", \"#74c476\", \"skyblue\", \"#74c476\", \"#FDD835\", \"orange\", \"skyblue\",\n             \"orange\", \"skyblue\", \"#FDD835\", \"skyblue\", \"#74c476\", \"#74c476\", \"#FDD835\",\n             \"#74c476\")\n\n\n\nReport minor allele frequency (MAF)\nQuestions: - Do you notice any patterns in minor allele frequency? - Are there differences between the overall MAF distribution and that of individual populations?\n\ngl.report.maf(gl)\n\nStarting gl.report.maf \n  Processing genlight object with SNP data\nStarting gl.report.maf \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population Bronte \n  No. of loci = 1178 \n  No. of individuals = 20 \n    Minimum      :  0.025 \n    1st quantile :  0.0556 \n    Median       :  0.1579 \n    Mean         :  0.1932487 \n    3r quantile  :  0.3125 \n    Maximum      :  0.5 \n    Missing Rate Overall:  0.09 \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population Buckland \n  No. of loci = 1192 \n  No. of individuals = 20 \n    Minimum      :  0.025 \n    1st quantile :  0.075 \n    Median       :  0.175 \n    Mean         :  0.1968565 \n    3r quantile  :  0.3 \n    Maximum      :  0.5 \n    Missing Rate Overall:  0.06 \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population Fentonbury \n  No. of loci = 1131 \n  No. of individuals = 20 \n    Minimum      :  0.025 \n    1st quantile :  0.06905 \n    Median       :  0.1667 \n    Mean         :  0.1972745 \n    3r quantile  :  0.3 \n    Maximum      :  0.5 \n    Missing Rate Overall:  0.14 \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population ForestierMurdunna \n  No. of loci = 1050 \n  No. of individuals = 20 \n    Minimum      :  0.025 \n    1st quantile :  0.0714 \n    Median       :  0.1579 \n    Mean         :  0.1935089 \n    3r quantile  :  0.3 \n    Maximum      :  0.5 \n    Missing Rate Overall:  0.08 \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population GranvilleHarbour \n  No. of loci = 1058 \n  No. of individuals = 20 \n    Minimum      :  0.025 \n    1st quantile :  0.0714 \n    Median       :  0.1667 \n    Mean         :  0.1992999 \n    3r quantile  :  0.3158 \n    Maximum      :  0.5 \n    Missing Rate Overall:  0.07 \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population IP \n  No. of loci = 1239 \n  No. of individuals = 20 \n    Minimum      :  0.025 \n    1st quantile :  0.06875 \n    Median       :  0.15 \n    Mean         :  0.1921601 \n    3r quantile  :  0.3158 \n    Maximum      :  0.5 \n    Missing Rate Overall:  0.04 \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population Kempton \n  No. of loci = 1215 \n  No. of individuals = 20 \n    Minimum      :  0.025 \n    1st quantile :  0.0646 \n    Median       :  0.15 \n    Mean         :  0.1941027 \n    3r quantile  :  0.3 \n    Maximum      :  0.5 \n    Missing Rate Overall:  0.03 \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population MariaIsland \n  No. of loci = 1151 \n  No. of individuals = 20 \n    Minimum      :  0.025 \n    1st quantile :  0.0556 \n    Median       :  0.1389 \n    Mean         :  0.1843479 \n    3r quantile  :  0.2895 \n    Maximum      :  0.5 \n    Missing Rate Overall:  0.08 \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population Narawntapu \n  No. of loci = 1108 \n  No. of individuals = 20 \n    Minimum      :  0.025 \n    1st quantile :  0.070225 \n    Median       :  0.175 \n    Mean         :  0.2010385 \n    3r quantile  :  0.3158 \n    Maximum      :  0.5 \n    Missing Rate Overall:  0.12 \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population RobbinsIsland \n  No. of loci = 858 \n  No. of individuals = 20 \n    Minimum      :  0.025 \n    1st quantile :  0.0526 \n    Median       :  0.1579 \n    Mean         :  0.196336 \n    3r quantile  :  0.325 \n    Maximum      :  0.5 \n    Missing Rate Overall:  0.04 \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population SilverPlains \n  No. of loci = 1160 \n  No. of individuals = 20 \n    Minimum      :  0.025 \n    1st quantile :  0.070225 \n    Median       :  0.1579 \n    Mean         :  0.1978576 \n    3r quantile  :  0.3158 \n    Maximum      :  0.5 \n    Missing Rate Overall:  0.07 \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population StonyHead \n  No. of loci = 1042 \n  No. of individuals = 20 \n    Minimum      :  0.025 \n    1st quantile :  0.075 \n    Median       :  0.175 \n    Mean         :  0.2036118 \n    3r quantile  :  0.325 \n    Maximum      :  0.5 \n    Missing Rate Overall:  0.07 \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population TasmanPeninsula \n  No. of loci = 962 \n  No. of individuals = 20 \n    Minimum      :  0.025 \n    1st quantile :  0.075 \n    Median       :  0.1875 \n    Mean         :  0.208041 \n    3r quantile  :  0.325 \n    Maximum      :  0.5 \n    Missing Rate Overall:  0.05 \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population Woolnorth \n  No. of loci = 935 \n  No. of individuals = 20 \n    Minimum      :  0.025 \n    1st quantile :  0.0667 \n    Median       :  0.1579 \n    Mean         :  0.1929913 \n    3r quantile  :  0.3 \n    Maximum      :  0.5 \n    Missing Rate Overall:  0.03 \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population wukalina \n  No. of loci = 1160 \n  No. of individuals = 20 \n    Minimum      :  0.025 \n    1st quantile :  0.0588 \n    Median       :  0.1579 \n    Mean         :  0.1925116 \n    3r quantile  :  0.3 \n    Maximum      :  0.5 \n    Missing Rate Overall:  0.08 \n\n  Reporting Minor Allele Frequency (MAF) by Locus OVERALL\n  No. of loci = 1663 \n  No. of individuals = 300 \n    Minimum      :  0.0017 \n    1st quantile :  0.0235 \n    Median       :  0.0861 \n    Mean         :  0.1443357 \n    3r quantile  :  0.2419 \n    Maximum      :  0.4996 \n    Missing Rate Overall:  0.07 \n\n\n\n\n\n   Quantile Threshold Retained Percent Filtered Percent\n1      100%    0.4996        1     0.1     1662    99.9\n2       95%    0.4439       84     5.1     1579    94.9\n3       90%    0.3882      167    10.0     1496    90.0\n4       85%    0.3417      250    15.0     1413    85.0\n5       80%    0.2875      333    20.0     1330    80.0\n6       75%    0.2419      417    25.1     1246    74.9\n7       70%    0.1972      499    30.0     1164    70.0\n8       65%    0.1600      583    35.1     1080    64.9\n9       60%    0.1297      666    40.0      997    60.0\n10      55%    0.1070      749    45.0      914    55.0\n11      50%    0.0861      832    50.0      831    50.0\n12      45%    0.0710      915    55.0      748    45.0\n13      40%    0.0572      998    60.0      665    40.0\n14      35%    0.0442     1081    65.0      582    35.0\n15      30%    0.0339     1165    70.1      498    29.9\n16      25%    0.0235     1248    75.0      415    25.0\n17      20%    0.0150     1331    80.0      332    20.0\n18      15%    0.0083     1418    85.3      245    14.7\n19      10%    0.0050     1500    90.2      163     9.8\n20       5%    0.0021     1582    95.1       81     4.9\n21       0%    0.0017     1663   100.0        0     0.0\nCompleted: gl.report.maf \n\n\n\n\nVisualise population structure by PCoA\nRun the PCoA, with points shaded by locations. Questions: - How would you describe any patterns in population structure? - How does the population structure of the insurance population (orange) compare to that of the wild?\n\npcoa &lt;- gl.pcoa(gl)\n\nStarting gl.pcoa \n  Processing genlight object with SNP data\n  Performing a PCA, individuals as entities, loci as attributes, SNP genotype as state\nStarting gl.colors \nSelected color type 2 \nCompleted: gl.colors \n\n\n\n\n\nCompleted: gl.pcoa \n\ngl.pcoa.plot(pcoa, gl)\n\nStarting gl.pcoa.plot \n  Processing an ordination file (glPca)\n  Processing genlight object with SNP data\n  Plotting populations in a space defined by the SNPs\n  Preparing plot .... please wait\n\n\n\n\n\nCompleted: gl.pcoa.plot \n\n#visualise PCoA using the colour groupings of east/central/west/insurance population\ngl.pcoa.plot(pcoa, gl, pt.colors=tascols)\n\nStarting gl.pcoa.plot \n  Processing an ordination file (glPca)\n  Processing genlight object with SNP data\n  Plotting populations in a space defined by the SNPs\n  Preparing plot .... please wait\n\n\n\n\n\nCompleted: gl.pcoa.plot"
  },
  {
    "objectID": "session06.html#calculate-allelic-richness-for-each-population",
    "href": "session06.html#calculate-allelic-richness-for-each-population",
    "title": "6  Management of Small Populations",
    "section": "Calculate allelic richness for each population",
    "text": "Calculate allelic richness for each population\nRequires the hierfstat package, so first load hierfstat with the library function.\n\n#convert the genlight object to genind format\ngi &lt;- gl2gi(gl)\n\nStarting gl2gi \n  Processing genlight object with SNP data\nMatrix converted.. Prepare genind object...\nCompleted: gl2gi \n\n#convert genind object to hierfstat format\nhfstat &lt;- genind2hierfstat(gi)\n\n#calculate allelic richness\nar &lt;- allelic.richness(hfstat)\nnames(ar)\n\n[1] \"min.all\" \"Ar\"     \n\nar$min.all # rarefied to 12, the smallest sample size for a genotyped locus\n\n[1] 12\n\nsummary(ar$Ar) #gives mean AR for each population\n\n     Bronte         Buckland       Fentonbury    ForestierMurdunna\n Min.   :1.000   Min.   :1.000   Min.   :1.000   Min.   :1.000    \n 1st Qu.:1.000   1st Qu.:1.000   1st Qu.:1.000   1st Qu.:1.000    \n Median :1.692   Median :1.717   Median :1.692   Median :1.538    \n Mean   :1.558   Mean   :1.578   Mean   :1.549   Mean   :1.506    \n 3rd Qu.:1.982   3rd Qu.:1.985   3rd Qu.:1.983   3rd Qu.:1.975    \n Max.   :2.000   Max.   :2.000   Max.   :2.000   Max.   :2.000    \n GranvilleHarbour       IP           Kempton       MariaIsland   \n Min.   :1.000    Min.   :1.000   Min.   :1.000   Min.   :1.000  \n 1st Qu.:1.000    1st Qu.:1.000   1st Qu.:1.000   1st Qu.:1.000  \n Median :1.538    Median :1.717   Median :1.692   Median :1.588  \n Mean   :1.508    Mean   :1.588   Mean   :1.575   Mean   :1.537  \n 3rd Qu.:1.977    3rd Qu.:1.981   3rd Qu.:1.985   3rd Qu.:1.975  \n Max.   :2.000    Max.   :2.000   Max.   :2.000   Max.   :2.000  \n   Narawntapu    RobbinsIsland    SilverPlains     StonyHead    \n Min.   :1.000   Min.   :1.000   Min.   :1.000   Min.   :1.000  \n 1st Qu.:1.000   1st Qu.:1.000   1st Qu.:1.000   1st Qu.:1.000  \n Median :1.648   Median :1.300   Median :1.668   Median :1.562  \n Mean   :1.535   Mean   :1.402   Mean   :1.555   Mean   :1.505  \n 3rd Qu.:1.986   3rd Qu.:1.936   3rd Qu.:1.984   3rd Qu.:1.977  \n Max.   :2.000   Max.   :2.000   Max.   :2.000   Max.   :2.000  \n TasmanPeninsula   Woolnorth        wukalina    \n Min.   :1.000   Min.   :1.000   Min.   :1.000  \n 1st Qu.:1.000   1st Qu.:1.000   1st Qu.:1.000  \n Median :1.316   Median :1.300   Median :1.668  \n Mean   :1.466   Mean   :1.443   Mean   :1.550  \n 3rd Qu.:1.981   3rd Qu.:1.948   3rd Qu.:1.976  \n Max.   :2.000   Max.   :2.000   Max.   :2.000  \n\nar &lt;- as.data.frame(ar$Ar)\nmean.ar &lt;- colMeans(ar)\n\nCalculate a measure of variance for allelic richness, e.g. standard error. Standard error = standard deviation / sqrt(n), where n is the number of genotyped loci\n\nsd(ar$Bronte, na.rm=TRUE)/sqrt(nrow(ar) - length(which(is.na(ar$Bronte))))\n\n[1] 0.01017173\n\n\nBoxplot of allelic richness per population: Questions: - Which populations have the highest and the lowest allelic richness? Can you think of any explanation?\n\n#first, extend the margins of the graphing window to fit long axis labels\npar(mar=c(8,3,3,3))\nboxplot(ar, ylab=\"Allelic richness\", las=2, col=tascols)\n\n\n\n#order boxplot to group locations by west, central, east, insurance population\nar.ordered &lt;- ar[,c(10, 14, 5, 1, 3, 11, 9, 7, 13, 4, 12, 15, 2, 6, 8)]\ntascols.ordered &lt;- tascols[c(10,14,5,1,3,11,9,7,13,4,12,15,2,6,8)]\nboxplot(ar.ordered, ylab=\"Allelic richness\", las=2, col=tascols.ordered)"
  },
  {
    "objectID": "session06.html#calculate-heterozygosity-statistics-for-each-population",
    "href": "session06.html#calculate-heterozygosity-statistics-for-each-population",
    "title": "6  Management of Small Populations",
    "section": "Calculate heterozygosity statistics for each population",
    "text": "Calculate heterozygosity statistics for each population\nThe function gl.report.heterozygosity reports the observed, expected, and unbiased heterozygosities and Fis (inbreeding coefficient) by population or the observed heterozygosity for each individual in a genlight object.\nCalculate heterozygosity and inbreeding statistics for each population. Note that the plot is ordered by default from lowest to highest heterozygosity.\nQuestions: - Which populations have the highest and lowest heterozygosity? - Within a population, do you notice any patterns of observed compared to expected heterozygosity from the graph? What about Fis?\n\n#use the ? to search the help for a function and see what options can be specified\n#?gl.report.heterozygosity\nhets &lt;- gl.report.heterozygosity(gl, method=\"pop\",plot.colors.pop = tascols)\n\nStarting gl.report.heterozygosity \n  Processing genlight object with SNP data\n  Calculating Observed Heterozygosities, averaged across\n                    loci, for each population\n  Calculating Expected Heterozygosities\n\n\n\n\n\n                                pop    n.Ind n.Loc n.Loc.adj polyLoc monoLoc\nBronte                       Bronte 18.02285  1663         1    1178     485\nBuckland                   Buckland 18.71257  1663         1    1192     471\nFentonbury               Fentonbury 17.15394  1663         1    1131     532\nForestierMurdunna ForestierMurdunna 18.42694  1663         1    1050     613\nGranvilleHarbour   GranvilleHarbour 18.59952  1663         1    1058     605\nIP                               IP 19.15695  1663         1    1239     424\nKempton                     Kempton 19.31209  1663         1    1215     448\nMariaIsland             MariaIsland 18.28322  1663         1    1151     512\nNarawntapu               Narawntapu 17.49008  1663         1    1108     555\nRobbinsIsland         RobbinsIsland 19.25376  1663         1     858     805\nSilverPlains           SilverPlains 18.55081  1663         1    1160     503\nStonyHead                 StonyHead 18.78593  1663         1    1042     621\nTasmanPeninsula     TasmanPeninsula 19.17739  1663         1     962     701\nWoolnorth                 Woolnorth 19.57547  1663         1     935     728\nwukalina                   wukalina 18.34275  1663         1    1160     503\n                  all_NALoc       Ho     HoSD     HoSE HoLCI HoHCI   Ho.adj\nBronte                    0 0.179996 0.183418 0.004498    NA    NA 0.179996\nBuckland                  0 0.197586 0.190966 0.004683    NA    NA 0.197586\nFentonbury                0 0.182757 0.191409 0.004694    NA    NA 0.182757\nForestierMurdunna         0 0.176872 0.199446 0.004891    NA    NA 0.176872\nGranvilleHarbour          0 0.168749 0.187710 0.004603    NA    NA 0.168749\nIP                        0 0.195225 0.183868 0.004509    NA    NA 0.195225\nKempton                   0 0.191338 0.186795 0.004581    NA    NA 0.191338\nMariaIsland               0 0.172589 0.181246 0.004444    NA    NA 0.172589\nNarawntapu                0 0.190309 0.201556 0.004943    NA    NA 0.190309\nRobbinsIsland             0 0.138154 0.186892 0.004583    NA    NA 0.138154\nSilverPlains              0 0.184496 0.189312 0.004642    NA    NA 0.184496\nStonyHead                 0 0.178307 0.199528 0.004893    NA    NA 0.178307\nTasmanPeninsula           0 0.171776 0.203659 0.004994    NA    NA 0.171776\nWoolnorth                 0 0.151634 0.187370 0.004595    NA    NA 0.151634\nwukalina                  0 0.178577 0.183757 0.004506    NA    NA 0.178577\n                  Ho.adjSD Ho.adjSE Ho.adjLCI Ho.adjHCI       He     HeSD\nBronte            0.183418 0.004498        NA        NA 0.191019 0.181399\nBuckland          0.190966 0.004683        NA        NA 0.198461 0.180158\nFentonbury        0.191409 0.004694        NA        NA 0.187777 0.181461\nForestierMurdunna 0.199446 0.004891        NA        NA 0.172591 0.180186\nGranvilleHarbour  0.187710 0.004603        NA        NA 0.176181 0.183623\nIP                0.183868 0.004509        NA        NA 0.200251 0.179103\nKempton           0.186795 0.004581        NA        NA 0.197628 0.181002\nMariaIsland       0.181246 0.004444        NA        NA 0.179993 0.177912\nNarawntapu        0.201556 0.004943        NA        NA 0.185845 0.184629\nRobbinsIsland     0.186892 0.004583        NA        NA 0.139935 0.179352\nSilverPlains      0.189312 0.004642        NA        NA 0.191562 0.182624\nStonyHead         0.199528 0.004893        NA        NA 0.176730 0.184918\nTasmanPeninsula   0.203659 0.004994        NA        NA 0.166905 0.187410\nWoolnorth         0.187370 0.004595        NA        NA 0.151784 0.178359\nwukalina          0.183757 0.004506        NA        NA 0.187558 0.180554\n                      HeSE HeLCI HeHCI      uHe    uHeSD    uHeSE uHeLCI uHeHCI\nBronte            0.004448    NA    NA 0.196470 0.186575 0.004575     NA     NA\nBuckland          0.004418    NA    NA 0.203909 0.185104 0.004539     NA     NA\nFentonbury        0.004450    NA    NA 0.193414 0.186909 0.004583     NA     NA\nForestierMurdunna 0.004418    NA    NA 0.177405 0.185211 0.004542     NA     NA\nGranvilleHarbour  0.004503    NA    NA 0.181048 0.188696 0.004627     NA     NA\nIP                0.004392    NA    NA 0.205617 0.183903 0.004510     NA     NA\nKempton           0.004439    NA    NA 0.202880 0.185813 0.004556     NA     NA\nMariaIsland       0.004363    NA    NA 0.185054 0.182914 0.004485     NA     NA\nNarawntapu        0.004527    NA    NA 0.191314 0.190062 0.004661     NA     NA\nRobbinsIsland     0.004398    NA    NA 0.143666 0.184133 0.004515     NA     NA\nSilverPlains      0.004478    NA    NA 0.196868 0.187683 0.004602     NA     NA\nStonyHead         0.004535    NA    NA 0.181563 0.189975 0.004659     NA     NA\nTasmanPeninsula   0.004596    NA    NA 0.171373 0.192427 0.004719     NA     NA\nWoolnorth         0.004374    NA    NA 0.155763 0.183034 0.004488     NA     NA\nwukalina          0.004428    NA    NA 0.192814 0.185614 0.004552     NA     NA\n                    He.adj He.adjSD He.adjSE He.adjLCI He.adjHCI      FIS\nBronte            0.191019 0.181399 0.004448        NA        NA 0.065498\nBuckland          0.198461 0.180158 0.004418        NA        NA 0.027938\nFentonbury        0.187777 0.181461 0.004450        NA        NA 0.048542\nForestierMurdunna 0.172591 0.180186 0.004418        NA        NA 0.015203\nGranvilleHarbour  0.176181 0.183623 0.004503        NA        NA 0.058696\nIP                0.200251 0.179103 0.004392        NA        NA 0.036454\nKempton           0.197628 0.181002 0.004439        NA        NA 0.041341\nMariaIsland       0.179993 0.177912 0.004363        NA        NA 0.049162\nNarawntapu        0.185845 0.184629 0.004527        NA        NA 0.005557\nRobbinsIsland     0.139935 0.179352 0.004398        NA        NA 0.034448\nSilverPlains      0.191562 0.182624 0.004478        NA        NA 0.055302\nStonyHead         0.176730 0.184918 0.004535        NA        NA 0.018753\nTasmanPeninsula   0.166905 0.187410 0.004596        NA        NA 0.007672\nWoolnorth         0.151784 0.178359 0.004374        NA        NA 0.023129\nwukalina          0.187558 0.180554 0.004428        NA        NA 0.059040\n                     FISSD    FISSE FISLCI FISHCI\nBronte            0.248832 0.006102     NA     NA\nBuckland          0.223972 0.005492     NA     NA\nFentonbury        0.241005 0.005910     NA     NA\nForestierMurdunna 0.252059 0.006181     NA     NA\nGranvilleHarbour  0.248559 0.006095     NA     NA\nIP                0.215288 0.005279     NA     NA\nKempton           0.228187 0.005596     NA     NA\nMariaIsland       0.235558 0.005776     NA     NA\nNarawntapu        0.227638 0.005582     NA     NA\nRobbinsIsland     0.232899 0.005711     NA     NA\nSilverPlains      0.239884 0.005882     NA     NA\nStonyHead         0.236655 0.005803     NA     NA\nTasmanPeninsula   0.237243 0.005818     NA     NA\nWoolnorth         0.227312 0.005574     NA     NA\nwukalina          0.251719 0.006173     NA     NA\nCompleted: gl.report.heterozygosity \n\n\nWe can use the same function, but switch the method from “pop” to “ind” to calculate individual-level observed heterozygosity. This can be useful if you are investigating invidiual-level diversity, and may also be useful in assessing the impact of sample quality and missing data on your results.\nQuestion: - What are some possible explanations for outliers with low individual observed heterozygosity?\n\nind.hets &lt;- gl.report.heterozygosity(gl, method=\"ind\")\n\nStarting gl.report.heterozygosity \n  Processing genlight object with SNP data\n  Calculating observed heterozygosity for individuals\n  Note: No adjustment for invariant loci (n.invariant set to 0)\nStarting gl.colors \nSelected color type 2 \nCompleted: gl.colors \n\n\n\n\n\n               ind.name         Ho  f.hom.ref f.hom.alt\n  F_ForestierMurdunna_4 0.17416830 0.00000000 0.8258317\n  M_ForestierMurdunna_5 0.19986720 0.03984064 0.7602922\n  M_ForestierMurdunna_2 0.12183436 0.07323751 0.8049281\n  F_ForestierMurdunna_8 0.15145228 0.06431535 0.7842324\n  M_ForestierMurdunna_4 0.20176630 0.04211957 0.7561141\n  F_ForestierMurdunna_1 0.21088435 0.03945578 0.7496599\n  F_ForestierMurdunna_6 0.13034623 0.06992532 0.7997284\n  M_ForestierMurdunna_7 0.18199737 0.04664915 0.7713535\n  F_ForestierMurdunna_7 0.15210140 0.06470981 0.7831888\n       M_MariaIsland_10 0.13666667 0.06466667 0.7986667\n  F_ForestierMurdunna_5 0.17647059 0.04464918 0.7788802\n  M_ForestierMurdunna_3 0.15633423 0.05997305 0.7836927\n      F_MariaIsland_101 0.20630019 0.04570723 0.7479926\n        M_MariaIsland_1 0.21591610 0.05120296 0.7328809\n      M_MariaIsland_102 0.19385194 0.04893350 0.7572146\n      M_MariaIsland_101 0.18607595 0.06139241 0.7525316\n      M_MariaIsland_103 0.17841270 0.06476190 0.7568254\n          U_Buckland_10 0.22365196 0.05392157 0.7224265\n          U_Buckland_12 0.21782178 0.05693069 0.7252475\n          U_Buckland_14 0.21113831 0.05936353 0.7294982\n          U_Buckland_15 0.20519159 0.06427689 0.7305315\n          U_Buckland_16 0.14285714 0.10518053 0.7519623\n          U_Buckland_18 0.21723077 0.05107692 0.7316923\n          U_Buckland_19 0.21568627 0.04289216 0.7414216\n  F_ForestierMurdunna_3 0.18404118 0.04633205 0.7696268\n                F_IP_10 0.16167665 0.06719894 0.7711244\n  M_ForestierMurdunna_1 0.18642993 0.04375396 0.7698161\n  M_ForestierMurdunna_6 0.17256637 0.06005057 0.7673831\n  M_ForestierMurdunna_8 0.15786040 0.05936073 0.7827789\n                 M_IP_1 0.19079755 0.06196319 0.7472393\n      M_MariaIsland_100 0.15374593 0.06905537 0.7771987\n      M_MariaIsland_104 0.17524510 0.06372549 0.7610294\n          U_Woolnorth_1 0.15837937 0.07612032 0.7655003\n          U_Woolnorth_2 0.17460317 0.05433455 0.7710623\n          U_Woolnorth_3 0.13292308 0.07876923 0.7883077\n          U_Woolnorth_4 0.14769231 0.08492308 0.7673846\n          U_Woolnorth_5 0.14628150 0.06945298 0.7842655\n         U_Woolnorth_10 0.14972274 0.06962415 0.7806531\n         U_Woolnorth_11 0.16002491 0.06911582 0.7708593\n         U_Woolnorth_12 0.16469857 0.07147296 0.7638285\n         U_Woolnorth_13 0.15136476 0.06513648 0.7834988\n         U_Woolnorth_14 0.16594695 0.07896360 0.7550895\n         U_Woolnorth_15 0.16717886 0.07621389 0.7566073\n         U_Woolnorth_16 0.15040398 0.08390305 0.7656930\n         U_Woolnorth_17 0.16717886 0.06637984 0.7664413\n  U_ForestierMurdunna_1 0.19389027 0.06795511 0.7381546\n    U_TasmanPeninsula_1 0.17458359 0.06539173 0.7600247\n    U_TasmanPeninsula_2 0.20858896 0.04846626 0.7429448\n    U_TasmanPeninsula_3 0.16369231 0.05292308 0.7833846\n    U_TasmanPeninsula_4 0.14108142 0.07520199 0.7837166\n    U_TasmanPeninsula_5 0.20000000 0.04135802 0.7586420\n    U_TasmanPeninsula_6 0.18164910 0.05021699 0.7681339\n    U_TasmanPeninsula_7 0.17650677 0.05473555 0.7687577\n   U_TasmanPeninsula_10 0.09591584 0.09467822 0.8094059\n   U_TasmanPeninsula_11 0.18734491 0.05210918 0.7605459\n               M_IP_101 0.19631902 0.06012270 0.7435583\n               M_IP_100 0.19159456 0.06613103 0.7422744\n               F_IP_104 0.21136225 0.04276115 0.7458766\n               F_IP_106 0.23870574 0.05067155 0.7106227\n               M_IP_107 0.22167183 0.05077399 0.7275542\n               F_IP_100 0.20158343 0.05846529 0.7399513\n               M_IP_105 0.21340713 0.05535055 0.7312423\n               F_IP_102 0.20599022 0.06662592 0.7273839\n               F_IP_103 0.20689655 0.06958128 0.7235222\n               M_IP_102 0.23967961 0.05237215 0.7079482\n               M_IP_103 0.16656461 0.06674832 0.7666871\n               F_IP_101 0.18571429 0.05652174 0.7577640\n               F_IP_105 0.19975490 0.06004902 0.7401961\n               F_IP_107 0.19378428 0.05362584 0.7525899\n               M_IP_106 0.19531731 0.06592730 0.7387554\n               M_IP_104 0.19583843 0.06854345 0.7356181\n        F_Narawntapu_11 0.18839676 0.06550218 0.7461011\n        F_Narawntapu_12 0.21589487 0.05193992 0.7321652\n        F_Narawntapu_13 0.20415879 0.05040958 0.7454316\n        F_Narawntapu_15 0.20000000 0.07586207 0.7241379\n        F_Narawntapu_16 0.20312500 0.05750000 0.7393750\n        F_Narawntapu_17 0.19328264 0.05830165 0.7484157\n        F_Narawntapu_18 0.18730554 0.04729309 0.7654014\n      F_RobbinsIsland_3 0.12991128 0.07287706 0.7972117\n      F_RobbinsIsland_6 0.13215859 0.08999371 0.7778477\n        M_Narawntapu_12 0.21695130 0.04996837 0.7330803\n        M_Narawntapu_13 0.19397363 0.04770873 0.7583176\n        M_Narawntapu_14 0.17553957 0.05611511 0.7683453\n      M_RobbinsIsland_1 0.14038343 0.08225108 0.7773655\n      M_RobbinsIsland_2 0.14860681 0.07244582 0.7789474\n      M_RobbinsIsland_4 0.13000000 0.08125000 0.7887500\n      M_RobbinsIsland_7 0.12083333 0.07777778 0.8013889\n      M_RobbinsIsland_8 0.14285714 0.08208020 0.7750627\n      M_RobbinsIsland_9 0.15166461 0.08508015 0.7632552\n     M_RobbinsIsland_10 0.09255242 0.11424440 0.7932032\n     M_RobbinsIsland_11 0.11124845 0.09332509 0.7954265\n     M_RobbinsIsland_12 0.14996849 0.08002520 0.7700063\n      F_MariaIsland_102 0.19093851 0.05048544 0.7585761\n      F_MariaIsland_103 0.18941868 0.05094709 0.7596342\n      F_MariaIsland_105 0.05405405 0.11261261 0.8333333\n           M_wukalina_1 0.15709091 0.06545455 0.7774545\n         F_StonyHead_18 0.16919026 0.05266623 0.7781435\n          F_wukalina_17 0.18232429 0.04592902 0.7717467\n           F_Buckland_1 0.18911375 0.05512910 0.7557572\n           F_Buckland_2 0.18321119 0.05729514 0.7594937\n           F_Buckland_4 0.19346405 0.05228758 0.7542484\n           F_Buckland_5 0.21354167 0.04036458 0.7460938\n           M_Buckland_1 0.19486504 0.04871626 0.7564187\n         M_StonyHead_10 0.15522985 0.07195203 0.7728181\n         M_StonyHead_17 0.16979866 0.05906040 0.7711409\n         M_StonyHead_18 0.19462228 0.05121639 0.7541613\n          M_wukalina_14 0.17203608 0.07216495 0.7557990\n           M_Buckland_2 0.19281915 0.04055851 0.7666223\n           M_Buckland_3 0.17529331 0.05452036 0.7701863\n         F_Fentonbury_3 0.21660182 0.05317769 0.7302205\n         F_Fentonbury_4 0.17603250 0.06364252 0.7603250\n         F_Fentonbury_6 0.22122762 0.05179028 0.7269821\n        F_Fentonbury_10 0.18110236 0.07152231 0.7473753\n        F_Fentonbury_14 0.19901547 0.04641350 0.7545710\n        F_Fentonbury_15 0.18444730 0.06876607 0.7467866\n        F_Fentonbury_16 0.15643713 0.07934132 0.7642216\n        F_Fentonbury_18 0.22006472 0.04854369 0.7313916\n        F_Fentonbury_19 0.16122715 0.07702350 0.7617493\n        F_Fentonbury_21 0.18402556 0.06964856 0.7463259\n         M_Fentonbury_1 0.05645161 0.14314516 0.8004032\n         M_Fentonbury_2 0.16357388 0.06185567 0.7745704\n         M_Fentonbury_5 0.14184953 0.08542320 0.7727273\n         M_Fentonbury_8 0.18750000 0.06119792 0.7513021\n         M_Fentonbury_9 0.19763092 0.05673317 0.7456359\n        M_Fentonbury_10 0.20195440 0.05602606 0.7420195\n        M_Fentonbury_11 0.20616570 0.05716121 0.7366731\n        M_Fentonbury_12 0.18990890 0.06377015 0.7463210\n        M_Fentonbury_13 0.19751472 0.06213211 0.7403532\n        M_Fentonbury_14 0.10676835 0.10867493 0.7845567\n        M_Narawntapu_16 0.14798206 0.04708520 0.8049327\n        M_Narawntapu_17 0.16179775 0.05842697 0.7797753\n        M_Narawntapu_18 0.17898194 0.05911330 0.7619048\n   U_TasmanPeninsula_13 0.21032505 0.05863607 0.7310389\n      F_MariaIsland_106 0.13262999 0.08590806 0.7814619\n                M_IP_10 0.10912191 0.12190963 0.7689685\n    M_TasmanPeninsula_1 0.17071651 0.06417445 0.7651090\n    M_TasmanPeninsula_2 0.15580385 0.05772812 0.7864680\n    M_TasmanPeninsula_3 0.20261845 0.04114713 0.7562344\n    F_TasmanPeninsula_1 0.16666667 0.05555556 0.7777778\n    F_TasmanPeninsula_2 0.17814277 0.04927353 0.7725837\n    F_TasmanPeninsula_3 0.16781465 0.07388854 0.7582968\n    M_TasmanPeninsula_5 0.19569231 0.05292308 0.7513846\n           F_wukalina_1 0.19888129 0.05717837 0.7439403\n          F_wukalina_10 0.17635659 0.05167959 0.7719638\n          F_wukalina_11 0.22107969 0.03856041 0.7403599\n          F_wukalina_12 0.17354839 0.06322581 0.7632258\n          F_wukalina_13 0.20093771 0.03482920 0.7642331\n          F_wukalina_14 0.13440111 0.09401114 0.7715877\n          F_wukalina_15 0.18163934 0.05377049 0.7645902\n          F_wukalina_16 0.20420624 0.05698779 0.7388060\n    M_TasmanPeninsula_4 0.14019851 0.07133995 0.7884615\n    M_TasmanPeninsula_6 0.15613148 0.06826802 0.7756005\n          M_wukalina_10 0.19530755 0.05136335 0.7533291\n          M_wukalina_11 0.16431925 0.07712944 0.7585513\n          M_wukalina_12 0.19670051 0.05647208 0.7468274\n          M_wukalina_13 0.17337662 0.07337662 0.7532468\n          M_wukalina_15 0.18699690 0.06439628 0.7486068\n          M_wukalina_16 0.16923077 0.06666667 0.7641026\n          M_wukalina_18 0.15352408 0.07676204 0.7697139\n          F_StonyHead_1 0.17728707 0.06750789 0.7552050\n             F_Bronte_1 0.18263091 0.06577267 0.7515964\n             F_Bronte_2 0.17739899 0.05429293 0.7683081\n             F_Bronte_3 0.19204043 0.05748579 0.7504738\n             F_Bronte_4 0.16467463 0.06308101 0.7722444\n             F_Bronte_5 0.18637771 0.07368421 0.7399381\n             F_Bronte_6 0.18204489 0.06172070 0.7562344\n             F_Bronte_7 0.04873294 0.11890838 0.8323587\n             F_Bronte_8 0.20313480 0.06645768 0.7304075\n             F_Bronte_9 0.19195046 0.05510836 0.7529412\n         F_StonyHead_12 0.17323327 0.06253909 0.7642276\n            F_Bronte_10 0.08850458 0.12512716 0.7863683\n            F_Bronte_11 0.17531646 0.06898734 0.7556962\n            F_Kempton_1 0.19667944 0.04725415 0.7560664\n            F_Kempton_3 0.17910448 0.04228856 0.7786070\n          F_wukalina_18 0.17916925 0.05703658 0.7637942\n            F_Kempton_6 0.18659987 0.05322480 0.7601753\n            F_Kempton_7 0.17816813 0.05959849 0.7622334\n            M_Kempton_1 0.19900806 0.05269684 0.7482951\n            M_Kempton_2 0.21725636 0.05586592 0.7268777\n             M_Bronte_1 0.19739292 0.06579764 0.7368094\n             M_Bronte_2 0.20625000 0.06625000 0.7275000\n             M_Bronte_3 0.19228376 0.07093964 0.7367766\n             M_Bronte_4 0.21777222 0.05944931 0.7227785\n             M_Bronte_5 0.19901112 0.05871446 0.7422744\n             M_Bronte_6 0.20917085 0.06155779 0.7292714\n             M_Bronte_7 0.21036205 0.05617978 0.7334582\n             M_Bronte_8 0.08240223 0.11033520 0.8072626\n             M_Bronte_9 0.17920918 0.06058673 0.7602041\n         M_StonyHead_13 0.16434893 0.06131479 0.7743363\n         M_StonyHead_14 0.19003115 0.05358255 0.7563863\n         M_StonyHead_15 0.15590346 0.07762557 0.7664710\n            M_Kempton_3 0.17402769 0.06526038 0.7607119\n            M_Kempton_5 0.20838548 0.05819775 0.7334168\n           M_Kempton_12 0.22919255 0.06956522 0.7012422\n           M_Kempton_13 0.19394330 0.06185567 0.7442010\n          M_wukalina_17 0.18134715 0.06217617 0.7564767\n       F_SilverPlains_1 0.16456536 0.06967485 0.7657598\n       F_SilverPlains_2 0.19383260 0.05475142 0.7514160\n      F_MariaIsland_107 0.19335142 0.05630936 0.7503392\n       F_SilverPlains_3 0.21055980 0.05597964 0.7334606\n       F_SilverPlains_4 0.18227848 0.06012658 0.7575949\n       F_SilverPlains_5 0.19872204 0.05942492 0.7418530\n       F_SilverPlains_6 0.18431635 0.05630027 0.7593834\n       F_SilverPlains_7 0.14950635 0.07968970 0.7708039\n       F_SilverPlains_8 0.18705958 0.05957719 0.7533632\n       F_SilverPlains_9 0.19177215 0.06455696 0.7436709\n      F_SilverPlains_10 0.16237482 0.06938484 0.7682403\n      F_SilverPlains_11 0.23975155 0.04285714 0.7173913\n      F_SilverPlains_12 0.20200753 0.06273526 0.7352572\n       M_SilverPlains_1 0.18847840 0.06261741 0.7489042\n       M_SilverPlains_2 0.16106443 0.07983193 0.7591036\n       M_SilverPlains_3 0.20353982 0.06131479 0.7351454\n       M_SilverPlains_4 0.17245817 0.08108108 0.7464607\n       M_SilverPlains_5 0.14236824 0.09445585 0.7631759\n       M_SilverPlains_6 0.18292683 0.05969191 0.7573813\n       M_SilverPlains_7 0.19748428 0.06729560 0.7352201\n       M_SilverPlains_8 0.19764560 0.07001239 0.7323420\n          M_Woolnorth_3 0.15009265 0.06547251 0.7844348\n  F_GranvilleHarbour_10 0.20335700 0.05616527 0.7404777\n  F_GranvilleHarbour_11 0.16181449 0.07109005 0.7670955\n  F_GranvilleHarbour_12 0.18520860 0.05941846 0.7553729\n  F_GranvilleHarbour_13 0.15682415 0.06824147 0.7749344\n  F_GranvilleHarbour_14 0.14406230 0.07852044 0.7774173\n  F_GranvilleHarbour_15 0.20038660 0.07087629 0.7287371\n  F_GranvilleHarbour_16 0.09542484 0.09215686 0.8124183\n  F_GranvilleHarbour_17 0.19530755 0.05960685 0.7450856\n  F_GranvilleHarbour_18 0.17394095 0.06482670 0.7612323\n         F_Narawntapu_1 0.19973280 0.03540414 0.7648631\n         F_StonyHead_10 0.16871364 0.06528765 0.7659987\n         F_StonyHead_11 0.17965229 0.05280103 0.7675467\n         F_StonyHead_13 0.19610390 0.06168831 0.7422078\n         F_StonyHead_14 0.18045603 0.04039088 0.7791531\n        F_Narawntapu_10 0.20251489 0.06353408 0.7339510\n  M_GranvilleHarbour_10 0.17857143 0.06265664 0.7587719\n  M_GranvilleHarbour_11 0.16869788 0.07119949 0.7601026\n  M_GranvilleHarbour_12 0.19038462 0.06410256 0.7455128\n  M_GranvilleHarbour_13 0.17773561 0.06325111 0.7590133\n  M_GranvilleHarbour_14 0.17289424 0.07093097 0.7561748\n  M_GranvilleHarbour_15 0.16987179 0.06602564 0.7641026\n  M_GranvilleHarbour_16 0.16519973 0.07582938 0.7589709\n  M_GranvilleHarbour_17 0.17517241 0.06620690 0.7586207\n  M_GranvilleHarbour_18 0.16502947 0.06417813 0.7707924\n         M_StonyHead_12 0.18063678 0.06692658 0.7524366\n         M_StonyHead_16 0.18981772 0.05468259 0.7554997\n        M_Narawntapu_11 0.13982180 0.07128170 0.7888965\n        F_MariaIsland_1 0.18115942 0.06280193 0.7560386\n       F_MariaIsland_10 0.15974026 0.06038961 0.7798701\n  F_ForestierMurdunna_9 0.18822101 0.05585914 0.7559199\n   F_GranvilleHarbour_1 0.19661222 0.06896552 0.7344223\n      F_MariaIsland_104 0.16053922 0.07352941 0.7659314\n          F_Woolnorth_1 0.14207981 0.07557437 0.7823458\n         F_StonyHead_16 0.18359853 0.04957160 0.7668299\n         F_StonyHead_17 0.17675378 0.04470426 0.7785420\n            F_Kempton_2 0.19413919 0.06593407 0.7399267\n            F_Kempton_4 0.18328173 0.07058824 0.7461300\n          F_Woolnorth_3 0.14459295 0.07594168 0.7794654\n          F_Woolnorth_4 0.12719564 0.09085403 0.7819503\n           F_Buckland_3 0.18329177 0.06172070 0.7549875\n      F_RobbinsIsland_1 0.15333333 0.07272727 0.7739394\n      F_RobbinsIsland_2 0.13534743 0.07794562 0.7867069\n      F_RobbinsIsland_4 0.13677812 0.07963526 0.7835866\n      F_RobbinsIsland_5 0.14905315 0.07452657 0.7764203\n      F_RobbinsIsland_7 0.12484700 0.08935129 0.7858017\n      F_RobbinsIsland_8 0.14070048 0.08454106 0.7747585\n  M_ForestierMurdunna_9 0.18574109 0.05565979 0.7585991\n      M_MariaIsland_105 0.15175333 0.07496977 0.7732769\n      M_MariaIsland_106 0.16080097 0.06250000 0.7766990\n      M_MariaIsland_107 0.15932408 0.06578153 0.7748944\n          M_Woolnorth_1 0.16266174 0.06284658 0.7744917\n   M_GranvilleHarbour_1 0.12008005 0.09939960 0.7805203\n          M_StonyHead_1 0.16180049 0.06021898 0.7779805\n         M_StonyHead_11 0.18661756 0.05524862 0.7581338\n            M_Kempton_4 0.16919345 0.06791995 0.7628866\n            M_Kempton_6 0.15271266 0.08037508 0.7669123\n            M_Kempton_7 0.18624467 0.06634206 0.7474133\n            M_Kempton_8 0.19657073 0.07103491 0.7323944\n           M_Kempton_10 0.19660194 0.07099515 0.7324029\n           M_Kempton_11 0.20255474 0.06690998 0.7305353\n           M_Kempton_14 0.19547954 0.07697007 0.7275504\n          M_Woolnorth_2 0.12515115 0.09854897 0.7762999\n        M_Narawntapu_15 0.19236527 0.05988024 0.7477545\n        M_Narawntapu_19 0.16601101 0.07002360 0.7639654\n      M_RobbinsIsland_3 0.14062500 0.07625000 0.7831250\n      M_RobbinsIsland_5 0.13834951 0.09223301 0.7694175\n      M_RobbinsIsland_6 0.16494845 0.06428138 0.7707702\n           U_Buckland_1 0.21246973 0.05811138 0.7294189\n           U_Buckland_2 0.21372192 0.04918033 0.7370978\n          U_Buckland_11 0.13101983 0.09419263 0.7747875\n          U_Buckland_13 0.21783981 0.04975728 0.7324029\n          U_Buckland_17 0.21173624 0.05686630 0.7313975\n   U_TasmanPeninsula_12 0.13308271 0.06390977 0.8030075\n  F_ForestierMurdunna_2 0.18864469 0.04761905 0.7637363\n F_ForestierMurdunna_10 0.17819963 0.05756277 0.7642376\n         F_StonyHead_15 0.19199500 0.06003752 0.7479675\n                 F_IP_1 0.17046980 0.04832215 0.7812081\n      F_MariaIsland_100 0.20231566 0.04509445 0.7525899\n        F_Narawntapu_14 0.20945946 0.05466830 0.7358722\n            F_Kempton_5 0.19515152 0.06727273 0.7375758\n          F_Woolnorth_2 0.13934929 0.08901166 0.7716390\n        M_Narawntapu_10 0.18390805 0.05747126 0.7586207\nCompleted: gl.report.heterozygosity"
  },
  {
    "objectID": "session06.html#genetic-differentiation-by-fst",
    "href": "session06.html#genetic-differentiation-by-fst",
    "title": "6  Management of Small Populations",
    "section": "Genetic differentiation by Fst",
    "text": "Genetic differentiation by Fst\nCalculate pairwise Fsts between populations. Question: - Which populations have the largest pairwise Fst value? Where are these populations located? - Compare the largest Fst value with the PCoA you made earlier. What do you notice?\n\nfsts &lt;- gl.fst.pop(gl, nboots=1000, percent=95)\n\nStarting gl.fst.pop \n  Processing genlight object with SNP data\nCompleted: gl.fst.pop \n\nknitr::kable((fsts$Fsts))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nForestierMurdunna\nMariaIsland\nBuckland\nIP\nWoolnorth\nTasmanPeninsula\nNarawntapu\nRobbinsIsland\nwukalina\nStonyHead\nFentonbury\nBronte\nKempton\nSilverPlains\nGranvilleHarbour\n\n\n\n\nForestierMurdunna\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nMariaIsland\n0.1346500\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nBuckland\n0.0568221\n0.0788518\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nIP\n0.1041750\n0.0231554\n0.0567298\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nWoolnorth\n0.2373155\n0.0548044\n0.1739492\n0.0768758\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nTasmanPeninsula\n0.0524833\n0.1634699\n0.0829025\n0.1339067\n0.2635033\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nNarawntapu\n0.0855470\n0.0858841\n0.0392806\n0.0615039\n0.1814649\n0.1174716\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nRobbinsIsland\n0.2658930\n0.0867077\n0.2044683\n0.1058499\n0.0280268\n0.2907933\n0.2120205\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nwukalina\n0.0507242\n0.0855357\n0.0323424\n0.0693547\n0.1801609\n0.0815693\n0.0650390\n0.2151210\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nStonyHead\n0.0668713\n0.1189039\n0.0509139\n0.0960205\n0.2152713\n0.1122056\n0.0817068\n0.2478265\n0.0378314\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nFentonbury\n0.0939038\n0.0843563\n0.0432185\n0.0635508\n0.1822320\n0.1356670\n0.0574654\n0.2079110\n0.0737230\n0.0829380\nNA\nNA\nNA\nNA\nNA\n\n\nBronte\n0.0986718\n0.0763497\n0.0357917\n0.0562609\n0.1713195\n0.1300950\n0.0516530\n0.2017686\n0.0696216\n0.0806497\n0.0352924\nNA\nNA\nNA\nNA\n\n\nKempton\n0.0710744\n0.0788403\n0.0214033\n0.0548573\n0.1766772\n0.1035863\n0.0440770\n0.2061925\n0.0589966\n0.0706943\n0.0239896\n0.0253648\nNA\nNA\nNA\n\n\nSilverPlains\n0.0818363\n0.0808022\n0.0248552\n0.0631806\n0.1793981\n0.1164515\n0.0492987\n0.2060891\n0.0599891\n0.0738297\n0.0363218\n0.0272491\n0.0190234\nNA\nNA\n\n\nGranvilleHarbour\n0.1694356\n0.0293449\n0.1064916\n0.0431234\n0.0792053\n0.1949472\n0.1074621\n0.1096676\n0.1240690\n0.1529316\n0.1034213\n0.0977384\n0.0980752\n0.1004295\nNA\n\n\n\n\nsummary(fsts$Fsts)\n\n ForestierMurdunna  MariaIsland         Buckland             IP         \n Min.   :0.05072   Min.   :0.02316   Min.   :0.02140   Min.   :0.04312  \n 1st Qu.:0.06792   1st Qu.:0.07635   1st Qu.:0.03493   1st Qu.:0.05888  \n Median :0.08973   Median :0.08080   Median :0.04707   Median :0.06355  \n Mean   :0.11210   Mean   :0.08054   Mean   :0.07270   Mean   :0.07495  \n 3rd Qu.:0.12703   3rd Qu.:0.08588   3rd Qu.:0.08880   3rd Qu.:0.08645  \n Max.   :0.26589   Max.   :0.16347   Max.   :0.20447   Max.   :0.13391  \n NA's   :1         NA's   :2         NA's   :3         NA's   :4        \n   Woolnorth       TasmanPeninsula     Narawntapu      RobbinsIsland   \n Min.   :0.02803   Min.   :0.08157   Min.   :0.04408   Min.   :0.1097  \n 1st Qu.:0.17266   1st Qu.:0.11221   1st Qu.:0.05106   1st Qu.:0.2039  \n Median :0.17978   Median :0.11747   Median :0.06125   Median :0.2062  \n Mean   :0.16573   Mean   :0.14253   Mean   :0.08359   Mean   :0.1992  \n 3rd Qu.:0.18204   3rd Qu.:0.13567   3rd Qu.:0.08815   3rd Qu.:0.2115  \n Max.   :0.26350   Max.   :0.29079   Max.   :0.21202   Max.   :0.2478  \n NA's   :5         NA's   :6         NA's   :7         NA's   :8       \n    wukalina         StonyHead         Fentonbury          Bronte       \n Min.   :0.03783   Min.   :0.07069   Min.   :0.02399   Min.   :0.02536  \n 1st Qu.:0.05924   1st Qu.:0.07383   1st Qu.:0.03247   1st Qu.:0.02631  \n Median :0.06481   Median :0.08065   Median :0.03581   Median :0.02725  \n Mean   :0.07071   Mean   :0.09221   Mean   :0.04976   Mean   :0.05012  \n 3rd Qu.:0.07270   3rd Qu.:0.08294   3rd Qu.:0.05310   3rd Qu.:0.06249  \n Max.   :0.12407   Max.   :0.15293   Max.   :0.10342   Max.   :0.09774  \n NA's   :9         NA's   :10        NA's   :11        NA's   :12       \n    Kempton         SilverPlains    GranvilleHarbour\n Min.   :0.01902   Min.   :0.1004   Min.   : NA     \n 1st Qu.:0.03879   1st Qu.:0.1004   1st Qu.: NA     \n Median :0.05855   Median :0.1004   Median : NA     \n Mean   :0.05855   Mean   :0.1004   Mean   :NaN     \n 3rd Qu.:0.07831   3rd Qu.:0.1004   3rd Qu.: NA     \n Max.   :0.09807   Max.   :0.1004   Max.   : NA     \n NA's   :13        NA's   :14       NA's   :15"
  },
  {
    "objectID": "useful.html#download-bash-script",
    "href": "useful.html#download-bash-script",
    "title": "More info",
    "section": "download bash script",
    "text": "download bash script\n\n\n\n\n\n\n Download Binaries (Windows)"
  },
  {
    "objectID": "useful.html#download-binaries-software",
    "href": "useful.html#download-binaries-software",
    "title": "More info",
    "section": "Download Binaries (software)",
    "text": "Download Binaries (software)\n\n\n\n\n\n\n Download Binaries (Windows)"
  },
  {
    "objectID": "session10.html#more-exercises",
    "href": "session10.html#more-exercises",
    "title": "10  Sex Linked Markers",
    "section": "More EXERCISES",
    "text": "More EXERCISES\n\n\n\n\n\n\nExercise\n\n\n\n\nImagine you are analyzing the genetic data of a population and you want to look at its genetic structure and genetic diversity. You get to work by filtering your beautiful set of SNPs. Because you are a rigorous, you want to test whether using function filter.sex.linked to properly filter out sex-linked loci changes the results of the populations analyses. So you: (1) process your SNP dataset by applying standard filters and run analyses, and (2) process the dataset by filtering out sex-linked loci first, applying standard filters second, and then run analyses.\nChoose one of the following datasets (or your own data) and report:\n\nHow many sex-linked markers are present?\nHow many individuals had a wrong sexID?\nDo you see any changes in your PCA/structure analyses when you filtered out sex-linked markers versus when you did not?\nDo you see any differences in genetic diversity and fixation indices when you filtered out sex-linked markers versus when you did not?\n\n\n\n \n \n\nExercise data 1 - Your own data\n\nHINT\nYou can have a look at the exercise data below for inspiration.\n\n\n\n\n\n\n\nExercise - Your own data\n\n\n\n\nNumber of sex-linked markers?\nIndividuals with wrong sexID?\nChanges in PCA before and after removing the SLM?\nDifferences in genetic diversity and fixation indices between autosomal and SLM?\n\n\n\n\n\nExercise data 2 - The Eastern Yellow Robin\nData from Robledo-Ruiz et al. (2023)\n\n\n\nThe Eastern Yellow Robin\n\n\n\nLoad data\n\ndata(\"EYR\")\n\nEYR@n.loc\ntable(EYR@pop)\ntable(EYR@other$ind.metrics$pop)\ntable(EYR@other$ind.metrics$sex, useNA = \"ifany\")\n\n[1] 1000\n\n    Crusoe Muckleford      Timor     Wombat \n       238        421         52         71 \n\n    Crusoe Muckleford      Timor     Wombat \n       238        421         52         71 \n\n      F   M \n  1 352 429 \n\n\n\n\n1. Number of sex-linked markers?\n\nres &lt;- dartR.sexlinked::filter.sex.linked(gl = EYR, system = \"zw\")\n\nDetected 352 females and 429 males.\n\n\nStarting phase 1. May take a while...\n\n\nBuilding call rate plots.\n\n\n\n\n\nDone. Starting phase 2.\n\n\nBuilding heterozygosity plots.\n\n\n\n\n\n\n\n\nDone building heterozygosity plots.\n\n\n**FINISHED** Total of analyzed loci: 1000.\nFound 150 sex-linked loci:\n   16 W-linked loci\n   82 sex-biased loci\n   32 Z-linked loci\n   20 ZW gametologs.\nAnd 850 autosomal loci.\n\n\n\n\n\n\n\n2. Individuals with wrong sexID?\n\nsexID &lt;- dartR.sexlinked::infer.sex(gl_sex_filtered = res, system = \"zw\",\n    seed = 124)\n\n***FINISHED***\n\nknitr::kable(head(sexID))\n\nsum(EYR$other$ind.metrics$sex != sexID$agreed.sex, na.rm = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nid\nw.linked.sex\n#missing\n#called\nz.linked.sex\n#Hom.z\n#Het.z\ngametolog.sex\n#Hom.g\n#Het.g\nagreed.sex\n\n\n\n\n024-96401\n024-96401\nM\n0\n16\nM\n7\n25\nM\n0\n5\nM\n\n\n024-96401b\n024-96401b\nM\n0\n16\nM\n9\n21\nM\n0\n5\nM\n\n\n024-96402\n024-96402\nF\n15\n1\nF\n0\n32\nF\n5\n0\nF\n\n\n024-96403\n024-96403\nM\n1\n15\nM\n11\n21\nM\n0\n5\nM\n\n\n024-96404\n024-96404\nM\n0\n16\nM\n12\n20\nM\n0\n5\nM\n\n\n024-96405\n024-96405\nM\n0\n16\nM\n11\n21\nM\n0\n5\nM\n\n\n\n\n\n[1] 55\n\n\n\n\n\n\n\n\nExercise\n\n\n\n\nCan you tell which misidentified sexes are due to uncertain genetic sex (indicated with *)?\nHINT Try using grep(pattern = \"\\\\*\", x = sexID$agreed.sex)\n\n\n\n\nProcessing SNPs with two filtering regimes\n\nFiltering SNPs only with standard filters (sloppy)\n\n# Filter for read depth\ndartR.base::gl.report.rdepth(EYR)  # This is the initial dataset\n\nStarting :: \n Starting dartR.base \n Starting gl.report.rdepth \n  Processing genlight object with SNP data\n  Reporting Read Depth by Locus\n  No. of loci = 1000 \n  No. of individuals = 782 \n    Minimum      :  2.6 \n    1st quartile :  4.3 \n    Median       :  5.6 \n    Mean         :  5.9649 \n    3r quartile  :  7.325 \n    Maximum      :  13.2 \n    Missing Rate Overall:  0.19 \n\n\n\n\n\n   Quantile Threshold Retained Percent Filtered Percent\n1      100%      13.2        1     0.1      999    99.9\n2       95%       9.9       51     5.1      949    94.9\n3       90%       9.0      105    10.5      895    89.5\n4       85%       8.3      151    15.1      849    84.9\n5       80%       7.8      208    20.8      792    79.2\n6       75%       7.3      258    25.8      742    74.2\n7       70%       6.9      304    30.4      696    69.6\n8       65%       6.5      354    35.4      646    64.6\n9       60%       6.2      404    40.4      596    59.6\n10      55%       5.9      451    45.1      549    54.9\n11      50%       5.6      504    50.4      496    49.6\n12      45%       5.3      563    56.3      437    43.7\n13      40%       5.1      602    60.2      398    39.8\n14      35%       4.8      659    65.9      341    34.1\n15      30%       4.6      702    70.2      298    29.8\n16      25%       4.3      752    75.2      248    24.8\n17      20%       4.0      823    82.3      177    17.7\n18      15%       3.9      852    85.2      148    14.8\n19      10%       3.6      906    90.6       94     9.4\n20       5%       3.3      956    95.6       44     4.4\n21       0%       2.6     1000   100.0        0     0.0\nCompleted: :: \n Completed: dartR.base \n Completed: gl.report.rdepth \n\nEYR.sloppy &lt;- dartR.base::gl.filter.rdepth(EYR, lower = 3, upper = 11, verbose = 0)\n\n\n\n# Filter for loci call rate\ndartR.base::gl.report.callrate(EYR.sloppy, method = \"loc\")\n\nStarting :: \n Starting dartR.base \n Starting gl.report.callrate \n  Processing genlight object with SNP data\n  Reporting Call Rate by Locus\n  No. of loci = 958 \n  No. of individuals = 782 \n    Minimum      :  0.20844 \n    1st quartile :  0.7202688 \n    Median       :  0.895141 \n    Mean         :  0.8131871 \n    3r quartile  :  0.950128 \n    Maximum      :  0.988491 \n    Missing Rate Overall:  0.1868 \n\n\n\n\n\nCompleted: :: \n Completed: dartR.base \n Completed: gl.report.callrate \n\nEYR.sloppy &lt;- dartR.base::gl.filter.callrate(EYR.sloppy, method = \"loc\",\n    threshold = 0.75, verbose = 0, recalc = TRUE)\n\n# Filter for individual call rate\ndartR.base::gl.report.callrate(EYR.sloppy, method = \"ind\")\n\nStarting :: \n Starting dartR.base \n Starting gl.report.callrate \n  Processing genlight object with SNP data\n\n  Reporting Call Rate by Individual\n  No. of loci = 703 \n  No. of individuals = 782 \n    Minimum      :  0.03556188 \n    1st quartile :  0.9174964 \n    Median       :  0.9416785 \n    Mean         :  0.9108097 \n    3r quartile  :  0.9573257 \n    Maximum      :  0.9829303 \n    Missing Rate Overall:  0.0892 \n\nListing 4 populations and their average CallRates\n  Monitor again after filtering\n  Population CallRate   N\n1     Crusoe   0.9027 238\n2 Muckleford   0.9073 421\n3      Timor   0.9402  52\n4     Wombat   0.9371  71\n\nListing 20 individuals with the lowest CallRates\n  Use this list to see which individuals will be lost on filtering by individual\n  Set ind.to.list parameter to see more individuals\n   Individual   CallRate\n1    M18.29.1 0.03556188\n2    M18.18.1 0.03982930\n3    M18.47.2 0.06970128\n4    C18.16.1 0.07112376\n5   027-34168 0.07681366\n6    C18.15.2 0.08534851\n7    C18.21.2 0.08677098\n8    M18.47.3 0.14224751\n9    M18.35.2 0.17211949\n10   M18.20.3 0.24039829\n11   M20.70.2 0.39687055\n12   C18.28.1 0.39971550\n13   C18.17.2 0.46088193\n14  027-34065 0.50640114\n15   C18.14.1 0.50640114\n16   M20.70.3 0.50782361\n17  M20.110.1 0.52347084\n18   M19.12.1 0.53342817\n19    M19.8.1 0.54907539\n20   M20.64.3 0.56045519\n\n)\n\n\n\n\n\nCompleted: :: \n Completed: dartR.base \n Completed: gl.report.callrate \n\nEYR.sloppy &lt;- dartR.base::gl.filter.callrate(EYR.sloppy, method = \"ind\",\n    threshold = 0.65, verbose = 0, recalc = TRUE)\n# Filter for MAC (= 3)\ndartR.base::gl.report.maf(EYR.sloppy)\n\nStarting :: \n Starting dartR.base \n Starting gl.report.maf \n  Processing genlight object with SNP data\nStarting :: \n\n Starting dartR.base \n\n Starting gl.report.maf \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population Crusoe \n  No. of loci = 670 \n  No. of individuals = 231 \n    Minimum      :  0.0022 \n    1st quantile :  0.064825 \n    Median       :  0.1582 \n    Mean         :  0.1793525 \n    3r quantile  :  0.267475 \n    Maximum      :  0.4975 \n    Missing Rate Overall:  0.08 \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population Muckleford \n  No. of loci = 683 \n  No. of individuals = 401 \n    Minimum      :  0.0013 \n    1st quantile :  0.05875 \n    Median       :  0.1404 \n    Mean         :  0.172949 \n    3r quantile  :  0.2617 \n    Maximum      :  0.4985 \n    Missing Rate Overall:  0.07 \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population Timor \n  No. of loci = 589 \n  No. of individuals = 52 \n    Minimum      :  0.0096 \n    1st quantile :  0.0673 \n    Median       :  0.1667 \n    Mean         :  0.1914129 \n    3r quantile  :  0.2872 \n    Maximum      :  0.5 \n    Missing Rate Overall:  0.06 \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population Wombat \n  No. of loci = 627 \n  No. of individuals = 71 \n    Minimum      :  0.007 \n    1st quantile :  0.06385 \n    Median       :  0.1449 \n    Mean         :  0.1746703 \n    3r quantile  :  0.2542 \n    Maximum      :  0.5 \n    Missing Rate Overall:  0.06 \n\n  Reporting Minor Allele Frequency (MAF) by Locus OVERALL\n  No. of loci = 703 \n  No. of individuals = 755 \n    Minimum      :  3e-04 \n    1st quantile :  0.0627 \n    Median       :  0.13435 \n    Mean         :  0.1696497 \n    3r quantile  :  0.246025 \n    Maximum      :  0.4991 \n    Missing Rate Overall:  0.07 \n\n\n\n\n\n   Quantile Threshold Retained Percent Filtered Percent\n1      100%    0.4991        1     0.1      699    99.9\n2       95%    0.4343       36     5.1      664    94.9\n3       90%    0.3807       71    10.1      629    89.9\n4       85%    0.3331      105    15.0      595    85.0\n5       80%    0.2858      141    20.1      559    79.9\n6       75%    0.2460      176    25.1      524    74.9\n7       70%    0.2233      210    30.0      490    70.0\n8       65%    0.2003      246    35.1      454    64.9\n9       60%    0.1797      280    40.0      420    60.0\n10      55%    0.1562      315    45.0      385    55.0\n11      50%    0.1341      352    50.3      348    49.7\n12      45%    0.1214      386    55.1      314    44.9\n13      40%    0.1032      421    60.1      279    39.9\n14      35%    0.0904      455    65.0      245    35.0\n15      30%    0.0742      490    70.0      210    30.0\n16      25%    0.0627      526    75.1      174    24.9\n17      20%    0.0476      561    80.1      139    19.9\n18      15%    0.0359      595    85.0      105    15.0\n19      10%    0.0224      631    90.1       69     9.9\n20       5%    0.0059      666    95.1       34     4.9\n21       0%    0.0003      700   100.0        0     0.0\nCompleted: :: \n Completed: dartR.base \n Completed: gl.report.maf \n\nEYR.sloppy &lt;- dartR.base::gl.filter.maf(EYR.sloppy, threshold = 3, verbose = 0,\n    recalc = TRUE)\n\nStarting gl.select.colors \n  Warning: Number of required colors not specified, set to 9\n  Library: RColorBrewer\n  Palette: brewer.pal\n  Showing and returning 2 of 9 colors for library RColorBrewer : palette Blues \n\n\n\n\n\nCompleted: gl.select.colors \n\n\n\n\nFiltering SNPs with filter.sex.linked and standard filters (correct)\n\n# Filter for sex-linked loci\ncorrect &lt;- dartR.sexlinked::filter.sex.linked(EYR, system = \"zw\")  # This is the initial dataset\n\n\n\n\n\n\n\n\n\n\n\n\n# We will use correct$autosomal for the next filters\n\n# Filter for read depth\ndartR.base::gl.report.rdepth(correct$autosomal)  # This is the filtered dataset\n\nStarting :: \n Starting dartR.base \n Starting gl.report.rdepth \n  Processing genlight object with SNP data\n  Reporting Read Depth by Locus\n  No. of loci = 850 \n  No. of individuals = 782 \n    Minimum      :  2.6 \n    1st quartile :  4.3 \n    Median       :  5.6 \n    Mean         :  6.008941 \n    3r quartile  :  7.4 \n    Maximum      :  13.2 \n    Missing Rate Overall:  0.18 \n\n\n\n\n\n   Quantile Threshold Retained Percent Filtered Percent\n1      100%      13.2        1     0.1      849    99.9\n2       95%       9.9       45     5.3      805    94.7\n3       90%       9.1       88    10.4      762    89.6\n4       85%       8.4      129    15.2      721    84.8\n5       80%       7.9      173    20.4      677    79.6\n6       75%       7.4      220    25.9      630    74.1\n7       70%       6.9      264    31.1      586    68.9\n8       65%       6.5      305    35.9      545    64.1\n9       60%       6.2      350    41.2      500    58.8\n10      55%       5.9      391    46.0      459    54.0\n11      50%       5.6      435    51.2      415    48.8\n12      45%       5.4      472    55.5      378    44.5\n13      40%       5.1      519    61.1      331    38.9\n14      35%       4.9      555    65.3      295    34.7\n15      30%       4.6      603    70.9      247    29.1\n16      25%       4.3      645    75.9      205    24.1\n17      20%       4.0      705    82.9      145    17.1\n18      15%       3.9      730    85.9      120    14.1\n19      10%       3.6      774    91.1       76     8.9\n20       5%       3.3      812    95.5       38     4.5\n21       0%       2.6      850   100.0        0     0.0\nCompleted: :: \n Completed: dartR.base \n Completed: gl.report.rdepth \n\nEYR.correct &lt;- dartR.base::gl.filter.rdepth(correct$autosomal, lower = 3,\n    upper = 11, verbose = 0)\n\n\n\n# Filter for loci call rate\ndartR.base::gl.report.callrate(EYR.correct, method = \"loc\")\n\nStarting :: \n Starting dartR.base \n Starting gl.report.callrate \n  Processing genlight object with SNP data\n  Reporting Call Rate by Locus\n  No. of loci = 811 \n  No. of individuals = 782 \n    Minimum      :  0.20844 \n    1st quartile :  0.7436065 \n    Median       :  0.900256 \n    Mean         :  0.8192658 \n    3r quartile  :  0.951407 \n    Maximum      :  0.988491 \n    Missing Rate Overall:  0.1807 \n\n\n\n\n\nCompleted: :: \n Completed: dartR.base \n Completed: gl.report.callrate \n\nEYR.correct &lt;- dartR.base::gl.filter.callrate(EYR.correct, method = \"loc\",\n    threshold = 0.75, verbose = 0, recalc = TRUE)\n\n# Filter for individual call rate\ndartR.base::gl.report.callrate(EYR.correct, method = \"ind\")\n\nStarting :: \n Starting dartR.base \n Starting gl.report.callrate \n  Processing genlight object with SNP data\n\n  Reporting Call Rate by Individual\n  No. of loci = 605 \n  No. of individuals = 782 \n    Minimum      :  0.03801653 \n    1st quartile :  0.9173554 \n    Median       :  0.9438017 \n    Mean         :  0.9120479 \n    3r quartile  :  0.9586777 \n    Maximum      :  0.9818182 \n    Missing Rate Overall:  0.088 \n\nListing 4 populations and their average CallRates\n  Monitor again after filtering\n  Population CallRate   N\n1     Crusoe   0.9037 238\n2 Muckleford   0.9090 421\n3      Timor   0.9418  52\n4     Wombat   0.9365  71\n\nListing 20 individuals with the lowest CallRates\n  Use this list to see which individuals will be lost on filtering by individual\n  Set ind.to.list parameter to see more individuals\n   Individual   CallRate\n1    M18.29.1 0.03801653\n2    M18.18.1 0.04462810\n3    M18.47.2 0.06776860\n4    C18.16.1 0.07438017\n5   027-34168 0.08760331\n6    C18.15.2 0.08760331\n7    C18.21.2 0.08760331\n8    M18.47.3 0.13719008\n9    M18.35.2 0.18016529\n10   M18.20.3 0.24132231\n11   C18.28.1 0.41487603\n12   M20.70.2 0.42644628\n13   C18.17.2 0.44628099\n14  027-34065 0.49586777\n15   C18.14.1 0.49752066\n16  M20.110.1 0.53057851\n17   M20.70.3 0.53553719\n18   M19.12.1 0.54380165\n19    M19.8.1 0.56694215\n20   M19.33.2 0.57851240\n\n)\n\n\n\n\n\nCompleted: :: \n Completed: dartR.base \n Completed: gl.report.callrate \n\nEYR.correct &lt;- dartR.base::gl.filter.callrate(EYR.correct, method = \"ind\",\n    threshold = 0.65, verbose = 0, recalc = TRUE)\n# Filter for MAC (= 3)\ndartR.base::gl.report.maf(EYR.correct)\n\nStarting :: \n Starting dartR.base \n Starting gl.report.maf \n  Processing genlight object with SNP data\nStarting :: \n\n Starting dartR.base \n\n Starting gl.report.maf \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population Crusoe \n  No. of loci = 573 \n  No. of individuals = 231 \n    Minimum      :  0.0022 \n    1st quantile :  0.06 \n    Median       :  0.1488 \n    Mean         :  0.1741178 \n    3r quantile  :  0.2646 \n    Maximum      :  0.4975 \n    Missing Rate Overall:  0.08 \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population Muckleford \n  No. of loci = 585 \n  No. of individuals = 401 \n    Minimum      :  0.0013 \n    1st quantile :  0.055 \n    Median       :  0.129 \n    Mean         :  0.163993 \n    3r quantile  :  0.2474 \n    Maximum      :  0.4985 \n    Missing Rate Overall:  0.07 \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population Timor \n  No. of loci = 504 \n  No. of individuals = 52 \n    Minimum      :  0.0096 \n    1st quantile :  0.068275 \n    Median       :  0.1635 \n    Mean         :  0.1898613 \n    3r quantile  :  0.286075 \n    Maximum      :  0.5 \n    Missing Rate Overall:  0.06 \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population Wombat \n  No. of loci = 536 \n  No. of individuals = 71 \n    Minimum      :  0.007 \n    1st quantile :  0.062475 \n    Median       :  0.13805 \n    Mean         :  0.1706063 \n    3r quantile  :  0.2509 \n    Maximum      :  0.5 \n    Missing Rate Overall:  0.06 \n\n  Reporting Minor Allele Frequency (MAF) by Locus OVERALL\n  No. of loci = 605 \n  No. of individuals = 755 \n    Minimum      :  3e-04 \n    1st quantile :  0.058025 \n    Median       :  0.1306 \n    Mean         :  0.1628656 \n    3r quantile  :  0.23785 \n    Maximum      :  0.4991 \n    Missing Rate Overall:  0.07 \n\n\n\n\n\n   Quantile Threshold Retained Percent Filtered Percent\n1      100%    0.4991        1     0.2      601    99.8\n2       95%    0.4367       31     5.1      571    94.9\n3       90%    0.3771       61    10.1      541    89.9\n4       85%    0.3250       91    15.1      511    84.9\n5       80%    0.2747      121    20.1      481    79.9\n6       75%    0.2387      151    25.1      451    74.9\n7       70%    0.2132      181    30.1      421    69.9\n8       65%    0.1916      211    35.0      391    65.0\n9       60%    0.1720      241    40.0      361    60.0\n10      55%    0.1486      271    45.0      331    55.0\n11      50%    0.1306      302    50.2      300    49.8\n12      45%    0.1118      332    55.1      270    44.9\n13      40%    0.0975      362    60.1      240    39.9\n14      35%    0.0808      392    65.1      210    34.9\n15      30%    0.0700      422    70.1      180    29.9\n16      25%    0.0578      452    75.1      150    24.9\n17      20%    0.0445      482    80.1      120    19.9\n18      15%    0.0300      512    85.0       90    15.0\n19      10%    0.0174      542    90.0       60    10.0\n20       5%    0.0046      572    95.0       30     5.0\n21       0%    0.0003      602   100.0        0     0.0\nCompleted: :: \n Completed: dartR.base \n Completed: gl.report.maf \n\nEYR.correct &lt;- dartR.base::gl.filter.maf(EYR.correct, threshold = 3, verbose = 0,\n    recalc = TRUE)\n\nStarting gl.select.colors \n  Warning: Number of required colors not specified, set to 9\n  Library: RColorBrewer\n  Palette: brewer.pal\n  Showing and returning 2 of 9 colors for library RColorBrewer : palette Blues \n\n\n\n\n\nCompleted: gl.select.colors \n\n\n\n\n\n3. Changes in PCA before and after removing the SLM?\n\nPCA on sloppy dataset (only standard filters)\n\nPCA.sloppy &lt;- dartR.base::gl.pcoa(EYR.sloppy, verbose = 0)\ndartR.base::gl.pcoa.plot(PCA.sloppy, EYR.sloppy, xaxis = 1, yaxis = 2)\ndartR.base::gl.pcoa.plot(PCA.sloppy, EYR.sloppy, xaxis = 2, yaxis = 3)\n\nStarting gl.colors \nSelected color type 2 \nCompleted: gl.colors \nStarting :: \n Starting dartR.base \n Starting gl.pcoa.plot \n  Processing an ordination file (glPca)\n  Processing genlight object with SNP data\nPackage directlabels  needed for this function to work. Please install it.\n[1] -1\nStarting :: \n Starting dartR.base \n Starting gl.pcoa.plot \n  Processing an ordination file (glPca)\n  Processing genlight object with SNP data\nPackage directlabels  needed for this function to work. Please install it.\n[1] -1\n\n\n\n\nPCA on correct dataset (filter.sex.linked and standard filters)\n\nPCA.correct &lt;- dartR.base::gl.pcoa(EYR.correct, verbose = 0)\ndartR.base::gl.pcoa.plot(PCA.correct, EYR.correct, xaxis = 1, yaxis = 2)\ndartR.base::gl.pcoa.plot(PCA.correct, EYR.correct, xaxis = 2, yaxis = 3)\n\nStarting gl.colors \nSelected color type 2 \nCompleted: gl.colors \nStarting :: \n Starting dartR.base \n Starting gl.pcoa.plot \n  Processing an ordination file (glPca)\n  Processing genlight object with SNP data\nPackage directlabels  needed for this function to work. Please install it.\n[1] -1\nStarting :: \n Starting dartR.base \n Starting gl.pcoa.plot \n  Processing an ordination file (glPca)\n  Processing genlight object with SNP data\nPackage directlabels  needed for this function to work. Please install it.\n[1] -1\n\n\n\n\n\n4. Differences in genetic diversity and fixation indices between autosomal and SLM?\n\n# Basic stats\nbasic.sloppy &lt;- dartR.base::utils.basic.stats(EYR.sloppy)\nbasic.correct &lt;- dartR.base::utils.basic.stats(EYR.correct)\nbasic.sloppy$overall\n\n     Ho      Hs      Ht     Dst     Htp    Dstp     Fst    Fstp     Fis    Dest \n 0.1603  0.2376  0.2464  0.0087  0.2487  0.0148  0.0355  0.0596  0.3256  0.0259 \nGst_max   Gst_H \n 0.7141  0.0834 \n\nbasic.correct$overall\n\n     Ho      Hs      Ht     Dst     Htp    Dstp     Fst    Fstp     Fis    Dest \n 0.1579  0.2302  0.2375  0.0073  0.2398  0.0128  0.0307  0.0532  0.3139  0.0221 \nGst_max   Gst_H \n 0.7229  0.0737 \n\n# Genetic diversity per pop\ndivers.sloppy &lt;- dartR.base::gl.report.diversity(EYR.sloppy, pbar = FALSE,\n    table = FALSE, verbose = 0)\n\n  Processing genlight object with SNP data\n\n\n\n\ndivers.correct &lt;- dartR.base::gl.report.diversity(EYR.correct, pbar = FALSE,\n    table = FALSE, verbose = 0)\n\n  Processing genlight object with SNP data\n\n\n\n\ndivers.sloppy$one_H_alpha\n\n    Crusoe Muckleford      Timor     Wombat \n 0.3884366  0.3844244  0.3519361  0.3591638 \n\ndivers.correct$one_H_alpha\n\n    Crusoe Muckleford      Timor     Wombat \n 0.3766483  0.3689045  0.3468530  0.3503540 \n\ndivers.sloppy$one_H_beta\n\n                Crusoe Muckleford      Timor     Wombat\nCrusoe              NA 0.02660219 0.09367676 0.06237102\nMuckleford 0.006274769         NA 0.07326488 0.06577359\nTimor      0.022518949 0.02452504         NA 0.08763552\nWombat     0.018905085 0.02091118 0.03715536         NA\n\ndivers.correct$one_H_beta\n\n                Crusoe Muckleford      Timor     Wombat\nCrusoe              NA 0.02545762 0.08568969 0.05988791\nMuckleford 0.005778848         NA 0.06967786 0.06243346\nTimor      0.016804630 0.02067653         NA 0.08306746\nWombat     0.015054123 0.01892602 0.02995180         NA\n\n# Fixation indices\ndartR.base::gl.fst.pop(EYR.sloppy, verbose = 0)\n\n               Crusoe Muckleford      Timor Wombat\nCrusoe             NA         NA         NA     NA\nMuckleford 0.03160198         NA         NA     NA\nTimor      0.04023766 0.05408752         NA     NA\nWombat     0.05466955 0.02407235 0.08452847     NA\n\ndartR.base::gl.fst.pop(EYR.correct, verbose = 0)\n\n               Crusoe Muckleford      Timor Wombat\nCrusoe             NA         NA         NA     NA\nMuckleford 0.02777612         NA         NA     NA\nTimor      0.04008148 0.04786375         NA     NA\nWombat     0.04413257 0.02208816 0.07111737     NA\n\ndartR.base::gl.report.fstat(EYR.sloppy, verbose = 0)\n\n   Your plot was not shown in full because your 'Plots' pane\n    is too small. Increase the size of the 'Plots' pane and run the\n    function again. Alternatively, use the parameter 'plot.file' to\n    save the plot to a file.\n\n\n$Stat_matrices\n$Stat_matrices$Fst\n           Crusoe Muckleford  Timor Wombat\nCrusoe         NA     0.0148 0.0171 0.0255\nMuckleford 0.0148         NA 0.0249 0.0096\nTimor      0.0171     0.0249     NA 0.0387\nWombat     0.0255     0.0096 0.0387     NA\n\n$Stat_matrices$Fstp\n           Crusoe Muckleford  Timor Wombat\nCrusoe         NA     0.0356 0.0545 0.0669\nMuckleford 0.0356         NA 0.0681 0.0337\nTimor      0.0545     0.0681     NA 0.1046\nWombat     0.0669     0.0337 0.1046     NA\n\n$Stat_matrices$Dest\n           Crusoe Muckleford  Timor Wombat\nCrusoe         NA     0.0236 0.0351 0.0434\nMuckleford 0.0236         NA 0.0437 0.0213\nTimor      0.0351     0.0437     NA 0.0657\nWombat     0.0434     0.0213 0.0657     NA\n\n$Stat_matrices$Gst_H\n           Crusoe Muckleford  Timor Wombat\nCrusoe         NA     0.0566 0.0850 0.1047\nMuckleford 0.0566         NA 0.1059 0.0525\nTimor      0.0850     0.1059     NA 0.1603\nWombat     0.1047     0.0525 0.1603     NA\n\n\n[[2]]\n      Stat_tables.Crusoe_vs_Muckleford Stat_tables.Crusoe_vs_Timor\nFst                             0.0148                      0.0171\nFstp                            0.0356                      0.0545\nDest                            0.0236                      0.0351\nGst_H                           0.0566                      0.0850\n      Stat_tables.Crusoe_vs_Wombat Stat_tables.Muckleford_vs_Timor\nFst                         0.0255                          0.0249\nFstp                        0.0669                          0.0681\nDest                        0.0434                          0.0437\nGst_H                       0.1047                          0.1059\n      Stat_tables.Muckleford_vs_Wombat Stat_tables.Timor_vs_Wombat\nFst                             0.0096                      0.0387\nFstp                            0.0337                      0.1046\nDest                            0.0213                      0.0657\nGst_H                           0.0525                      0.1603\n\ndartR.base::gl.report.fstat(EYR.correct, verbose = 0)\n\n   Your plot was not shown in full because your 'Plots' pane\n    is too small. Increase the size of the 'Plots' pane and run the\n    function again. Alternatively, use the parameter 'plot.file' to\n    save the plot to a file.\n\n\n$Stat_matrices\n$Stat_matrices$Fst\n           Crusoe Muckleford  Timor Wombat\nCrusoe         NA     0.0128 0.0168 0.0199\nMuckleford 0.0128         NA 0.0212 0.0085\nTimor      0.0168     0.0212     NA 0.0313\nWombat     0.0199     0.0085 0.0313     NA\n\n$Stat_matrices$Fstp\n           Crusoe Muckleford  Timor Wombat\nCrusoe         NA     0.0317 0.0540 0.0556\nMuckleford 0.0317         NA 0.0608 0.0315\nTimor      0.0540     0.0608     NA 0.0903\nWombat     0.0556     0.0315 0.0903     NA\n\n$Stat_matrices$Dest\n           Crusoe Muckleford  Timor Wombat\nCrusoe         NA     0.0199 0.0337 0.0344\nMuckleford 0.0199         NA 0.0373 0.0189\nTimor      0.0337     0.0373     NA 0.0547\nWombat     0.0344     0.0189 0.0547     NA\n\n$Stat_matrices$Gst_H\n           Crusoe Muckleford  Timor Wombat\nCrusoe         NA     0.0492 0.0832 0.0856\nMuckleford 0.0492         NA 0.0930 0.0480\nTimor      0.0832     0.0930     NA 0.1368\nWombat     0.0856     0.0480 0.1368     NA\n\n\n[[2]]\n      Stat_tables.Crusoe_vs_Muckleford Stat_tables.Crusoe_vs_Timor\nFst                             0.0128                      0.0168\nFstp                            0.0317                      0.0540\nDest                            0.0199                      0.0337\nGst_H                           0.0492                      0.0832\n      Stat_tables.Crusoe_vs_Wombat Stat_tables.Muckleford_vs_Timor\nFst                         0.0199                          0.0212\nFstp                        0.0556                          0.0608\nDest                        0.0344                          0.0373\nGst_H                       0.0856                          0.0930\n      Stat_tables.Muckleford_vs_Wombat Stat_tables.Timor_vs_Wombat\nFst                             0.0085                      0.0313\nFstp                            0.0315                      0.0903\nDest                            0.0189                      0.0547\nGst_H                           0.0480                      0.1368\n\n\n\n\n\nExercise data 3 - Bull shark\nData from Devloo‐Delva et al. (2023).\n\n\n\nThe Bull Shark\n\n\n\nLoad data\n\nprint(load(\"data/Bull_shark_DArTseq_genlight_for_sex-linked_markers.Rdata\"))\n\n[1] \"data.gl\"\n\ndata.gl@n.loc\n\n[1] 93202\n\ntable(data.gl@pop)\n\n\nE-ATL  E-IO  Fiji Japan  N-IO W-ATL  W-IO W-PAC \n    2    36     8    14    20    36    40    26 \n\ntable(data.gl@other$ind.metrics$pop)\n\n\nE-ATL  E-IO  Fiji Japan  N-IO W-ATL  W-IO W-PAC \n    2    36     8    14    20    36    40    26 \n\ntable(data.gl@other$ind.metrics$sex, useNA = \"ifany\")\n\n\n   F    M &lt;NA&gt; \n  85   64   33 \n\n\n\n\n1. Number of sex-linked markers?\n\nres &lt;- dartR.sexlinked::filter.sex.linked(gl = data.gl, system = \"xy\", plots = TRUE,\n    ncores = 1)\n\nDetected 85 females and 64 males.\n\n\nStarting phase 1. May take a while...\n\n\nBuilding call rate plots.\n\n\n\n\n\nDone. Starting phase 2.\n\n\nBuilding heterozygosity plots.\n\n\n\n\n\n\n\n\nDone building heterozygosity plots.\n\n\n**FINISHED** Total of analyzed loci: 93202.\nFound 9 sex-linked loci:\n   2 Y-linked loci\n   2 sex-biased loci\n   4 X-linked loci\n   1 XY gametologs.\nAnd 93193 autosomal loci.\n\n\n\n\n\n\n\n2. Individuals with wrong sexID?\n\nsexID &lt;- dartR.sexlinked::infer.sex(gl_sex_filtered = res, system = \"xy\",\n    seed = 124)\n\nNot enough gametologs (need at least 5). Assigning NA...\n\n\n***FINISHED***\n\nknitr::kable(head(sexID))\n\nagreed.sex &lt;- sub(pattern = \"\\\\*\", replacement = \"\", x = sexID$agreed.sex)  # remove asterisk\nsum(data.gl$other$ind.metrics$sex != agreed.sex, na.rm = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nid\ny.linked.sex\n#called\n#missing\nx.linked.sex\n#Het.x\n#Hom.x\ngametolog.sex\n#Het.g\n#Hom.g\nagreed.sex\n\n\n\n\nCL-FIJ002-F\nCL-FIJ002-F\nF\n0\n2\nF\n4\n0\nNA\nNA\nNA\nF\n\n\nCL-FIJ003-M\nCL-FIJ003-M\nM\n2\n0\nM\n0\n4\nNA\nNA\nNA\nM\n\n\nCL-FIJ008-F\nCL-FIJ008-F\nF\n0\n2\nF\n2\n2\nNA\nNA\nNA\nF\n\n\nCL-FIJ010-F\nCL-FIJ010-F\nF\n0\n2\nF\n3\n1\nNA\nNA\nNA\nF\n\n\nCL-FIJ015-F\nCL-FIJ015-F\nF\n0\n2\nF\n4\n0\nNA\nNA\nNA\nF\n\n\nCL-FIJ018-F\nCL-FIJ018-F\nF\n0\n2\nF\n3\n1\nNA\nNA\nNA\nF\n\n\n\n\n\n[1] 8\n\n\n\n\n\nExercise data 4 - Blue shark\nData from Nikolic et al. (2023).\n\n\n\nThe Blue Shark\n\n\n\nLoad data\n\nprint(load(\"data/Blue_shark_DArTseq_genlight_for_sex-linked_markers.Rdata\"))\n\n[1] \"data.gl\"\n\ndata.gl@n.loc\n\n[1] 172384\n\ntable(data.gl@pop)\n\n\n   EIO   MED1   MED2   NATL  NEATL    NIO   NPAC   SAF1   SAF2 SWPAC1 SWPAC2 \n     8     34     20     49     26     27      4     21     89     30     16 \nSWPAC3    WIO \n    11     29 \n\ntable(data.gl@other$ind.metrics$pop)\n\n\n   EIO   MED1   MED2   NATL  NEATL    NIO   NPAC   SAF1   SAF2 SWPAC1 SWPAC2 \n     8     34     20     49     26     27      4     21     89     30     16 \nSWPAC3    WIO \n    11     29 \n\ntable(data.gl@other$ind.metrics$sex, useNA = \"ifany\")\n\n\n   F    M &lt;NA&gt; \n 104  111  149 \n\n\n\n\n1. Number of sex-linked markers?\n\nres &lt;- dartR.sexlinked::filter.sex.linked(gl = data.gl, system = \"xy\", plots = TRUE,\n    ncores = 1)\n\nDetected 104 females and 111 males.\n\n\nStarting phase 1. May take a while...\n\n\nBuilding call rate plots.\n\n\n\n\n\nDone. Starting phase 2.\n\n\nBuilding heterozygosity plots.\n\n\n\n\n\n\n\n\nDone building heterozygosity plots.\n\n\n**FINISHED** Total of analyzed loci: 172384.\nFound 26 sex-linked loci:\n   2 Y-linked loci\n   2 sex-biased loci\n   22 X-linked loci\n   0 XY gametologs.\nAnd 172358 autosomal loci.\n\n\n\n\n\n\n\n2. Individuals with wrong sexID?\n\nsexID &lt;- dartR.sexlinked::infer.sex(gl_sex_filtered = res, system = \"xy\",\n    seed = 124)\n\nNot enough gametologs (need at least 5). Assigning NA...\n\n\n***FINISHED***\n\nknitr::kable(head(sexID))\n\nagreed.sex &lt;- sub(pattern = \"\\\\*\", replacement = \"\", x = sexID$agreed.sex)  # remove asterisk\nsum(data.gl$other$ind.metrics$sex != agreed.sex, na.rm = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nid\ny.linked.sex\n#called\n#missing\nx.linked.sex\n#Het.x\n#Hom.x\ngametolog.sex\n#Het.g\n#Hom.g\nagreed.sex\n\n\n\n\n60088\n60088\nM\n2\n0\nM\n0\n22\nNA\nNA\nNA\nM\n\n\n60160\n60160\nM\n2\n0\nM\n0\n21\nNA\nNA\nNA\nM\n\n\n60168\n60168\nM\n2\n0\nM\n0\n22\nNA\nNA\nNA\nM\n\n\n60176\n60176\nM\n2\n0\nM\n0\n21\nNA\nNA\nNA\nM\n\n\n60096\n60096\nM\n2\n0\nM\n0\n22\nNA\nNA\nNA\nM\n\n\n60104\n60104\nM\n2\n0\nM\n1\n19\nNA\nNA\nNA\nM\n\n\n\n\n\n[1] 22"
  },
  {
    "objectID": "session10.html#further-study",
    "href": "session10.html#further-study",
    "title": "10  Sex Linked Markers",
    "section": "Further study",
    "text": "Further study\n\nExercise data 1 - Your own data\n\n\n\n\n\n\nHINT\n\n\n\nYou can have a look at the exercise data below for inspiration.\n\n\n\n\n\n\n\n\nExercise - Your own data\n\n\n\n\nNumber of sex-linked markers?\nIndividuals with wrong sexID?\nChanges in PCA before and after removing the SLM?\nDifferences in genetic diversity and fixation indices between autosomal and SLM?\n\n\n\n\n\nExercise data 2 - The Eastern Yellow Robin\nData from Robledo-Ruiz et al. (2023)\n\n\n\nThe Eastern Yellow Robin\n\n\n\nLoad data\n\ndata(\"EYR\")\n\nEYR@n.loc\ntable(EYR@pop)\ntable(EYR@other$ind.metrics$pop)\ntable(EYR@other$ind.metrics$sex, useNA = \"ifany\")\n\n[1] 1000\n\n    Crusoe Muckleford      Timor     Wombat \n       238        421         52         71 \n\n    Crusoe Muckleford      Timor     Wombat \n       238        421         52         71 \n\n      F   M \n  1 352 429 \n\n\n\n\n1. Number of sex-linked markers?\n\nres &lt;- dartR.sexlinked::filter.sex.linked(gl = EYR, system = \"zw\")\n\nDetected 352 females and 429 males.\n\n\nStarting phase 1. May take a while...\n\n\nBuilding call rate plots.\n\n\n\n\n\nDone. Starting phase 2.\n\n\nBuilding heterozygosity plots.\n\n\n\n\n\n\n\n\nDone building heterozygosity plots.\n\n\n**FINISHED** Total of analyzed loci: 1000.\nFound 150 sex-linked loci:\n   16 W-linked loci\n   82 sex-biased loci\n   32 Z-linked loci\n   20 ZW gametologs.\nAnd 850 autosomal loci.\n\n\n\n\n\n\n\n2. Individuals with wrong sexID?\n\nsexID &lt;- dartR.sexlinked::infer.sex(gl_sex_filtered = res, system = \"zw\",\n    seed = 124)\n\n***FINISHED***\n\nknitr::kable(head(sexID))\n\nsum(EYR$other$ind.metrics$sex != sexID$agreed.sex, na.rm = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nid\nw.linked.sex\n#missing\n#called\nz.linked.sex\n#Hom.z\n#Het.z\ngametolog.sex\n#Hom.g\n#Het.g\nagreed.sex\n\n\n\n\n024-96401\n024-96401\nM\n0\n16\nM\n7\n25\nM\n0\n5\nM\n\n\n024-96401b\n024-96401b\nM\n0\n16\nM\n9\n21\nM\n0\n5\nM\n\n\n024-96402\n024-96402\nF\n15\n1\nF\n0\n32\nF\n5\n0\nF\n\n\n024-96403\n024-96403\nM\n1\n15\nM\n11\n21\nM\n0\n5\nM\n\n\n024-96404\n024-96404\nM\n0\n16\nM\n12\n20\nM\n0\n5\nM\n\n\n024-96405\n024-96405\nM\n0\n16\nM\n11\n21\nM\n0\n5\nM\n\n\n\n\n\n[1] 55\n\n\n\n\n\n\n\n\nExercise\n\n\n\n\nCan you tell which misidentified sexes are due to uncertain genetic sex (indicated with *)?\nHINT Try using grep(pattern = \"\\\\*\", x = sexID$agreed.sex)\n\n\n\n\nProcessing SNPs with two filtering regimes\n\nFiltering SNPs only with standard filters (sloppy)\n\n# Filter for read depth\ndartR.base::gl.report.rdepth(EYR)  # This is the initial dataset\n\nStarting :: \n Starting dartR.base \n Starting gl.report.rdepth \n  Processing genlight object with SNP data\n  Reporting Read Depth by Locus\n  No. of loci = 1000 \n  No. of individuals = 782 \n    Minimum      :  2.6 \n    1st quartile :  4.3 \n    Median       :  5.6 \n    Mean         :  5.9649 \n    3r quartile  :  7.325 \n    Maximum      :  13.2 \n    Missing Rate Overall:  0.19 \n\n\n\n\n\n   Quantile Threshold Retained Percent Filtered Percent\n1      100%      13.2        1     0.1      999    99.9\n2       95%       9.9       51     5.1      949    94.9\n3       90%       9.0      105    10.5      895    89.5\n4       85%       8.3      151    15.1      849    84.9\n5       80%       7.8      208    20.8      792    79.2\n6       75%       7.3      258    25.8      742    74.2\n7       70%       6.9      304    30.4      696    69.6\n8       65%       6.5      354    35.4      646    64.6\n9       60%       6.2      404    40.4      596    59.6\n10      55%       5.9      451    45.1      549    54.9\n11      50%       5.6      504    50.4      496    49.6\n12      45%       5.3      563    56.3      437    43.7\n13      40%       5.1      602    60.2      398    39.8\n14      35%       4.8      659    65.9      341    34.1\n15      30%       4.6      702    70.2      298    29.8\n16      25%       4.3      752    75.2      248    24.8\n17      20%       4.0      823    82.3      177    17.7\n18      15%       3.9      852    85.2      148    14.8\n19      10%       3.6      906    90.6       94     9.4\n20       5%       3.3      956    95.6       44     4.4\n21       0%       2.6     1000   100.0        0     0.0\nCompleted: :: \n Completed: dartR.base \n Completed: gl.report.rdepth \n\nEYR.sloppy &lt;- dartR.base::gl.filter.rdepth(EYR, lower = 3, upper = 11, verbose = 0)\n\n\n\n# Filter for loci call rate\ndartR.base::gl.report.callrate(EYR.sloppy, method = \"loc\")\n\nStarting :: \n Starting dartR.base \n Starting gl.report.callrate \n  Processing genlight object with SNP data\n  Reporting Call Rate by Locus\n  No. of loci = 958 \n  No. of individuals = 782 \n    Minimum      :  0.20844 \n    1st quartile :  0.7202688 \n    Median       :  0.895141 \n    Mean         :  0.8131871 \n    3r quartile  :  0.950128 \n    Maximum      :  0.988491 \n    Missing Rate Overall:  0.1868 \n\n\n\n\n\nCompleted: :: \n Completed: dartR.base \n Completed: gl.report.callrate \n\nEYR.sloppy &lt;- dartR.base::gl.filter.callrate(EYR.sloppy, method = \"loc\",\n    threshold = 0.75, verbose = 0, recalc = TRUE)\n\n# Filter for individual call rate\ndartR.base::gl.report.callrate(EYR.sloppy, method = \"ind\")\n\nStarting :: \n Starting dartR.base \n Starting gl.report.callrate \n  Processing genlight object with SNP data\n\n  Reporting Call Rate by Individual\n  No. of loci = 703 \n  No. of individuals = 782 \n    Minimum      :  0.03556188 \n    1st quartile :  0.9174964 \n    Median       :  0.9416785 \n    Mean         :  0.9108097 \n    3r quartile  :  0.9573257 \n    Maximum      :  0.9829303 \n    Missing Rate Overall:  0.0892 \n\nListing 4 populations and their average CallRates\n  Monitor again after filtering\n  Population CallRate   N\n1     Crusoe   0.9027 238\n2 Muckleford   0.9073 421\n3      Timor   0.9402  52\n4     Wombat   0.9371  71\n\nListing 20 individuals with the lowest CallRates\n  Use this list to see which individuals will be lost on filtering by individual\n  Set ind.to.list parameter to see more individuals\n   Individual   CallRate\n1    M18.29.1 0.03556188\n2    M18.18.1 0.03982930\n3    M18.47.2 0.06970128\n4    C18.16.1 0.07112376\n5   027-34168 0.07681366\n6    C18.15.2 0.08534851\n7    C18.21.2 0.08677098\n8    M18.47.3 0.14224751\n9    M18.35.2 0.17211949\n10   M18.20.3 0.24039829\n11   M20.70.2 0.39687055\n12   C18.28.1 0.39971550\n13   C18.17.2 0.46088193\n14  027-34065 0.50640114\n15   C18.14.1 0.50640114\n16   M20.70.3 0.50782361\n17  M20.110.1 0.52347084\n18   M19.12.1 0.53342817\n19    M19.8.1 0.54907539\n20   M20.64.3 0.56045519\n\n)\n\n\n\n\n\nCompleted: :: \n Completed: dartR.base \n Completed: gl.report.callrate \n\nEYR.sloppy &lt;- dartR.base::gl.filter.callrate(EYR.sloppy, method = \"ind\",\n    threshold = 0.65, verbose = 0, recalc = TRUE)\n# Filter for MAC (= 3)\ndartR.base::gl.report.maf(EYR.sloppy)\n\nStarting :: \n Starting dartR.base \n Starting gl.report.maf \n  Processing genlight object with SNP data\nStarting :: \n\n Starting dartR.base \n\n Starting gl.report.maf \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population Crusoe \n  No. of loci = 670 \n  No. of individuals = 231 \n    Minimum      :  0.0022 \n    1st quantile :  0.064825 \n    Median       :  0.1582 \n    Mean         :  0.1793525 \n    3r quantile  :  0.267475 \n    Maximum      :  0.4975 \n    Missing Rate Overall:  0.08 \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population Muckleford \n  No. of loci = 683 \n  No. of individuals = 401 \n    Minimum      :  0.0013 \n    1st quantile :  0.05875 \n    Median       :  0.1404 \n    Mean         :  0.172949 \n    3r quantile  :  0.2617 \n    Maximum      :  0.4985 \n    Missing Rate Overall:  0.07 \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population Timor \n  No. of loci = 589 \n  No. of individuals = 52 \n    Minimum      :  0.0096 \n    1st quantile :  0.0673 \n    Median       :  0.1667 \n    Mean         :  0.1914129 \n    3r quantile  :  0.2872 \n    Maximum      :  0.5 \n    Missing Rate Overall:  0.06 \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population Wombat \n  No. of loci = 627 \n  No. of individuals = 71 \n    Minimum      :  0.007 \n    1st quantile :  0.06385 \n    Median       :  0.1449 \n    Mean         :  0.1746703 \n    3r quantile  :  0.2542 \n    Maximum      :  0.5 \n    Missing Rate Overall:  0.06 \n\n  Reporting Minor Allele Frequency (MAF) by Locus OVERALL\n  No. of loci = 703 \n  No. of individuals = 755 \n    Minimum      :  3e-04 \n    1st quantile :  0.0627 \n    Median       :  0.13435 \n    Mean         :  0.1696497 \n    3r quantile  :  0.246025 \n    Maximum      :  0.4991 \n    Missing Rate Overall:  0.07 \n\n\n\n\n\n   Quantile Threshold Retained Percent Filtered Percent\n1      100%    0.4991        1     0.1      699    99.9\n2       95%    0.4343       36     5.1      664    94.9\n3       90%    0.3807       71    10.1      629    89.9\n4       85%    0.3331      105    15.0      595    85.0\n5       80%    0.2858      141    20.1      559    79.9\n6       75%    0.2460      176    25.1      524    74.9\n7       70%    0.2233      210    30.0      490    70.0\n8       65%    0.2003      246    35.1      454    64.9\n9       60%    0.1797      280    40.0      420    60.0\n10      55%    0.1562      315    45.0      385    55.0\n11      50%    0.1341      352    50.3      348    49.7\n12      45%    0.1214      386    55.1      314    44.9\n13      40%    0.1032      421    60.1      279    39.9\n14      35%    0.0904      455    65.0      245    35.0\n15      30%    0.0742      490    70.0      210    30.0\n16      25%    0.0627      526    75.1      174    24.9\n17      20%    0.0476      561    80.1      139    19.9\n18      15%    0.0359      595    85.0      105    15.0\n19      10%    0.0224      631    90.1       69     9.9\n20       5%    0.0059      666    95.1       34     4.9\n21       0%    0.0003      700   100.0        0     0.0\nCompleted: :: \n Completed: dartR.base \n Completed: gl.report.maf \n\nEYR.sloppy &lt;- dartR.base::gl.filter.maf(EYR.sloppy, threshold = 3, verbose = 0,\n    recalc = TRUE)\n\nStarting gl.select.colors \n  Warning: Number of required colors not specified, set to 9\n  Library: RColorBrewer\n  Palette: brewer.pal\n  Showing and returning 2 of 9 colors for library RColorBrewer : palette Blues \n\n\n\n\n\nCompleted: gl.select.colors \n\n\n\n\nFiltering SNPs with filter.sex.linked and standard filters (correct)\n\n# Filter for sex-linked loci\ncorrect &lt;- dartR.sexlinked::filter.sex.linked(EYR, system = \"zw\")  # This is the initial dataset\n\n\n\n\n\n\n\n\n\n\n\n\n# We will use correct$autosomal for the next filters\n\n# Filter for read depth\ndartR.base::gl.report.rdepth(correct$autosomal)  # This is the filtered dataset\n\nStarting :: \n Starting dartR.base \n Starting gl.report.rdepth \n  Processing genlight object with SNP data\n  Reporting Read Depth by Locus\n  No. of loci = 850 \n  No. of individuals = 782 \n    Minimum      :  2.6 \n    1st quartile :  4.3 \n    Median       :  5.6 \n    Mean         :  6.008941 \n    3r quartile  :  7.4 \n    Maximum      :  13.2 \n    Missing Rate Overall:  0.18 \n\n\n\n\n\n   Quantile Threshold Retained Percent Filtered Percent\n1      100%      13.2        1     0.1      849    99.9\n2       95%       9.9       45     5.3      805    94.7\n3       90%       9.1       88    10.4      762    89.6\n4       85%       8.4      129    15.2      721    84.8\n5       80%       7.9      173    20.4      677    79.6\n6       75%       7.4      220    25.9      630    74.1\n7       70%       6.9      264    31.1      586    68.9\n8       65%       6.5      305    35.9      545    64.1\n9       60%       6.2      350    41.2      500    58.8\n10      55%       5.9      391    46.0      459    54.0\n11      50%       5.6      435    51.2      415    48.8\n12      45%       5.4      472    55.5      378    44.5\n13      40%       5.1      519    61.1      331    38.9\n14      35%       4.9      555    65.3      295    34.7\n15      30%       4.6      603    70.9      247    29.1\n16      25%       4.3      645    75.9      205    24.1\n17      20%       4.0      705    82.9      145    17.1\n18      15%       3.9      730    85.9      120    14.1\n19      10%       3.6      774    91.1       76     8.9\n20       5%       3.3      812    95.5       38     4.5\n21       0%       2.6      850   100.0        0     0.0\nCompleted: :: \n Completed: dartR.base \n Completed: gl.report.rdepth \n\nEYR.correct &lt;- dartR.base::gl.filter.rdepth(correct$autosomal, lower = 3,\n    upper = 11, verbose = 0)\n\n\n\n# Filter for loci call rate\ndartR.base::gl.report.callrate(EYR.correct, method = \"loc\")\n\nStarting :: \n Starting dartR.base \n Starting gl.report.callrate \n  Processing genlight object with SNP data\n  Reporting Call Rate by Locus\n  No. of loci = 811 \n  No. of individuals = 782 \n    Minimum      :  0.20844 \n    1st quartile :  0.7436065 \n    Median       :  0.900256 \n    Mean         :  0.8192658 \n    3r quartile  :  0.951407 \n    Maximum      :  0.988491 \n    Missing Rate Overall:  0.1807 \n\n\n\n\n\nCompleted: :: \n Completed: dartR.base \n Completed: gl.report.callrate \n\nEYR.correct &lt;- dartR.base::gl.filter.callrate(EYR.correct, method = \"loc\",\n    threshold = 0.75, verbose = 0, recalc = TRUE)\n\n# Filter for individual call rate\ndartR.base::gl.report.callrate(EYR.correct, method = \"ind\")\n\nStarting :: \n Starting dartR.base \n Starting gl.report.callrate \n  Processing genlight object with SNP data\n\n  Reporting Call Rate by Individual\n  No. of loci = 605 \n  No. of individuals = 782 \n    Minimum      :  0.03801653 \n    1st quartile :  0.9173554 \n    Median       :  0.9438017 \n    Mean         :  0.9120479 \n    3r quartile  :  0.9586777 \n    Maximum      :  0.9818182 \n    Missing Rate Overall:  0.088 \n\nListing 4 populations and their average CallRates\n  Monitor again after filtering\n  Population CallRate   N\n1     Crusoe   0.9037 238\n2 Muckleford   0.9090 421\n3      Timor   0.9418  52\n4     Wombat   0.9365  71\n\nListing 20 individuals with the lowest CallRates\n  Use this list to see which individuals will be lost on filtering by individual\n  Set ind.to.list parameter to see more individuals\n   Individual   CallRate\n1    M18.29.1 0.03801653\n2    M18.18.1 0.04462810\n3    M18.47.2 0.06776860\n4    C18.16.1 0.07438017\n5   027-34168 0.08760331\n6    C18.15.2 0.08760331\n7    C18.21.2 0.08760331\n8    M18.47.3 0.13719008\n9    M18.35.2 0.18016529\n10   M18.20.3 0.24132231\n11   C18.28.1 0.41487603\n12   M20.70.2 0.42644628\n13   C18.17.2 0.44628099\n14  027-34065 0.49586777\n15   C18.14.1 0.49752066\n16  M20.110.1 0.53057851\n17   M20.70.3 0.53553719\n18   M19.12.1 0.54380165\n19    M19.8.1 0.56694215\n20   M19.33.2 0.57851240\n\n)\n\n\n\n\n\nCompleted: :: \n Completed: dartR.base \n Completed: gl.report.callrate \n\nEYR.correct &lt;- dartR.base::gl.filter.callrate(EYR.correct, method = \"ind\",\n    threshold = 0.65, verbose = 0, recalc = TRUE)\n# Filter for MAC (= 3)\ndartR.base::gl.report.maf(EYR.correct)\n\nStarting :: \n Starting dartR.base \n Starting gl.report.maf \n  Processing genlight object with SNP data\nStarting :: \n\n Starting dartR.base \n\n Starting gl.report.maf \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population Crusoe \n  No. of loci = 573 \n  No. of individuals = 231 \n    Minimum      :  0.0022 \n    1st quantile :  0.06 \n    Median       :  0.1488 \n    Mean         :  0.1741178 \n    3r quantile  :  0.2646 \n    Maximum      :  0.4975 \n    Missing Rate Overall:  0.08 \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population Muckleford \n  No. of loci = 585 \n  No. of individuals = 401 \n    Minimum      :  0.0013 \n    1st quantile :  0.055 \n    Median       :  0.129 \n    Mean         :  0.163993 \n    3r quantile  :  0.2474 \n    Maximum      :  0.4985 \n    Missing Rate Overall:  0.07 \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population Timor \n  No. of loci = 504 \n  No. of individuals = 52 \n    Minimum      :  0.0096 \n    1st quantile :  0.068275 \n    Median       :  0.1635 \n    Mean         :  0.1898613 \n    3r quantile  :  0.286075 \n    Maximum      :  0.5 \n    Missing Rate Overall:  0.06 \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population Wombat \n  No. of loci = 536 \n  No. of individuals = 71 \n    Minimum      :  0.007 \n    1st quantile :  0.062475 \n    Median       :  0.13805 \n    Mean         :  0.1706063 \n    3r quantile  :  0.2509 \n    Maximum      :  0.5 \n    Missing Rate Overall:  0.06 \n\n  Reporting Minor Allele Frequency (MAF) by Locus OVERALL\n  No. of loci = 605 \n  No. of individuals = 755 \n    Minimum      :  3e-04 \n    1st quantile :  0.058025 \n    Median       :  0.1306 \n    Mean         :  0.1628656 \n    3r quantile  :  0.23785 \n    Maximum      :  0.4991 \n    Missing Rate Overall:  0.07 \n\n\n\n\n\n   Quantile Threshold Retained Percent Filtered Percent\n1      100%    0.4991        1     0.2      601    99.8\n2       95%    0.4367       31     5.1      571    94.9\n3       90%    0.3771       61    10.1      541    89.9\n4       85%    0.3250       91    15.1      511    84.9\n5       80%    0.2747      121    20.1      481    79.9\n6       75%    0.2387      151    25.1      451    74.9\n7       70%    0.2132      181    30.1      421    69.9\n8       65%    0.1916      211    35.0      391    65.0\n9       60%    0.1720      241    40.0      361    60.0\n10      55%    0.1486      271    45.0      331    55.0\n11      50%    0.1306      302    50.2      300    49.8\n12      45%    0.1118      332    55.1      270    44.9\n13      40%    0.0975      362    60.1      240    39.9\n14      35%    0.0808      392    65.1      210    34.9\n15      30%    0.0700      422    70.1      180    29.9\n16      25%    0.0578      452    75.1      150    24.9\n17      20%    0.0445      482    80.1      120    19.9\n18      15%    0.0300      512    85.0       90    15.0\n19      10%    0.0174      542    90.0       60    10.0\n20       5%    0.0046      572    95.0       30     5.0\n21       0%    0.0003      602   100.0        0     0.0\nCompleted: :: \n Completed: dartR.base \n Completed: gl.report.maf \n\nEYR.correct &lt;- dartR.base::gl.filter.maf(EYR.correct, threshold = 3, verbose = 0,\n    recalc = TRUE)\n\nStarting gl.select.colors \n  Warning: Number of required colors not specified, set to 9\n  Library: RColorBrewer\n  Palette: brewer.pal\n  Showing and returning 2 of 9 colors for library RColorBrewer : palette Blues \n\n\n\n\n\nCompleted: gl.select.colors \n\n\n\n\n\n3. Changes in PCA before and after removing the SLM?\n\nPCA on sloppy dataset (only standard filters)\n\nPCA.sloppy &lt;- dartR.base::gl.pcoa(EYR.sloppy, verbose = 0)\ndartR.base::gl.pcoa.plot(PCA.sloppy, EYR.sloppy, xaxis = 1, yaxis = 2)\ndartR.base::gl.pcoa.plot(PCA.sloppy, EYR.sloppy, xaxis = 2, yaxis = 3)\n\nStarting gl.colors \nSelected color type 2 \nCompleted: gl.colors \nStarting :: \n Starting dartR.base \n Starting gl.pcoa.plot \n  Processing an ordination file (glPca)\n  Processing genlight object with SNP data\nPackage directlabels  needed for this function to work. Please install it.\n[1] -1\nStarting :: \n Starting dartR.base \n Starting gl.pcoa.plot \n  Processing an ordination file (glPca)\n  Processing genlight object with SNP data\nPackage directlabels  needed for this function to work. Please install it.\n[1] -1\n\n\n\n\nPCA on correct dataset (filter.sex.linked and standard filters)\n\nPCA.correct &lt;- dartR.base::gl.pcoa(EYR.correct, verbose = 0)\ndartR.base::gl.pcoa.plot(PCA.correct, EYR.correct, xaxis = 1, yaxis = 2)\ndartR.base::gl.pcoa.plot(PCA.correct, EYR.correct, xaxis = 2, yaxis = 3)\n\nStarting gl.colors \nSelected color type 2 \nCompleted: gl.colors \nStarting :: \n Starting dartR.base \n Starting gl.pcoa.plot \n  Processing an ordination file (glPca)\n  Processing genlight object with SNP data\nPackage directlabels  needed for this function to work. Please install it.\n[1] -1\nStarting :: \n Starting dartR.base \n Starting gl.pcoa.plot \n  Processing an ordination file (glPca)\n  Processing genlight object with SNP data\nPackage directlabels  needed for this function to work. Please install it.\n[1] -1\n\n\n\n\n\n4. Differences in genetic diversity and fixation indices between autosomal and SLM?\n\n# Basic stats\nbasic.sloppy &lt;- dartR.base::utils.basic.stats(EYR.sloppy)\nbasic.correct &lt;- dartR.base::utils.basic.stats(EYR.correct)\nbasic.sloppy$overall\n\n     Ho      Hs      Ht     Dst     Htp    Dstp     Fst    Fstp     Fis    Dest \n 0.1603  0.2376  0.2464  0.0087  0.2487  0.0148  0.0355  0.0596  0.3256  0.0259 \nGst_max   Gst_H \n 0.7141  0.0834 \n\nbasic.correct$overall\n\n     Ho      Hs      Ht     Dst     Htp    Dstp     Fst    Fstp     Fis    Dest \n 0.1579  0.2302  0.2375  0.0073  0.2398  0.0128  0.0307  0.0532  0.3139  0.0221 \nGst_max   Gst_H \n 0.7229  0.0737 \n\n# Genetic diversity per pop\ndivers.sloppy &lt;- dartR.base::gl.report.diversity(EYR.sloppy, pbar = FALSE,\n    table = FALSE, verbose = 0)\n\n  Processing genlight object with SNP data\n\n\n\n\ndivers.correct &lt;- dartR.base::gl.report.diversity(EYR.correct, pbar = FALSE,\n    table = FALSE, verbose = 0)\n\n  Processing genlight object with SNP data\n\n\n\n\ndivers.sloppy$one_H_alpha\n\n    Crusoe Muckleford      Timor     Wombat \n 0.3884366  0.3844244  0.3519361  0.3591638 \n\ndivers.correct$one_H_alpha\n\n    Crusoe Muckleford      Timor     Wombat \n 0.3766483  0.3689045  0.3468530  0.3503540 \n\ndivers.sloppy$one_H_beta\n\n                Crusoe Muckleford      Timor     Wombat\nCrusoe              NA 0.02660219 0.09367676 0.06237102\nMuckleford 0.006274769         NA 0.07326488 0.06577359\nTimor      0.022518949 0.02452504         NA 0.08763552\nWombat     0.018905085 0.02091118 0.03715536         NA\n\ndivers.correct$one_H_beta\n\n                Crusoe Muckleford      Timor     Wombat\nCrusoe              NA 0.02545762 0.08568969 0.05988791\nMuckleford 0.005778848         NA 0.06967786 0.06243346\nTimor      0.016804630 0.02067653         NA 0.08306746\nWombat     0.015054123 0.01892602 0.02995180         NA\n\n# Fixation indices\ndartR.base::gl.fst.pop(EYR.sloppy, verbose = 0)\n\n               Crusoe Muckleford      Timor Wombat\nCrusoe             NA         NA         NA     NA\nMuckleford 0.03160198         NA         NA     NA\nTimor      0.04023766 0.05408752         NA     NA\nWombat     0.05466955 0.02407235 0.08452847     NA\n\ndartR.base::gl.fst.pop(EYR.correct, verbose = 0)\n\n               Crusoe Muckleford      Timor Wombat\nCrusoe             NA         NA         NA     NA\nMuckleford 0.02777612         NA         NA     NA\nTimor      0.04008148 0.04786375         NA     NA\nWombat     0.04413257 0.02208816 0.07111737     NA\n\ndartR.base::gl.report.fstat(EYR.sloppy, verbose = 0)\n\n   Your plot was not shown in full because your 'Plots' pane\n    is too small. Increase the size of the 'Plots' pane and run the\n    function again. Alternatively, use the parameter 'plot.file' to\n    save the plot to a file.\n\n\n$Stat_matrices\n$Stat_matrices$Fst\n           Crusoe Muckleford  Timor Wombat\nCrusoe         NA     0.0148 0.0171 0.0255\nMuckleford 0.0148         NA 0.0249 0.0096\nTimor      0.0171     0.0249     NA 0.0387\nWombat     0.0255     0.0096 0.0387     NA\n\n$Stat_matrices$Fstp\n           Crusoe Muckleford  Timor Wombat\nCrusoe         NA     0.0356 0.0545 0.0669\nMuckleford 0.0356         NA 0.0681 0.0337\nTimor      0.0545     0.0681     NA 0.1046\nWombat     0.0669     0.0337 0.1046     NA\n\n$Stat_matrices$Dest\n           Crusoe Muckleford  Timor Wombat\nCrusoe         NA     0.0236 0.0351 0.0434\nMuckleford 0.0236         NA 0.0437 0.0213\nTimor      0.0351     0.0437     NA 0.0657\nWombat     0.0434     0.0213 0.0657     NA\n\n$Stat_matrices$Gst_H\n           Crusoe Muckleford  Timor Wombat\nCrusoe         NA     0.0566 0.0850 0.1047\nMuckleford 0.0566         NA 0.1059 0.0525\nTimor      0.0850     0.1059     NA 0.1603\nWombat     0.1047     0.0525 0.1603     NA\n\n\n[[2]]\n      Stat_tables.Crusoe_vs_Muckleford Stat_tables.Crusoe_vs_Timor\nFst                             0.0148                      0.0171\nFstp                            0.0356                      0.0545\nDest                            0.0236                      0.0351\nGst_H                           0.0566                      0.0850\n      Stat_tables.Crusoe_vs_Wombat Stat_tables.Muckleford_vs_Timor\nFst                         0.0255                          0.0249\nFstp                        0.0669                          0.0681\nDest                        0.0434                          0.0437\nGst_H                       0.1047                          0.1059\n      Stat_tables.Muckleford_vs_Wombat Stat_tables.Timor_vs_Wombat\nFst                             0.0096                      0.0387\nFstp                            0.0337                      0.1046\nDest                            0.0213                      0.0657\nGst_H                           0.0525                      0.1603\n\ndartR.base::gl.report.fstat(EYR.correct, verbose = 0)\n\n   Your plot was not shown in full because your 'Plots' pane\n    is too small. Increase the size of the 'Plots' pane and run the\n    function again. Alternatively, use the parameter 'plot.file' to\n    save the plot to a file.\n\n\n$Stat_matrices\n$Stat_matrices$Fst\n           Crusoe Muckleford  Timor Wombat\nCrusoe         NA     0.0128 0.0168 0.0199\nMuckleford 0.0128         NA 0.0212 0.0085\nTimor      0.0168     0.0212     NA 0.0313\nWombat     0.0199     0.0085 0.0313     NA\n\n$Stat_matrices$Fstp\n           Crusoe Muckleford  Timor Wombat\nCrusoe         NA     0.0317 0.0540 0.0556\nMuckleford 0.0317         NA 0.0608 0.0315\nTimor      0.0540     0.0608     NA 0.0903\nWombat     0.0556     0.0315 0.0903     NA\n\n$Stat_matrices$Dest\n           Crusoe Muckleford  Timor Wombat\nCrusoe         NA     0.0199 0.0337 0.0344\nMuckleford 0.0199         NA 0.0373 0.0189\nTimor      0.0337     0.0373     NA 0.0547\nWombat     0.0344     0.0189 0.0547     NA\n\n$Stat_matrices$Gst_H\n           Crusoe Muckleford  Timor Wombat\nCrusoe         NA     0.0492 0.0832 0.0856\nMuckleford 0.0492         NA 0.0930 0.0480\nTimor      0.0832     0.0930     NA 0.1368\nWombat     0.0856     0.0480 0.1368     NA\n\n\n[[2]]\n      Stat_tables.Crusoe_vs_Muckleford Stat_tables.Crusoe_vs_Timor\nFst                             0.0128                      0.0168\nFstp                            0.0317                      0.0540\nDest                            0.0199                      0.0337\nGst_H                           0.0492                      0.0832\n      Stat_tables.Crusoe_vs_Wombat Stat_tables.Muckleford_vs_Timor\nFst                         0.0199                          0.0212\nFstp                        0.0556                          0.0608\nDest                        0.0344                          0.0373\nGst_H                       0.0856                          0.0930\n      Stat_tables.Muckleford_vs_Wombat Stat_tables.Timor_vs_Wombat\nFst                             0.0085                      0.0313\nFstp                            0.0315                      0.0903\nDest                            0.0189                      0.0547\nGst_H                           0.0480                      0.1368\n\n\n\n\n\nExercise data 3 - Bull shark\nData from Devloo‐Delva et al. (2023).\n\n\n\nThe Bull Shark\n\n\n\nLoad data\n\nprint(load(\"data/Bull_shark_DArTseq_genlight_for_sex-linked_markers.Rdata\"))\n\n[1] \"data.gl\"\n\ndata.gl@n.loc\n\n[1] 93202\n\ntable(data.gl@pop)\n\n\nE-ATL  E-IO  Fiji Japan  N-IO W-ATL  W-IO W-PAC \n    2    36     8    14    20    36    40    26 \n\ntable(data.gl@other$ind.metrics$pop)\n\n\nE-ATL  E-IO  Fiji Japan  N-IO W-ATL  W-IO W-PAC \n    2    36     8    14    20    36    40    26 \n\ntable(data.gl@other$ind.metrics$sex, useNA = \"ifany\")\n\n\n   F    M &lt;NA&gt; \n  85   64   33 \n\n\n\n\n1. Number of sex-linked markers?\n\nres &lt;- dartR.sexlinked::filter.sex.linked(gl = data.gl, system = \"xy\", plots = TRUE,\n    ncores = 1)\n\nDetected 85 females and 64 males.\n\n\nStarting phase 1. May take a while...\n\n\nBuilding call rate plots.\n\n\n\n\n\nDone. Starting phase 2.\n\n\nBuilding heterozygosity plots.\n\n\n\n\n\n\n\n\nDone building heterozygosity plots.\n\n\n**FINISHED** Total of analyzed loci: 93202.\nFound 9 sex-linked loci:\n   2 Y-linked loci\n   2 sex-biased loci\n   4 X-linked loci\n   1 XY gametologs.\nAnd 93193 autosomal loci.\n\n\n\n\n\n\n\n2. Individuals with wrong sexID?\n\nsexID &lt;- dartR.sexlinked::infer.sex(gl_sex_filtered = res, system = \"xy\",\n    seed = 124)\n\nNot enough gametologs (need at least 5). Assigning NA...\n\n\n***FINISHED***\n\nknitr::kable(head(sexID))\n\nagreed.sex &lt;- sub(pattern = \"\\\\*\", replacement = \"\", x = sexID$agreed.sex)  # remove asterisk\nsum(data.gl$other$ind.metrics$sex != agreed.sex, na.rm = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nid\ny.linked.sex\n#called\n#missing\nx.linked.sex\n#Het.x\n#Hom.x\ngametolog.sex\n#Het.g\n#Hom.g\nagreed.sex\n\n\n\n\nCL-FIJ002-F\nCL-FIJ002-F\nF\n0\n2\nF\n4\n0\nNA\nNA\nNA\nF\n\n\nCL-FIJ003-M\nCL-FIJ003-M\nM\n2\n0\nM\n0\n4\nNA\nNA\nNA\nM\n\n\nCL-FIJ008-F\nCL-FIJ008-F\nF\n0\n2\nF\n2\n2\nNA\nNA\nNA\nF\n\n\nCL-FIJ010-F\nCL-FIJ010-F\nF\n0\n2\nF\n3\n1\nNA\nNA\nNA\nF\n\n\nCL-FIJ015-F\nCL-FIJ015-F\nF\n0\n2\nF\n4\n0\nNA\nNA\nNA\nF\n\n\nCL-FIJ018-F\nCL-FIJ018-F\nF\n0\n2\nF\n3\n1\nNA\nNA\nNA\nF\n\n\n\n\n\n[1] 8\n\n\n\n\n\nExercise data 4 - Blue shark\nData from Nikolic et al. (2023).\n\n\n\nThe Blue Shark\n\n\n\nLoad data\n\nprint(load(\"data/Blue_shark_DArTseq_genlight_for_sex-linked_markers.Rdata\"))\n\n[1] \"data.gl\"\n\ndata.gl@n.loc\n\n[1] 172384\n\ntable(data.gl@pop)\n\n\n   EIO   MED1   MED2   NATL  NEATL    NIO   NPAC   SAF1   SAF2 SWPAC1 SWPAC2 \n     8     34     20     49     26     27      4     21     89     30     16 \nSWPAC3    WIO \n    11     29 \n\ntable(data.gl@other$ind.metrics$pop)\n\n\n   EIO   MED1   MED2   NATL  NEATL    NIO   NPAC   SAF1   SAF2 SWPAC1 SWPAC2 \n     8     34     20     49     26     27      4     21     89     30     16 \nSWPAC3    WIO \n    11     29 \n\ntable(data.gl@other$ind.metrics$sex, useNA = \"ifany\")\n\n\n   F    M &lt;NA&gt; \n 104  111  149 \n\n\n\n\n1. Number of sex-linked markers?\n\nres &lt;- dartR.sexlinked::filter.sex.linked(gl = data.gl, system = \"xy\", plots = TRUE,\n    ncores = 1)\n\nDetected 104 females and 111 males.\n\n\nStarting phase 1. May take a while...\n\n\nBuilding call rate plots.\n\n\n\n\n\nDone. Starting phase 2.\n\n\nBuilding heterozygosity plots.\n\n\n\n\n\n\n\n\nDone building heterozygosity plots.\n\n\n**FINISHED** Total of analyzed loci: 172384.\nFound 26 sex-linked loci:\n   2 Y-linked loci\n   2 sex-biased loci\n   22 X-linked loci\n   0 XY gametologs.\nAnd 172358 autosomal loci.\n\n\n\n\n\n\n\n2. Individuals with wrong sexID?\n\nsexID &lt;- dartR.sexlinked::infer.sex(gl_sex_filtered = res, system = \"xy\",\n    seed = 124)\n\nNot enough gametologs (need at least 5). Assigning NA...\n\n\n***FINISHED***\n\nknitr::kable(head(sexID))\n\nagreed.sex &lt;- sub(pattern = \"\\\\*\", replacement = \"\", x = sexID$agreed.sex)  # remove asterisk\nsum(data.gl$other$ind.metrics$sex != agreed.sex, na.rm = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nid\ny.linked.sex\n#called\n#missing\nx.linked.sex\n#Het.x\n#Hom.x\ngametolog.sex\n#Het.g\n#Hom.g\nagreed.sex\n\n\n\n\n60088\n60088\nM\n2\n0\nM\n0\n22\nNA\nNA\nNA\nM\n\n\n60160\n60160\nM\n2\n0\nM\n0\n21\nNA\nNA\nNA\nM\n\n\n60168\n60168\nM\n2\n0\nM\n0\n22\nNA\nNA\nNA\nM\n\n\n60176\n60176\nM\n2\n0\nM\n0\n21\nNA\nNA\nNA\nM\n\n\n60096\n60096\nM\n2\n0\nM\n0\n22\nNA\nNA\nNA\nM\n\n\n60104\n60104\nM\n2\n0\nM\n1\n19\nNA\nNA\nNA\nM\n\n\n\n\n\n[1] 22\n\n\n\n\n\n\nDevloo‐Delva, Floriaan, Christopher P. Burridge, Peter M. Kyne, Juerg M. Brunnschweiler, Demian D. Chapman, Patricia Charvet, Xiao Chen, et al. 2023. “From Rivers to Ocean Basins: The Role of Ocean Barriers and Philopatry in the Genetic Structuring of a Cosmopolitan Coastal Predator.” Ecology and Evolution 13 (2): e9837. https://doi.org/10.1002/ece3.9837.\n\n\nNikolic, Natacha, Floriaan Devloo-Delva, Diane Bailleul, Ekaterina Noskova, Clément Rougeux, Chrystelle Delord, Philippe Borsa, et al. 2023. “Stepping up to Genome Scan Allows Stock Differentiation in the Worldwide Distributed Blue Shark Prionace Glauca.” Molecular Ecology 32 (5): 1000–1019. https://doi.org/10.1111/mec.16822.\n\n\nRobledo-Ruiz, Diana A., Lana Austin, J. Nevil Amos, Jesús Castrejón-Figueroa, Daniel K. P. Harley, Michael J. L. Magrath, Paul Sunnucks, and Alexandra Pavlova. 2023. “Easy-to-Use R Functions to Separate Reduced-Representation Genomic Datasets into Sex-Linked and Autosomal Loci, and Conduct Sex Assignment.” Molecular Ecology Resources 0 (n/a). https://doi.org/10.1111/1755-0998.13844."
  },
  {
    "objectID": "session10.html#references",
    "href": "session10.html#references",
    "title": "10  Sex Linked Markers",
    "section": "References",
    "text": "References\nDevloo-Delva, F., Burridge, C. P., Kyne, P. M., Brunnschweiler, J. M., Chapman, D. D., Charvet, P., … & Feutry, P. (2023). From rivers to ocean basins: The role of ocean barriers and philopatry in the genetic structuring of a cosmopolitan coastal predator. Ecology and Evolution, 13(2), e9837. https://doi.org/10.1002/ece3.9837\nNikolic, N., Devloo-Delva, F., Bailleul, D., Noskova, E., Rougeux, C., Delord, C., … & Arnaud‐Haond, S. (2023). Stepping up to genome scan allows stock differentiation in the worldwide distributed blue shark Prionace glauca. Molecular Ecology, 32(5), 1000-1019. https://doi.org/10.1111/mec.16822\nRobledo-Ruiz, D. A., Austin, L., Amos, J. N., Castrejón-Figueroa, J., Harley, D. K. P., Magrath, M. J. L., Sunnucks, P., & Pavlova, A. (2023). Easy-to-use R functions to separate reduced-representation genomic datasets into sex-linked and autosomal loci, and conduct sex assignment. Molecular Ecology Resources, 00, 1–21. https://doi.org/10.1111/1755-0998.13844\n\n\n\n\nDevloo‐Delva, Floriaan, Christopher P. Burridge, Peter M. Kyne, Juerg M. Brunnschweiler, Demian D. Chapman, Patricia Charvet, Xiao Chen, et al. 2023. “From Rivers to Ocean Basins: The Role of Ocean Barriers and Philopatry in the Genetic Structuring of a Cosmopolitan Coastal Predator.” Ecology and Evolution 13 (2): e9837. https://doi.org/10.1002/ece3.9837.\n\n\nNikolic, Natacha, Floriaan Devloo-Delva, Diane Bailleul, Ekaterina Noskova, Clément Rougeux, Chrystelle Delord, Philippe Borsa, et al. 2023. “Stepping up to Genome Scan Allows Stock Differentiation in the Worldwide Distributed Blue Shark Prionace Glauca.” Molecular Ecology 32 (5): 1000–1019. https://doi.org/10.1111/mec.16822.\n\n\nRobledo-Ruiz, Diana A., Lana Austin, J. Nevil Amos, Jesús Castrejón-Figueroa, Daniel K. P. Harley, Michael J. L. Magrath, Paul Sunnucks, and Alexandra Pavlova. 2023. “Easy-to-Use R Functions to Separate Reduced-Representation Genomic Datasets into Sex-Linked and Autosomal Loci, and Conduct Sex Assignment.” Molecular Ecology Resources 0 (n/a). https://doi.org/10.1111/1755-0998.13844."
  },
  {
    "objectID": "session10.html#exercise-4",
    "href": "session10.html#exercise-4",
    "title": "10  Sex Linked Markers",
    "section": "EXERCISE",
    "text": "EXERCISE\n\n\n\n\n\n\nExercise\n\n\n\n\nImagine you are analyzing the genetic data of a population and you want to look at its genetic structure and genetic diversity. You get to work by filtering your beautiful set of SNPs. Because you are a rigorous, you want to test whether using function filter.sex.linked to properly filter out sex-linked loci changes the results of the populations analyses. So you: (1) process your SNP dataset by applying standard filters and run analyses, and (2) process the dataset by filtering out sex-linked loci first, applying standard filters second, and then run analyses.\nChoose one of the following datasets (or your own data) and report:\n\nHow many sex-linked markers are present?\nHow many individuals had a wrong sexID?\nDo you see any changes in your PCA/structure analyses when you filtered out sex-linked markers versus when you did not?\nDo you see any differences in genetic diversity and fixation indices when you filtered out sex-linked markers versus when you did not?"
  },
  {
    "objectID": "session02.html#assessing-populations-structure-diversity-and-demographic-history",
    "href": "session02.html#assessing-populations-structure-diversity-and-demographic-history",
    "title": "2  Pop Gen In Conservation",
    "section": "Assessing populations: structure, diversity, and demographic history",
    "text": "Assessing populations: structure, diversity, and demographic history\n\nLoad data and explore\nread in data\nthis dataset is to assess population structure and diversity in Uperoleia crassa, from https://onlinelibrary.wiley.com/doi/epdf/10.1111/mec.16597\n\n# gl &lt;- dartR::gl.read.dart(\"Report_DUp20-4995_1_moreOrders_SNP_mapping_2.csv\",\n#                           ind.metafile = \"Uperoleia_metadata.csv\")\n\nload('./data/session02_Uperoleia_crassa.RData') # data named gl\n\nThese are monsoonal tropical frogs, who are very common and abundant. They do interesting and weird stuff evolutionarily and reproductively\nlets quickly look at our samples and populations\n\ngl.map.interactive(gl)\n\nStarting gl.map.interactive \n  Processing genlight object with SNP data\nCompleted: gl.map.interactive \n\n\n\n\n\n\nwe have two populations - the Kimberley (IK) and the Top End (IT)\n\n\nClean data\nClean up your dataset to remove the most egregiously bad loci and individuals this set of filtering can be used across analyses\n\n#Get rid of really poorly sequenced loci\n#But don’t cut hard\ngl.report.callrate(gl)\n\nStarting gl.report.callrate \n  Processing genlight object with SNP data\n  Reporting Call Rate by Locus\n  No. of loci = 227143 \n  No. of individuals = 36 \n    Minimum      :  0.222222 \n    1st quartile :  0.611111 \n    Median       :  0.777778 \n    Mean         :  0.7464089 \n    3r quartile  :  0.916667 \n    Maximum      :  1 \n    Missing Rate Overall:  0.2536 \n\n\n\n\n\nCompleted: gl.report.callrate \n\ngl.1 &lt;- gl.filter.callrate(gl, method = \"loc\", threshold = 0.8)\n\nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Warning: Data may include monomorphic loci in call rate \n                    calculations for filtering\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 0.8 \n\n\n\n\n\nCompleted: gl.filter.callrate \n\n#Very low filter – this is only to get rid of your really bad individuals\ngl.report.callrate(gl.1, method = \"ind\")\n\nStarting gl.report.callrate \n  Processing genlight object with SNP data\n\n  Reporting Call Rate by Individual\n  No. of loci = 113404 \n  No. of individuals = 36 \n    Minimum      :  0.7589944 \n    1st quartile :  0.8751808 \n    Median       :  0.9524179 \n    Mean         :  0.9159171 \n    3r quartile  :  0.9598625 \n    Maximum      :  0.9787662 \n    Missing Rate Overall:  0.0841 \n\nListing 2 populations and their average CallRates\n  Monitor again after filtering\n  Population CallRate  N\n1         IK   0.9567 22\n2         IT   0.8519 14\n\nListing 20 individuals with the lowest CallRates\n  Use this list to see which individuals will be lost on filtering by individual\n  Set ind.to.list parameter to see more individuals\n          Individual  CallRate\n1     Up1041_R138706 0.7589944\n2    Up1186_QMJ88804 0.7730856\n3      Up1096_R36195 0.8080932\n4   Up0969_ABTC29129 0.8429597\n5   Up1136_NTMR36228 0.8449878\n6   Up0854_ABTC17229 0.8483299\n7   Up0276_NTMR35114 0.8558869\n8   Up1118_NTMR36173 0.8596699\n9      Up1120_R36170 0.8701809\n10  Up0767_ABTC12489 0.8768474\n11  Up0731_ABTC99709 0.8850834\n12  Up0832_ABTC93392 0.8948097\n13  Up0769_ABTC12511 0.8980988\n14 Up0166_WAMR162490 0.9082308\n15     Up1078_R36177 0.9091390\n16 Up1269_WAMR164857 0.9188212\n17 Up1266_WAMR164844 0.9397640\n18 Up1321_WAMR171536 0.9517389\n19        WAMR162566 0.9530969\n20 Up0083_WAMR113846 0.9537142\n\n)\n\n\n\n\n\nCompleted: gl.report.callrate \n\ngl.2 &lt;- gl.filter.callrate(gl.1, method = \"ind\", threshold = 0.25)\n\nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Warning: Data may include monomorphic loci in call rate \n                    calculations for filtering\n  Recalculating Call Rate\n  Removing individuals based on Call Rate, threshold = 0.25 \n\n\n\n\n\n  Note: Locus metrics not recalculated\n  Note: Resultant monomorphic loci not deleted\nCompleted: gl.filter.callrate \n\n#Always run this after removing individuals – removes loci that are no longer variable\ngl.3 &lt;- gl.filter.monomorphs(gl.2)\n\nStarting gl.filter.monomorphs \n  Processing genlight object with SNP data\n  Identifying monomorphic loci\n  No monomorphic loci to remove\nCompleted: gl.filter.monomorphs \n\n#Get rid of unreliable loci\ngl.report.reproducibility(gl.3)\n\nStarting gl.report.reproducibility \n  Processing genlight object with SNP data\n  Reporting Repeatability by Locus\n  No. of loci = 113404 \n  No. of individuals = 36 \n    Minimum      :  0.875 \n    1st quartile :  1 \n    Median       :  1 \n    Mean         :  0.9962267 \n    3r quartile  :  1 \n    Maximum      :  1 \n    Missing Rate Overall:  0.08 \n\n\n\n\n\n   Quantile Threshold Retained Percent Filtered Percent\n1      100%  1.000000   106676    94.1     6728     5.9\n2       95%  1.000000   106676    94.1     6728     5.9\n3       90%  1.000000   106676    94.1     6728     5.9\n4       85%  1.000000   106676    94.1     6728     5.9\n5       80%  1.000000   106676    94.1     6728     5.9\n6       75%  1.000000   106676    94.1     6728     5.9\n7       70%  1.000000   106676    94.1     6728     5.9\n8       65%  1.000000   106676    94.1     6728     5.9\n9       60%  1.000000   106676    94.1     6728     5.9\n10      55%  1.000000   106676    94.1     6728     5.9\n11      50%  1.000000   106676    94.1     6728     5.9\n12      45%  1.000000   106676    94.1     6728     5.9\n13      40%  1.000000   106676    94.1     6728     5.9\n14      35%  1.000000   106676    94.1     6728     5.9\n15      30%  1.000000   106676    94.1     6728     5.9\n16      25%  1.000000   106676    94.1     6728     5.9\n17      20%  1.000000   106676    94.1     6728     5.9\n18      15%  1.000000   106676    94.1     6728     5.9\n19      10%  1.000000   106676    94.1     6728     5.9\n20       5%  0.944444   110021    97.0     3383     3.0\n21       0%  0.875000   113404   100.0        0     0.0\nCompleted: gl.report.reproducibility \n\ngl.4 &lt;- gl.filter.reproducibility(gl.3)\n\nStarting gl.select.colors \n  Warning: Number of required colors not specified, set to 9\n  Library: RColorBrewer\n  Palette: brewer.pal\n  Showing and returning 2 of 9 colors for library RColorBrewer : palette Blues \n\n\n\n\n\nCompleted: gl.select.colors \nStarting gl.filter.reproducibility \n  Processing genlight object with SNP data\n  Removing loci with repeatability less than 0.99 \n\n\n\n\n\nCompleted: gl.filter.reproducibility \n\n#Get rid of low and super high read depth loci\n#do twice so you can zoom in\ngl.report.rdepth(gl.4)\n\nStarting gl.report.rdepth \n  Processing genlight object with SNP data\n  Reporting Read Depth by Locus\n  No. of loci = 106676 \n  No. of individuals = 36 \n    Minimum      :  2.5 \n    1st quartile :  5 \n    Median       :  7.2 \n    Mean         :  7.741356 \n    3r quartile  :  10 \n    Maximum      :  121.7 \n    Missing Rate Overall:  0.09 \n\n\n\n\n\n   Quantile Threshold Retained Percent Filtered Percent\n1      100%     121.7        1     0.0   106675   100.0\n2       95%      13.6     5520     5.2   101156    94.8\n3       90%      12.4    10872    10.2    95804    89.8\n4       85%      11.5    16057    15.1    90619    84.9\n5       80%      10.7    21633    20.3    85043    79.7\n6       75%      10.0    26932    25.2    79744    74.8\n7       70%       9.4    32193    30.2    74483    69.8\n8       65%       8.8    37650    35.3    69026    64.7\n9       60%       8.2    43461    40.7    63215    59.3\n10      55%       7.7    48582    45.5    58094    54.5\n11      50%       7.2    53911    50.5    52765    49.5\n12      45%       6.7    59668    55.9    47008    44.1\n13      40%       6.3    64353    60.3    42323    39.7\n14      35%       5.8    70391    66.0    36285    34.0\n15      30%       5.4    75457    70.7    31219    29.3\n16      25%       5.0    80644    75.6    26032    24.4\n17      20%       4.6    86041    80.7    20635    19.3\n18      15%       4.2    91353    85.6    15323    14.4\n19      10%       3.8    96433    90.4    10243     9.6\n20       5%       3.3   102090    95.7     4586     4.3\n21       0%       2.5   106676   100.0        0     0.0\nCompleted: gl.report.rdepth \n\ngl.5 &lt;- gl.filter.rdepth(gl.4, lower = 0, upper = 25)\n\nStarting gl.filter.rdepth \n  Processing genlight object with SNP data\n  Removing loci with rdepth &lt;= 0 and &gt;= 25 \n\n\n\n\n\nCompleted: gl.filter.rdepth \n\ngl.clean &lt;- gl.filter.rdepth(gl.5, lower = 8, upper = 17)\n\nStarting gl.filter.rdepth \n  Processing genlight object with SNP data\n  Removing loci with rdepth &lt;= 8 and &gt;= 17 \n\n\n\n\n\nCompleted: gl.filter.rdepth \n\nnInd(gl.clean)\n\n[1] 36\n\nnLoc(gl.clean)\n\n[1] 44752\n\n#look at the data to see if you see any obvious issues and redo if you do.\nplot(gl.clean)\n\n\n\nrm(gl.1, gl.2, gl.3, gl.4, gl.5)\n\n\nthis file is now your starting file for other filtering\n\n\n\nFiltering: Structure and phylogenetic analyses\n\nFiltering data for population structure and phylogenetic analyses\nloci on the same fragment and missing data are not well supported in these analyses. Structure-like analyses dislikes missing data. So, we are going to filter even harder than normal here just so that we can see a result.\n\ngl.report.callrate(gl.clean)\ngl.1 &lt;- gl.filter.callrate(gl.clean, method = \"loc\", threshold = 0.98)\n#Remove minor alleles\n#I usually set up the threshold so it is just \n# removing singletons to improve computation time\ngl.report.maf(gl.1)\ngl.2 &lt;- gl.filter.maf(gl.1,  threshold = 1/(2*nInd(gl.1)))\n#check that the data looks fairly clean\n#this starts to show some obvious population banding\nplot(gl.2)\n#remove secondary SNPs on the same fragment\n#Always do this as the last loci filter so that you’ve cut for quality \n# before you cut because there are two SNPs\ngl.3 &lt;- gl.filter.secondaries(gl.2)\n\n#Filter on individuals. You can usually be a bit flexible at this point.\n#individuals look a whole lot better now\n#make note of any idnviduals with a low call rate. Keep them in for now\n#but if they act weird in the analysis, you may want to consider removing\ngl.report.callrate(gl.3, method = \"ind\")\ngl.4 &lt;- gl.filter.callrate(gl.3, method = \"ind\", threshold = .9)\n#Always run this after removing individuals\ngl.structure &lt;- gl.filter.monomorphs(gl.4)\n\n#this is your cleaned dataset for a population structure analysis              \nplot(gl.structure)\nnInd(gl.structure)\nnLoc(gl.structure)\n\nyou can write this file out for various analyses that we will not go into here\ngl2structure(XXXX) gl2faststructure(XXXX)\n\n\n\nRUN SNMF (LEA)\nThis is a structure-like analysis called SNMF. This code is not all you would need to publish this result, but it is a good first look.\n\n# LEA requires the genotype style file\ngl2faststructure(gl.structure, outfile = \"gl_structure.fstr\",\n                 outpath = './data/')\nstruct2geno(\"./data/gl_structure.fstr\", ploidy = 2, FORMAT = 2) \n###this hates any loci with all heterozygotes\n\nsnmf.Sy.K1_8.10 = snmf(\"./data/gl_structure.fstr.geno\", K = 1:8,\n                       entropy = T, ploidy = 2, project=\"new\", repetitions = 10)  \n\n\nplot(snmf.Sy.K1_8.10)\n\n\n\nk &lt;- 2 #chose best based on lowest cross entropy in graph\nce = cross.entropy(snmf.Sy.K1_8.10, K = k)\nbest &lt;- which.min(ce)\npar (mfrow = c(1,1))\nbarplot(t(Q(snmf.Sy.K1_8.10, K = k, run = best)), col = 1:k)\n\n\n\n#Do a PCoA plot. I had these but they are also good for some stuff\npc &lt;- gl.pcoa(gl.structure)\n\nStarting gl.pcoa \n  Processing genlight object with SNP data\n  Performing a PCA, individuals as entities, loci as attributes, SNP genotype as state\nStarting gl.colors \nSelected color type 2 \nCompleted: gl.colors \n\n\n\n\n\nCompleted: gl.pcoa \n\ngl.pcoa.plot(pc, gl.structure)\n\nStarting gl.pcoa.plot \n  Processing an ordination file (glPca)\n  Processing genlight object with SNP data\n  Plotting populations in a space defined by the SNPs\n  Preparing plot .... please wait\n\n\n\n\n\nCompleted: gl.pcoa.plot \n\nrm(ce, gl.1, gl.2, gl.3, gl.4, snmf.Sy.K1_8.10, best, k, pc)\n\n\n\n\n\n\n\nExercise\n\n\n\n Have a go at altering various parameters and seeing how this changes your answers. One thing that regularly changes with MAF filters is the amount of variance explained. Removing more minor alleles increases the variance explained in a PCoA. Think about why that would be the case.\n\n\n\n\nFiltering for Tajima’s D\nNow we are going to look at how filtering can affect your understanding of demographic processes that population is Significant negative values of Tajima’s D are due to an excess of rare alleles and are consistent with range expansion. Significant positive values are associated with population contraction. Significance (a P-value) cannot be calculated without a simulation. Please ask me how to do this using Hudson’s ms program. Rare alleles matter! Lets look at how singletons impact our estimations of whether a population is expanding or contracting\nThis is a function written to calculate Tajima’s D from SNP data. It will create the function in your global environment so that you can call it.\n\nget_tajima_D &lt;- function(x){\n  require(dartRverse) # possibly not needed for a function in an R package?\n  \n  # Find allele frequencies (p1 and p2) for every locus in every population\n  allele_freqs &lt;- gl.allele.freq(x)\n  names(allele_freqs)[names(allele_freqs) == \"frequency\"] &lt;- \"p1\"\n  allele_freqs$p1 &lt;- allele_freqs$p1 / 100\n  allele_freqs$p2 &lt;- 1 - allele_freqs$p1\n  \n  # Get the names of all the populations\n  pops &lt;- unique(allele_freqs$popn)\n  \n  #split each population\n  allele_freqs_by_pop &lt;- split(allele_freqs, allele_freqs$popn)\n  \n  # Internal function to calculate pi\n  calc_pi &lt;- function(allele_freqs) {\n    n = allele_freqs$nobs * 2  # vector of n values\n    pi_sqr &lt;- allele_freqs$p1 ^ 2 + allele_freqs$p2 ^ 2\n    h = (n / (n - 1)) * (1 - pi_sqr) # vector of values of h\n    sum(h) # return pi, which is the sum of h across loci\n  }\n  \n  get_tajima_D_for_one_pop &lt;- function(allele_freqs_by_pop) {\n    pi &lt;- calc_pi(allele_freqs_by_pop)\n    \n# Calculate number of segregating sites, ignoring missing data (missing data will not appear in teh allele freq calcualtions)\n    #S &lt;- sum(!(allele_freqs_by_pop$p1 == 0 | allele_freqs_by_pop$p1 == 1))\n    S &lt;- sum(allele_freqs_by_pop$p1 &gt;0 & allele_freqs_by_pop$p1 &lt;1)\n    if(S == 0) {\n      warning(\"No segregating sites\")\n      data.frame(pi = NaN, \n                 S = NaN, \n                 D = NaN, \n                 Pval.normal = NaN, \n                 Pval.beta = NaN)\n    }\n    \n    n &lt;- mean(allele_freqs_by_pop$nobs * 2 )\n    \n    tmp &lt;- 1:(n - 1)\n    a1 &lt;- sum(1/tmp)\n    a2 &lt;- sum(1/tmp^2)\n    b1 &lt;- (n + 1)/(3 * (n - 1))\n    b2 &lt;- 2 * (n^2 + n + 3)/(9 * n * (n - 1))\n    c1 &lt;- b1 - 1/a1\n    c2 &lt;- b2 - (n + 2)/(a1 * n) + a2/a1^2\n    e1 &lt;- c1/a1\n    e2 &lt;- c2/(a1^2 + a2)\n    \n    \n    #calculate D and do beta testing\n    D &lt;- (pi - S/a1) / sqrt(e1 * S + e2 * S * (S - 1))\n    Dmin &lt;- (2/n - 1/a1)/sqrt(e2)\n    Dmax &lt;- ((n/(2*(n - 1))) - 1/a1)/sqrt(e2)\n    tmp1 &lt;- 1 + Dmin * Dmax\n    tmp2 &lt;- Dmax - Dmin\n    a &lt;- -tmp1 * Dmax/tmp2\n    b &lt;- tmp1 * Dmin/tmp2\n  \n    \n    data.frame(pi = pi, \n               S = S, \n               D = D)\n  }\n  \n  output &lt;- do.call(\"rbind\", lapply(allele_freqs_by_pop, \n                                    get_tajima_D_for_one_pop))\n  data.frame(population = rownames(output), output, row.names = NULL)\n}\n\nWe are going to focus on key filters and how they impact estimates\n\nMinor allele frequency (MAF) filtering\nNo MAF allele filtering\nNo MAF filtering but filtering on Read depth\n\n\n1. MAF filtering\nWe will start with our lightly cleaned data and filter this for the tajima’s calculation\n\n#This function is written to calculate Tajima's D with a fair amount of missing data\n#we are going to filter lightly here \ngl.report.callrate(gl.clean)\n\nStarting gl.report.callrate \n  Processing genlight object with SNP data\n  Reporting Call Rate by Locus\n  No. of loci = 44752 \n  No. of individuals = 36 \n    Minimum      :  0.805556 \n    1st quartile :  0.888889 \n    Median       :  0.944444 \n    Mean         :  0.9387004 \n    3r quartile  :  1 \n    Maximum      :  1 \n    Missing Rate Overall:  0.0613 \n\n\n\n\n\nCompleted: gl.report.callrate \n\ngl.1 &lt;- gl.filter.callrate(gl.clean, method = \"loc\", threshold = 0.9)\n\nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 0.9 \n\n\n\n\n\nCompleted: gl.filter.callrate \n\n#In this first round, we are going to actually remove singletons to see what happens\ngl.report.maf(gl.1)\n\nStarting gl.report.maf \n  Processing genlight object with SNP data\nStarting gl.report.maf \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population IK \n  No. of loci = 14958 \n  No. of individuals = 22 \n    Minimum      :  0.0227 \n    1st quantile :  0.0227 \n    Median       :  0.0455 \n    Mean         :  0.09433557 \n    3r quantile  :  0.0952 \n    Maximum      :  0.5 \n    Missing Rate Overall:  0.01 \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population IT \n  No. of loci = 24122 \n  No. of individuals = 14 \n    Minimum      :  0.0357 \n    1st quantile :  0.0385 \n    Median       :  0.0769 \n    Mean         :  0.1268348 \n    3r quantile  :  0.1667 \n    Maximum      :  0.5 \n    Missing Rate Overall:  0.06 \n\n  Reporting Minor Allele Frequency (MAF) by Locus OVERALL\n  No. of loci = 33136 \n  No. of individuals = 36 \n    Minimum      :  0.0114 \n    1st quantile :  0.0192 \n    Median       :  0.0384 \n    Mean         :  0.08512636 \n    3r quantile  :  0.0893 \n    Maximum      :  0.5 \n    Missing Rate Overall:  0.03 \n\n\n\n\n\n   Quantile Threshold Retained Percent Filtered Percent\n1      100%    0.5000       75     0.2    33061    99.8\n2       95%    0.3785     1657     5.0    31479    95.0\n3       90%    0.2559     3314    10.0    29822    90.0\n4       85%    0.1705     4984    15.0    28152    85.0\n5       80%    0.1190     6630    20.0    26506    80.0\n6       75%    0.0893     8533    25.8    24603    74.2\n7       70%    0.0714    10159    30.7    22977    69.3\n8       65%    0.0577    11608    35.0    21528    65.0\n9       60%    0.0454    13989    42.2    19147    57.8\n10      55%    0.0416    15067    45.5    18069    54.5\n11      50%    0.0384    16598    50.1    16538    49.9\n12      45%    0.0357    18691    56.4    14445    43.6\n13      40%    0.0292    19887    60.0    13249    40.0\n14      35%    0.0227    22254    67.2    10882    32.8\n15      30%    0.0209    23242    70.1     9894    29.9\n16      25%    0.0192    25099    75.7     8037    24.3\n17      20%    0.0178    28849    87.1     4287    12.9\n18      15%    0.0178    28849    87.1     4287    12.9\n19      10%    0.0114    32776    98.9      360     1.1\n20       5%    0.0114    32776    98.9      360     1.1\n21       0%    0.0114    33136   100.0        0     0.0\nCompleted: gl.report.maf \n\nnLoc(gl.1)\n\n[1] 33136\n\ngl.2 &lt;- gl.filter.maf(gl.1,  threshold = 0.05)\n\nStarting gl.select.colors \n  Warning: Number of required colors not specified, set to 9\n  Library: RColorBrewer\n  Palette: brewer.pal\n  Showing and returning 2 of 9 colors for library RColorBrewer : palette Blues \n\n\n\n\n\nCompleted: gl.select.colors \nStarting gl.filter.maf \n  Processing genlight object with SNP data\n  Removing loci with MAF &lt; 0.05 over all the dataset \n                and recalculating FreqHoms and FreqHets\n\n\n\n\n\nCompleted: gl.filter.maf \n\nnLoc(gl.2)\n\n[1] 12823\n\n#check that the data looks fairly clean\n#this starts ot show some obvious population banding\nplot(gl.2)\n\n\n\n#we are also going to remove secondary SNPs on the same fragment in this first round\ngl.3 &lt;- gl.filter.secondaries(gl.2)\n\nStarting gl.filter.secondaries \n  Processing genlight object with SNP data\n  Selecting one SNP per sequence tag at random\nCompleted: gl.filter.secondaries \n\n#Filter on individuals. You can usually be a bit flexible at this point.\n#make note of any idnviduals with a low call rate. Keep them in for now\n#but if they act weird in the analysis, you may want to consider removing\ngl.report.callrate(gl.3, method = \"ind\")\n\nStarting gl.report.callrate \n  Processing genlight object with SNP data\n\n  Reporting Call Rate by Individual\n  No. of loci = 10422 \n  No. of individuals = 36 \n    Minimum      :  0.8513721 \n    1st quartile :  0.9509211 \n    Median       :  0.9869507 \n    Mean         :  0.9658255 \n    3r quartile  :  0.9918922 \n    Maximum      :  0.9948187 \n    Missing Rate Overall:  0.0342 \n\nListing 2 populations and their average CallRates\n  Monitor again after filtering\n  Population CallRate  N\n1         IK   0.9878 22\n2         IT   0.9313 14\n\nListing 20 individuals with the lowest CallRates\n  Use this list to see which individuals will be lost on filtering by individual\n  Set ind.to.list parameter to see more individuals\n          Individual  CallRate\n1     Up1041_R138706 0.8513721\n2    Up1186_QMJ88804 0.8919593\n3      Up1096_R36195 0.9030896\n4   Up0854_ABTC17229 0.9175782\n5   Up0969_ABTC29129 0.9260219\n6      Up1120_R36170 0.9375360\n7   Up1118_NTMR36173 0.9396469\n8   Up0767_ABTC12489 0.9418538\n9   Up0832_ABTC93392 0.9507772\n10  Up0731_ABTC99709 0.9509691\n11  Up1136_NTMR36228 0.9531760\n12  Up0769_ABTC12511 0.9537517\n13 Up1269_WAMR164857 0.9573019\n14  Up0276_NTMR35114 0.9580695\n15     Up1078_R36177 0.9618116\n16 Up0166_WAMR162490 0.9654577\n17 Up1266_WAMR164844 0.9762042\n18 Up0183_WAMR162558 0.9866628\n19 Up1321_WAMR171536 0.9872385\n20        WAMR162566 0.9877183\n\n)\n\n\n\n\n\nCompleted: gl.report.callrate \n\ngl.4 &lt;- gl.filter.callrate(gl.3, method = \"ind\", threshold = .9)\n\nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Recalculating Call Rate\n  Removing individuals based on Call Rate, threshold = 0.9 \n  Individuals deleted (CallRate &lt;=  0.9 ):\nUp1186_QMJ88804[IT], Up1041_R138706[IT],\n\n\n\n\n\n  Note: Locus metrics not recalculated\n  Note: Resultant monomorphic loci not deleted\nCompleted: gl.filter.callrate \n\n#Always run this after removing individuals\ngl.D_withfiltering &lt;- gl.filter.monomorphs(gl.4)\n\nStarting gl.filter.monomorphs \n  Processing genlight object with SNP data\n  Identifying monomorphic loci\n  Removing monomorphic loci and loci with all missing \n                       data\nCompleted: gl.filter.monomorphs \n\n#calculate tajima's D with removing singletons and secondaries\n\nD_w_filtering &lt;- get_tajima_D(gl.D_withfiltering)\n\nStarting gl.allele.freq \n  Processing genlight object with SNP data\n  Calculating Tag allele frequencies for populations\nCompleted: gl.allele.freq \n\nD_w_filtering\n\n  population          pi S         D\n1         IK 0.003249825 1 -1.380214\n2         IT 0.004958104 1 -1.715483\n\nrm(gl.1, gl.2, gl.3, gl.4)\n\n\n\n2. No MAF filtering\nNow lets try it where we don’t remove singletons or secondaries\n\n#This function is written to calculate Tajima's D with a fair amount of missing data\n#we are going to filter lightly here \ngl.report.callrate(gl.clean)\n\nStarting gl.report.callrate \n  Processing genlight object with SNP data\n  Reporting Call Rate by Locus\n  No. of loci = 44752 \n  No. of individuals = 36 \n    Minimum      :  0.805556 \n    1st quartile :  0.888889 \n    Median       :  0.944444 \n    Mean         :  0.9387004 \n    3r quartile  :  1 \n    Maximum      :  1 \n    Missing Rate Overall:  0.0613 \n\n\n\n\n\nCompleted: gl.report.callrate \n\ngl.1 &lt;- gl.filter.callrate(gl.clean, method = \"loc\", threshold = 0.9)\n\nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 0.9 \n\n\n\n\n\nCompleted: gl.filter.callrate \n\n#check that the data looks fairly clean\n#this starts ot show some obvious population banding\nplot(gl.1)\n\n\n\n#Filter on individuals. You can usually be a bit flexible at this point.\n#make note of any idnviduals with a low call rate. Keep them in for now\n#but if they act weird in the analysis, you may want to consider removing\ngl.report.callrate(gl.1, method = \"ind\")\n\nStarting gl.report.callrate \n  Processing genlight object with SNP data\n\n  Reporting Call Rate by Individual\n  No. of loci = 33136 \n  No. of individuals = 36 \n    Minimum      :  0.8620232 \n    1st quartile :  0.9536758 \n    Median       :  0.9886679 \n    Mean         :  0.9684834 \n    3r quartile  :  0.9923648 \n    Maximum      :  0.9943264 \n    Missing Rate Overall:  0.0315 \n\nListing 2 populations and their average CallRates\n  Monitor again after filtering\n  Population CallRate  N\n1         IK   0.9888 22\n2         IT   0.9366 14\n\nListing 20 individuals with the lowest CallRates\n  Use this list to see which individuals will be lost on filtering by individual\n  Set ind.to.list parameter to see more individuals\n          Individual  CallRate\n1     Up1041_R138706 0.8620232\n2    Up1186_QMJ88804 0.9028549\n3      Up1096_R36195 0.9145039\n4   Up0854_ABTC17229 0.9209319\n5   Up0969_ABTC29129 0.9341803\n6      Up1120_R36170 0.9400954\n7   Up1118_NTMR36173 0.9462216\n8   Up0767_ABTC12489 0.9478211\n9   Up0731_ABTC99709 0.9527704\n10  Up1136_NTMR36228 0.9539775\n11  Up0832_ABTC93392 0.9551545\n12  Up0276_NTMR35114 0.9586251\n13  Up0769_ABTC12511 0.9594097\n14 Up1269_WAMR164857 0.9621861\n15     Up1078_R36177 0.9633028\n16 Up0166_WAMR162490 0.9667733\n17 Up1266_WAMR164844 0.9783317\n18 Up1321_WAMR171536 0.9882001\n19 Up0083_WAMR113846 0.9891357\n20 Up0183_WAMR162558 0.9891960\n\n)\n\n\n\n\n\nCompleted: gl.report.callrate \n\ngl.2 &lt;- gl.filter.callrate(gl.1, method = \"ind\", threshold = .9)\n\nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Recalculating Call Rate\n  Removing individuals based on Call Rate, threshold = 0.9 \n  Individuals deleted (CallRate &lt;=  0.9 ):\nUp1041_R138706[IT],\n\n\n\n\n\n  Note: Locus metrics not recalculated\n  Note: Resultant monomorphic loci not deleted\nCompleted: gl.filter.callrate \n\n#Always run this after removing individuals\ngl.D_withOutfiltering &lt;- gl.filter.monomorphs(gl.2)\n\nStarting gl.filter.monomorphs \n  Processing genlight object with SNP data\n  Identifying monomorphic loci\n  Removing monomorphic loci and loci with all missing \n                       data\nCompleted: gl.filter.monomorphs \n\nrm(gl.1, gl.2)\n\nD_wOUT_filtering &lt;- get_tajima_D(gl.D_withOutfiltering)\n\nStarting gl.allele.freq \n  Processing genlight object with SNP data\n  Calculating Tag allele frequencies for populations\nCompleted: gl.allele.freq \n\n\n\n\n\n3. No MAF filtering but filtering on Read depth\nNow lets try it where we don’t remove singletons or secondaries AND we filter for read depth to remove singletons where we are not confident about their base calls\n\n#This function is written to calculate Tajima's D with a fair amount of missing data\n#we are going to filter lightly here \ngl.report.callrate(gl.clean)\n\nStarting gl.report.callrate \n  Processing genlight object with SNP data\n  Reporting Call Rate by Locus\n  No. of loci = 44752 \n  No. of individuals = 36 \n    Minimum      :  0.805556 \n    1st quartile :  0.888889 \n    Median       :  0.944444 \n    Mean         :  0.9387004 \n    3r quartile  :  1 \n    Maximum      :  1 \n    Missing Rate Overall:  0.0613 \n\n\n\n\n\nCompleted: gl.report.callrate \n\ngl.1 &lt;- gl.filter.callrate(gl.clean, method = \"loc\", threshold = 0.9)\n\nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 0.9 \n\n\n\n\n\nCompleted: gl.filter.callrate \n\n#check that the data looks fairly clean\n#this starts ot show some obvious population banding\nplot(gl.1)\n\n\n\n#filter to loci with a lower read depth, so that we are really confident\n#that our base calls are correct\ngl.report.rdepth(gl.1)\n\nStarting gl.report.rdepth \n  Processing genlight object with SNP data\n  Reporting Read Depth by Locus\n  No. of loci = 33136 \n  No. of individuals = 36 \n    Minimum      :  8 \n    1st quartile :  9.3 \n    Median       :  10.7 \n    Mean         :  10.94332 \n    3r quartile  :  12.4 \n    Maximum      :  17 \n    Missing Rate Overall:  0.03 \n\n\n\n\n\n   Quantile Threshold Retained Percent Filtered Percent\n1      100%      17.0       27     0.1    33109    99.9\n2       95%      14.7     1707     5.2    31429    94.8\n3       90%      13.8     3536    10.7    29600    89.3\n4       85%      13.3     5002    15.1    28134    84.9\n5       80%      12.8     6811    20.6    26325    79.4\n6       75%      12.4     8369    25.3    24767    74.7\n7       70%      12.0    10014    30.2    23122    69.8\n8       65%      11.6    11913    36.0    21223    64.0\n9       60%      11.3    13385    40.4    19751    59.6\n10      55%      11.0    14934    45.1    18202    54.9\n11      50%      10.7    16641    50.2    16495    49.8\n12      45%      10.4    18337    55.3    14799    44.7\n13      40%      10.1    19974    60.3    13162    39.7\n14      35%       9.8    21780    65.7    11356    34.3\n15      30%       9.5    23645    71.4     9491    28.6\n16      25%       9.3    24859    75.0     8277    25.0\n17      20%       9.0    26704    80.6     6432    19.4\n18      15%       8.7    28644    86.4     4492    13.6\n19      10%       8.5    29974    90.5     3162     9.5\n20       5%       8.2    31834    96.1     1302     3.9\n21       0%       8.0    33136   100.0        0     0.0\nCompleted: gl.report.rdepth \n\ngl.2 &lt;- gl.filter.rdepth(gl.1, lower = 12, upper = 17)\n\nStarting gl.filter.rdepth \n  Processing genlight object with SNP data\n  Removing loci with rdepth &lt;= 12 and &gt;= 17 \n\n\n\n\n\nCompleted: gl.filter.rdepth \n\n#Filter on individuals. You can usually be a bit flexible at this point.\n#make note of any idnviduals with a low call rate. Keep them in for now\n#but if they act weird in the analysis, you may want to consider removing\ngl.report.callrate(gl.2, method = \"ind\")\n\nStarting gl.report.callrate \n  Processing genlight object with SNP data\n\n  Reporting Call Rate by Individual\n  No. of loci = 10014 \n  No. of individuals = 36 \n    Minimum      :  0.8722788 \n    1st quartile :  0.9646245 \n    Median       :  0.9926103 \n    Mean         :  0.9749822 \n    3r quartile  :  0.9955063 \n    Maximum      :  0.9969043 \n    Missing Rate Overall:  0.025 \n\nListing 2 populations and their average CallRates\n  Monitor again after filtering\n  Population CallRate  N\n1         IK   0.9926 22\n2         IT   0.9473 14\n\nListing 20 individuals with the lowest CallRates\n  Use this list to see which individuals will be lost on filtering by individual\n  Set ind.to.list parameter to see more individuals\n          Individual  CallRate\n1     Up1041_R138706 0.8722788\n2    Up1186_QMJ88804 0.9191132\n3      Up1096_R36195 0.9281007\n4   Up0854_ABTC17229 0.9320951\n5   Up0969_ABTC29129 0.9398842\n6      Up1120_R36170 0.9531656\n7   Up1118_NTMR36173 0.9573597\n8   Up0767_ABTC12489 0.9620531\n9   Up0832_ABTC93392 0.9636509\n10     Up1078_R36177 0.9649491\n11  Up0731_ABTC99709 0.9657480\n12  Up0769_ABTC12511 0.9662473\n13  Up1136_NTMR36228 0.9678450\n14  Up0276_NTMR35114 0.9690433\n15 Up1269_WAMR164857 0.9721390\n16 Up0166_WAMR162490 0.9740363\n17 Up1266_WAMR164844 0.9870182\n18 Up1321_WAMR171536 0.9924106\n19        WAMR162566 0.9928101\n20 Up0183_WAMR162558 0.9928101\n\n)\n\n\n\n\n\nCompleted: gl.report.callrate \n\ngl.3 &lt;- gl.filter.callrate(gl.2, method = \"ind\", threshold = .9)\n\nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Recalculating Call Rate\n  Removing individuals based on Call Rate, threshold = 0.9 \n  Individuals deleted (CallRate &lt;=  0.9 ):\nUp1041_R138706[IT],\n\n\n\n\n\n  Note: Locus metrics not recalculated\n  Note: Resultant monomorphic loci not deleted\nCompleted: gl.filter.callrate \n\n#Always run this after removing individuals\ngl.D_withOutfilteringRDepth &lt;- gl.filter.monomorphs(gl.3)\n\nStarting gl.filter.monomorphs \n  Processing genlight object with SNP data\n  Identifying monomorphic loci\n  Removing monomorphic loci and loci with all missing \n                       data\nCompleted: gl.filter.monomorphs \n\nrm(gl.1, gl.2, gl.3)\n\n#calculate tajima's D with removing singletons and secondaries\n\nD_wOUT_filtering_Rdepth &lt;- get_tajima_D(gl.D_withOutfilteringRDepth)\n\nStarting gl.allele.freq \n  Processing genlight object with SNP data\n  Calculating Tag allele frequencies for populations\nCompleted: gl.allele.freq \n\n\n\nlets look at all three\n\nD_w_filtering\n\n  population          pi S         D\n1         IK 0.003249825 1 -1.380214\n2         IT 0.004958104 1 -1.715483\n\nD_wOUT_filtering\n\n  population          pi S         D\n1         IK 0.002888251 1 -1.382837\n2         IT 0.004468415 1 -1.661505\n\nD_wOUT_filtering_Rdepth\n\n  population          pi S         D\n1         IK 0.002827014 1 -1.383208\n2         IT 0.004398409 1 -1.664054\n\n\nFor our Kimberley population, removing minor alleles give the actual wrong answer and suggests the population is contracting. This would have contradicted the rest of the findings of the paper, and been an artifact of the filtering process.\nThis shows how understanding the population genetic theory for a metric is crucial to useful analyses."
  },
  {
    "objectID": "session02.html#assessing-populations-structure-and-demographic-history",
    "href": "session02.html#assessing-populations-structure-and-demographic-history",
    "title": "2  Pop Gen In Conservation",
    "section": "Assessing Populations: structure and demographic history",
    "text": "Assessing Populations: structure and demographic history\n\nLoad data and explore\nThis dataset is to assess population structure and diversity in Uperoleia crassa, from Jaya et al. (2022).\n\n# gl &lt;- dartR::gl.read.dart(\"Report_DUp20-4995_1_moreOrders_SNP_mapping_2.csv\",\n#                           ind.metafile = \"Uperoleia_metadata.csv\")\n\nload('./data/session_2.RData') # data named gl\n\nThese are monsoonal tropical frogs, who are very common and abundant. They do interesting and weird stuff evolutionarily and reproductively\nlets quickly look at our samples and populations\n\ngl.map.interactive(gl)\n\nStarting gl.map.interactive \n  Processing genlight object with SNP data\nCompleted: gl.map.interactive \n\n\n\n\n\n\nwe have two populations - the Kimberley (IK) and the Top End (IT)\n\n\nClean data\nClean up your dataset to remove the most egregiously bad loci and individuals this set of filtering can be used across analyses\n\n#Get rid of really poorly sequenced loci\n#But don’t cut hard\ngl.report.callrate(gl)\n\nStarting gl.report.callrate \n  Processing genlight object with SNP data\n  Reporting Call Rate by Locus\n  No. of loci = 227143 \n  No. of individuals = 36 \n    Minimum      :  0.222222 \n    1st quartile :  0.611111 \n    Median       :  0.777778 \n    Mean         :  0.7464089 \n    3r quartile  :  0.916667 \n    Maximum      :  1 \n    Missing Rate Overall:  0.2536 \n\n\n\n\n\nCompleted: gl.report.callrate \n\ngl.1 &lt;- gl.filter.callrate(gl, method = \"loc\", threshold = 0.8)\n\nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Warning: Data may include monomorphic loci in call rate \n                    calculations for filtering\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 0.8 \n\n\n\n\n\nCompleted: gl.filter.callrate \n\n#Very low filter – this is only to get rid of your really bad individuals\ngl.report.callrate(gl.1, method = \"ind\")\n\nStarting gl.report.callrate \n  Processing genlight object with SNP data\n\n  Reporting Call Rate by Individual\n  No. of loci = 113404 \n  No. of individuals = 36 \n    Minimum      :  0.7589944 \n    1st quartile :  0.8751808 \n    Median       :  0.9524179 \n    Mean         :  0.9159171 \n    3r quartile  :  0.9598625 \n    Maximum      :  0.9787662 \n    Missing Rate Overall:  0.0841 \n\nListing 2 populations and their average CallRates\n  Monitor again after filtering\n  Population CallRate  N\n1         IK   0.9567 22\n2         IT   0.8519 14\n\nListing 20 individuals with the lowest CallRates\n  Use this list to see which individuals will be lost on filtering by individual\n  Set ind.to.list parameter to see more individuals\n          Individual  CallRate\n1     Up1041_R138706 0.7589944\n2    Up1186_QMJ88804 0.7730856\n3      Up1096_R36195 0.8080932\n4   Up0969_ABTC29129 0.8429597\n5   Up1136_NTMR36228 0.8449878\n6   Up0854_ABTC17229 0.8483299\n7   Up0276_NTMR35114 0.8558869\n8   Up1118_NTMR36173 0.8596699\n9      Up1120_R36170 0.8701809\n10  Up0767_ABTC12489 0.8768474\n11  Up0731_ABTC99709 0.8850834\n12  Up0832_ABTC93392 0.8948097\n13  Up0769_ABTC12511 0.8980988\n14 Up0166_WAMR162490 0.9082308\n15     Up1078_R36177 0.9091390\n16 Up1269_WAMR164857 0.9188212\n17 Up1266_WAMR164844 0.9397640\n18 Up1321_WAMR171536 0.9517389\n19        WAMR162566 0.9530969\n20 Up0083_WAMR113846 0.9537142\n\n)\n\n\n\n\n\nCompleted: gl.report.callrate \n\ngl.2 &lt;- gl.filter.callrate(gl.1, method = \"ind\", threshold = 0.25)\n\nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Warning: Data may include monomorphic loci in call rate \n                    calculations for filtering\n  Recalculating Call Rate\n  Removing individuals based on Call Rate, threshold = 0.25 \n\n\n\n\n\n  Note: Locus metrics not recalculated\n  Note: Resultant monomorphic loci not deleted\nCompleted: gl.filter.callrate \n\n#Always run this after removing individuals – removes loci that are no longer variable\ngl.3 &lt;- gl.filter.monomorphs(gl.2)\n\nStarting gl.filter.monomorphs \n  Processing genlight object with SNP data\n  Identifying monomorphic loci\n  No monomorphic loci to remove\nCompleted: gl.filter.monomorphs \n\n#Get rid of unreliable loci\ngl.report.reproducibility(gl.3)\n\nStarting gl.report.reproducibility \n  Processing genlight object with SNP data\n  Reporting Repeatability by Locus\n  No. of loci = 113404 \n  No. of individuals = 36 \n    Minimum      :  0.875 \n    1st quartile :  1 \n    Median       :  1 \n    Mean         :  0.9962267 \n    3r quartile  :  1 \n    Maximum      :  1 \n    Missing Rate Overall:  0.08 \n\n\n\n\n\n   Quantile Threshold Retained Percent Filtered Percent\n1      100%  1.000000   106676    94.1     6728     5.9\n2       95%  1.000000   106676    94.1     6728     5.9\n3       90%  1.000000   106676    94.1     6728     5.9\n4       85%  1.000000   106676    94.1     6728     5.9\n5       80%  1.000000   106676    94.1     6728     5.9\n6       75%  1.000000   106676    94.1     6728     5.9\n7       70%  1.000000   106676    94.1     6728     5.9\n8       65%  1.000000   106676    94.1     6728     5.9\n9       60%  1.000000   106676    94.1     6728     5.9\n10      55%  1.000000   106676    94.1     6728     5.9\n11      50%  1.000000   106676    94.1     6728     5.9\n12      45%  1.000000   106676    94.1     6728     5.9\n13      40%  1.000000   106676    94.1     6728     5.9\n14      35%  1.000000   106676    94.1     6728     5.9\n15      30%  1.000000   106676    94.1     6728     5.9\n16      25%  1.000000   106676    94.1     6728     5.9\n17      20%  1.000000   106676    94.1     6728     5.9\n18      15%  1.000000   106676    94.1     6728     5.9\n19      10%  1.000000   106676    94.1     6728     5.9\n20       5%  0.944444   110021    97.0     3383     3.0\n21       0%  0.875000   113404   100.0        0     0.0\nCompleted: gl.report.reproducibility \n\ngl.4 &lt;- gl.filter.reproducibility(gl.3)\n\nStarting gl.select.colors \n  Warning: Number of required colors not specified, set to 9\n  Library: RColorBrewer\n  Palette: brewer.pal\n  Showing and returning 2 of 9 colors for library RColorBrewer : palette Blues \n\n\n\n\n\nCompleted: gl.select.colors \nStarting gl.filter.reproducibility \n  Processing genlight object with SNP data\n  Removing loci with repeatability less than 0.99 \n\n\n\n\n\nCompleted: gl.filter.reproducibility \n\n#Get rid of low and super high read depth loci\n#do twice so you can zoom in\ngl.report.rdepth(gl.4)\n\nStarting gl.report.rdepth \n  Processing genlight object with SNP data\n  Reporting Read Depth by Locus\n  No. of loci = 106676 \n  No. of individuals = 36 \n    Minimum      :  2.5 \n    1st quartile :  5 \n    Median       :  7.2 \n    Mean         :  7.741356 \n    3r quartile  :  10 \n    Maximum      :  121.7 \n    Missing Rate Overall:  0.09 \n\n\n\n\n\n   Quantile Threshold Retained Percent Filtered Percent\n1      100%     121.7        1     0.0   106675   100.0\n2       95%      13.6     5520     5.2   101156    94.8\n3       90%      12.4    10872    10.2    95804    89.8\n4       85%      11.5    16057    15.1    90619    84.9\n5       80%      10.7    21633    20.3    85043    79.7\n6       75%      10.0    26932    25.2    79744    74.8\n7       70%       9.4    32193    30.2    74483    69.8\n8       65%       8.8    37650    35.3    69026    64.7\n9       60%       8.2    43461    40.7    63215    59.3\n10      55%       7.7    48582    45.5    58094    54.5\n11      50%       7.2    53911    50.5    52765    49.5\n12      45%       6.7    59668    55.9    47008    44.1\n13      40%       6.3    64353    60.3    42323    39.7\n14      35%       5.8    70391    66.0    36285    34.0\n15      30%       5.4    75457    70.7    31219    29.3\n16      25%       5.0    80644    75.6    26032    24.4\n17      20%       4.6    86041    80.7    20635    19.3\n18      15%       4.2    91353    85.6    15323    14.4\n19      10%       3.8    96433    90.4    10243     9.6\n20       5%       3.3   102090    95.7     4586     4.3\n21       0%       2.5   106676   100.0        0     0.0\nCompleted: gl.report.rdepth \n\ngl.5 &lt;- gl.filter.rdepth(gl.4, lower = 0, upper = 25)\n\nStarting gl.filter.rdepth \n  Processing genlight object with SNP data\n  Removing loci with rdepth &lt;= 0 and &gt;= 25 \n\n\n\n\n\nCompleted: gl.filter.rdepth \n\ngl.clean &lt;- gl.filter.rdepth(gl.5, lower = 8, upper = 17)\n\nStarting gl.filter.rdepth \n  Processing genlight object with SNP data\n  Removing loci with rdepth &lt;= 8 and &gt;= 17 \n\n\n\n\n\nCompleted: gl.filter.rdepth \n\nnInd(gl.clean)\n\n[1] 36\n\nnLoc(gl.clean)\n\n[1] 44752\n\n#look at the data to see if you see any obvious issues and redo if you do.\nplot(gl.clean)\n\n\n\nrm(gl.1, gl.2, gl.3, gl.4, gl.5)\n\n\n\n\n\n\n\ngl.clean\n\n\n\nThis file is now your starting file for other filtering\n\n\n\n\nFiltering\n\nFiltering data for population structure and phylogenetic analyses\nloci on the same fragment and missing data are not well supported in these analyses. Structure-like analyses dislikes missing data. So, we are going to filter even harder than normal here just so that we can see a result.\n\ngl.report.callrate(gl.clean)\ngl.1 &lt;- gl.filter.callrate(gl.clean, method = \"loc\", threshold = 0.98)\n#Remove minor alleles\n#I usually set up the threshold so it is just \n# removing singletons to improve computation time\ngl.report.maf(gl.1)\ngl.2 &lt;- gl.filter.maf(gl.1,  threshold = 1/(2*nInd(gl.1)))\n#check that the data looks fairly clean\n#this starts to show some obvious population banding\nplot(gl.2)\n#remove secondary SNPs on the same fragment\n#Always do this as the last loci filter so that you’ve cut for quality \n# before you cut because there are two SNPs\ngl.3 &lt;- gl.filter.secondaries(gl.2)\n\n#Filter on individuals. You can usually be a bit flexible at this point.\n#individuals look a whole lot better now\n#make note of any idnviduals with a low call rate. Keep them in for now\n#but if they act weird in the analysis, you may want to consider removing\ngl.report.callrate(gl.3, method = \"ind\")\ngl.4 &lt;- gl.filter.callrate(gl.3, method = \"ind\", threshold = .9)\n#Always run this after removing individuals\ngl.structure &lt;- gl.filter.monomorphs(gl.4)\n\n#this is your cleaned dataset for a population structure analysis              \nplot(gl.structure)\nnInd(gl.structure)\nnLoc(gl.structure)\n\nyou can write this file out for various analyses that we will not go into here\ngl2structure(XXXX) gl2faststructure(XXXX)\n\n\n\nRun SNMF (LEA)\nThis is a structure-like analysis called SNMF. This code is not all you would need to publish this result, but it is a good first look.\n\n# LEA requires the genotype style file\ngl2faststructure(gl.structure, outfile = \"gl_structure.fstr\",\n                 outpath = './data/')\nstruct2geno(\"./data/gl_structure.fstr\", ploidy = 2, FORMAT = 2) \n###this hates any loci with all heterozygotes\n\nsnmf.Sy.K1_8.10 = snmf(\"./data/gl_structure.fstr.geno\", K = 1:8,\n                       entropy = T, ploidy = 2, project=\"new\", repetitions = 10)  \n\n\nplot(snmf.Sy.K1_8.10)\n\n\n\nk &lt;- 2 #chose best based on lowest cross entropy in graph\nce = cross.entropy(snmf.Sy.K1_8.10, K = k)\nbest &lt;- which.min(ce)\npar (mfrow = c(1,1))\nbarplot(t(Q(snmf.Sy.K1_8.10, K = k, run = best)), col = 1:k)\n\n\n\n#Do a PCoA plot. I had these but they are also good for some stuff\npc &lt;- gl.pcoa(gl.structure)\n\nStarting gl.pcoa \n  Processing genlight object with SNP data\n  Performing a PCA, individuals as entities, loci as attributes, SNP genotype as state\nStarting gl.colors \nSelected color type 2 \nCompleted: gl.colors \n\n\n\n\n\nCompleted: gl.pcoa \n\ngl.pcoa.plot(pc, gl.structure)\n\nStarting gl.pcoa.plot \n  Processing an ordination file (glPca)\n  Processing genlight object with SNP data\n  Plotting populations in a space defined by the SNPs\n  Preparing plot .... please wait\n\n\n\n\n\nCompleted: gl.pcoa.plot \n\nrm(ce, gl.1, gl.2, gl.3, gl.4, snmf.Sy.K1_8.10, best, k, pc)\n\n\n\n\n\n\n\nExercise\n\n\n\n Have a go at altering various parameters and seeing how this changes your answers.\nOne thing that regularly changes with MAF filters is the amount of variance explained. Removing more minor alleles increases the variance explained in a PCoA. Think about why that would be the case.\n\n\n\n\nFiltering for Tajima’s D\nNow we are going to look at how filtering can affect your understanding of demographic processes that population is Significant negative values of Tajima’s D are due to an excess of rare alleles and are consistent with range expansion. Significant positive values are associated with population contraction. Significance (a P-value) cannot be calculated without a simulation. Please ask me how to do this using Hudson’s ms program. Rare alleles matter! Lets look at how singletons impact our estimations of whether a population is expanding or contracting\nThis is a function written to calculate Tajima’s D from SNP data. It will create the function in your global environment so that you can call it.\n\nget_tajima_D &lt;- function(x){\n  require(dartRverse) # possibly not needed for a function in an R package?\n  \n  # Find allele frequencies (p1 and p2) for every locus in every population\n  allele_freqs &lt;- gl.allele.freq(x)\n  names(allele_freqs)[names(allele_freqs) == \"frequency\"] &lt;- \"p1\"\n  allele_freqs$p1 &lt;- allele_freqs$p1 / 100\n  allele_freqs$p2 &lt;- 1 - allele_freqs$p1\n  \n  # Get the names of all the populations\n  pops &lt;- unique(allele_freqs$popn)\n  \n  #split each population\n  allele_freqs_by_pop &lt;- split(allele_freqs, allele_freqs$popn)\n  \n  # Internal function to calculate pi\n  calc_pi &lt;- function(allele_freqs) {\n    n = allele_freqs$nobs * 2  # vector of n values\n    pi_sqr &lt;- allele_freqs$p1 ^ 2 + allele_freqs$p2 ^ 2\n    h = (n / (n - 1)) * (1 - pi_sqr) # vector of values of h\n    sum(h) # return pi, which is the sum of h across loci\n  }\n  \n  get_tajima_D_for_one_pop &lt;- function(allele_freqs_by_pop) {\n    pi &lt;- calc_pi(allele_freqs_by_pop)\n    \n# Calculate number of segregating sites, ignoring missing data (missing data will not appear in teh allele freq calcualtions)\n    #S &lt;- sum(!(allele_freqs_by_pop$p1 == 0 | allele_freqs_by_pop$p1 == 1))\n    S &lt;- sum(allele_freqs_by_pop$p1 &gt;0 & allele_freqs_by_pop$p1 &lt;1)\n    if(S == 0) {\n      warning(\"No segregating sites\")\n      data.frame(pi = NaN, \n                 S = NaN, \n                 D = NaN, \n                 Pval.normal = NaN, \n                 Pval.beta = NaN)\n    }\n    \n    n &lt;- mean(allele_freqs_by_pop$nobs * 2 )\n    \n    tmp &lt;- 1:(n - 1)\n    a1 &lt;- sum(1/tmp)\n    a2 &lt;- sum(1/tmp^2)\n    b1 &lt;- (n + 1)/(3 * (n - 1))\n    b2 &lt;- 2 * (n^2 + n + 3)/(9 * n * (n - 1))\n    c1 &lt;- b1 - 1/a1\n    c2 &lt;- b2 - (n + 2)/(a1 * n) + a2/a1^2\n    e1 &lt;- c1/a1\n    e2 &lt;- c2/(a1^2 + a2)\n    \n    \n    #calculate D and do beta testing\n    D &lt;- (pi - S/a1) / sqrt(e1 * S + e2 * S * (S - 1))\n    Dmin &lt;- (2/n - 1/a1)/sqrt(e2)\n    Dmax &lt;- ((n/(2*(n - 1))) - 1/a1)/sqrt(e2)\n    tmp1 &lt;- 1 + Dmin * Dmax\n    tmp2 &lt;- Dmax - Dmin\n    a &lt;- -tmp1 * Dmax/tmp2\n    b &lt;- tmp1 * Dmin/tmp2\n  \n    \n    data.frame(pi = pi, \n               S = S, \n               D = D)\n  }\n  \n  output &lt;- do.call(\"rbind\", lapply(allele_freqs_by_pop, \n                                    get_tajima_D_for_one_pop))\n  data.frame(population = rownames(output), output, row.names = NULL)\n}\n\nWe are going to focus on key filters and how they impact estimates\n\nMinor allele frequency (MAF) filtering\nNo MAF allele filtering\nNo MAF filtering but filtering on Read depth\n\n\n1. MAF filtering\nWe will start with our lightly cleaned data and filter this for the tajima’s calculation\n\n#This function is written to calculate Tajima's D with a fair amount of missing data\n#we are going to filter lightly here \ngl.report.callrate(gl.clean)\n\nStarting gl.report.callrate \n  Processing genlight object with SNP data\n  Reporting Call Rate by Locus\n  No. of loci = 44752 \n  No. of individuals = 36 \n    Minimum      :  0.805556 \n    1st quartile :  0.888889 \n    Median       :  0.944444 \n    Mean         :  0.9387004 \n    3r quartile  :  1 \n    Maximum      :  1 \n    Missing Rate Overall:  0.0613 \n\n\n\n\n\nCompleted: gl.report.callrate \n\ngl.1 &lt;- gl.filter.callrate(gl.clean, method = \"loc\", threshold = 0.9)\n\nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 0.9 \n\n\n\n\n\nCompleted: gl.filter.callrate \n\n#In this first round, we are going to actually remove singletons to see what happens\ngl.report.maf(gl.1)\n\nStarting gl.report.maf \n  Processing genlight object with SNP data\nStarting gl.report.maf \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population IK \n  No. of loci = 14958 \n  No. of individuals = 22 \n    Minimum      :  0.0227 \n    1st quantile :  0.0227 \n    Median       :  0.0455 \n    Mean         :  0.09433557 \n    3r quantile  :  0.0952 \n    Maximum      :  0.5 \n    Missing Rate Overall:  0.01 \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population IT \n  No. of loci = 24122 \n  No. of individuals = 14 \n    Minimum      :  0.0357 \n    1st quantile :  0.0385 \n    Median       :  0.0769 \n    Mean         :  0.1268348 \n    3r quantile  :  0.1667 \n    Maximum      :  0.5 \n    Missing Rate Overall:  0.06 \n\n  Reporting Minor Allele Frequency (MAF) by Locus OVERALL\n  No. of loci = 33136 \n  No. of individuals = 36 \n    Minimum      :  0.0114 \n    1st quantile :  0.0192 \n    Median       :  0.0384 \n    Mean         :  0.08512636 \n    3r quantile  :  0.0893 \n    Maximum      :  0.5 \n    Missing Rate Overall:  0.03 \n\n\n\n\n\n   Quantile Threshold Retained Percent Filtered Percent\n1      100%    0.5000       75     0.2    33061    99.8\n2       95%    0.3785     1657     5.0    31479    95.0\n3       90%    0.2559     3314    10.0    29822    90.0\n4       85%    0.1705     4984    15.0    28152    85.0\n5       80%    0.1190     6630    20.0    26506    80.0\n6       75%    0.0893     8533    25.8    24603    74.2\n7       70%    0.0714    10159    30.7    22977    69.3\n8       65%    0.0577    11608    35.0    21528    65.0\n9       60%    0.0454    13989    42.2    19147    57.8\n10      55%    0.0416    15067    45.5    18069    54.5\n11      50%    0.0384    16598    50.1    16538    49.9\n12      45%    0.0357    18691    56.4    14445    43.6\n13      40%    0.0292    19887    60.0    13249    40.0\n14      35%    0.0227    22254    67.2    10882    32.8\n15      30%    0.0209    23242    70.1     9894    29.9\n16      25%    0.0192    25099    75.7     8037    24.3\n17      20%    0.0178    28849    87.1     4287    12.9\n18      15%    0.0178    28849    87.1     4287    12.9\n19      10%    0.0114    32776    98.9      360     1.1\n20       5%    0.0114    32776    98.9      360     1.1\n21       0%    0.0114    33136   100.0        0     0.0\nCompleted: gl.report.maf \n\nnLoc(gl.1)\n\n[1] 33136\n\ngl.2 &lt;- gl.filter.maf(gl.1,  threshold = 0.05)\n\nStarting gl.select.colors \n  Warning: Number of required colors not specified, set to 9\n  Library: RColorBrewer\n  Palette: brewer.pal\n  Showing and returning 2 of 9 colors for library RColorBrewer : palette Blues \n\n\n\n\n\nCompleted: gl.select.colors \nStarting gl.filter.maf \n  Processing genlight object with SNP data\n  Removing loci with MAF &lt; 0.05 over all the dataset \n                and recalculating FreqHoms and FreqHets\n\n\n\n\n\nCompleted: gl.filter.maf \n\nnLoc(gl.2)\n\n[1] 12823\n\n#check that the data looks fairly clean\n#this starts ot show some obvious population banding\nplot(gl.2)\n\n\n\n#we are also going to remove secondary SNPs on the same fragment in this first round\ngl.3 &lt;- gl.filter.secondaries(gl.2)\n\nStarting gl.filter.secondaries \n  Processing genlight object with SNP data\n  Selecting one SNP per sequence tag at random\nCompleted: gl.filter.secondaries \n\n#Filter on individuals. You can usually be a bit flexible at this point.\n#make note of any idnviduals with a low call rate. Keep them in for now\n#but if they act weird in the analysis, you may want to consider removing\ngl.report.callrate(gl.3, method = \"ind\")\n\nStarting gl.report.callrate \n  Processing genlight object with SNP data\n\n  Reporting Call Rate by Individual\n  No. of loci = 10422 \n  No. of individuals = 36 \n    Minimum      :  0.8513721 \n    1st quartile :  0.9509211 \n    Median       :  0.9869507 \n    Mean         :  0.9658255 \n    3r quartile  :  0.9918922 \n    Maximum      :  0.9948187 \n    Missing Rate Overall:  0.0342 \n\nListing 2 populations and their average CallRates\n  Monitor again after filtering\n  Population CallRate  N\n1         IK   0.9878 22\n2         IT   0.9313 14\n\nListing 20 individuals with the lowest CallRates\n  Use this list to see which individuals will be lost on filtering by individual\n  Set ind.to.list parameter to see more individuals\n          Individual  CallRate\n1     Up1041_R138706 0.8513721\n2    Up1186_QMJ88804 0.8919593\n3      Up1096_R36195 0.9030896\n4   Up0854_ABTC17229 0.9175782\n5   Up0969_ABTC29129 0.9260219\n6      Up1120_R36170 0.9375360\n7   Up1118_NTMR36173 0.9396469\n8   Up0767_ABTC12489 0.9418538\n9   Up0832_ABTC93392 0.9507772\n10  Up0731_ABTC99709 0.9509691\n11  Up1136_NTMR36228 0.9531760\n12  Up0769_ABTC12511 0.9537517\n13 Up1269_WAMR164857 0.9573019\n14  Up0276_NTMR35114 0.9580695\n15     Up1078_R36177 0.9618116\n16 Up0166_WAMR162490 0.9654577\n17 Up1266_WAMR164844 0.9762042\n18 Up0183_WAMR162558 0.9866628\n19 Up1321_WAMR171536 0.9872385\n20        WAMR162566 0.9877183\n\n)\n\n\n\n\n\nCompleted: gl.report.callrate \n\ngl.4 &lt;- gl.filter.callrate(gl.3, method = \"ind\", threshold = .9)\n\nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Recalculating Call Rate\n  Removing individuals based on Call Rate, threshold = 0.9 \n  Individuals deleted (CallRate &lt;=  0.9 ):\nUp1186_QMJ88804[IT], Up1041_R138706[IT],\n\n\n\n\n\n  Note: Locus metrics not recalculated\n  Note: Resultant monomorphic loci not deleted\nCompleted: gl.filter.callrate \n\n#Always run this after removing individuals\ngl.D_withfiltering &lt;- gl.filter.monomorphs(gl.4)\n\nStarting gl.filter.monomorphs \n  Processing genlight object with SNP data\n  Identifying monomorphic loci\n  Removing monomorphic loci and loci with all missing \n                       data\nCompleted: gl.filter.monomorphs \n\n#calculate tajima's D with removing singletons and secondaries\n\nD_w_filtering &lt;- get_tajima_D(gl.D_withfiltering)\n\nStarting gl.allele.freq \n  Processing genlight object with SNP data\n  Calculating Tag allele frequencies for populations\nCompleted: gl.allele.freq \n\nD_w_filtering\n\n  population          pi S         D\n1         IK 0.003249825 1 -1.380214\n2         IT 0.004958104 1 -1.715483\n\nrm(gl.1, gl.2, gl.3, gl.4)\n\n\n\n2. No MAF filtering\nNow lets try it where we don’t remove singletons or secondaries\n\n#This function is written to calculate Tajima's D with a fair amount of missing data\n#we are going to filter lightly here \ngl.report.callrate(gl.clean)\n\nStarting gl.report.callrate \n  Processing genlight object with SNP data\n  Reporting Call Rate by Locus\n  No. of loci = 44752 \n  No. of individuals = 36 \n    Minimum      :  0.805556 \n    1st quartile :  0.888889 \n    Median       :  0.944444 \n    Mean         :  0.9387004 \n    3r quartile  :  1 \n    Maximum      :  1 \n    Missing Rate Overall:  0.0613 \n\n\n\n\n\nCompleted: gl.report.callrate \n\ngl.1 &lt;- gl.filter.callrate(gl.clean, method = \"loc\", threshold = 0.9)\n\nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 0.9 \n\n\n\n\n\nCompleted: gl.filter.callrate \n\n#check that the data looks fairly clean\n#this starts ot show some obvious population banding\nplot(gl.1)\n\n\n\n#Filter on individuals. You can usually be a bit flexible at this point.\n#make note of any idnviduals with a low call rate. Keep them in for now\n#but if they act weird in the analysis, you may want to consider removing\ngl.report.callrate(gl.1, method = \"ind\")\n\nStarting gl.report.callrate \n  Processing genlight object with SNP data\n\n  Reporting Call Rate by Individual\n  No. of loci = 33136 \n  No. of individuals = 36 \n    Minimum      :  0.8620232 \n    1st quartile :  0.9536758 \n    Median       :  0.9886679 \n    Mean         :  0.9684834 \n    3r quartile  :  0.9923648 \n    Maximum      :  0.9943264 \n    Missing Rate Overall:  0.0315 \n\nListing 2 populations and their average CallRates\n  Monitor again after filtering\n  Population CallRate  N\n1         IK   0.9888 22\n2         IT   0.9366 14\n\nListing 20 individuals with the lowest CallRates\n  Use this list to see which individuals will be lost on filtering by individual\n  Set ind.to.list parameter to see more individuals\n          Individual  CallRate\n1     Up1041_R138706 0.8620232\n2    Up1186_QMJ88804 0.9028549\n3      Up1096_R36195 0.9145039\n4   Up0854_ABTC17229 0.9209319\n5   Up0969_ABTC29129 0.9341803\n6      Up1120_R36170 0.9400954\n7   Up1118_NTMR36173 0.9462216\n8   Up0767_ABTC12489 0.9478211\n9   Up0731_ABTC99709 0.9527704\n10  Up1136_NTMR36228 0.9539775\n11  Up0832_ABTC93392 0.9551545\n12  Up0276_NTMR35114 0.9586251\n13  Up0769_ABTC12511 0.9594097\n14 Up1269_WAMR164857 0.9621861\n15     Up1078_R36177 0.9633028\n16 Up0166_WAMR162490 0.9667733\n17 Up1266_WAMR164844 0.9783317\n18 Up1321_WAMR171536 0.9882001\n19 Up0083_WAMR113846 0.9891357\n20 Up0183_WAMR162558 0.9891960\n\n)\n\n\n\n\n\nCompleted: gl.report.callrate \n\ngl.2 &lt;- gl.filter.callrate(gl.1, method = \"ind\", threshold = .9)\n\nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Recalculating Call Rate\n  Removing individuals based on Call Rate, threshold = 0.9 \n  Individuals deleted (CallRate &lt;=  0.9 ):\nUp1041_R138706[IT],\n\n\n\n\n\n  Note: Locus metrics not recalculated\n  Note: Resultant monomorphic loci not deleted\nCompleted: gl.filter.callrate \n\n#Always run this after removing individuals\ngl.D_withOutfiltering &lt;- gl.filter.monomorphs(gl.2)\n\nStarting gl.filter.monomorphs \n  Processing genlight object with SNP data\n  Identifying monomorphic loci\n  Removing monomorphic loci and loci with all missing \n                       data\nCompleted: gl.filter.monomorphs \n\nrm(gl.1, gl.2)\n\nD_wOUT_filtering &lt;- get_tajima_D(gl.D_withOutfiltering)\n\nStarting gl.allele.freq \n  Processing genlight object with SNP data\n  Calculating Tag allele frequencies for populations\nCompleted: gl.allele.freq \n\n\n\n\n3. No MAF filtering but filtering on Read depth\nNow lets try it where we don’t remove singletons or secondaries AND we filter for read depth to remove singletons where we are not confident about their base calls\n\n#This function is written to calculate Tajima's D with a fair amount of missing data\n# we are going to filter lightly here \ngl.report.callrate(gl.clean)\n\nStarting gl.report.callrate \n  Processing genlight object with SNP data\n  Reporting Call Rate by Locus\n  No. of loci = 44752 \n  No. of individuals = 36 \n    Minimum      :  0.805556 \n    1st quartile :  0.888889 \n    Median       :  0.944444 \n    Mean         :  0.9387004 \n    3r quartile  :  1 \n    Maximum      :  1 \n    Missing Rate Overall:  0.0613 \n\n\n\n\n\nCompleted: gl.report.callrate \n\ngl.1 &lt;- gl.filter.callrate(gl.clean, method = \"loc\", threshold = 0.9)\n\nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 0.9 \n\n\n\n\n\nCompleted: gl.filter.callrate \n\n#check that the data looks fairly clean\n#this starts ot show some obvious population banding\nplot(gl.1)\n\n\n\n#filter to loci with a lower read depth, so that we are really confident\n#that our base calls are correct\ngl.report.rdepth(gl.1)\n\nStarting gl.report.rdepth \n  Processing genlight object with SNP data\n  Reporting Read Depth by Locus\n  No. of loci = 33136 \n  No. of individuals = 36 \n    Minimum      :  8 \n    1st quartile :  9.3 \n    Median       :  10.7 \n    Mean         :  10.94332 \n    3r quartile  :  12.4 \n    Maximum      :  17 \n    Missing Rate Overall:  0.03 \n\n\n\n\n\n   Quantile Threshold Retained Percent Filtered Percent\n1      100%      17.0       27     0.1    33109    99.9\n2       95%      14.7     1707     5.2    31429    94.8\n3       90%      13.8     3536    10.7    29600    89.3\n4       85%      13.3     5002    15.1    28134    84.9\n5       80%      12.8     6811    20.6    26325    79.4\n6       75%      12.4     8369    25.3    24767    74.7\n7       70%      12.0    10014    30.2    23122    69.8\n8       65%      11.6    11913    36.0    21223    64.0\n9       60%      11.3    13385    40.4    19751    59.6\n10      55%      11.0    14934    45.1    18202    54.9\n11      50%      10.7    16641    50.2    16495    49.8\n12      45%      10.4    18337    55.3    14799    44.7\n13      40%      10.1    19974    60.3    13162    39.7\n14      35%       9.8    21780    65.7    11356    34.3\n15      30%       9.5    23645    71.4     9491    28.6\n16      25%       9.3    24859    75.0     8277    25.0\n17      20%       9.0    26704    80.6     6432    19.4\n18      15%       8.7    28644    86.4     4492    13.6\n19      10%       8.5    29974    90.5     3162     9.5\n20       5%       8.2    31834    96.1     1302     3.9\n21       0%       8.0    33136   100.0        0     0.0\nCompleted: gl.report.rdepth \n\ngl.2 &lt;- gl.filter.rdepth(gl.1, lower = 12, upper = 17)\n\nStarting gl.filter.rdepth \n  Processing genlight object with SNP data\n  Removing loci with rdepth &lt;= 12 and &gt;= 17 \n\n\n\n\n\nCompleted: gl.filter.rdepth \n\n#Filter on individuals. You can usually be a bit flexible at this point.\n#make note of any idnviduals with a low call rate. Keep them in for now\n#but if they act weird in the analysis, you may want to consider removing\ngl.report.callrate(gl.2, method = \"ind\")\n\nStarting gl.report.callrate \n  Processing genlight object with SNP data\n\n  Reporting Call Rate by Individual\n  No. of loci = 10014 \n  No. of individuals = 36 \n    Minimum      :  0.8722788 \n    1st quartile :  0.9646245 \n    Median       :  0.9926103 \n    Mean         :  0.9749822 \n    3r quartile  :  0.9955063 \n    Maximum      :  0.9969043 \n    Missing Rate Overall:  0.025 \n\nListing 2 populations and their average CallRates\n  Monitor again after filtering\n  Population CallRate  N\n1         IK   0.9926 22\n2         IT   0.9473 14\n\nListing 20 individuals with the lowest CallRates\n  Use this list to see which individuals will be lost on filtering by individual\n  Set ind.to.list parameter to see more individuals\n          Individual  CallRate\n1     Up1041_R138706 0.8722788\n2    Up1186_QMJ88804 0.9191132\n3      Up1096_R36195 0.9281007\n4   Up0854_ABTC17229 0.9320951\n5   Up0969_ABTC29129 0.9398842\n6      Up1120_R36170 0.9531656\n7   Up1118_NTMR36173 0.9573597\n8   Up0767_ABTC12489 0.9620531\n9   Up0832_ABTC93392 0.9636509\n10     Up1078_R36177 0.9649491\n11  Up0731_ABTC99709 0.9657480\n12  Up0769_ABTC12511 0.9662473\n13  Up1136_NTMR36228 0.9678450\n14  Up0276_NTMR35114 0.9690433\n15 Up1269_WAMR164857 0.9721390\n16 Up0166_WAMR162490 0.9740363\n17 Up1266_WAMR164844 0.9870182\n18 Up1321_WAMR171536 0.9924106\n19        WAMR162566 0.9928101\n20 Up0183_WAMR162558 0.9928101\n\n)\n\n\n\n\n\nCompleted: gl.report.callrate \n\ngl.3 &lt;- gl.filter.callrate(gl.2, method = \"ind\", threshold = .9)\n\nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Recalculating Call Rate\n  Removing individuals based on Call Rate, threshold = 0.9 \n  Individuals deleted (CallRate &lt;=  0.9 ):\nUp1041_R138706[IT],\n\n\n\n\n\n  Note: Locus metrics not recalculated\n  Note: Resultant monomorphic loci not deleted\nCompleted: gl.filter.callrate \n\n#Always run this after removing individuals\ngl.D_withOutfilteringRDepth &lt;- gl.filter.monomorphs(gl.3)\n\nStarting gl.filter.monomorphs \n  Processing genlight object with SNP data\n  Identifying monomorphic loci\n  Removing monomorphic loci and loci with all missing \n                       data\nCompleted: gl.filter.monomorphs \n\nrm(gl.1, gl.2, gl.3)\n\n#calculate tajima's D with removing singletons and secondaries\n\nD_wOUT_filtering_Rdepth &lt;- get_tajima_D(gl.D_withOutfilteringRDepth)\n\nStarting gl.allele.freq \n  Processing genlight object with SNP data\n  Calculating Tag allele frequencies for populations\nCompleted: gl.allele.freq \n\n\n\n\n\nResults\n\nlets look at all three\n\nD_w_filtering\n\n  population          pi S         D\n1         IK 0.003249825 1 -1.380214\n2         IT 0.004958104 1 -1.715483\n\nD_wOUT_filtering\n\n  population          pi S         D\n1         IK 0.002888251 1 -1.382837\n2         IT 0.004468415 1 -1.661505\n\nD_wOUT_filtering_Rdepth\n\n  population          pi S         D\n1         IK 0.002827014 1 -1.383208\n2         IT 0.004398409 1 -1.664054\n\n\n\n\n\n\n\n\nInterpreting results\n\n\n\nFor our Kimberley population, removing minor alleles give the actual wrong answer and suggests the population is contracting. This would have contradicted the rest of the findings of the paper, and been an artifact of the filtering process.\nThis shows how understanding the population genetic theory for a metric is crucial to useful analyses."
  },
  {
    "objectID": "session02.html#introduction",
    "href": "session02.html#introduction",
    "title": "2  Pop Gen In Conservation",
    "section": "Introduction",
    "text": "Introduction\nBill’s bits"
  },
  {
    "objectID": "session02.html#different-dynamics-same-result",
    "href": "session02.html#different-dynamics-same-result",
    "title": "2  Pop Gen In Conservation",
    "section": "Different dynamics, same result",
    "text": "Different dynamics, same result\nSeveral descriptive genetic parameters are almost routinely computed, and one would be tempted to interpret them with a standardised approach. For example, low genetic diversity is often considered as an indication that the population size is small. If the inbreeding coefficient (\\(Fis\\)) is positive, that is often taken as an indication that the population is inbred and potentially at risk of inbreeding depression. However, there are situation where different dynamics can produce the same result. It is not always easy to diagnose these situations and identify the cause of our results, but my recommendation would be to give priority to your understanding of the biology, ecology and history of the populations and species you are working with. If the suggested interpretation do not fit your understanding of the ecology or demographics of the populations you are working with, explore possible alternative explanations. In the example above, a low genetic diversity can also occur because of a severe bottleneck even if the population has then recovered to large numbers.\nRecall that \\(Fis = (He-Ho)/He\\), hence any cause of alteration of HWE can cause an increased/decrease \\(Fis\\) as well sampling effects. For example, the selective sampling of related individuals (e.g. when sampling individuals within family groups - as often happens with feral pigs/boar - or when you are sampling intensively within the dispersal distance range of few individuals) can cause your samples not to be representative of the population, and while your analysis could indicate inbreeding, this may not be the case at population level. Wahlund effect is also another common cause of increased \\(Fis\\).\nLet’s have a look at an example of what happens if our sampling design caused us to sample selectively related individuals. We are going to use a simulated dataset based on the concept presented in Pacioni et al (2020) where females intensively trapped (using a grid design, ‘G’) within an area that didn’t encompassed multiple home ranges were highly related. ON the contrary, individuals trapped along transect (‘T’) that extended over multiple home ranges were an actual random rapresentation of the population.\n\nLoad data\n\nglw &lt;- gl.load(\"./data/sess2_glDes.rds\")\n#check the population size and number of populations\ntable(pop(glw)) # G stands for trapped in a grid, T for transect\n#number of loci\nnLoc(glw)\n\nglw &lt;- gl.filter.monomorphs(glw, verbose = 5)\n\n\n\nCalculate Relatedness\n\n# Run EMIBD9 to detect related individuals. Output saved to save time\n#ibd9 &lt;- gl.run.EMIBD9(glw, Inbreed = FALSE, \n #                     emibd9.path = \"E:/Software/Genetic software/EMIBD9\")\n#saveRDS(ibd9, file=\"Gen Diversity/ibd9.rds\")\n\n# Load EMIBD9 results\nibd9 &lt;- readRDS(\"./data/sess2_ibd9.rds\")\n\n# Do some manipulation to have everything in one table\nibd9Tab &lt;- ibd9[[2]]\n# Kick out self comparisons\nibd9Tab &lt;- ibd9Tab[ibd9Tab$Indiv1 != ibd9Tab$Indiv2,  c(1, 2, 21)]\n# Add trapping des for each individuals\nDes1 &lt;- pop(glw)[as.numeric(ibd9Tab$Indiv1)]\nDes2 &lt;- pop(glw)[as.numeric(ibd9Tab$Indiv2)]\n# Flag pairs trapping within G, T and in between (BW)\nPDes &lt;- ifelse((Des1 == \"G\" & Des2 == \"G\"), yes = \"G\", \n       no = ifelse((Des1 == \"T\" & Des2 == \"T\"), yes = \"T\", \"BW\"))\n# Combine together\nibd9DT &lt;- data.table(cbind(ibd9Tab, Des1, Des2, PDes))\n# Compute the mean relatedness\nibd9DT[, mean(as.numeric(`r(1,2)`)), by=PDes]\n\n     PDes         V1\n   &lt;char&gt;      &lt;num&gt;\n1:      T 0.03800294\n2:     BW 0.01454867\n3:      G 0.08464706\n\n\n\n\nRelatedness results\nMean relatedness for animals trapped in the grid is 3 times those trapped with a transect. There are also a series of other interesting things that happens: Mean relatedness of animals trapped in the grid is just marginally above the mean expected for first cousins (~0.06). However, more than half of the comparisons were between half sibs or more related individuals:\n\nibd9DT[, sum(`r(1,2)`&gt;=0.125), by=PDes] # HS or more\n\n     PDes    V1\n   &lt;char&gt; &lt;int&gt;\n1:      T     0\n2:     BW     0\n3:      G   512\n\nibd9DT[, sum(`r(1,2)`&gt;=0.25), by=PDes] # FS or PO\n\n     PDes    V1\n   &lt;char&gt; &lt;int&gt;\n1:      T     0\n2:     BW     0\n3:      G    92\n\n# Recall that the number of pairwise comparisons within 'G' is\nnG &lt;- sum(pop(glw) == \"G\")\nnG*(nG-1)/2\n\n[1] 1770\n\n\nOnly a limited number of loci are out of HWE after correction for multiple comparisons\n\nhwe &lt;- gl.report.hwe(glw, multi_comp = TRUE)\n\nStarting gl.report.hwe \n  Processing genlight object with SNP data\nPackage HardyWeinberg  needed for this function to work. Please install it.\n\n\nBut incredibly, because of the het excess, \\(Fis\\) in ‘G’ is negative suggesting a outbred population!\n\nhet &lt;- gl.report.heterozygosity(glw)\n\nStarting gl.report.heterozygosity \n  Processing genlight object with SNP data\n  Calculating Observed Heterozygosities, averaged across\n                    loci, for each population\n  Calculating Expected Heterozygosities\n\nStarting gl.colors \nSelected color type dis \nCompleted: gl.colors \n\n\n\n\n\n  pop n.Ind n.Loc n.Loc.adj polyLoc monoLoc all_NALoc       Ho     HoSD\nT   T    50   992         1     982      10         0 0.332258 0.162559\nG   G    60   992         1     959      33         0 0.327991 0.198620\n      HoSE HoLCI HoHCI   Ho.adj Ho.adjSD Ho.adjSE Ho.adjLCI Ho.adjHCI       He\nT 0.005161    NA    NA 0.332258 0.162559 0.005161        NA        NA 0.329298\nG 0.006306    NA    NA 0.327991 0.198620 0.006306        NA        NA 0.294170\n      HeSD     HeSE HeLCI HeHCI      uHe    uHeSD    uHeSE uHeLCI uHeHCI\nT 0.152419 0.004839    NA    NA 0.332624 0.153958 0.004888     NA     NA\nG 0.169669 0.005387    NA    NA 0.296642 0.171094 0.005432     NA     NA\n    He.adj He.adjSD He.adjSE He.adjLCI He.adjHCI       FIS    FISSD    FISSE\nT 0.329298 0.152419 0.004839        NA        NA  0.001446 0.130990 0.004159\nG 0.294170 0.169669 0.005387        NA        NA -0.091603 0.140922 0.004474\n  FISLCI FISHCI\nT     NA     NA\nG     NA     NA\nCompleted: gl.report.heterozygosity \n\n\n\n\n\n\n\n\nInterpreting results\n\n\n\nIn our task, when the restoration project took place, two separate populations came in contact, creating an admixture zone. As the species is long-lived there has not been enough mixing and turnover for the two amalgamate. The lack of HWE and increased \\(Fis\\) is a result of the Wahlund effect."
  },
  {
    "objectID": "session02.html#exercise-data",
    "href": "session02.html#exercise-data",
    "title": "2  Pop Gen In Conservation",
    "section": "Exercise data",
    "text": "Exercise data\n\ngl.report.heterozygosity(glsim)\n\nStarting gl.report.heterozygosity \n  Processing genlight object with SNP data\n  Calculating Observed Heterozygosities, averaged across\n                    loci, for each population\n  Calculating Expected Heterozygosities\n\nStarting gl.colors \nSelected color type dis \nCompleted: gl.colors \n\n\n\n\n\n      pop n.Ind n.Loc n.Loc.adj polyLoc monoLoc all_NALoc       Ho     HoSD\npopA popA   100  2500         1    2500       0         0 0.386004 0.142553\n         HoSE HoLCI HoHCI   Ho.adj Ho.adjSD Ho.adjSE Ho.adjLCI Ho.adjHCI\npopA 0.002851    NA    NA 0.386004 0.142553 0.002851        NA        NA\n           He     HeSD     HeSE HeLCI HeHCI      uHe   uHeSD    uHeSE uHeLCI\npopA 0.441149 0.096207 0.001924    NA    NA 0.443366 0.09669 0.001934     NA\n     uHeHCI   He.adj He.adjSD He.adjSE He.adjLCI He.adjHCI      FIS    FISSD\npopA     NA 0.441149 0.096207 0.001924        NA        NA 0.114365 0.268448\n        FISSE FISLCI FISHCI\npopA 0.005369     NA     NA\nCompleted: gl.report.heterozygosity \n\npcaglsim &lt;- gl.pcoa(glsim)\n\nStarting gl.pcoa \n  Processing genlight object with SNP data\n  Performing a PCA, individuals as entities, loci as attributes, SNP genotype as state\nStarting gl.colors \nSelected color type 2 \nCompleted: gl.colors \n\n\n\n\n\nCompleted: gl.pcoa \n\ngl.pcoa.plot(glPca = pcaglsim, x = glsim)\n\nStarting gl.pcoa.plot \n  Processing an ordination file (glPca)\n  Processing genlight object with SNP data\n  Plotting populations in a space defined by the SNPs\n  Preparing plot .... please wait\n\n\n\n\n\nCompleted: gl.pcoa.plot \n\nhwe &lt;- gl.report.hwe(glsim, multi_comp = TRUE)\n\nStarting gl.report.hwe \n  Processing genlight object with SNP data\nPackage HardyWeinberg  needed for this function to work. Please install it."
  },
  {
    "objectID": "session03.html#estimating-heterozygosity-70-callrate",
    "href": "session03.html#estimating-heterozygosity-70-callrate",
    "title": "3  Sequencing Technologies",
    "section": "1. Estimating heterozygosity: 70% callrate",
    "text": "1. Estimating heterozygosity: 70% callrate\nHow do estimates of heterozygosity change as the number of individuals changes in your SNP calling?\nThis uses data from Litoria rubella, a very abundant and widespread frog species we are using data following https://onlinelibrary.wiley.com/doi/10.1111/1755-0998.13947. Let’s focus on the Kimberley, where we have lots of samples, and we expect the diversity to be really high because there are millions of them everywhere. SNPs were called on different numbers of individuals, in increments of 5 using the Stacks pipeline. We are only going to do a simple filter for call rates because we already filtered for allele depth in Stacks. SNPs were called independent of other populations, which we will get to later.\n\nLoad data\n\n# load data\nload('./data/Session3_data.RData')\n\n#create a list of the kimberley genlights\nkimberley_names &lt;- ls(pattern = \"^Kimberley\")\n#put all the genlights into a mega list\nkimberley &lt;- mget(kimberley_names)\n\n#we're going to do this in a loop for speed, applying the same filters\n# Iterate over the names of the kimberley list\nfor(name in names(kimberley)){\n  # Extract the genlight object from the kimberley list using its name\n  genlight_object &lt;- kimberley[[name]]\n  # Apply the filter call rate function\n  # Assuming gl.filter.callrate is a function that operates on a genlight object\n  filtered_object &lt;- gl.filter.callrate(genlight_object, threshold = 0.7, mono.rm = TRUE)\n  # Assign the filtered object back to the environment with a new name\n  assign(paste0(name, \"_0.7\"), filtered_object)\n}\n\nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Warning: data include loci that are scored NA across all individuals.\n  Consider filtering using gl &lt;- gl.filter.allna(gl)\n  Warning: Data may include monomorphic loci in call rate \n                    calculations for filtering\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 0.7 \n\n\n\n\n\nCompleted: gl.filter.callrate \nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Warning: data include loci that are scored NA across all individuals.\n  Consider filtering using gl &lt;- gl.filter.allna(gl)\n  Warning: Data may include monomorphic loci in call rate \n                    calculations for filtering\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 0.7 \n\n\n\n\n\nCompleted: gl.filter.callrate \nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Warning: Data may include monomorphic loci in call rate \n                    calculations for filtering\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 0.7 \n\n\n\n\n\nCompleted: gl.filter.callrate \nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Warning: Data may include monomorphic loci in call rate \n                    calculations for filtering\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 0.7 \n\n\n\n\n\nCompleted: gl.filter.callrate \nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Warning: Data may include monomorphic loci in call rate \n                    calculations for filtering\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 0.7 \n\n\n\n\n\nCompleted: gl.filter.callrate \nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Warning: Data may include monomorphic loci in call rate \n                    calculations for filtering\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 0.7 \n\n\n\n\n\nCompleted: gl.filter.callrate \nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Warning: Data may include monomorphic loci in call rate \n                    calculations for filtering\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 0.7 \n\n\n\n\n\nCompleted: gl.filter.callrate \nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Warning: Data may include monomorphic loci in call rate \n                    calculations for filtering\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 0.7 \n\n\n\n\n\nCompleted: gl.filter.callrate \n\n\n\n\nCalculate heterozygosity\n\n# List all object names in the environment\nall_names &lt;- ls()\n\n# Use grep() to match names that start with \"Kimberley\" \n# and end with \"0.7\", .+ indicates any characters in between\nkimberley_filtered &lt;- grep(\"^Kimberley.+0\\\\.7$\", all_names, value = TRUE)#put all the genlights into a mega list\n#create another list with the ones we want\nkimberley &lt;- mget(kimberley_filtered)\n\n#Initialize an empty data frame\nheterozygosity_reports_df &lt;- data.frame()\n\n# Iterate over the kimberley list to apply gl.report.heterozygosity\n# and bind the results\nfor(name in names(kimberley)) {\n  # Apply the function\n  report &lt;- gl.report.heterozygosity(kimberley[[name]])\n  \n  # Add 'ObjectName' as the first column of the report\n  report &lt;- cbind(ObjectName = name, report)\n  \n  # Bind this report to the main data frame\n  heterozygosity_reports_df &lt;- bind_rows(heterozygosity_reports_df, report)\n}\n\nStarting gl.report.heterozygosity \n  Processing genlight object with SNP data\n  Calculating Observed Heterozygosities, averaged across\n                    loci, for each population\n  Calculating Expected Heterozygosities\n\nStarting gl.colors \nSelected color type dis \nCompleted: gl.colors \n\n\n\n\n\n      pop    n.Ind n.Loc n.Loc.adj polyLoc monoLoc all_NALoc       Ho     HoSD\npop1 pop1 4.327947 28465         1   28465       0         0 0.233986 0.190371\n         HoSE HoLCI HoHCI   Ho.adj Ho.adjSD Ho.adjSE Ho.adjLCI Ho.adjHCI\npop1 0.001128    NA    NA 0.233986 0.190371 0.001128        NA        NA\n           He     HeSD     HeSE HeLCI HeHCI      uHe    uHeSD    uHeSE uHeLCI\npop1 0.329375 0.112778 0.000668    NA    NA 0.372398 0.127509 0.000756     NA\n     uHeHCI   He.adj He.adjSD He.adjSE He.adjLCI He.adjHCI      FIS    FISSD\npop1     NA 0.329375 0.112778 0.000668        NA        NA 0.302454 0.469498\n        FISSE FISLCI FISHCI\npop1 0.002783     NA     NA\nCompleted: gl.report.heterozygosity \nStarting gl.report.heterozygosity \n  Processing genlight object with SNP data\n  Calculating Observed Heterozygosities, averaged across\n                    loci, for each population\n  Calculating Expected Heterozygosities\n\nStarting gl.colors \nSelected color type dis \nCompleted: gl.colors \n\n\n\n\n\n      pop    n.Ind n.Loc n.Loc.adj polyLoc monoLoc all_NALoc       Ho     HoSD\npop1 pop1 8.113689 47375         1   47375       0         0 0.174677 0.144488\n         HoSE HoLCI HoHCI   Ho.adj Ho.adjSD Ho.adjSE Ho.adjLCI Ho.adjHCI\npop1 0.000664    NA    NA 0.174677 0.144488 0.000664        NA        NA\n           He     HeSD    HeSE HeLCI HeHCI      uHe    uHeSD    uHeSE uHeLCI\npop1 0.256162 0.135015 0.00062    NA    NA 0.272985 0.143882 0.000661     NA\n     uHeHCI   He.adj He.adjSD He.adjSE He.adjLCI He.adjHCI      FIS    FISSD\npop1     NA 0.256162 0.135015  0.00062        NA        NA 0.279239 0.419149\n        FISSE FISLCI FISHCI\npop1 0.001926     NA     NA\nCompleted: gl.report.heterozygosity \nStarting gl.report.heterozygosity \n  Processing genlight object with SNP data\n  Calculating Observed Heterozygosities, averaged across\n                    loci, for each population\n  Calculating Expected Heterozygosities\n\nStarting gl.colors \nSelected color type dis \nCompleted: gl.colors \n\n\n\n\n\n      pop    n.Ind n.Loc n.Loc.adj polyLoc monoLoc all_NALoc      Ho     HoSD\npop1 pop1 12.36041 35945         1   35945       0         0 0.15375 0.130734\n        HoSE HoLCI HoHCI  Ho.adj Ho.adjSD Ho.adjSE Ho.adjLCI Ho.adjHCI       He\npop1 0.00069    NA    NA 0.15375 0.130734  0.00069        NA        NA 0.218107\n        HeSD     HeSE HeLCI HeHCI      uHe    uHeSD   uHeSE uHeLCI uHeHCI\npop1 0.14199 0.000749    NA    NA 0.227301 0.147975 0.00078     NA     NA\n       He.adj He.adjSD He.adjSE He.adjLCI He.adjHCI      FIS    FISSD    FISSE\npop1 0.218107  0.14199 0.000749        NA        NA 0.244173 0.379656 0.002002\n     FISLCI FISHCI\npop1     NA     NA\nCompleted: gl.report.heterozygosity \nStarting gl.report.heterozygosity \n  Processing genlight object with SNP data\n  Calculating Observed Heterozygosities, averaged across\n                    loci, for each population\n  Calculating Expected Heterozygosities\n\nStarting gl.colors \nSelected color type dis \nCompleted: gl.colors \n\n\n\n\n\n      pop    n.Ind n.Loc n.Loc.adj polyLoc monoLoc all_NALoc       Ho     HoSD\npop1 pop1 16.03257 46276         1   46276       0         0 0.136788 0.122952\n         HoSE HoLCI HoHCI   Ho.adj Ho.adjSD Ho.adjSE Ho.adjLCI Ho.adjHCI\npop1 0.000572    NA    NA 0.136788 0.122952 0.000572        NA        NA\n           He     HeSD     HeSE HeLCI HeHCI      uHe    uHeSD    uHeSE uHeLCI\npop1 0.196149 0.143623 0.000668    NA    NA 0.202464 0.148246 0.000689     NA\n     uHeHCI   He.adj He.adjSD He.adjSE He.adjLCI He.adjHCI     FIS    FISSD\npop1     NA 0.196149 0.143623 0.000668        NA        NA 0.24159 0.366035\n        FISSE FISLCI FISHCI\npop1 0.001702     NA     NA\nCompleted: gl.report.heterozygosity \nStarting gl.report.heterozygosity \n  Processing genlight object with SNP data\n  Calculating Observed Heterozygosities, averaged across\n                    loci, for each population\n  Calculating Expected Heterozygosities\n\nStarting gl.colors \nSelected color type dis \nCompleted: gl.colors \n\n\n\n\n\n      pop    n.Ind n.Loc n.Loc.adj polyLoc monoLoc all_NALoc       Ho     HoSD\npop1 pop1 20.24648 39573         1   39573       0         0 0.128296 0.118505\n         HoSE HoLCI HoHCI   Ho.adj Ho.adjSD Ho.adjSE Ho.adjLCI Ho.adjHCI\npop1 0.000596    NA    NA 0.128296 0.118505 0.000596        NA        NA\n           He     HeSD     HeSE HeLCI HeHCI      uHe    uHeSD    uHeSE uHeLCI\npop1 0.180369 0.144139 0.000725    NA    NA 0.184936 0.147788 0.000743     NA\n     uHeHCI   He.adj He.adjSD He.adjSE He.adjLCI He.adjHCI      FIS    FISSD\npop1     NA 0.180369 0.144139 0.000725        NA        NA 0.224197 0.345555\n        FISSE FISLCI FISHCI\npop1 0.001737     NA     NA\nCompleted: gl.report.heterozygosity \nStarting gl.report.heterozygosity \n  Processing genlight object with SNP data\n  Calculating Observed Heterozygosities, averaged across\n                    loci, for each population\n  Calculating Expected Heterozygosities\n\nStarting gl.colors \nSelected color type dis \nCompleted: gl.colors \n\n\n\n\n\n      pop    n.Ind n.Loc n.Loc.adj polyLoc monoLoc all_NALoc       Ho     HoSD\npop1 pop1 23.86971 44532         1   44532       0         0 0.122023 0.115572\n         HoSE HoLCI HoHCI   Ho.adj Ho.adjSD Ho.adjSE Ho.adjLCI Ho.adjHCI\npop1 0.000548    NA    NA 0.122023 0.115572 0.000548        NA        NA\n           He     HeSD     HeSE HeLCI HeHCI      uHe    uHeSD    uHeSE uHeLCI\npop1 0.172406 0.144272 0.000684    NA    NA 0.176095 0.147359 0.000698     NA\n     uHeHCI   He.adj He.adjSD He.adjSE He.adjLCI He.adjHCI      FIS    FISSD\npop1     NA 0.172406 0.144272 0.000684        NA        NA 0.225027 0.336198\n        FISSE FISLCI FISHCI\npop1 0.001593     NA     NA\nCompleted: gl.report.heterozygosity \nStarting gl.report.heterozygosity \n  Processing genlight object with SNP data\n  Calculating Observed Heterozygosities, averaged across\n                    loci, for each population\n  Calculating Expected Heterozygosities\n\nStarting gl.colors \nSelected color type dis \nCompleted: gl.colors \n\n\n\n\n\n      pop    n.Ind n.Loc n.Loc.adj polyLoc monoLoc all_NALoc       Ho     HoSD\npop1 pop1 28.28105 46273         1   46273       0         0 0.114091 0.112716\n         HoSE HoLCI HoHCI   Ho.adj Ho.adjSD Ho.adjSE Ho.adjLCI Ho.adjHCI\npop1 0.000524    NA    NA 0.114091 0.112716 0.000524        NA        NA\n           He     HeSD     HeSE HeLCI HeHCI      uHe    uHeSD    uHeSE uHeLCI\npop1 0.160215 0.143001 0.000665    NA    NA 0.163099 0.145574 0.000677     NA\n     uHeHCI   He.adj He.adjSD He.adjSE He.adjLCI He.adjHCI      FIS    FISSD\npop1     NA 0.160215 0.143001 0.000665        NA        NA 0.217536 0.325623\n        FISSE FISLCI FISHCI\npop1 0.001514     NA     NA\nCompleted: gl.report.heterozygosity \nStarting gl.report.heterozygosity \n  Processing genlight object with SNP data\n  Calculating Observed Heterozygosities, averaged across\n                    loci, for each population\n  Calculating Expected Heterozygosities\n\nStarting gl.colors \nSelected color type dis \nCompleted: gl.colors \n\n\n\n\n\n      pop    n.Ind n.Loc n.Loc.adj polyLoc monoLoc all_NALoc       Ho     HoSD\npop1 pop1 31.86356 49487         1   49487       0         0 0.110686 0.111441\n         HoSE HoLCI HoHCI   Ho.adj Ho.adjSD Ho.adjSE Ho.adjLCI Ho.adjHCI\npop1 0.000501    NA    NA 0.110686 0.111441 0.000501        NA        NA\n           He     HeSD     HeSE HeLCI HeHCI      uHe    uHeSD    uHeSE uHeLCI\npop1 0.156579 0.143352 0.000644    NA    NA 0.159075 0.145637 0.000655     NA\n     uHeHCI   He.adj He.adjSD He.adjSE He.adjLCI He.adjHCI      FIS   FISSD\npop1     NA 0.156579 0.143352 0.000644        NA        NA 0.221427 0.32204\n        FISSE FISLCI FISHCI\npop1 0.001448     NA     NA\nCompleted: gl.report.heterozygosity \n\n# heterozygosity_reports_df now contains all the reports with an \n# additional column for object names\nknitr::kable(heterozygosity_reports_df)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nObjectName\npop\nn.Ind\nn.Loc\nn.Loc.adj\npolyLoc\nmonoLoc\nall_NALoc\nHo\nHoSD\nHoSE\nHoLCI\nHoHCI\nHo.adj\nHo.adjSD\nHo.adjSE\nHo.adjLCI\nHo.adjHCI\nHe\nHeSD\nHeSE\nHeLCI\nHeHCI\nuHe\nuHeSD\nuHeSE\nuHeLCI\nuHeHCI\nHe.adj\nHe.adjSD\nHe.adjSE\nHe.adjLCI\nHe.adjHCI\nFIS\nFISSD\nFISSE\nFISLCI\nFISHCI\n\n\n\n\npop1…1\nKimberley_n_05.vcf_0.7\npop1\n4.327947\n28465\n1\n28465\n0\n0\n0.233986\n0.190371\n0.001128\nNA\nNA\n0.233986\n0.190371\n0.001128\nNA\nNA\n0.329375\n0.112778\n0.000668\nNA\nNA\n0.372398\n0.127509\n0.000756\nNA\nNA\n0.329375\n0.112778\n0.000668\nNA\nNA\n0.302454\n0.469498\n0.002783\nNA\nNA\n\n\npop1…2\nKimberley_n_10.vcf_0.7\npop1\n8.113689\n47375\n1\n47375\n0\n0\n0.174677\n0.144488\n0.000664\nNA\nNA\n0.174677\n0.144488\n0.000664\nNA\nNA\n0.256162\n0.135015\n0.000620\nNA\nNA\n0.272985\n0.143882\n0.000661\nNA\nNA\n0.256162\n0.135015\n0.000620\nNA\nNA\n0.279239\n0.419149\n0.001926\nNA\nNA\n\n\npop1…3\nKimberley_n_15.vcf_0.7\npop1\n12.360412\n35945\n1\n35945\n0\n0\n0.153750\n0.130734\n0.000690\nNA\nNA\n0.153750\n0.130734\n0.000690\nNA\nNA\n0.218107\n0.141990\n0.000749\nNA\nNA\n0.227301\n0.147975\n0.000780\nNA\nNA\n0.218107\n0.141990\n0.000749\nNA\nNA\n0.244173\n0.379656\n0.002002\nNA\nNA\n\n\npop1…4\nKimberley_n_20.vcf_0.7\npop1\n16.032565\n46276\n1\n46276\n0\n0\n0.136788\n0.122952\n0.000572\nNA\nNA\n0.136788\n0.122952\n0.000572\nNA\nNA\n0.196149\n0.143623\n0.000668\nNA\nNA\n0.202464\n0.148246\n0.000689\nNA\nNA\n0.196149\n0.143623\n0.000668\nNA\nNA\n0.241590\n0.366035\n0.001702\nNA\nNA\n\n\npop1…5\nKimberley_n_25.vcf_0.7\npop1\n20.246481\n39573\n1\n39573\n0\n0\n0.128296\n0.118505\n0.000596\nNA\nNA\n0.128296\n0.118505\n0.000596\nNA\nNA\n0.180369\n0.144139\n0.000725\nNA\nNA\n0.184936\n0.147788\n0.000743\nNA\nNA\n0.180369\n0.144139\n0.000725\nNA\nNA\n0.224197\n0.345555\n0.001737\nNA\nNA\n\n\npop1…6\nKimberley_n_30.vcf_0.7\npop1\n23.869712\n44532\n1\n44532\n0\n0\n0.122023\n0.115572\n0.000548\nNA\nNA\n0.122023\n0.115572\n0.000548\nNA\nNA\n0.172406\n0.144272\n0.000684\nNA\nNA\n0.176095\n0.147359\n0.000698\nNA\nNA\n0.172406\n0.144272\n0.000684\nNA\nNA\n0.225027\n0.336198\n0.001593\nNA\nNA\n\n\npop1…7\nKimberley_n_35.vcf_0.7\npop1\n28.281049\n46273\n1\n46273\n0\n0\n0.114091\n0.112716\n0.000524\nNA\nNA\n0.114091\n0.112716\n0.000524\nNA\nNA\n0.160215\n0.143001\n0.000665\nNA\nNA\n0.163099\n0.145574\n0.000677\nNA\nNA\n0.160215\n0.143001\n0.000665\nNA\nNA\n0.217536\n0.325623\n0.001514\nNA\nNA\n\n\npop1…8\nKimberley_n_40.vcf_0.7\npop1\n31.863560\n49487\n1\n49487\n0\n0\n0.110686\n0.111441\n0.000501\nNA\nNA\n0.110686\n0.111441\n0.000501\nNA\nNA\n0.156579\n0.143352\n0.000644\nNA\nNA\n0.159075\n0.145637\n0.000655\nNA\nNA\n0.156579\n0.143352\n0.000644\nNA\nNA\n0.221427\n0.322040\n0.001448\nNA\nNA\n\n\n\n\n\n\n\nPlotting results\n\nkimberley_Ho_0.7callrate &lt;- ggplot(heterozygosity_reports_df, aes(x = ObjectName, y = Ho)) +\n  geom_point() +\n  scale_y_continuous(limits = c(0, NA)) +\n  theme(axis.text.x = element_text(angle = 65, hjust = 1)) +\n  labs(title = \"Observed Heterozygosity by Sample number\", x = \"Sample Number\", y = \"Observed Heterozygosity (Ho)\")\n\nkimberley_Ho_0.7callrate\n\n\n\n\n\n\n\n\n\n\nSampling\n\n\n\nAs you can see, different numbers samples can substantially change your heterozygosity estimate."
  },
  {
    "objectID": "session03.html#estimating-heterozygosity-95-callrate",
    "href": "session03.html#estimating-heterozygosity-95-callrate",
    "title": "3  Sequencing Technologies",
    "section": "2. Estimating heterozygosity: 95% callrate",
    "text": "2. Estimating heterozygosity: 95% callrate\nLets redo our heterozygosity estimates, but see how changing your call rate filter impacts estimates\n\nReload data\n\n# reload data\nload('./data/Session3_data.RData')\n# List all object names in the environment\nall_names &lt;- ls()\n\n# Use grep() to match names that start with \"Kimberley\" \nkimberley_names &lt;- grep(\"^Kimberley.*\\\\.vcf$\", all_names, value = TRUE) #put all the genlights into a mega list\n#create another list with the ones we want\nkimberley &lt;- mget(kimberley_names)\n\n#we're going to do this in a loop for speed, applying the same filters\n# Iterate over the names of the kimberley list\nfor(name in names(kimberley)){\n  # Extract the genlight object from the kimberley list using its name\n  genlight_object &lt;- kimberley[[name]]\n  # Apply the filter call rate function\n  # Assuming gl.filter.callrate is a function that operates on a genlight object\n  filtered_object &lt;- gl.filter.callrate(genlight_object, threshold = .95, mono.rm = TRUE)\n  # Assign the filtered object back to the environment with a new name\n  assign(paste0(name, \"_0.95\"), filtered_object)\n}\n\nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Warning: data include loci that are scored NA across all individuals.\n  Consider filtering using gl &lt;- gl.filter.allna(gl)\n  Warning: Data may include monomorphic loci in call rate \n                    calculations for filtering\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 0.95 \n\n\n\n\n\nCompleted: gl.filter.callrate \nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Warning: data include loci that are scored NA across all individuals.\n  Consider filtering using gl &lt;- gl.filter.allna(gl)\n  Warning: Data may include monomorphic loci in call rate \n                    calculations for filtering\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 0.95 \n\n\n\n\n\nCompleted: gl.filter.callrate \nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Warning: Data may include monomorphic loci in call rate \n                    calculations for filtering\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 0.95 \n\n\n\n\n\nCompleted: gl.filter.callrate \nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Warning: Data may include monomorphic loci in call rate \n                    calculations for filtering\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 0.95 \n\n\n\n\n\nCompleted: gl.filter.callrate \nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Warning: Data may include monomorphic loci in call rate \n                    calculations for filtering\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 0.95 \n\n\n\n\n\nCompleted: gl.filter.callrate \nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Warning: Data may include monomorphic loci in call rate \n                    calculations for filtering\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 0.95 \n\n\n\n\n\nCompleted: gl.filter.callrate \nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Warning: Data may include monomorphic loci in call rate \n                    calculations for filtering\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 0.95 \n\n\n\n\n\nCompleted: gl.filter.callrate \nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Warning: Data may include monomorphic loci in call rate \n                    calculations for filtering\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 0.95 \n\n\n\n\n\nCompleted: gl.filter.callrate \n\n\n\n\nCalculate heterozygosity\n\n# List all object names in the environment\nall_names &lt;- ls()\n\n# Use grep() to match names that start with \"Kimberley\" \n# and end with \"0.95\", .+ indicates any characters in between\nkimberley_filtered &lt;- grep(\"^Kimberley.+0\\\\.95$\", all_names, value = TRUE)#put all the genlights into a mega list\n#create another list with the ones we want\nkimberley &lt;- mget(kimberley_filtered)\n\n\n#Initialize an empty data frame\nheterozygosity_reports_df_0.95 &lt;- data.frame()\n\n# Iterate over the kimberley list to apply gl.report.heterozygosity\n# and bind the results\nfor(name in names(kimberley)) {\n  # Apply the function\n  report &lt;- gl.report.heterozygosity(kimberley[[name]])\n  \n  # Add 'ObjectName' as the first column of the report\n  report &lt;- cbind(ObjectName = name, report)\n  \n  # Bind this report to the main data frame\n  heterozygosity_reports_df_0.95 &lt;- bind_rows(heterozygosity_reports_df_0.95, report)\n}\n\nStarting gl.report.heterozygosity \n  Processing genlight object with SNP data\n  Calculating Observed Heterozygosities, averaged across\n                    loci, for each population\n  Calculating Expected Heterozygosities\n\nStarting gl.colors \nSelected color type dis \nCompleted: gl.colors \n\n\n\n\n\n      pop n.Ind n.Loc n.Loc.adj polyLoc monoLoc all_NALoc       Ho     HoSD\npop1 pop1     5  9335         1    9335       0         0 0.229502 0.173222\n         HoSE HoLCI HoHCI   Ho.adj Ho.adjSD Ho.adjSE Ho.adjLCI Ho.adjHCI\npop1 0.001793    NA    NA 0.229502 0.173222 0.001793        NA        NA\n           He     HeSD    HeSE HeLCI HeHCI      uHe    uHeSD    uHeSE uHeLCI\npop1 0.307878 0.119766 0.00124    NA    NA 0.342087 0.133073 0.001377     NA\n     uHeHCI   He.adj He.adjSD He.adjSE He.adjLCI He.adjHCI      FIS    FISSD\npop1     NA 0.307878 0.119766  0.00124        NA        NA 0.261799 0.439324\n        FISSE FISLCI FISHCI\npop1 0.004547     NA     NA\nCompleted: gl.report.heterozygosity \nStarting gl.report.heterozygosity \n  Processing genlight object with SNP data\n  Calculating Observed Heterozygosities, averaged across\n                    loci, for each population\n  Calculating Expected Heterozygosities\n\nStarting gl.colors \nSelected color type dis \nCompleted: gl.colors \n\n\n\n\n\n      pop n.Ind n.Loc n.Loc.adj polyLoc monoLoc all_NALoc       Ho     HoSD\npop1 pop1    10  5814         1    5814       0         0 0.176402 0.137187\n         HoSE HoLCI HoHCI   Ho.adj Ho.adjSD Ho.adjSE Ho.adjLCI Ho.adjHCI\npop1 0.001799    NA    NA 0.176402 0.137187 0.001799        NA        NA\n           He     HeSD    HeSE HeLCI HeHCI      uHe    uHeSD    uHeSE uHeLCI\npop1 0.228789 0.139511 0.00183    NA    NA 0.240831 0.146854 0.001926     NA\n     uHeHCI   He.adj He.adjSD He.adjSE He.adjLCI He.adjHCI      FIS    FISSD\npop1     NA 0.228789 0.139511  0.00183        NA        NA 0.192591 0.359841\n        FISSE FISLCI FISHCI\npop1 0.004719     NA     NA\nCompleted: gl.report.heterozygosity \nStarting gl.report.heterozygosity \n  Processing genlight object with SNP data\n  Calculating Observed Heterozygosities, averaged across\n                    loci, for each population\n  Calculating Expected Heterozygosities\n\nStarting gl.colors \nSelected color type dis \nCompleted: gl.colors \n\n\n\n\n\n      pop n.Ind n.Loc n.Loc.adj polyLoc monoLoc all_NALoc       Ho     HoSD\npop1 pop1    15  2003         1    2003       0         0 0.152804 0.122813\n         HoSE HoLCI HoHCI   Ho.adj Ho.adjSD Ho.adjSE Ho.adjLCI Ho.adjHCI\npop1 0.002744    NA    NA 0.152804 0.122813 0.002744        NA        NA\n           He     HeSD     HeSE HeLCI HeHCI      uHe   uHeSD    uHeSE uHeLCI\npop1 0.196298 0.145174 0.003244    NA    NA 0.203067 0.15018 0.003356     NA\n     uHeHCI   He.adj He.adjSD He.adjSE He.adjLCI He.adjHCI      FIS    FISSD\npop1     NA 0.196298 0.145174 0.003244        NA        NA 0.161721 0.315393\n        FISSE FISLCI FISHCI\npop1 0.007047     NA     NA\nCompleted: gl.report.heterozygosity \nStarting gl.report.heterozygosity \n  Processing genlight object with SNP data\n  Calculating Observed Heterozygosities, averaged across\n                    loci, for each population\n  Calculating Expected Heterozygosities\n\nStarting gl.colors \nSelected color type dis \nCompleted: gl.colors \n\n\n\n\n\n      pop    n.Ind n.Loc n.Loc.adj polyLoc monoLoc all_NALoc       Ho     HoSD\npop1 pop1 19.27864  4199         1    4199       0         0 0.140333 0.124561\n         HoSE HoLCI HoHCI   Ho.adj Ho.adjSD Ho.adjSE Ho.adjLCI Ho.adjHCI\npop1 0.001922    NA    NA 0.140333 0.124561 0.001922        NA        NA\n           He     HeSD     HeSE HeLCI HeHCI      uHe    uHeSD    uHeSE uHeLCI\npop1 0.177053 0.144114 0.002224    NA    NA 0.181767 0.147951 0.002283     NA\n     uHeHCI   He.adj He.adjSD He.adjSE He.adjLCI He.adjHCI      FIS    FISSD\npop1     NA 0.177053 0.144114 0.002224        NA        NA 0.153933 0.306136\n        FISSE FISLCI FISHCI\npop1 0.004724     NA     NA\nCompleted: gl.report.heterozygosity \nStarting gl.report.heterozygosity \n  Processing genlight object with SNP data\n  Calculating Observed Heterozygosities, averaged across\n                    loci, for each population\n  Calculating Expected Heterozygosities\n\nStarting gl.colors \nSelected color type dis \nCompleted: gl.colors \n\n\n\n\n\n      pop   n.Ind n.Loc n.Loc.adj polyLoc monoLoc all_NALoc       Ho     HoSD\npop1 pop1 24.2354  2243         1    2243       0         0 0.129226 0.119719\n         HoSE HoLCI HoHCI   Ho.adj Ho.adjSD Ho.adjSE Ho.adjLCI Ho.adjHCI\npop1 0.002528    NA    NA 0.129226 0.119719 0.002528        NA        NA\n           He     HeSD     HeSE HeLCI HeHCI      uHe    uHeSD    uHeSE uHeLCI\npop1 0.162692 0.145793 0.003078    NA    NA 0.166119 0.148864 0.003143     NA\n     uHeHCI   He.adj He.adjSD He.adjSE He.adjLCI He.adjHCI      FIS    FISSD\npop1     NA 0.162692 0.145793 0.003078        NA        NA 0.135561 0.276653\n        FISSE FISLCI FISHCI\npop1 0.005841     NA     NA\nCompleted: gl.report.heterozygosity \nStarting gl.report.heterozygosity \n  Processing genlight object with SNP data\n  Calculating Observed Heterozygosities, averaged across\n                    loci, for each population\n  Calculating Expected Heterozygosities\n\nStarting gl.colors \nSelected color type dis \nCompleted: gl.colors \n\n\n\n\n\n      pop    n.Ind n.Loc n.Loc.adj polyLoc monoLoc all_NALoc       Ho     HoSD\npop1 pop1 29.20428  1356         1    1356       0         0 0.117792 0.114525\n        HoSE HoLCI HoHCI   Ho.adj Ho.adjSD Ho.adjSE Ho.adjLCI Ho.adjHCI\npop1 0.00311    NA    NA 0.117792 0.114525  0.00311        NA        NA\n           He     HeSD     HeSE HeLCI HeHCI      uHe    uHeSD  uHeSE uHeLCI\npop1 0.147605 0.141139 0.003833    NA    NA 0.150176 0.143597 0.0039     NA\n     uHeHCI   He.adj He.adjSD He.adjSE He.adjLCI He.adjHCI      FIS    FISSD\npop1     NA 0.147605 0.141139 0.003833        NA        NA 0.129329 0.267582\n        FISSE FISLCI FISHCI\npop1 0.007267     NA     NA\nCompleted: gl.report.heterozygosity \nStarting gl.report.heterozygosity \n  Processing genlight object with SNP data\n  Calculating Observed Heterozygosities, averaged across\n                    loci, for each population\n  Calculating Expected Heterozygosities\n\nStarting gl.colors \nSelected color type dis \nCompleted: gl.colors \n\n\n\n\n\n      pop    n.Ind n.Loc n.Loc.adj polyLoc monoLoc all_NALoc       Ho     HoSD\npop1 pop1 34.21357  1105         1    1105       0         0 0.111003 0.113222\n         HoSE HoLCI HoHCI   Ho.adj Ho.adjSD Ho.adjSE Ho.adjLCI Ho.adjHCI\npop1 0.003406    NA    NA 0.111003 0.113222 0.003406        NA        NA\n           He     HeSD     HeSE HeLCI HeHCI      uHe    uHeSD    uHeSE uHeLCI\npop1 0.136806 0.139159 0.004186    NA    NA 0.138835 0.141223 0.004248     NA\n     uHeHCI   He.adj He.adjSD He.adjSE He.adjLCI He.adjHCI      FIS    FISSD\npop1     NA 0.136806 0.139159 0.004186        NA        NA 0.112563 0.246423\n        FISSE FISLCI FISHCI\npop1 0.007413     NA     NA\nCompleted: gl.report.heterozygosity \nStarting gl.report.heterozygosity \n  Processing genlight object with SNP data\n  Calculating Observed Heterozygosities, averaged across\n                    loci, for each population\n  Calculating Expected Heterozygosities\n\nStarting gl.colors \nSelected color type dis \nCompleted: gl.colors \n\n\n\n\n\n      pop    n.Ind n.Loc n.Loc.adj polyLoc monoLoc all_NALoc       Ho     HoSD\npop1 pop1 38.42546  1838         1    1838       0         0 0.110599 0.115467\n         HoSE HoLCI HoHCI   Ho.adj Ho.adjSD Ho.adjSE Ho.adjLCI Ho.adjHCI\npop1 0.002693    NA    NA 0.110599 0.115467 0.002693        NA        NA\n           He     HeSD     HeSE HeLCI HeHCI      uHe    uHeSD    uHeSE uHeLCI\npop1 0.137218 0.141699 0.003305    NA    NA 0.139027 0.143567 0.003349     NA\n     uHeHCI   He.adj He.adjSD He.adjSE He.adjLCI He.adjHCI      FIS    FISSD\npop1     NA 0.137218 0.141699 0.003305        NA        NA 0.114931 0.246381\n        FISSE FISLCI FISHCI\npop1 0.005747     NA     NA\nCompleted: gl.report.heterozygosity \n\n# heterozygosity_reports_df now contains all the reports with an \n# additional column for object names\nknitr::kable(heterozygosity_reports_df_0.95)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nObjectName\npop\nn.Ind\nn.Loc\nn.Loc.adj\npolyLoc\nmonoLoc\nall_NALoc\nHo\nHoSD\nHoSE\nHoLCI\nHoHCI\nHo.adj\nHo.adjSD\nHo.adjSE\nHo.adjLCI\nHo.adjHCI\nHe\nHeSD\nHeSE\nHeLCI\nHeHCI\nuHe\nuHeSD\nuHeSE\nuHeLCI\nuHeHCI\nHe.adj\nHe.adjSD\nHe.adjSE\nHe.adjLCI\nHe.adjHCI\nFIS\nFISSD\nFISSE\nFISLCI\nFISHCI\n\n\n\n\npop1…1\nKimberley_n_05.vcf_0.95\npop1\n5.00000\n9335\n1\n9335\n0\n0\n0.229502\n0.173222\n0.001793\nNA\nNA\n0.229502\n0.173222\n0.001793\nNA\nNA\n0.307878\n0.119766\n0.001240\nNA\nNA\n0.342087\n0.133073\n0.001377\nNA\nNA\n0.307878\n0.119766\n0.001240\nNA\nNA\n0.261799\n0.439324\n0.004547\nNA\nNA\n\n\npop1…2\nKimberley_n_10.vcf_0.95\npop1\n10.00000\n5814\n1\n5814\n0\n0\n0.176402\n0.137187\n0.001799\nNA\nNA\n0.176402\n0.137187\n0.001799\nNA\nNA\n0.228789\n0.139511\n0.001830\nNA\nNA\n0.240831\n0.146854\n0.001926\nNA\nNA\n0.228789\n0.139511\n0.001830\nNA\nNA\n0.192591\n0.359841\n0.004719\nNA\nNA\n\n\npop1…3\nKimberley_n_15.vcf_0.95\npop1\n15.00000\n2003\n1\n2003\n0\n0\n0.152804\n0.122813\n0.002744\nNA\nNA\n0.152804\n0.122813\n0.002744\nNA\nNA\n0.196298\n0.145174\n0.003244\nNA\nNA\n0.203067\n0.150180\n0.003356\nNA\nNA\n0.196298\n0.145174\n0.003244\nNA\nNA\n0.161721\n0.315393\n0.007047\nNA\nNA\n\n\npop1…4\nKimberley_n_20.vcf_0.95\npop1\n19.27864\n4199\n1\n4199\n0\n0\n0.140333\n0.124561\n0.001922\nNA\nNA\n0.140333\n0.124561\n0.001922\nNA\nNA\n0.177053\n0.144114\n0.002224\nNA\nNA\n0.181767\n0.147951\n0.002283\nNA\nNA\n0.177053\n0.144114\n0.002224\nNA\nNA\n0.153933\n0.306136\n0.004724\nNA\nNA\n\n\npop1…5\nKimberley_n_25.vcf_0.95\npop1\n24.23540\n2243\n1\n2243\n0\n0\n0.129226\n0.119719\n0.002528\nNA\nNA\n0.129226\n0.119719\n0.002528\nNA\nNA\n0.162692\n0.145793\n0.003078\nNA\nNA\n0.166119\n0.148864\n0.003143\nNA\nNA\n0.162692\n0.145793\n0.003078\nNA\nNA\n0.135561\n0.276653\n0.005841\nNA\nNA\n\n\npop1…6\nKimberley_n_30.vcf_0.95\npop1\n29.20428\n1356\n1\n1356\n0\n0\n0.117792\n0.114525\n0.003110\nNA\nNA\n0.117792\n0.114525\n0.003110\nNA\nNA\n0.147605\n0.141139\n0.003833\nNA\nNA\n0.150176\n0.143597\n0.003900\nNA\nNA\n0.147605\n0.141139\n0.003833\nNA\nNA\n0.129329\n0.267582\n0.007267\nNA\nNA\n\n\npop1…7\nKimberley_n_35.vcf_0.95\npop1\n34.21357\n1105\n1\n1105\n0\n0\n0.111003\n0.113222\n0.003406\nNA\nNA\n0.111003\n0.113222\n0.003406\nNA\nNA\n0.136806\n0.139159\n0.004186\nNA\nNA\n0.138835\n0.141223\n0.004248\nNA\nNA\n0.136806\n0.139159\n0.004186\nNA\nNA\n0.112563\n0.246423\n0.007413\nNA\nNA\n\n\npop1…8\nKimberley_n_40.vcf_0.95\npop1\n38.42546\n1838\n1\n1838\n0\n0\n0.110599\n0.115467\n0.002693\nNA\nNA\n0.110599\n0.115467\n0.002693\nNA\nNA\n0.137218\n0.141699\n0.003305\nNA\nNA\n0.139027\n0.143567\n0.003349\nNA\nNA\n0.137218\n0.141699\n0.003305\nNA\nNA\n0.114931\n0.246381\n0.005747\nNA\nNA\n\n\n\n\n\n\n\nPlotting results\n\n# Example using ggplot2 to plot the data\nlibrary(ggplot2)\nkimberley_Ho_0.95callrate &lt;- ggplot(heterozygosity_reports_df_0.95, aes(x = ObjectName, y = Ho)) +\n  geom_point() +\n  scale_y_continuous(limits = c(0, NA)) +\n  theme(axis.text.x = element_text(angle = 65, hjust = 1)) +\n  labs(title = \"Observed Heterozygosity by Sample number 0.95 Call Rate\",\n       x = \"Sample Number\", y = \"Observed Heterozygosity (Ho)\")\n\nkimberley_Ho_0.95callrate\n\n\n\npar(mfrow = c(2,1))\nkimberley_Ho_0.7callrate +kimberley_Ho_0.95callrate\n\n\n\n\n\n\n\n\n\n\nCall rate filters\n\n\n\nHigher call rate filters can reduce your slightly reduce your heterozygosity estimate"
  },
  {
    "objectID": "session03.html#estimating-heterozygosity-even-sampling",
    "href": "session03.html#estimating-heterozygosity-even-sampling",
    "title": "3  Sequencing Technologies",
    "section": "3. Estimating heterozygosity: Even sampling",
    "text": "3. Estimating heterozygosity: Even sampling\ndoes subsetting to have the same sample numbers fix the issue?\nLet’s compare heterozygosity when SNPs are called on 5 individuals, versus called on 40 individuals and then is subset to 5 individuals.\nIf you called SNPs on more individuals than you wanted to make them equal, can you just remove individuals without re-calling SNPS? Let’s test.\n\nSubsampling\n\n# Use grep() to match names that start with \"Kimberley\" \nkimberley_names &lt;- grep(\"^Kimberley.*\\\\.vcf$\", all_names, value = TRUE) \n# put all the genlights into a mega list\n\n#create another list with the ones we want\nkimberley &lt;- mget(kimberley_names)\n\n# Now lets subsample the datasets down to the same five individuals\n# so that the only difference is our SNP calling\n# who are the individuals\ninds &lt;- indNames(Kimberley_n_05.vcf_0.7)\n\n#Initialize an empty data frame\nheterozygosity_when_subsampling &lt;- data.frame()\n\nfor(name in names(kimberley)) {\n  # Access the genlight object from your list\n  genlight_object &lt;- kimberley[[name]]\n  \n  # Subset the individuals\n  x &lt;- gl.keep.ind(genlight_object, ind.list = inds, mono.rm = TRUE)\n  \n  #filter on call rate\n  \n  x &lt;- gl.filter.callrate(x, threshold = .7)\n  \n  # Apply the function\n  report &lt;- gl.report.heterozygosity(x)\n  \n  # Add 'ObjectName' as the first column of the report\n  report$ObjectName &lt;- name \n  # Adjusting to add column without cbind to maintain data frame classes\n  \n  # Bind this report to the main data frame\n  heterozygosity_when_subsampling &lt;- bind_rows(heterozygosity_when_subsampling,\n                                               report)\n}\n\nStarting gl.keep.ind \n  Processing genlight object with SNP data\n  Warning: data include loci that are scored NA across all individuals.\n  Consider filtering using gl &lt;- gl.filter.allna(gl)\n  Deleting all but the listed individuals Kimberley_ABTC102537_DLit20-5353_CE4Y2ANXX_1, Kimberley_ABTC11911_DLit20-5353_CE7VEANXX_1, Kimberley_ABTC86488_DLit20-5353_CECHMANXX_4, Kimberley_CCM7524_DLit20-5353_CECHMANXX_2, Kimberley_ABTC135731_DLit20-5353_CE7VEANXX_1 \n  Deleting monomorphic loc\n  Locus metrics not recalculated\nCompleted: gl.keep.ind \nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Warning: Data may include monomorphic loci in call rate \n                    calculations for filtering\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 0.7 \n\n\n\n\n\nCompleted: gl.filter.callrate \nStarting gl.report.heterozygosity \n  Processing genlight object with SNP data\n  Calculating Observed Heterozygosities, averaged across\n                    loci, for each population\n  Calculating Expected Heterozygosities\n\nStarting gl.colors \nSelected color type dis \nCompleted: gl.colors \n\n\n\n\n\n      pop    n.Ind n.Loc n.Loc.adj polyLoc monoLoc all_NALoc       Ho     HoSD\npop1 pop1 4.327947 28465         1   28465       0         0 0.233986 0.190371\n         HoSE HoLCI HoHCI   Ho.adj Ho.adjSD Ho.adjSE Ho.adjLCI Ho.adjHCI\npop1 0.001128    NA    NA 0.233986 0.190371 0.001128        NA        NA\n           He     HeSD     HeSE HeLCI HeHCI      uHe    uHeSD    uHeSE uHeLCI\npop1 0.329375 0.112778 0.000668    NA    NA 0.372398 0.127509 0.000756     NA\n     uHeHCI   He.adj He.adjSD He.adjSE He.adjLCI He.adjHCI      FIS    FISSD\npop1     NA 0.329375 0.112778 0.000668        NA        NA 0.302454 0.469498\n        FISSE FISLCI FISHCI\npop1 0.002783     NA     NA\nCompleted: gl.report.heterozygosity \nStarting gl.keep.ind \n  Processing genlight object with SNP data\n  Warning: data include loci that are scored NA across all individuals.\n  Consider filtering using gl &lt;- gl.filter.allna(gl)\n  Deleting all but the listed individuals Kimberley_ABTC102537_DLit20-5353_CE4Y2ANXX_1, Kimberley_ABTC11911_DLit20-5353_CE7VEANXX_1, Kimberley_ABTC86488_DLit20-5353_CECHMANXX_4, Kimberley_CCM7524_DLit20-5353_CECHMANXX_2, Kimberley_ABTC135731_DLit20-5353_CE7VEANXX_1 \n  Deleting monomorphic loc\n  Locus metrics not recalculated\nCompleted: gl.keep.ind \nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Warning: Data may include monomorphic loci in call rate \n                    calculations for filtering\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 0.7 \n\n\n\n\n\nCompleted: gl.filter.callrate \nStarting gl.report.heterozygosity \n  Processing genlight object with SNP data\n  Calculating Observed Heterozygosities, averaged across\n                    loci, for each population\n  Calculating Expected Heterozygosities\n\nStarting gl.colors \nSelected color type dis \nCompleted: gl.colors \n\n\n\n\n\n      pop    n.Ind n.Loc n.Loc.adj polyLoc monoLoc all_NALoc       Ho     HoSD\npop1 pop1 4.360384 25656         1   25656       0         0 0.236861 0.185631\n         HoSE HoLCI HoHCI   Ho.adj Ho.adjSD Ho.adjSE Ho.adjLCI Ho.adjHCI\npop1 0.001159    NA    NA 0.236861 0.185631 0.001159        NA        NA\n           He     HeSD     HeSE HeLCI HeHCI      uHe    uHeSD    uHeSE uHeLCI\npop1 0.324224 0.113105 0.000706    NA    NA 0.366218 0.127754 0.000798     NA\n     uHeHCI   He.adj He.adjSD He.adjSE He.adjLCI He.adjHCI     FIS    FISSD\npop1     NA 0.324224 0.113105 0.000706        NA        NA 0.28369 0.460341\n        FISSE FISLCI FISHCI\npop1 0.002874     NA     NA\nCompleted: gl.report.heterozygosity \nStarting gl.keep.ind \n  Processing genlight object with SNP data\n  Deleting all but the listed individuals Kimberley_ABTC102537_DLit20-5353_CE4Y2ANXX_1, Kimberley_ABTC11911_DLit20-5353_CE7VEANXX_1, Kimberley_ABTC86488_DLit20-5353_CECHMANXX_4, Kimberley_CCM7524_DLit20-5353_CECHMANXX_2, Kimberley_ABTC135731_DLit20-5353_CE7VEANXX_1 \n  Deleting monomorphic loc\n  Locus metrics not recalculated\nCompleted: gl.keep.ind \nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Warning: Data may include monomorphic loci in call rate \n                    calculations for filtering\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 0.7 \n\n\n\n\n\nCompleted: gl.filter.callrate \nStarting gl.report.heterozygosity \n  Processing genlight object with SNP data\n  Calculating Observed Heterozygosities, averaged across\n                    loci, for each population\n  Calculating Expected Heterozygosities\n\nStarting gl.colors \nSelected color type dis \nCompleted: gl.colors \n\n\n\n\n\n      pop    n.Ind n.Loc n.Loc.adj polyLoc monoLoc all_NALoc       Ho     HoSD\npop1 pop1 4.404846 21171         1   21171       0         0 0.241755 0.181273\n         HoSE HoLCI HoHCI   Ho.adj Ho.adjSD Ho.adjSE Ho.adjLCI Ho.adjHCI\npop1 0.001246    NA    NA 0.241755 0.181273 0.001246        NA        NA\n           He     HeSD     HeSE HeLCI HeHCI      uHe    uHeSD    uHeSE uHeLCI\npop1 0.318786 0.113593 0.000781    NA    NA 0.359605 0.128138 0.000881     NA\n     uHeHCI   He.adj He.adjSD He.adjSE He.adjLCI He.adjHCI      FIS   FISSD\npop1     NA 0.318786 0.113593 0.000781        NA        NA 0.259282 0.44866\n        FISSE FISLCI FISHCI\npop1 0.003084     NA     NA\nCompleted: gl.report.heterozygosity \nStarting gl.keep.ind \n  Processing genlight object with SNP data\n  Deleting all but the listed individuals Kimberley_ABTC102537_DLit20-5353_CE4Y2ANXX_1, Kimberley_ABTC11911_DLit20-5353_CE7VEANXX_1, Kimberley_ABTC86488_DLit20-5353_CECHMANXX_4, Kimberley_CCM7524_DLit20-5353_CECHMANXX_2, Kimberley_ABTC135731_DLit20-5353_CE7VEANXX_1 \n  Deleting monomorphic loc\n  Locus metrics not recalculated\nCompleted: gl.keep.ind \nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Warning: Data may include monomorphic loci in call rate \n                    calculations for filtering\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 0.7 \n\n\n\n\n\nCompleted: gl.filter.callrate \nStarting gl.report.heterozygosity \n  Processing genlight object with SNP data\n  Calculating Observed Heterozygosities, averaged across\n                    loci, for each population\n  Calculating Expected Heterozygosities\n\nStarting gl.colors \nSelected color type dis \nCompleted: gl.colors \n\n\n\n\n\n      pop    n.Ind n.Loc n.Loc.adj polyLoc monoLoc all_NALoc       Ho     HoSD\npop1 pop1 4.390371 22184         1   22184       0         0 0.241731 0.181534\n         HoSE HoLCI HoHCI   Ho.adj Ho.adjSD Ho.adjSE Ho.adjLCI Ho.adjHCI\npop1 0.001219    NA    NA 0.241731 0.181534 0.001219        NA        NA\n           He     HeSD     HeSE HeLCI HeHCI      uHe    uHeSD    uHeSE uHeLCI\npop1 0.319324 0.113423 0.000762    NA    NA 0.360365 0.128001 0.000859     NA\n     uHeHCI   He.adj He.adjSD He.adjSE He.adjLCI He.adjHCI      FIS    FISSD\npop1     NA 0.319324 0.113423 0.000762        NA        NA 0.260639 0.449285\n        FISSE FISLCI FISHCI\npop1 0.003016     NA     NA\nCompleted: gl.report.heterozygosity \nStarting gl.keep.ind \n  Processing genlight object with SNP data\n  Deleting all but the listed individuals Kimberley_ABTC102537_DLit20-5353_CE4Y2ANXX_1, Kimberley_ABTC11911_DLit20-5353_CE7VEANXX_1, Kimberley_ABTC86488_DLit20-5353_CECHMANXX_4, Kimberley_CCM7524_DLit20-5353_CECHMANXX_2, Kimberley_ABTC135731_DLit20-5353_CE7VEANXX_1 \n  Deleting monomorphic loc\n  Locus metrics not recalculated\nCompleted: gl.keep.ind \nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Warning: Data may include monomorphic loci in call rate \n                    calculations for filtering\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 0.7 \n\n\n\n\n\nCompleted: gl.filter.callrate \nStarting gl.report.heterozygosity \n  Processing genlight object with SNP data\n  Calculating Observed Heterozygosities, averaged across\n                    loci, for each population\n  Calculating Expected Heterozygosities\n\nStarting gl.colors \nSelected color type dis \nCompleted: gl.colors \n\n\n\n\n\n      pop    n.Ind n.Loc n.Loc.adj polyLoc monoLoc all_NALoc       Ho     HoSD\npop1 pop1 4.414982 19731         1   19731       0         0 0.243949 0.180217\n         HoSE HoLCI HoHCI   Ho.adj Ho.adjSD Ho.adjSE Ho.adjLCI Ho.adjHCI\npop1 0.001283    NA    NA 0.243949 0.180217 0.001283        NA        NA\n           He     HeSD     HeSE HeLCI HeHCI     uHe    uHeSD    uHeSE uHeLCI\npop1 0.317031 0.113598 0.000809    NA    NA 0.35752 0.128106 0.000912     NA\n     uHeHCI   He.adj He.adjSD He.adjSE He.adjLCI He.adjHCI      FIS    FISSD\npop1     NA 0.317031 0.113598 0.000809        NA        NA 0.250234 0.444447\n        FISSE FISLCI FISHCI\npop1 0.003164     NA     NA\nCompleted: gl.report.heterozygosity \nStarting gl.keep.ind \n  Processing genlight object with SNP data\n  Deleting all but the listed individuals Kimberley_ABTC102537_DLit20-5353_CE4Y2ANXX_1, Kimberley_ABTC11911_DLit20-5353_CE7VEANXX_1, Kimberley_ABTC86488_DLit20-5353_CECHMANXX_4, Kimberley_CCM7524_DLit20-5353_CECHMANXX_2, Kimberley_ABTC135731_DLit20-5353_CE7VEANXX_1 \n  Deleting monomorphic loc\n  Locus metrics not recalculated\nCompleted: gl.keep.ind \nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Warning: Data may include monomorphic loci in call rate \n                    calculations for filtering\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 0.7 \n\n\n\n\n\nCompleted: gl.filter.callrate \nStarting gl.report.heterozygosity \n  Processing genlight object with SNP data\n  Calculating Observed Heterozygosities, averaged across\n                    loci, for each population\n  Calculating Expected Heterozygosities\n\nStarting gl.colors \nSelected color type dis \nCompleted: gl.colors \n\n\n\n\n\n      pop    n.Ind n.Loc n.Loc.adj polyLoc monoLoc all_NALoc       Ho     HoSD\npop1 pop1 4.404714 20239         1   20239       0         0 0.242991 0.179167\n         HoSE HoLCI HoHCI   Ho.adj Ho.adjSD Ho.adjSE Ho.adjLCI Ho.adjHCI\npop1 0.001259    NA    NA 0.242991 0.179167 0.001259        NA        NA\n           He     HeSD     HeSE HeLCI HeHCI     uHe    uHeSD    uHeSE uHeLCI\npop1 0.316909 0.113413 0.000797    NA    NA 0.35749 0.127936 0.000899     NA\n     uHeHCI   He.adj He.adjSD He.adjSE He.adjLCI He.adjHCI      FIS    FISSD\npop1     NA 0.316909 0.113413 0.000797        NA        NA 0.251896 0.444278\n        FISSE FISLCI FISHCI\npop1 0.003123     NA     NA\nCompleted: gl.report.heterozygosity \nStarting gl.keep.ind \n  Processing genlight object with SNP data\n  Deleting all but the listed individuals Kimberley_ABTC102537_DLit20-5353_CE4Y2ANXX_1, Kimberley_ABTC11911_DLit20-5353_CE7VEANXX_1, Kimberley_ABTC86488_DLit20-5353_CECHMANXX_4, Kimberley_CCM7524_DLit20-5353_CECHMANXX_2, Kimberley_ABTC135731_DLit20-5353_CE7VEANXX_1 \n  Deleting monomorphic loc\n  Locus metrics not recalculated\nCompleted: gl.keep.ind \nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Warning: Data may include monomorphic loci in call rate \n                    calculations for filtering\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 0.7 \n\n\n\n\n\nCompleted: gl.filter.callrate \nStarting gl.report.heterozygosity \n  Processing genlight object with SNP data\n  Calculating Observed Heterozygosities, averaged across\n                    loci, for each population\n  Calculating Expected Heterozygosities\n\nStarting gl.colors \nSelected color type dis \nCompleted: gl.colors \n\n\n\n\n\n      pop    n.Ind n.Loc n.Loc.adj polyLoc monoLoc all_NALoc       Ho     HoSD\npop1 pop1 4.407437 19873         1   19873       0         0 0.244377 0.179303\n         HoSE HoLCI HoHCI   Ho.adj Ho.adjSD Ho.adjSE Ho.adjLCI Ho.adjHCI\npop1 0.001272    NA    NA 0.244377 0.179303 0.001272        NA        NA\n           He     HeSD     HeSE HeLCI HeHCI      uHe    uHeSD    uHeSE uHeLCI\npop1 0.316308 0.113527 0.000805    NA    NA 0.356783 0.128054 0.000908     NA\n     uHeHCI   He.adj He.adjSD He.adjSE He.adjLCI He.adjHCI      FIS   FISSD\npop1     NA 0.316308 0.113527 0.000805        NA        NA 0.247269 0.44271\n       FISSE FISLCI FISHCI\npop1 0.00314     NA     NA\nCompleted: gl.report.heterozygosity \nStarting gl.keep.ind \n  Processing genlight object with SNP data\n  Deleting all but the listed individuals Kimberley_ABTC102537_DLit20-5353_CE4Y2ANXX_1, Kimberley_ABTC11911_DLit20-5353_CE7VEANXX_1, Kimberley_ABTC86488_DLit20-5353_CECHMANXX_4, Kimberley_CCM7524_DLit20-5353_CECHMANXX_2, Kimberley_ABTC135731_DLit20-5353_CE7VEANXX_1 \n  Deleting monomorphic loc\n  Locus metrics not recalculated\nCompleted: gl.keep.ind \nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Warning: Data may include monomorphic loci in call rate \n                    calculations for filtering\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 0.7 \n\n\n\n\n\nCompleted: gl.filter.callrate \nStarting gl.report.heterozygosity \n  Processing genlight object with SNP data\n  Calculating Observed Heterozygosities, averaged across\n                    loci, for each population\n  Calculating Expected Heterozygosities\n\nStarting gl.colors \nSelected color type dis \nCompleted: gl.colors \n\n\n\n\n\n      pop    n.Ind n.Loc n.Loc.adj polyLoc monoLoc all_NALoc       Ho     HoSD\npop1 pop1 4.404922 20073         1   20073       0         0 0.244488 0.179823\n         HoSE HoLCI HoHCI   Ho.adj Ho.adjSD Ho.adjSE Ho.adjLCI Ho.adjHCI\npop1 0.001269    NA    NA 0.244488 0.179823 0.001269        NA        NA\n           He     HeSD     HeSE HeLCI HeHCI      uHe    uHeSD    uHeSE uHeLCI\npop1 0.316304 0.113509 0.000801    NA    NA 0.356805 0.128043 0.000904     NA\n     uHeHCI   He.adj He.adjSD He.adjSE He.adjLCI He.adjHCI      FIS    FISSD\npop1     NA 0.316304 0.113509 0.000801        NA        NA 0.247144 0.443154\n        FISSE FISLCI FISHCI\npop1 0.003128     NA     NA\nCompleted: gl.report.heterozygosity \n\n\n\n\nPlotting results\n\nkimberley_Ho_subsampling &lt;- ggplot(heterozygosity_when_subsampling, aes(x = ObjectName, y = Ho)) +\n  geom_point() +\n  scale_y_continuous(limits = c(0, NA)) +\n  theme(axis.text.x = element_text(angle = 65, hjust = 1)) +\n  labs(title = \"Observed Heterozygosity when subsampling\", \n       x = \"SNP Calling\", y = \"Observed Heterozygosity (Ho)\")\n\nkimberley_Ho_subsampling\n\n\n\n\n\n\n\n\n\n\nsubsampling\n\n\n\nThere are some minor differences but it’s not too bad\n\n\n\n\nSubsampling more populations\nThere appears to be minor differences between sample sizes for the Kimberley population, but is this true for all populations?\n\nSoutheast\n\n#create a list of the southeast genlights\nSoutheast_names &lt;- ls(pattern = \"^SouthEast\")\n#put all the genlights into a mega list\nsoutheast &lt;- mget(Southeast_names)\n\n#Now lets subsample the datasets down to the same five individuals\n#so that the only difference is our SNP calling\n#who are the individuals\ninds &lt;- indNames(SouthEast_n_05.vcf)\n\n#Initialize an empty data frame\nheterozygosity_when_subsampling_southeast &lt;- data.frame()\n\nfor(name in names(southeast)) {\n  # Access the genlight object from your list\n  genlight_object &lt;- southeast[[name]]\n  \n  # Subset the individuals\n  x &lt;- gl.keep.ind(genlight_object, ind.list = inds, mono.rm = TRUE)\n  \n  #filter on call rate\n  \n  x &lt;- gl.filter.callrate(x, threshold = .7)\n  \n  # Apply the function\n  report &lt;- gl.report.heterozygosity(x)\n  \n  # Add 'ObjectName' as the first column of the report\n  report$ObjectName &lt;- name # Adjusting to add column without cbind to maintain data frame classes\n  \n  # Bind this report to the main data frame\n  heterozygosity_when_subsampling &lt;- bind_rows(heterozygosity_when_subsampling, report)\n}\n\nStarting gl.keep.ind \n  Processing genlight object with SNP data\n  Warning: data include loci that are scored NA across all individuals.\n  Consider filtering using gl &lt;- gl.filter.allna(gl)\n  Deleting all but the listed individuals SouthEast_ABTC92145_DLit20-5353_CECHMANXX_3, SouthEast_ABTC112638_DLit20-5353_CE7VEANXX_1, SouthEast_AMR164735_DLit20-5353_CE7VEANXX_1, SouthEast_ABTC38934_DLit20-5353_CECHMANXX_3, SouthEast_ABTC111142_DLit20-5353_CECHMANXX_3 \n  Deleting monomorphic loc\n  Locus metrics not recalculated\nCompleted: gl.keep.ind \nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Warning: Data may include monomorphic loci in call rate \n                    calculations for filtering\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 0.7 \n\n\n\n\n\nCompleted: gl.filter.callrate \nStarting gl.report.heterozygosity \n  Processing genlight object with SNP data\n  Calculating Observed Heterozygosities, averaged across\n                    loci, for each population\n  Calculating Expected Heterozygosities\n\nStarting gl.colors \nSelected color type dis \nCompleted: gl.colors \n\n\n\n\n\n      pop    n.Ind n.Loc n.Loc.adj polyLoc monoLoc all_NALoc       Ho     HoSD\npop1 pop1 4.543063 23907         1   23907       0         0 0.306134 0.227794\n         HoSE HoLCI HoHCI   Ho.adj Ho.adjSD Ho.adjSE Ho.adjLCI Ho.adjHCI\npop1 0.001473    NA    NA 0.306134 0.227794 0.001473        NA        NA\n           He     HeSD     HeSE HeLCI HeHCI     uHe    uHeSD    uHeSE uHeLCI\npop1 0.345947 0.118783 0.000768    NA    NA 0.38873 0.133473 0.000863     NA\n     uHeHCI   He.adj He.adjSD He.adjSE He.adjLCI He.adjHCI     FIS    FISSD\npop1     NA 0.345947 0.118783 0.000768        NA        NA 0.18011 0.458069\n        FISSE FISLCI FISHCI\npop1 0.002963     NA     NA\nCompleted: gl.report.heterozygosity \nStarting gl.keep.ind \n  Processing genlight object with SNP data\n  Warning: data include loci that are scored NA across all individuals.\n  Consider filtering using gl &lt;- gl.filter.allna(gl)\n  Deleting all but the listed individuals SouthEast_ABTC92145_DLit20-5353_CECHMANXX_3, SouthEast_ABTC112638_DLit20-5353_CE7VEANXX_1, SouthEast_AMR164735_DLit20-5353_CE7VEANXX_1, SouthEast_ABTC38934_DLit20-5353_CECHMANXX_3, SouthEast_ABTC111142_DLit20-5353_CECHMANXX_3 \n  Deleting monomorphic loc\n  Locus metrics not recalculated\nCompleted: gl.keep.ind \nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Warning: Data may include monomorphic loci in call rate \n                    calculations for filtering\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 0.7 \n\n\n\n\n\nCompleted: gl.filter.callrate \nStarting gl.report.heterozygosity \n  Processing genlight object with SNP data\n  Calculating Observed Heterozygosities, averaged across\n                    loci, for each population\n  Calculating Expected Heterozygosities\n\nStarting gl.colors \nSelected color type dis \nCompleted: gl.colors \n\n\n\n\n\n      pop    n.Ind n.Loc n.Loc.adj polyLoc monoLoc all_NALoc      Ho    HoSD\npop1 pop1 4.560711 23167         1   23167       0         0 0.30276 0.21977\n         HoSE HoLCI HoHCI  Ho.adj Ho.adjSD Ho.adjSE Ho.adjLCI Ho.adjHCI\npop1 0.001444    NA    NA 0.30276  0.21977 0.001444        NA        NA\n           He     HeSD     HeSE HeLCI HeHCI      uHe    uHeSD    uHeSE uHeLCI\npop1 0.340234 0.119545 0.000785    NA    NA 0.382127 0.134265 0.000882     NA\n     uHeHCI   He.adj He.adjSD He.adjSE He.adjLCI He.adjHCI      FIS    FISSD\npop1     NA 0.340234 0.119545 0.000785        NA        NA 0.172587 0.445217\n        FISSE FISLCI FISHCI\npop1 0.002925     NA     NA\nCompleted: gl.report.heterozygosity \nStarting gl.keep.ind \n  Processing genlight object with SNP data\n  Warning: data include loci that are scored NA across all individuals.\n  Consider filtering using gl &lt;- gl.filter.allna(gl)\n  Deleting all but the listed individuals SouthEast_ABTC92145_DLit20-5353_CECHMANXX_3, SouthEast_ABTC112638_DLit20-5353_CE7VEANXX_1, SouthEast_AMR164735_DLit20-5353_CE7VEANXX_1, SouthEast_ABTC38934_DLit20-5353_CECHMANXX_3, SouthEast_ABTC111142_DLit20-5353_CECHMANXX_3 \n  Deleting monomorphic loc\n  Locus metrics not recalculated\nCompleted: gl.keep.ind \nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Warning: Data may include monomorphic loci in call rate \n                    calculations for filtering\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 0.7 \n\n\n\n\n\nCompleted: gl.filter.callrate \nStarting gl.report.heterozygosity \n  Processing genlight object with SNP data\n  Calculating Observed Heterozygosities, averaged across\n                    loci, for each population\n  Calculating Expected Heterozygosities\n\nStarting gl.colors \nSelected color type dis \nCompleted: gl.colors \n\n\n\n\n\n      pop    n.Ind n.Loc n.Loc.adj polyLoc monoLoc all_NALoc       Ho     HoSD\npop1 pop1 4.584442 21956         1   21956       0         0 0.300644 0.212385\n         HoSE HoLCI HoHCI   Ho.adj Ho.adjSD Ho.adjSE Ho.adjLCI Ho.adjHCI\npop1 0.001433    NA    NA 0.300644 0.212385 0.001433        NA        NA\n           He     HeSD    HeSE HeLCI HeHCI      uHe    uHeSD    uHeSE uHeLCI\npop1 0.337159 0.119975 0.00081    NA    NA 0.378432 0.134662 0.000909     NA\n     uHeHCI   He.adj He.adjSD He.adjSE He.adjLCI He.adjHCI      FIS    FISSD\npop1     NA 0.337159 0.119975  0.00081        NA        NA 0.168427 0.433861\n        FISSE FISLCI FISHCI\npop1 0.002928     NA     NA\nCompleted: gl.report.heterozygosity \nStarting gl.keep.ind \n  Processing genlight object with SNP data\n  Deleting all but the listed individuals SouthEast_ABTC92145_DLit20-5353_CECHMANXX_3, SouthEast_ABTC112638_DLit20-5353_CE7VEANXX_1, SouthEast_AMR164735_DLit20-5353_CE7VEANXX_1, SouthEast_ABTC38934_DLit20-5353_CECHMANXX_3, SouthEast_ABTC111142_DLit20-5353_CECHMANXX_3 \n  Deleting monomorphic loc\n  Locus metrics not recalculated\nCompleted: gl.keep.ind \nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Warning: Data may include monomorphic loci in call rate \n                    calculations for filtering\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 0.7 \n\n\n\n\n\nCompleted: gl.filter.callrate \nStarting gl.report.heterozygosity \n  Processing genlight object with SNP data\n  Calculating Observed Heterozygosities, averaged across\n                    loci, for each population\n  Calculating Expected Heterozygosities\n\nStarting gl.colors \nSelected color type dis \nCompleted: gl.colors \n\n\n\n\n\n      pop    n.Ind n.Loc n.Loc.adj polyLoc monoLoc all_NALoc       Ho     HoSD\npop1 pop1 4.575179 22513         1   22513       0         0 0.300346 0.212014\n         HoSE HoLCI HoHCI   Ho.adj Ho.adjSD Ho.adjSE Ho.adjLCI Ho.adjHCI\npop1 0.001413    NA    NA 0.300346 0.212014 0.001413        NA        NA\n           He     HeSD  HeSE HeLCI HeHCI     uHe    uHeSD    uHeSE uHeLCI\npop1 0.336459 0.120052 8e-04    NA    NA 0.37774 0.134782 0.000898     NA\n     uHeHCI   He.adj He.adjSD He.adjSE He.adjLCI He.adjHCI      FIS    FISSD\npop1     NA 0.336459 0.120052    8e-04        NA        NA 0.167435 0.432974\n        FISSE FISLCI FISHCI\npop1 0.002886     NA     NA\nCompleted: gl.report.heterozygosity \n\nsoutheast_Ho_subsampling &lt;- ggplot(heterozygosity_when_subsampling, aes(x = ObjectName, y = Ho)) +\n  geom_point() +\n  scale_y_continuous(limits = c(0, NA)) +\n  theme(axis.text.x = element_text(angle = 65, hjust = 1)) +\n  labs(title = \"Observed Heterozygosity when subsampling\",\n       x = \"SNP Calling\", y = \"Observed Heterozygosity (Ho)\")\n\n\n\nCentral\n\n#create a list of the central australian genlights\ncentral_names &lt;- ls(pattern = \"^Central\")\n#put all the genlights into a mega list\ncentral &lt;- mget(central_names)\n\n#Now lets subsample the datasets down to the same five individuals\n#so that the only difference is our SNP calling\n#who are the individuals\ninds &lt;- indNames(Central_n_05.vcf)\n\n#Initialize an empty data frame\nheterozygosity_when_subsampling_central &lt;- data.frame()\n\nfor(name in names(central)) {\n  # Access the genlight object from your list\n  genlight_object &lt;- central[[name]]\n  \n  # Subset the individuals\n  x &lt;- gl.keep.ind(genlight_object, ind.list = inds, mono.rm = TRUE)\n  \n  #filter on call rate\n  \n  x &lt;- gl.filter.callrate(x, threshold = .7)\n  \n  # Apply the function\n  report &lt;- gl.report.heterozygosity(x)\n  \n  # Add 'ObjectName' as the first column of the report\n  report$ObjectName &lt;- name # Adjusting to add column without cbind to maintain data frame classes\n  \n  # Bind this report to the main data frame\n  heterozygosity_when_subsampling &lt;- bind_rows(heterozygosity_when_subsampling, report)\n}\n\nStarting gl.keep.ind \n  Processing genlight object with SNP data\n  Warning: data include loci that are scored NA across all individuals.\n  Consider filtering using gl &lt;- gl.filter.allna(gl)\n  Deleting all but the listed individuals Central_ABTC12035_DLit20-5353_CECHMANXX_3, Central_ABTC36027_DLit20-5353_CECHMANXX_4, Central_ABTC9964_DLit20-5353_CE4Y2ANXX_5, Central_ABTC30246_DLit20-5353_CECHMANXX_3, Central_ABTC58795_DLit20-5353_CE4Y2ANXX_5 \n  Deleting monomorphic loc\n  Locus metrics not recalculated\nCompleted: gl.keep.ind \nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Warning: Data may include monomorphic loci in call rate \n                    calculations for filtering\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 0.7 \n\n\n\n\n\nCompleted: gl.filter.callrate \nStarting gl.report.heterozygosity \n  Processing genlight object with SNP data\n  Calculating Observed Heterozygosities, averaged across\n                    loci, for each population\n  Calculating Expected Heterozygosities\n\nStarting gl.colors \nSelected color type dis \nCompleted: gl.colors \n\n\n\n\n\n      pop    n.Ind n.Loc n.Loc.adj polyLoc monoLoc all_NALoc       Ho     HoSD\npop1 pop1 4.591516 20745         1   20745       0         0 0.293408 0.265273\n         HoSE HoLCI HoHCI   Ho.adj Ho.adjSD Ho.adjSE Ho.adjLCI Ho.adjHCI\npop1 0.001842    NA    NA 0.293408 0.265273 0.001842        NA        NA\n          He     HeSD     HeSE HeLCI HeHCI      uHe    uHeSD    uHeSE uHeLCI\npop1 0.35118 0.115651 0.000803    NA    NA 0.394095 0.129784 0.000901     NA\n     uHeHCI  He.adj He.adjSD He.adjSE He.adjLCI He.adjHCI      FIS    FISSD\npop1     NA 0.35118 0.115651 0.000803        NA        NA 0.246186 0.526134\n        FISSE FISLCI FISHCI\npop1 0.003653     NA     NA\nCompleted: gl.report.heterozygosity \nStarting gl.keep.ind \n  Processing genlight object with SNP data\n  Warning: data include loci that are scored NA across all individuals.\n  Consider filtering using gl &lt;- gl.filter.allna(gl)\n  Deleting all but the listed individuals Central_ABTC12035_DLit20-5353_CECHMANXX_3, Central_ABTC36027_DLit20-5353_CECHMANXX_4, Central_ABTC9964_DLit20-5353_CE4Y2ANXX_5, Central_ABTC30246_DLit20-5353_CECHMANXX_3, Central_ABTC58795_DLit20-5353_CE4Y2ANXX_5 \n  Deleting monomorphic loc\n  Locus metrics not recalculated\nCompleted: gl.keep.ind \nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Warning: Data may include monomorphic loci in call rate \n                    calculations for filtering\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 0.7 \n\n\n\n\n\nCompleted: gl.filter.callrate \nStarting gl.report.heterozygosity \n  Processing genlight object with SNP data\n  Calculating Observed Heterozygosities, averaged across\n                    loci, for each population\n  Calculating Expected Heterozygosities\n\nStarting gl.colors \nSelected color type dis \nCompleted: gl.colors \n\n\n\n\n\n      pop    n.Ind n.Loc n.Loc.adj polyLoc monoLoc all_NALoc       Ho     HoSD\npop1 pop1 4.612141 20064         1   20064       0         0 0.281935 0.253619\n        HoSE HoLCI HoHCI   Ho.adj Ho.adjSD Ho.adjSE Ho.adjLCI Ho.adjHCI\npop1 0.00179    NA    NA 0.281935 0.253619  0.00179        NA        NA\n           He     HeSD    HeSE HeLCI HeHCI     uHe    uHeSD    uHeSE uHeLCI\npop1 0.346597 0.116089 0.00082    NA    NA 0.38874 0.130204 0.000919     NA\n     uHeHCI   He.adj He.adjSD He.adjSE He.adjLCI He.adjHCI      FIS    FISSD\npop1     NA 0.346597 0.116089  0.00082        NA        NA 0.258105 0.514939\n        FISSE FISLCI FISHCI\npop1 0.003635     NA     NA\nCompleted: gl.report.heterozygosity \nStarting gl.keep.ind \n  Processing genlight object with SNP data\n  Warning: data include loci that are scored NA across all individuals.\n  Consider filtering using gl &lt;- gl.filter.allna(gl)\n  Deleting all but the listed individuals Central_ABTC12035_DLit20-5353_CECHMANXX_3, Central_ABTC36027_DLit20-5353_CECHMANXX_4, Central_ABTC9964_DLit20-5353_CE4Y2ANXX_5, Central_ABTC30246_DLit20-5353_CECHMANXX_3, Central_ABTC58795_DLit20-5353_CE4Y2ANXX_5 \n  Deleting monomorphic loc\n  Locus metrics not recalculated\nCompleted: gl.keep.ind \nStarting gl.filter.callrate \n  Processing genlight object with SNP data\n  Warning: Data may include monomorphic loci in call rate \n                    calculations for filtering\n  Recalculating Call Rate\n  Removing loci based on Call Rate, threshold = 0.7 \n\n\n\n\n\nCompleted: gl.filter.callrate \nStarting gl.report.heterozygosity \n  Processing genlight object with SNP data\n  Calculating Observed Heterozygosities, averaged across\n                    loci, for each population\n  Calculating Expected Heterozygosities\n\nStarting gl.colors \nSelected color type dis \nCompleted: gl.colors \n\n\n\n\n\n      pop   n.Ind n.Loc n.Loc.adj polyLoc monoLoc all_NALoc       Ho     HoSD\npop1 pop1 4.63602 19067         1   19067       0         0 0.276449 0.249131\n         HoSE HoLCI HoHCI   Ho.adj Ho.adjSD Ho.adjSE Ho.adjLCI Ho.adjHCI\npop1 0.001804    NA    NA 0.276449 0.249131 0.001804        NA        NA\n           He     HeSD     HeSE HeLCI HeHCI      uHe   uHeSD    uHeSE uHeLCI\npop1 0.345069 0.116176 0.000841    NA    NA 0.386784 0.13022 0.000943     NA\n     uHeHCI   He.adj He.adjSD He.adjSE He.adjLCI He.adjHCI      FIS    FISSD\npop1     NA 0.345069 0.116176 0.000841        NA        NA 0.266283 0.511497\n        FISSE FISLCI FISHCI\npop1 0.003704     NA     NA\nCompleted: gl.report.heterozygosity \n\ncentral_Ho_subsampling &lt;- ggplot(heterozygosity_when_subsampling, aes(x = ObjectName, y = Ho)) +\n  geom_point() +\n  scale_y_continuous(limits = c(0, NA)) +\n  theme(axis.text.x = element_text(angle = 65, hjust = 1)) +\n  labs(title = \"Observed Heterozygosity when subsampling 5 individuals\",\n       x = \"SNP Calling\", y = \"Observed Heterozygosity (Ho)\")\n\n\n\n\nPlotting Results\n\nsoutheast_Ho_subsampling\n\n\n\ncentral_Ho_subsampling\n\n\n\n\n\n\n\n\n\n\nSubsampling\n\n\n\nso we’re not seeing too much impact of subsampling if SNPs are called separately on populations.\nBUT, BUT, BUT, BUT, BUT, BUT, BUT…\nThe kimberley population has the highest actual heterozygosity (see the paper) the difference here is that this population lost a lot of variable sites because 7% of the variable sites have more than two alleles So a comparison between Central & SE and Kimberley Rubella would find the highest in the wrong population.\nThis is very problematic and is an ongoing bioinformatic issue.\nTherefore, calling SNPs separately on populations and keeping sample sizesthe same does not resolve the issues with heterozygosity based on SNPs."
  },
  {
    "objectID": "session03.html#calling-populations-together",
    "href": "session03.html#calling-populations-together",
    "title": "3  Sequencing Technologies",
    "section": "Calling populations together",
    "text": "Calling populations together\nDoes this resolve the issue?\nWhat about calling SNPs together but with different sample sizes?\n\nCalling SNPs together with different sample sizes for each population then subsetting to equal sample sizes\n\n\nCalling SNPs together, but with the same sample sizes\n\n\n\n\n\n\nSNP-based heterozygosity\n\n\n\nSNP-based heterozygosity is bad and cannot be used to compare different populations, and there are no clear workarounds that will give you reliable answers.\nYou need to report autosomal heterozygosity at a minimum, which means doing your own bioinformatics from raw data at this time."
  },
  {
    "objectID": "session03.html#subsampling-2",
    "href": "session03.html#subsampling-2",
    "title": "3  Sequencing Technologies",
    "section": "Subsampling",
    "text": "Subsampling\nso we’re not seeing too much impact of subsampling if SNPs are called separately on populations.\nBUT, BUT, BUT, BUT, BUT, BUT, BUT…\nThe kimberley population has the highest actual heterozygosity (see the paper) the difference here is that this population lost a lot of variable sites because 7% of the variable sites have more than two alleles So a comparison between Central & SE and Kimberley Rubella would find the highest in the wrong population.\nThis is very problematic and is an ongoing bioinformatic issue.\nTherefore, calling SNPs separately on populations and keeping sample sizesthe same does not resolve the issues with heterozygosity based on SNPs."
  },
  {
    "objectID": "session12.html#genetic-distance-and-visualization",
    "href": "session12.html#genetic-distance-and-visualization",
    "title": "12  Genetic Structure",
    "section": "Genetic Distance and Visualization",
    "text": "Genetic Distance and Visualization\n\nLoad data and explore\n\n# Read in the example data\ngl &lt;- readRDS(\"./data/Example_12.1_SNP.Rdata\")\n# Interrogate to see what the data are\nnLoc(gl)\n\n[1] 10529\n\nnInd(gl)\n\n[1] 113\n\ntable(pop(gl))\n\n\n   signata   farnorth   krefftii      nigra  gunabarra   emmottii  macquarii \n        11         10         10         10         10         10         10 \nsubglobosa   worrelli tanybaraga  victoriae \n        10         10         12         10 \n\n\n\n\nCalculate Distance\n\n# Calculate an Euclidean Distance Matrix on individuals\nD &lt;- gl.dist.ind(gl)\n\nStarting gl.dist.ind \n  Processing genlight object with SNP data\n  Calculating raw Euclidean Distances between individuals\n\n\n\n\n\n  Returning a stat::dist object\nCompleted: gl.dist.ind \n\n# Represent visually as a heat map\ngl.plot.heatmap(D)\n\nStarting gl.plot.heatmap \n  Processing a distance matrix\nStarting gl.colors \nSelected color type div \nCompleted: gl.colors \n\n\n\n\n\nCompleted: gl.plot.heatmap \n\n\n\n\nPCA\n\n# Undertake a PCA on the raw data\npc &lt;- gl.pcoa(gl)\n\nStarting gl.pcoa \n  Processing genlight object with SNP data\n  Performing a PCA, individuals as entities, loci as attributes, SNP genotype as state\nStarting gl.colors \nSelected color type 2 \nCompleted: gl.colors \n\n\n\n\n\nCompleted: gl.pcoa \n\n# Plot the first two dimensions of the PCA\ngl.pcoa.plot(pc,gl,pop.labels=\"legend\")\n\nStarting gl.pcoa.plot \n  Processing an ordination file (glPca)\n  Processing genlight object with SNP data\n  Plotting populations identified by a legend\n  Preparing plot .... please wait\n\n\n\n\n\nCompleted: gl.pcoa.plot \n\n# Plot the first and third dimensions of the PCA\ngl.pcoa.plot(pc,gl,xaxis=1,yaxis=3, pop.labels=\"legend\")\n\nStarting gl.pcoa.plot \n  Processing an ordination file (glPca)\n  Processing genlight object with SNP data\n  Plotting populations identified by a legend\n  Preparing plot .... please wait\n\n\n\n\n\nCompleted: gl.pcoa.plot \n\n\n\n\nSelect one cluster\n\n# Select only the data from one cluster in the primary PCA\ntemp &lt;- gl.drop.pop(gl, pop.list=c(\"victoriae\",\"subglobosa\",\n                                   \"worrelli\",\"tanybaraga\"))\n\nStarting gl.drop.pop \n  Processing genlight object with SNP data\n  Checking for presence of nominated populations, deleting them\n  Warning: Resultant dataset may contain monomorphic loci\n  Locus metrics not recalculated\nCompleted: gl.drop.pop \n\n# Plot the first two dimensions of the secondary PCA\npc &lt;- gl.pcoa(temp)\n\nStarting gl.pcoa \n  Processing genlight object with SNP data\n  Performing a PCA, individuals as entities, loci as attributes, SNP genotype as state\nStarting gl.colors \nSelected color type 2 \nCompleted: gl.colors \n\n\n\n\n\nCompleted: gl.pcoa \n\ngl.pcoa.plot(pc, temp,pop.labels=\"legend\")\n\nStarting gl.pcoa.plot \n  Processing an ordination file (glPca)\n  Processing genlight object with SNP data\n  Plotting populations identified by a legend\n  Preparing plot .... please wait\n\n\n\n\n\nCompleted: gl.pcoa.plot \n\n# Repeat the analysis as a PCoA\nD &lt;- gl.dist.ind(temp)\n\nStarting gl.dist.ind \n  Processing genlight object with SNP data\n  Calculating raw Euclidean Distances between individuals\n\n\n\n\n\n  Returning a stat::dist object\nCompleted: gl.dist.ind \n\npco &lt;- gl.pcoa(D)\n\nStarting gl.pcoa \n  Processing a distance matrix\n  Performing a PCoA, individuals as entities, no correction applied\nStarting gl.colors \nSelected color type 2 \nCompleted: gl.colors \n\n\n\n\n\nCompleted: gl.pcoa \n\ngl.pcoa.plot(pco,temp,pop.labels=\"legend\")\n\nStarting gl.pcoa.plot \n  Processing an ordination file (glPca)\n  Processing genlight object with SNP data\n  Plotting populations identified by a legend\n  Preparing plot .... please wait\n\n\n\n\n\nCompleted: gl.pcoa.plot"
  },
  {
    "objectID": "session12.html#structure-and-faststructure",
    "href": "session12.html#structure-and-faststructure",
    "title": "12  Genetic Structure",
    "section": "Structure and FastStructure",
    "text": "Structure and FastStructure\nTo run STRUCTURE from within R, we need to install the non-GUI executable (the version without frontend) for your operating system [e.g windows, mac or linux]. You can download STRUCTURE for your OS from http://web.stanford.edu/group/pritchardlab/structure_software/release_versions/v2.3.4/html/structure.html.\nTo let R know where the executable is, you need to set the path to the executable. For example, under windows, if you have the executable in d:/programms/structure/structure.exe, you can use the command below.\n\nRunning STRUCTURE\nThe small example below is just to test if the programm is set up correctly, hence the binary for your system is in the right place and the path is set correctly.\n\n#quick test to run on windows\nbc &lt;- bandicoot.gl[,1:10]\nsr &lt;- gl.run.structure(bc, k.range = 2:6, num.k.rep = 5, exec = 'd:/programms/structure/structure.exe' )\n\nfor Linux/Mac the command might look like this:\n\n#quick test to run on linux/mac\nbc &lt;- bandicoot.gl[,1:10]\nsr &lt;- gl.run.structure(bc, k.range = 2:6, num.k.rep = 5, exec = '../binaries/linux/structure' )\n\n\n\nA more serious example: simulated possums\nFor this example we will run STRUCTURE on a simulated dataset of possums. The dataset is a genlight object and contains 10 populations of 30 individuals each and 1000 loci and is part of the dartRverse package. The populations are fairly independent but are linked by some imigration, so a typical Metapopulation scenario. The populations are named A to J and follow more or less an isolation by distance (actually an isolation by resistance model). So population next to each other (e.g. B and C) are fairly well mixed and populations further apart from the rest (e.g. D) are more isolated.\nTo simplify this further we limit our exercise to the first 150 individuals only (which entails now 5 populations a 30 individuals, A to $E). To get an overview on the population we use the function: gl.map.interactive which plots the individuals on a map. Please note the genlight/dartR object needs to have valid lat long coordinates for each individual to be able to do so.\nAlso be aware this tutorial will not talk about how to filter your data set before running structure. For this please refer to the previous tutorials on filtering and data preparation.\n\npossums &lt;- possums.gl[1:150,]  #only the first 150 individuals\ntable(pop(possums)) #check the individuals and the populations\n\n\n A  B  C  D  E \n30 30 30 30 30 \n\ngl.map.interactive(possums)\n\nStarting gl.map.interactive \n  Processing genlight object with SNP data\nCompleted: gl.map.interactive \n\n\n\n\n\n\nAs mentioned this is a simulated data set and we know the true population structure. Populations B and C are very close to each other so those are basically one population and E is at least somewhat in the vicinity. To confirm that our simulation was successful, we quickly can run a pcoa to confirm the population structure.\n\npcoa &lt;- gl.pcoa(possums, plot.out = FALSE, verbose = 0)\n\nStarting gl.colors \nSelected color type 2 \nCompleted: gl.colors \n\npcoaplot &lt;- gl.pcoa.plot(pcoa, possums, verbose = 0)\n\n\n\n\nAnd yes it looks like expected.\n\n\n\n\n\n\nExercise PCOA and a map\n\n\n\n Confirm that you understand how the map and the pcoa plot relate to each other.\n\n\nNow, lets see what kind of information we can get from a structure run.\nDifferent to the above we run structure with at least some repetitions for each K (num.k.rep=10) and also over a suitable range. Unfortunately, this takes a while and we will not run it here. Instead we will load the results from a previous run that is saved in the data folder of this repository. [In case you want to re-run structure simply rename or delete the file in your folder, but be aware that this will take a while.].\n\nif (file.exists(\"./data/srnoad.rds\")) {\nsrnoad&lt;- readRDS(\"./data/srnoad.rds\")\n} else {\npossums &lt;- possums.gl[1:150,]\nsrnoad &lt;- gl.run.structure(possums, k.range = 2:7, num.k.rep = 10, exec =\n                       './binaries/structure',plot.out = FALSE, \n                       burnin=50000, numreps=100000, noadmix=FALSE)\nsaveRDS(srnoad, \"./data/srnoad.rds\")\n}\n\nHey this was quick! We have the results of the structure run. Let’s see what we can do with it.\n\n\nStructure run (no-admixture)\nTo run structure we use an dartR implementation of functions which is based on the functions provided by the strataG package (F. Archer (2016)). There you can find a detailed description of the function and its arguments. We had to integrate the functionality because strataG is no longer on CRAN.\nThe possible arguments are listed below:\n\n\n\n\n\n\n\nparameter\ndescription\n\n\n\n\nk.range\nvector of values to for maxpop in multiple runs. If set to NULL, a single STRUCTURE run is conducted with maxpops groups. If specified, do not also specify maxpops.\n\n\nnum.k.rep\nnumber of replicates for each value in k.range.\n\n\nlabel\nlabel to use for input and output files\n\n\ndelete.files\nlogical. Delete all files when STRUCTURE is finished?\n\n\nexec\nname of executable for STRUCTURE. Defaults to “structure”.\n\n\nburnin\nnumber of iterations for MCMC burnin.\n\n\nnumreps\nnumber of MCMC replicates.\n\n\nnoadmix\nlogical. No admixture?\n\n\nfreqscorr\nlogical. Correlated frequencies?\n\n\nrandomize\nrandomize.\n\n\npop.prior\na character specifying which population prior model to use: “locprior” or “usepopinfo”.\n\n\nlocpriorinit\nparameterizes locprior parameter r - how informative the populations are. Only used when pop.prior = “locprior”.\n\n\nmaxlocprior\nspecifies range of locprior parameter r. Only used when pop.prior = “locprior”.\n\n\ngensback\ninteger defining the number of generations back to test for immigrant ancestry. Only used when pop.prior = “usepopinfo”.\n\n\nmigrprior\nnumeric between 0 and 1 listing migration prior. Only used when pop.prior = “usepopinfo”.\n\n\npopflag\na vector of integers (0, 1) or logicals identifiying whether or not to use strata information. Only used when pop.prior = “usepopinfo”.\n\n\npops\nvector of population labels to be used in place of numbers in STRUCTURE file.\n\n\n\nSome words about admixture\n\n\nAdmixture Model\n\nDefinition: The admixture model assumes that individuals can have ancestry from multiple populations. This means that the genetic makeup of an individual can be a mixture of two or more populations. This model is particularly useful for analyzing genetic data from populations that are known to have mixed or where there is gene flow between populations.\nApplication: It is applied when there is historical or recent admixture between populations, and it allows for the estimation of individual ancestry proportions from each of the inferred clusters. For example, an individual might be 50% from population A, 30% from population B, and 20% from population C under the admixture model.\nUtility: The admixture model can uncover complex patterns of genetic structure that are not apparent under the assumption of discrete, non-overlapping populations.\n\n\n\nNo-Admixture Model\n\nDefinition: The no-admixture model assumes that individuals have ancestry from only one population. This model is particularly useful for analyzing genetic data from populations that are known to be isolated from one another.\nApplication: This model is used in situations where populations are relatively well-defined and isolated, with little to no gene flow between them. It simplifies the analysis by considering that an individual’s entire genetic information originates from one of the K clusters without any mixture.\nUtility: The no-admixture model is useful for identifying distinct populations and their members, especially in cases where populations are clearly separated geographically or temporally."
  },
  {
    "objectID": "session12.html#structure-results",
    "href": "session12.html#structure-results",
    "title": "12  Genetic Structure",
    "section": "Structure Results",
    "text": "Structure Results\nOkay now that we got that out of our way lets see how to interprete the results of the structure run.\n\nEvanno Plots\nThe Evanno method is a statistical approach used to determine the most likely number of genetic clusters (K) present in a dataset analyzed by STRUCTURE software. STRUCTURE is a computational tool used for inferring population structure using genetic data. Identifying the correct number of clusters (K) is crucial for accurately interpreting genetic data in the context of population structure, evolutionary biology, and conservation genetics. The Evanno method specifically addresses the challenge of choosing the optimal K by analyzing the rate of change in the likelihood of data between successive K values, rather than just relying on the maximum likelihood. This is done through the calculation of ΔK, a quantity based on the second order rate of change of the likelihood function with respect to K. The method suggests that the value of K corresponding to the highest ΔK should be considered the most likely number of clusters present in the dataset.\nThe Evanno method is a method to determine the most likely number of populations. It is based on the second order rate of change of the likelihood function with respect to K. The method is implemented in the gl.evanno function.\n\nev &lt;- gl.evanno(srnoad)\n\n\n\n\n\n\nPlotting the results (Q matrix)\nThe Q matrix represents the estimated ancestry proportions of individuals across different inferred genetic clusters. STRUCTURE aims to identify K clusters (populations) that best explain the patterns of genetic variation observed in the data, with K either being predefined by the user or determined using methods like the Evanno method.\nThe Q matrix is essentially a matrix where each row corresponds to an individual in the dataset, and each column represents one of the K inferred genetic clusters. The entries in the matrix are the estimated proportions (ranging from 0 to 1) of each individual’s genome that originated from each cluster. The sum of an individual’s ancestry proportions across all K clusters equals 1.\nThe values in the Q matrix can be interpreted as the fraction of an individual’s ancestry that comes from each of the K clusters. The Q matrix is often visualized using bar plots or stacked bar graphs, where each individual’s ancestry proportions are shown as segments of a bar colored differently for each cluster.\nTo get a plot for a certain level you need to specify K or at least a range of K.\n\nqmatnoad &lt;- gl.plot.structure(srnoad, K=3:5)\n\nStarting gl.plot.structure \n\n\n\n\n\nCompleted: gl.plot.structure \n\nhead(qmatnoad[[1]])\n\n    Label cluster1 cluster2 cluster3      K orig.pop   ord\n   &lt;char&gt;    &lt;num&gt;    &lt;num&gt;    &lt;num&gt; &lt;char&gt;   &lt;fctr&gt; &lt;int&gt;\n1:      1        0        0        1    3.1        A     1\n2:     10        0        0        1    3.1        A     2\n3:    100        0        1        0    3.1        D    91\n4:    101        0        1        0    3.1        D    92\n5:    102        0        1        0    3.1        D    93\n6:    103        0        1        0    3.1        D    94\n\n\n\n\nA “spatial” structure plot\n\ngm &lt;- gl.map.structure(qmat = qmatnoad, x = possums,K=5, scalex=1, scaley=0.5 )\n\n\n\n\nspatial qmat plot\n\n\n\n\n\n\n\n\nExercise: Study the results using different Ks\n\n\n\n The above run was a structure run using the no-admixture model for a range of K=2:7. Study the results by plotting it for various Ks and try to interpret the results in the light of the simulated population structure.\n\n\n\n\nStructure run (no-admixture=FALSE :-))\nWe will now run the same example using the admixture model. The only difference is that we will set the no-admixture parameter to FALSE.\n\nif (file.exists(\"./data/srnoad.rds\")) {\nsrad&lt;- readRDS(\"./data/srad.rds\")\n} else {\npossums &lt;- possums.gl[1:150,]\nsrad &lt;- gl.run.structure(possums, k.range = 2:7, num.k.rep = 10, exec =\n                       '../binaries/linux/structure',plot.out = FALSE, \n                       burnin=50000, numreps=100000, noadmix=FALSE)\nsaveRDS(srad, \"./data/srad.rds\")\n}\n\nAnd again the evanno plots\n\nev &lt;- gl.evanno(srad)\n\n\n\n\nSomething between 4-5 seems to be a good number of K.\nHence lets look at the qmat (for K=4) and then you can check the same for K=5\n\nqmatad &lt;- gl.plot.structure(srad, K=4)\n\nStarting gl.plot.structure \n\n\n\n\n\nCompleted: gl.plot.structure \n\nhead(qmatad[[1]])\n\n    Label   cluster1   cluster2   cluster3   cluster4      K orig.pop   ord\n   &lt;char&gt;      &lt;num&gt;      &lt;num&gt;      &lt;num&gt;      &lt;num&gt; &lt;char&gt;   &lt;fctr&gt; &lt;int&gt;\n1:      1 0.01889411 0.92092396 0.02099371 0.03918822      4        A    23\n2:     10 0.01700341 0.94348888 0.01950371 0.02000401      4        A    24\n3:    100 0.93530017 0.01900001 0.01869981 0.02700001      4        D   115\n4:    101 0.94469458 0.02400241 0.01430130 0.01700171      4        D   111\n5:    102 0.94820537 0.01479831 0.01999801 0.01699831      4        D   107\n6:    103 0.91689208 0.02110211 0.03420331 0.02780251      4        D   118\n\n\nAn the spatial version\n\ngm &lt;- gl.map.structure(qmat = qmatad, x = possums,K=4, scalex=1, scaley=0.5 )\n\n\n\n\nspatial qmat plot"
  },
  {
    "objectID": "session12.html#faststructure",
    "href": "session12.html#faststructure",
    "title": "12  Genetic Structure",
    "section": "Faststructure",
    "text": "Faststructure\nFaststructure is a faster implementation of the structure algorithm. Be aware though it is named Fast’structure’ it is a fairly different implementation of the original approach, hence the results might differ from the original STRUCTURE. The method is based on a variational Bayesian framework and is designed to be faster and more scalable than the original STRUCTURE software. It is particularly useful for analyzing large datasets with many individuals and/or many SNPs (&gt;5000). One of the most important differences is that there is no no-admixture model in Faststructure, but you can run two models that allow for “complex” situtations (logistic prior) and situations where the ancestry is more evenly distributed (simple prior). Also the way how to identify K differ between the methods. We will run the previous examples with both settings and compare the results.\nThe method is now implemented in the gl.run.faststructure function. Unfortunatley noone to my knowledge has compiled Faststructure for windows, so it is only available for Linux and Mac. We also need to have plink installed as this is the required input format for faststructure.\n\nFaststructure simple prior\n\n#takes about 3 minutes\n#fsr.sim &lt;- gl.run.faststructure(possums, k.range = 2:7, num.k.rep = 10, \n#                                exec = \"./binaries/fastStructure\", output = tempdir(),\n#                                exec.plink=\"./binaries\", prior = \"simple\")\n#load from the previous run\nfsr.simple &lt;- readRDS((\"./data/fsr.sim.rds\"))\n\nHere is the output of the run:\n\nfsr.simple$plot\n\n\n\n\nfaststructure simple prior plot\n\n\nHere we can check the marginal likelihoods for the different K values. The recommended K is then the one with the highest marginal likelihood at the lowest K possible. So here we would decide on K=4. As before we can plot the Q matrix and the spatial structure plot.\n\nqmat.simple &lt;- gl.plot.faststructure(fsr.simple$q_list, k.range = 4,clumpak = T)\n\nStarting gl.select.colors \n  Warning: No color library specified, set to scales and palette set to hue_pal \n    Need to select one of baseR, brewer, scales, gr.palette or gr.hcl\n  Showing and returning 4 colors for library scales : palette hue_pal \n\n\n\n\n\nCompleted: gl.select.colors \n\n\n\n\ngm &lt;-gl.map.structure(qmat.simple, K = 4, x = possums, scalex = 1, scaley = 0.5)\n\n\n\nFaststructure logistic prior\n\n#takes about 4 minutes\n#fsr.log &lt;- gl.run.faststructure(possums, k.range = 2:7, num.k.rep = 10, exec = \"./binaries/fastStructure\", output = tempdir(), exec.plink=\"./binaries\", prior = \"logistic\",)\n\nfsr.log &lt;- readRDS((\"./data/fsr.log.rds\"))\n\nHere is the output of the run:\n\nfsr.log$plot\n\n\n\n\nfaststructure logistic prior plot\n\n\nAs before we can plot the Q matrix and the spatial structure plot.\n\nqmat.log &lt;- gl.plot.faststructure(fsr.log$q_list, k.range = 4,clumpak = T)\ngm &lt;-gl.map.structure(qmat.log, K = 4, x = possums, scalex = 1, scaley = 0.5)"
  },
  {
    "objectID": "session12.html#exercises",
    "href": "session12.html#exercises",
    "title": "12  Genetic Structure",
    "section": "Exercises",
    "text": "Exercises\n\n\n\n\n\n\nExercise: Compare Structure and Faststructure runs\n\n\n\n Now it is time to compare the results from all four previous runs.\n\n\n\n\n\n\n\n\nExercise: Crocodiles\n\n\n\n If you are feeling energetic, you can try to run the structure and faststructure on the crocodile dataset. (crocs.rds)\nThis is a publically available dataset (though it has been filtered and pruned) from the paper:) to make is a bit easier to run. Nevertheless it still has &gt;1500 SNPs and more then 400 individuals, so it takes a bit of time to run. If you do not want to wait I did two faststructure runs for you. * prior = simple, K=2:18 (max number of populations), but only 3 repeat (num.k.rep) * prior = logistic, K=2:18 (max number of populations), but only 3 repeat (num.k.rep)\nMaybe plot the data first, have a look at a PCA and then decide on the number of populations (range of K) you want to run the faststructure on. It might also make sense to simplify the number of populations in a smaller number of subunits. A description of the dataset (and the original paper) can be found here: (fukuda2024?)\n\n\n\ncrocs &lt;- readRDS(\"./data/crocs.rds\")\ngl.map.interactive(crocs)\n\nStarting gl.map.interactive \n  Processing genlight object with SNP data\nCompleted: gl.map.interactive"
  }
]